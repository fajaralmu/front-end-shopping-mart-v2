{"version":3,"sources":["constant/Url.js","redux/actionCreators.ts","redux/types.js","constant/stores.js","component/loader/Loader.js","component/alert/Alert.js","utils/StringUtil.ts","utils/ComponentUtil.ts","component/BaseComponent.tsx","constant/Menus.ts","component/navigation/Header.tsx","component/pages/login/Login.tsx","component/layout/BaseMainMenus.tsx","component/container/Card.tsx","middlewares/Common.js","services/Promises.ts","services/TransactionHistoryService.ts","component/form/FormGroup.tsx","utils/DateUtil.js","component/loader/Spinner.tsx","component/alert/SimpleError.tsx","component/pages/dashboard/LoadBalanceForm.tsx","component/pages/dashboard/LoadInventoryForm.tsx","component/pages/dashboard/DashboardMain.tsx","services/MasterDataService.ts","component/navigation/AnchorButton.tsx","component/container/Modal.tsx","models/EntityProperty.ts","models/FieldType.ts","utils/EntityValues.tsx","component/navigation/NavigationButtons.tsx","component/pages/masterdata/form/FormInputImage.tsx","component/pages/masterdata/form/FormInputImageMultiple.tsx","component/pages/masterdata/form/FormInputField.tsx","component/pages/masterdata/form/MasterDataForm.tsx","component/pages/masterdata/EditDeleteAction.tsx","component/pages/masterdata/DataTableHeader.tsx","component/pages/masterdata/MasterDataList.tsx","component/pages/masterdata/MasterDataManagement.tsx","component/pages/masterdata/MasterDataMain.tsx","component/pages/transaction/TransactionMain.tsx","component/navigation/AnchorWithIcon.tsx","services/CatalogService.ts","component/pages/catalog/CatalogMain.tsx","component/pages/home/HomeMain.tsx","models/BaseEntity.ts","models/Product.ts","component/pages/cart/CartMain.tsx","services/BaseTransactionService.ts","services/TransactionPurchasingService.ts","component/pages/transaction/purchasing/SupplierForm.tsx","component/pages/transaction/ProductForm.tsx","models/Transaction.ts","models/ProductFlow.ts","component/pages/transaction/BaseTransactionComponent.tsx","component/pages/transaction/purchasing/TransactionPurchasing.tsx","services/TransactionSellingService.ts","component/pages/transaction/selling/CustomerForm.tsx","component/pages/transaction/selling/TransactionSelling.tsx","component/pages/transaction/detail/TransactionDetail.tsx","component/pages/catalog/product/ProductCatalogList.tsx","component/pages/catalog/product/ProductCatalog.tsx","component/pages/cart/CartList.tsx","component/container/Carousel.tsx","component/pages/catalog/productdetail/ProductCatalogDetail.tsx","component/pages/dashboard/DashboardFilter.tsx","models/Cashflow.ts","component/pages/dashboard/DashboardBarChart.tsx","component/pages/dashboard/statistic/CashflowChart.tsx","component/pages/dashboard/statistic/DashboardStatistic.tsx","models/ProductSales.ts","component/pages/dashboard/sales/ProductSalesPage.tsx","component/pages/dashboard/sales/ProductSalesDetailPage.tsx","component/pages/settings/SettingsMain.tsx","models/User.ts","services/UserService.ts","component/pages/settings/helper.tsx","component/pages/settings/UserProfile.tsx","models/ApplicationProfile.ts","component/pages/settings/EditApplicationProfile.tsx","component/layout/ApplicationContent.tsx","models/Menu.ts","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","redux/shopReducer.js","redux/userReducer.js","redux/transactionReducer.js","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","middlewares/CatalogMiddleware.ts","redux/configureStore.js","Root.tsx","serviceWorker.js","index.js"],"names":["devMode","document","getElementById","value","rootValue","contextPath","concat","baseImageUrl","localStorage","getItem","usedHost","url","apiBaseUrl","apiAccount","updateCart","cart","apps","type","payload","meta","performLogout","app","startLoading","mapCommonUserStateToProps","state","applicationProfile","userState","loggedUser","loginStatus","requestId","shopState","LoaderContent","props","realtime","className","role","style","width","progress","transitionDuration","disabled","aria-hidden","Loader","timer","intervalId","update","clearInterval","console","log","setState","endMessage","this","withTimer","setInterval","msgStyle","text","zIndex","Component","Backdrop","backgroundColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","id","title","onClose","Alert","React","createRef","e","isError","current","focus","headerClassName","display","tabIndex","aria-labelledby","children","index","uniqueId","string","String","Date","getUTCMilliseconds","toString","beautifyNominal","val","isDecimal","includes","isNegative","startsWith","replace","rawVal","parseInt","split","nominal","Math","abs","result","length","zeroIndex","i","base64StringFileSize","base64String","stringLength","sizeInBytes","ceil","byId","toBase64v2","fileInput","Promise","resolve","reject","reader","FileReader","readAsDataURL","files","debug","onload","onerror","error","BaseComponent","authenticated","parentApp","updated","validateLoginStatus","isLoggedUserNull","backToLogin","showCommonErrorAlert","msg","message","showError","event","target","checked","name","activeId","element","withProgress","endLoading","method","successCallback","errorCallback","params","then","response","catch","alert","finally","doAjax","user","password","body","showAlert","showAlertError","history","push","menus","code","menuClass","active","showSidebar","subMenus","IState","showNavLinks","toggleNavLinks","onLogout","showConfirmation","ok","menuSet","getMenus","position","padding","margin","label","getApplicationProfile","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","menu","isActive","activeMenuCode","key","setMenu","to","setMenuNull","isUserLoggedIn","getLoggedUser","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","displayName","withRouter","connect","dispatch","Login","formRef","preventDefault","formData","FormData","performLogin","get","onSubmit","login","PasswordField","placeholder","required","UsernameField","autoFocus","username","BaseMainMenus","Card","attributes","undefined","footerContent","commonAuthorizedHeader","getRequestId","getLoginKey","getCookie","updateAccessToken","axiosResponse","headers","accessToken","setCookie","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","request","post","data","TransactionHistoryService","getProductSales","filter","getProductSalesDetail","getCashflowDetail","getTransactionData","transactionCode","getInventoriesQuantity","getBalanceInfo","instance","FormGroup","orientation","MONTHS","kabisatMonths","regularMonths","Spinner","innerDivs","Array","height","visibility","show","SimpleError","month","getMonth","year","getFullYear","loading","balanceInfo","LoadBalanceForm","transactionHistoryService","getInstance","balanceLoaded","entity","getBalanceRequest","day","updateFilterProp","loadData","commonAjax","onChange","BalanceInfo","creditAmt","debitAmt","actualBalance","quantity","LoadInventoryForm","dataLoaded","Detail","DashboardMain","MasterDataService","managementProperties","entityPropertyMap","Map","updateApplicationProfile","profile","set","req","limit","page","exacts","fieldsFilter","model","editMode","AnchorButton","btnClassName","iconClassName","Modal","hideModal","showModal","toggleable","marginBottom","showFooter","EntityProperty","groupNames","entityName","alias","fieldNames","idField","detailFieldName","imageElementsJson","dateElementsJson","multipleSelectElementsJson","currencyElementsJson","formInputColumn","editable","withDetail","dateElements","imageElements","currencyElements","multipleSelectElements","elements","fieldNameList","ignoreBaseField","isQuestionare","record","prop","getEntityElement","getHeaderLabels","header","lableName","isDate","FieldType","EntityValues","object","elemnents","elementid","fieldType","FIELD_TYPE_FIXED_LIST","FIELD_TYPE_DYNAMIC_LIST","optionItemName","FIELD_TYPE_DATE","FIELD_TYPE_IMAGE","imgLink","src","FIELD_TYPE_COLOR","color","FIELD_TYPE_NUMBER","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","min","max","FormInputImage","singlePreviewData","showInputFile","changeSingleImageData","removeImage","showConfirmationDanger","doRemoveImage","prepopulateForm","recordToEdit","defaultValue","fullUrl","Fragment","accept","imageData","ImagePreview","FormInputImageMultiple","previewData","inputElements","setImageData","addInputElement","removeInputElement","removedIndex","doRemoveInputElement","splice","delete","trim","imageNames","imageName","isNull","isBase64","isBase64Image","FormInputField","masterDataService","inputList","entityElement","getRequiredAttr","inputListLoaded","entities","Error","loadInputList","entityReferenceClass","loadAllEntities","hasInputList","hasInputListAndNotReady","validateInputType","fieldName","recordValue","defaultInputValue","optionValueName","requiredAttr","input","options","option","optionItemValue","multiple","FIELD_TYPE_TEXTAREA","MasterDataForm","form","submit","promises","nulledFields","forEach","file","valueAttr","constructor","promise","all","objectPayload","generateRequestPayload","ajaxSubmit","rawObject","join","save","recordSaved","getEntityProperty","showInfo","entityProperty","editModeStr","SubmitReset","InputFields","groupedElements","counter","EditDeleteAction","doDelete","recordId","getRecordId","recordDeleted","getRecordById","getById","recordLoaded","showEditForm","reload","DataTableHeader","headerProps","headerProp","filterOnChange","data-orderType","orderButtonOnClick","data-orderby","MasterDataList","showForm","adjustFilter","loadEntities","entitiesLoaded","recordData","checkDefaultData","getRecordNumber","filterFormSubmit","useExistingFilterPage","filterReset","dataset","orderBy","orderType","showCreateForm","updateFilterPage","updateFilterLimit","resultList","onReset","overflow","number","values","parseValues","Loading","paddingTop","marginLeft","marginTop","SubmitResetButton","MasterDataManagement","loadingEntityProperty","entityPropertyLoaded","setEntityProperty","setTitle","entityProp","loadEntityProperty","existingEntityProperty","MasterDataMain","managementPropertiesLoaded","generalList","setSidebarMenus","refresh","sidebarMenus","loadManagamenetPages","loadManagementProperties","getCode","match","properties","property","TransactionMain","AnchorWithIcon","CatalogService","totalProduct","setTotalProduct","getTotalProduct","getProductList","raw","getProductDetail","getMoreSupplier","productId","CatalogMain","catalogService","totalProductLoaded","totalProductNotLoaded","loadTotalProduct","HomeMain","imageUrl","backgroundUrl","backgroundImage","backgroundSize","fontColor","shortDescription","welcomingMessage","BaseEntity","createdDate","modifiedDate","deletedDate","deleted","Product","description","price","unit","category","newProduct","count","suppliers","product","names","getDefaultPicture","products","CartMain","countSummary","BaseTransactionService","defaultResponse","res","rej","submitTransactionSelling","transaction","submitTransaction","submitTransactionPurchasing","productFlows","customer","supplier","getStockInfo","productCode","withStock","TransactionPurchasingService","SupplierForm","supplierNotFound","searchSupplier","loadSupplier","supplierLoaded","setSupplier","notFound","SupplierDetail","address","contact","ProductForm","transactionService","productNotFound","searchProduct","loadProduct","productLoaded","setProduct","commonAjaxWithProgress","ProductDetail","fontFamily","Transaction","mode","transactionDate","productFlow","ProductFlow","expiryDate","flowReferenceId","transactionId","productFlowStock","totalPrice","obj","BaseTransactionComponent","productFormRef","create","selectedProductFlow","addToCart","Object","assign","existInCart","addProductFlowState","reset","clearSelectedProductFlow","editProduct","removeProduct","totalUnitAndPrice","totalUnit","totalProductPrice","productFlowPrice","productPrice","TransactionPurchasing","transactionPurchasingService","updateSelectedProductFlowProp","propName","doSubmit","date","transactionSucess","productFlowsPopulated","supplierExist","showSubmitTrxButton","colSpan","TransactionSellingService","getCustomerList","CustomerForm","customerNotFound","searchCustomer","loadCustomer","customerLoaded","setCustomer","CustomerDetail","phone","TransactionSelling","transactionSellingService","updateSaleQty","customerExist","TransactionDetail","dataNotFound","transactionData","recordNotLoaded","setTransactionCode","TransactionData","isSelling","showCart","ProductCatalogList","showShoppingCart","hideShoppingCart","getProductInCart","addOneToCart","productInCart","setProductToCart","reduceOneFromCart","resetProductCart","productCloned","resetAllShoppingCart","getShoppingCartCounts","found","imgName","withCategories","categories","ProductCatalog","productNotLoaded","productsLoaded","loadProducts","setFieldsFilterValue","setFilterPage","setLimit","setOrder","rawOrder","withProgess","defaultChecked","CartList","removeFromCart","doRemoveFromCart","cartList","imgUrl","Carousel","imageLength","getCurrentImage","imageUrls","prev","currentActive","next","overflowX","ProductCatalogDetail","loadProductDetail","getPictureNames","DashboardFilter","updatePeriodFilter","yearTo","transactionYears","monthName","monthTo","Cashflow","amount","module","getAmount","getLabel","toDataSet","cashflow","toDataSets","cashflows","dataSets","maxAmount","hoveredIndex","DashboardBarChart","middleYAxisValue","bottomYAxisValue","offsetX","offsetY","baseYIndex","baseHeight","lineWidth","maxValue","updateSizes","dataSet","round","hover","unHover","minHeight","onMouseOut","version","baseProfile","xmlns","percentage","labelY","labelX","transform","hovered","cursor","onMouseOver","fill","x","y","textAnchor","cx","cy","r","activeSellingIndex","activePurchasingIndex","CashflowChart","getCashflowData","cashflowData","getPeriodString","getSellingData","list","sellings","getPurchasingData","purchasings","setActiveSellingData","unSelectSellingData","setActivePurchasingData","unSelectPurchasingData","onUnHover","CashflowDetail","DashboardStatistic","loadStatistic","cashflowDataLoaded","cashflowDataNotLoaded","ProductSales","sales","objects","sortBySales","sort","p1","p2","sortBySalesDesc","sortType","activeSalesDataIndex","salesData","ProductSalesPage","loadSales","salesDataLoaded","salesDataNotLoaded","setActiveSalesData","unSelectSalesData","getActiveSalesData","salesList","showBtnLoadMore","btnSortIconClass","paddingBottom","productSales","ProductSalesDetail","ProductSalesDetailPage","getProductId","getProduct","SettingsMain","User","profileImage","authorities","processingDate","UserService","updateProfile","EditField","edit","toggleInput","updateProperty","PropertyInput","PropertyLabel","editFields","fieldChanged","UserProfile","userService","updateProfileProperty","updateProfleImage","setProfileImage","actualLoggedUser","propertyName","getAttribute","enabled","saveRecord","doSaveRecord","getUserEditedData","profileSaved","editedUser","setLoggedUser","EditImage","ApplicationProfile","appCode","about","website","iconUrl","pageIcon","footerIconClass","EditApplicationProfile","appProfile","actualAppProfile","getApplicationEditedData","editedApplication","setApplicationProfile","bgUrl","ApplicationContent","path","render","exact","Menu","pathVariables","menuPage","defaultMenuIconClassName","getIconClassName","SideBar","isSidebarActive","parentMenu","pathName","location","pathname","window","addEventListener","handleScroll","removeEventListener","scrollTop","srcElement","brand","menuClassName","Brand","textAlign","textDecoration","MainLayout","currentPathName","warn","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","clientRef","alertCallback","onOk","loadingPercentage","mainAppUpdated","requestAppId","incrementLoadings","decrementLoadings","percentageFloat","floor","yesCallback","noCallback","dismissAlert","link","querySelector","createElement","setAttribute","head","appendChild","updateFavicon","topics","onMessage","handleMessage","client","actions","initState","messages","userAlias","reducer","action","loginKey","loginFailed","menuData","loginAttempt","setItem","assetsPath","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","currentProductSalesData","loadMore","loadedProductList","referrer","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","initialState","performLoginMiddleware","store","responseJson","loginSuccess","newAction","requestAppIdMiddleware","common","loggedIn","param","getLoggedUserMiddleware","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","JSON","stringify","json","err","storeChatMessageLocallyMiddleware","removeEntityMiddleware","updateCartMiddleware","getProductSalesDetailMiddleware","getProductSalesMiddleware","getCashflowDetailMiddleware","getCashflowInfoMiddleware","resetProductsMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","realtimeChatMiddleware","Root","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78345a00.chunk.js","sourcesContent":["\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    return contextPath;\r\n}\r\n\r\n// export const baseImageUrl = contextPath()+\"assets/images/\"; \r\n// export const baseImageUrl = \"https://developmentmode.000webhostapp.com/uploaded_storage/\"; \r\n// export const baseImageUrl = \"http://localhost/storage/images/\"; \r\nexport const baseImageUrl = localStorage.getItem(\"assetsPath\")+ \"images/\"; \r\n// export const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\"; \r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url';\r\nimport Product from './../models/Product';\r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/app/account/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"\r\nconst apiTransaction = usedHost + \"api/app/transaction/\";\r\n\r\nexport const updateCart = (cart: Product[], ...apps) => {\r\n    // console.debug(\"UPDATE CART: \", cart);\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, apps: apps }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl.concat(\"requestid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSales = (request) => {\r\n    request.referrer.props.app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES,\r\n        payload: {\r\n            product: { name: request.productName },\r\n            filter:\r\n                { page: request.page, limit: request.limit, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            referrer: request.referrer, type: types.GET_PRODUCT_SALES, loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsales\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_CASHFLOW_DETAIL,\r\n        payload: { filter: { month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_DETAIL, url: apiTransaction.concat(\"cashflowdetail\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowInfo = (month, year, type, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_CASHFLOW_INFO,\r\n        payload: { filter: { year: year, month: month, module: type } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_INFO, url: apiTransaction.concat(\"cashflowinfo\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, url: contextPath().concat(\"login?username=\" + username + \"&password=\" +\r\n                password + \"&transport_type=rest\"), app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: user },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId,\r\n        cart: state.shopState.cart\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {  \r\n            className = \"message-loading progress\";\r\n            messageText = <span className=\"loader\">{this.props.progress + \"%\"}</span>   \r\n            msgStyle.zIndex = 100;\r\n        }\r\n\r\n        return (\r\n            <div style={msgStyle} className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props){\r\n    if(props.realtime){\r\n        return (\r\n            <div className=\"progress-bar progress-bar-striped\" role=\"progressbar\" style={{ \r\n                width: props.progress + \"%\",\r\n                transitionDuration: '300ms'\r\n                }}>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react'\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n\r\n        this.onYes = (e) => {\r\n             \r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n            \r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger':'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop />\r\n                <div className=\"modal fade show\" style={{ display: 'block' }} id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\"> {this.props.children}</div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{backgroundColor: 'rgba(100,100,100,0.7)'}} ></div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \"+props.className}>\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\">Yes</button>\r\n            {props.yesOnly ? null : <button ref={props.noButtonRef} type=\"button\"\r\n                onClick={props.onNo} className=\"btn btn-outline-secondary\">No</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \"+props.className}>\r\n        <h5 className={\"modal-title \"+props.fontClassName }id=\"exampleModalCenterTitle\">{props.title}</h5>\r\n        <button onClick={props.onClose} type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\" className={props.fontClassName}><i className=\"fas fa-times\"/></span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val:any) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\tconst isNegative:boolean = new String(val).startsWith(\"-\");\r\n\tif (isNegative) {\r\n\t\tval = new String(val).replace(\"-\",\"\");\r\n\t}\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\tif (isNegative) {\r\n\t\tresult = \"-\"+result;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const base64StringFileSize = (base64String:string) : number => {\r\n\tif (base64String.includes(\",\")) {\r\n\t\tbase64String = base64String.split(\",\")[1];\r\n\t}\r\n\tvar stringLength = base64String.length;\r\n\r\n\tvar sizeInBytes = 4 * Math.ceil((stringLength / 3))*0.5624896334383812;\r\n\tvar sizeInKb=sizeInBytes/1000;\r\n\treturn sizeInBytes;\r\n}\r\n\r\nexport const fileExtension = (fileName:string) :string => {\r\n\tif (fileName.includes(\".\") == false) {\r\n\t\treturn \"*\";\r\n\t}\r\n\r\n\tconst splitted = fileName.split(\".\");\r\n\treturn splitted[splitted.length - 1];\r\n}","import { base64StringFileSize } from './StringUtil';\r\nexport const byId = (id) => { return document.getElementById(id) }\r\n \r\nexport function toBase64(file, referer, callback) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n        alert(\"Error Loading File\");\r\n    }\r\n}\r\n \r\n\r\nexport function toBase64v2(fileInput) {\r\n    return new Promise<any>(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(fileInput.files[0]);\r\n            console.debug(\"fileInput.files[0]: \", fileInput.files[0]);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport const resizeImage = (data:string, ratio:number, extension:string) => {\r\n    const actualFilesize = base64StringFileSize(data);\r\n    console.debug(\"Actual filesize: \", actualFilesize);\r\n    return new Promise<string>(function(resolve, reject){\r\n        const img = new Image();\r\n        img.src = data;\r\n        img.onload = function () {\r\n            const width = img.width   * ratio;\r\n            const height = img.height   * ratio;\r\n            // create an off-screen canvas\r\n            var canvas:HTMLCanvasElement = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n            if (!ctx) return;\r\n            // set its dimension to target size\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            var mime_type = \"image/\"+extension;\r\n            // draw source image into the off-screen canvas:\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n            console.debug(\"Resize ratio: \", ratio, \"mime_type: \",mime_type);\r\n            // encode image to data-uri with base64 version of compressed image\r\n            const dataURL = (canvas.toDataURL());\r\n            console.debug(\"Resized filesize: \", base64StringFileSize(dataURL));\r\n            resolve(dataURL);\r\n        }\r\n    });\r\n}\r\n\r\nexport function toBase64FromFile(file) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options:any[] = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options:any[] = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","import { Component } from 'react';\r\nimport { byId } from '../utils/ComponentUtil';\r\nimport WebResponse from './../models/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated = authenticated\r\n        this.state = {\r\n            ...this.state\r\n        }\r\n\r\n    }\r\n    validateLoginStatus = () => {\r\n        if (this.authenticated == false) return;\r\n        if (this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile():ApplicationProfile\r\n    {\r\n        return this.props.applicationProfile == null ? {} : this.props.applicationProfile;\r\n    }\r\n\r\n    handleInputChange(event: any) {\r\n        const target = event.target;\r\n        const value = target.type == 'checkbox' ? target.checked : target.value;\r\n        this.setState({ [target.name]: value });\r\n        console.debug(\"input changed: \", target.name, value);\r\n    }\r\n\r\n    focusToActiveField() {\r\n        if (this.state.activeId != null && byId(this.state.activeId) != null) {\r\n            const element = byId(this.state.activeId);\r\n            if (element != null) {\r\n                element.focus();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method \r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax(method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any ) {\r\n        this.startLoading(withProgress);\r\n\r\n        method(...params).then(function (response:WebResponse) {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch(function (e) {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally((e:any) => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax(method: Function, successCallback: Function, errorCallback: Function, ...params:any) {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress(method: Function, successCallback: Function, errorCallback: Function, ...params:any) {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser():User|undefined {\r\n        const user:User|undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return user;\r\n    }\r\n    isLoggedUserNull(): boolean {\r\n        return false == this.props.loginStatus || null == this.props.loggedUser;\r\n    }\r\n    isUserLoggedIn(): boolean {\r\n        return true == this.props.loginStatus && null != this.props.loggedUser;\r\n    }\r\n    showConfirmation(body:any): Promise<boolean> {\r\n        const app = this;\r\n        return new Promise(function(resolve, reject){\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n  \r\n    }\r\n    showConfirmationDanger(body: any): Promise<any> {\r\n        const app = this;\r\n        return new Promise(function(resolve, reject){\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo(body: any) {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError(body: any) {\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n\r\n    showCommonErrorAlert = (e:any) => {\r\n        console.error(e);\r\n        const msg = e.message??e;\r\n        this.showError(\"Operation Failed: \"+msg);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isLoggedUserNull()) {\r\n            console.debug(typeof this , \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n}","\r\nimport Menu from './../models/Menu';\r\n\r\nexport const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const TRANSACTION_SELLING = \"selling\";\r\nexport const MENU_TRANSACTION = \"purchasing\";\r\nexport const MENU_SETTING = \"settings\";\r\nexport const SUPPLIERLIST = \"supplierlist\";\r\nexport const MENU_MASTER_DATA = \"management\";\r\nexport const CHATROOM = \"chatroom\";\r\nexport const CART = \"cart\";\r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < menus.length; i++) {\r\n        const element: Menu = menus[i];\r\n        menuSet.push(element);\r\n    }\r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n    console.debug(\"pathName: \", pathName);\r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const menus: Menu[] = [\r\n    {\r\n        code: HOME,\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false\r\n    },\r\n    {\r\n        code: CATALOG,\r\n        name: \"Catalog\",\r\n        url: \"/catalog\",\r\n        menuClass: \"fa fa-th-large\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: true,\r\n        subMenus: [{\r\n            code: 'catalog_product',\r\n            name: 'Product',\r\n            url: 'product',\r\n            menuClass: 'fas fa-cubes'\r\n        },\r\n        {\r\n            code: 'catalog_supplier',\r\n            name: 'Supplier',\r\n            url: 'supplier',\r\n        }]\r\n    },\r\n    {\r\n        code: CART,\r\n        name: \"Shopping Cart\",\r\n        url: \"/cart\",\r\n        menuClass: \"fa fa-shopping-cart\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'cart_list',\r\n                name: 'Shopping Cart List',\r\n                menuClass: 'fas fa-shopping-bag',\r\n                url: 'cartlist',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: DASHBOARD,\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'dashboard_stat',\r\n                name: 'Statistic',\r\n                url: 'statistic',\r\n                menuClass: 'fas fa-chart-bar'\r\n\r\n            },\r\n            {\r\n                code: 'dashboard_productsales',\r\n                name: 'Product Sales',\r\n                url: 'productsales',\r\n                menuClass: 'fas fa-chart-line'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: MENU_TRANSACTION,\r\n        name: \"Transaction\",\r\n        url: \"/transaction\",\r\n        menuClass: \"fas fa-suitcase\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'trx_selling',\r\n                name: 'Selling',\r\n                menuClass: 'fas fa-cash-register',\r\n                url: 'selling',\r\n            },\r\n            {\r\n                code: 'trx_purchasing',\r\n                name: 'Purchasing',\r\n                menuClass: 'fas fa-shopping-basket',\r\n                url: 'purchasing',\r\n            },\r\n            {\r\n                code: 'trx_detail',\r\n                name: 'Transaction Detail',\r\n                menuClass: 'fas fa-clipboard-list',\r\n                url: 'detail',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: MENU_MASTER_DATA,\r\n        name: \"Master Data\",\r\n        url: \"/management\",\r\n        menuClass: \"fa fa-database\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true\r\n    },\r\n    {\r\n        code: MENU_SETTING,\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'user_profile',\r\n                name: 'Profile',\r\n                menuClass: 'fas fa-user-cog',\r\n                url: 'user-profile',\r\n            },\r\n            {\r\n                code: 'app_profile',\r\n                name: 'Application Setting',\r\n                menuClass: 'fas fa-cog',\r\n                url: 'app-profile',\r\n            },\r\n            \r\n        ]\r\n    },\r\n];\r\n","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || menu.authenticated && this.isLoggedUserNull()) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.props.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull} authenticated={this.isUserLoggedIn()}\r\n                                onLogout={this.onLogout} user={this.getLoggedUser()} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: any) => {\r\n    if (props.authenticated) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'><i className=\"fas fa-user-circle\"></i>&nbsp;{props.user.displayName}\r\n                </Link>\r\n                <a style={{marginRight:'5px'}} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{marginRight:'5px'}} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nclass Login extends BaseComponent{\r\n    formRef: RefObject<HTMLFormElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        const form: EventTarget = e.target;\r\n        if (null == this.formRef.current) {\r\n            return;\r\n        }\r\n        const formData: FormData = new FormData(this.formRef.current);\r\n        console.debug(\"formData: \", formData);\r\n        this.props.performLogin(formData.get('username'), formData.get('password'), this.parentApp);\r\n    }\r\n    componentDidMount(){\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n    \r\n        console.debug(\"Login update\");\r\n        console.debug(\"logged in : \", this.props.loginStatus);\r\n        console.debug(\"logged user : \", this.getLoggedUser());\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\">\r\n                <form ref={this.formRef} name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <UsernameField />\r\n                    <PasswordField />\r\n                    <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = (props) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"password\" type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst UsernameField = (props) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input name=\"username\" type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder=\"Username\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\r\nimport BaseComponent from './../BaseComponent';\r\nimport Menu from './../../models/Menu';\r\nexport default class BaseMainMenus extends BaseComponent {\r\n\r\n    title:string = \"\";\r\n    constructor(props, title:string, authenticated:boolean = false) {\r\n        super(props, authenticated);\r\n        this.title = title;\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.authenticated) {\r\n            this.validateLoginStatus();\r\n        }\r\n        document.title = this.title;\r\n        \r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('loginKey');\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['access-token']) {\r\n        const accessToken = axiosResponse.headers['access-token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(\"loginKey\", accessToken);\r\n    }\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","import * as url from '../constant/Url'\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport Filter from './../models/Filter';\r\nimport WebRequest from './../models/WebRequest';\r\nexport default class TransactionHistoryService {\r\n    private static instance?:TransactionHistoryService;\r\n    \r\n    static getInstance() :TransactionHistoryService\r\n    {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionHistoryService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    getProductSales = (filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/productsales\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getProductSalesDetail = (id:number, filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/productsalesdetail/\"+id);\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getCashflowDetail = (filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/cashflowdetail\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getTransactionData = function (transactionCode:string) {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/transactiondata/\" + transactionCode)\r\n        return commonAjaxPostCalls(endpoint, {});\r\n\r\n    }\r\n\r\n    getInventoriesQuantity = function (request = {}) {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/inventoriesquantity\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    getBalanceInfo = (request:WebRequest) => {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/balance\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nexport default class FormGroup extends Component<any, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={\"form-group \"+ this.props.className+ \" \" + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month starts at 0\r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport BaseComponent from './../../BaseComponent';\r\nimport Card from './../../container/Card';\r\nimport TransactionHistoryService from './../../../services/TransactionHistoryService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport WebRequest from './../../../models/WebRequest';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport { getMonthDays, MONTHS } from './../../../utils/DateUtil';\r\nimport CashBalance from './../../../models/CashBalance';\r\nimport Spinner from './../../loader/Spinner';\r\nimport SimpleError from './../../alert/SimpleError';\r\nimport { beautifyNominal } from '../../../utils/StringUtil';\r\nclass IState {\r\n    month: number = new Date().getMonth() + 1;\r\n    year: number = new Date().getFullYear();\r\n    loading: boolean = false;\r\n    balanceInfo?: CashBalance;\r\n}\r\nexport default class LoadBalanceForm extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n\r\n    state: IState = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    balanceLoaded = (response: WebResponse) => {\r\n        this.setState({ balanceInfo: response.entity });\r\n    }\r\n    getBalanceRequest = (): WebRequest => {\r\n        return {\r\n            filter: {\r\n                month: this.state.month,\r\n                year: this.state.year,\r\n                day: getMonthDays( this.state.month-1)\r\n            }\r\n        };\r\n    }\r\n    updateFilterProp = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value });\r\n    }\r\n    loadData = (e: any): void => {\r\n        e.preventDefault();\r\n        this.commonAjax(\r\n            this.transactionHistoryService.getBalanceInfo,\r\n            this.balanceLoaded,\r\n            this.showCommonErrorAlert,\r\n            this.getBalanceRequest()\r\n        )\r\n    }\r\n    render() {\r\n\r\n        return <Card title=\"Balance\">\r\n            <div className=\"row\">\r\n                <form className=\"col-md-6\" onSubmit={this.loadData}>\r\n                    <FormGroup label=\"Month\">\r\n                        <select name=\"month\" onChange={this.updateFilterProp} className=\"form-control\" value={this.state.month}>\r\n                            {MONTHS.map((name, i) => {\r\n                                return <option key={\"month-balance-\" + i} value={i + 1}>{name}</option>\r\n                            })}\r\n                        </select>\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Year\">\r\n                        <input name=\"year\" onChange={this.updateFilterProp} className=\"form-control\" value={this.state.year} type=\"number\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <input type=\"submit\" className=\"btn btn-primary\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <BalanceInfo balanceInfo={this.state.balanceInfo} loading={this.state.loading} />\r\n            </div>\r\n        </Card>\r\n    }\r\n}\r\n\r\nconst BalanceInfo = (props: { balanceInfo?: CashBalance, loading: boolean }) => {\r\n    if (props.loading) return <div className=\"col-md-6\"><Spinner /></div>\r\n    if (!props.balanceInfo) return <div className=\"col-md-6\"><SimpleError>Data Not Found</SimpleError></div>\r\n    return <div className=\"col-md-6\">\r\n        <FormGroup label=\"Total Spent\">{beautifyNominal(props.balanceInfo.creditAmt)}</FormGroup>\r\n        <FormGroup label=\"Total Earned\">{beautifyNominal(props.balanceInfo.debitAmt)}</FormGroup>\r\n        <FormGroup label=\"Balance\">{beautifyNominal(props.balanceInfo.actualBalance)}</FormGroup>\r\n    </div>\r\n}","import React from 'react'\r\nimport BaseComponent from '../../BaseComponent';\r\nimport Card from '../../container/Card';\r\nimport TransactionHistoryService from '../../../services/TransactionHistoryService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport WebRequest from '../../../models/WebRequest';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport CashBalance from '../../../models/CashBalance';\r\nimport Spinner from '../../loader/Spinner';\r\nimport SimpleError from '../../alert/SimpleError';\r\nimport { beautifyNominal } from '../../../utils/StringUtil';\r\nclass IState {\r\n    quantity?:number;\r\n    loading: boolean = false; \r\n}\r\nexport default class LoadInventoryForm extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n\r\n    state: IState = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    startLoading = () => this.setState({ loading: true });\r\n    endLoading = () => this.setState({ loading: false });\r\n    dataLoaded = (response: WebResponse) => {\r\n        this.setState({ quantity: response.quantity });\r\n    }\r\n  \r\n    loadData = (e: any): void => {\r\n        e.preventDefault();\r\n        this.commonAjax(\r\n            this.transactionHistoryService.getInventoriesQuantity,\r\n            this.dataLoaded,\r\n            this.showCommonErrorAlert,\r\n            {}\r\n        )\r\n    }\r\n    render() {\r\n        return <Card title=\"Inventory Quantity\">\r\n            <div className=\"row\">\r\n                <form className=\"col-md-6\" onSubmit={this.loadData}>\r\n                    <FormGroup>\r\n                        <input type=\"submit\" value=\"Reload\" className=\"btn btn-primary\" />\r\n                    </FormGroup>\r\n                </form>\r\n                <Detail quantity={this.state.quantity} loading={this.state.loading} />\r\n            </div>\r\n        </Card>\r\n    }\r\n}\r\n\r\nconst Detail = (props: { quantity?:number, loading: boolean }) => {\r\n    if (props.loading) return <div className=\"col-md-6\"><Spinner /></div>\r\n    if (!props.quantity) return <div className=\"col-md-6\"><SimpleError>Data Not Found</SimpleError></div>\r\n    return <div className=\"col-md-6\">\r\n         <h3>{beautifyNominal(props.quantity)}</h3>\r\n    </div>\r\n}","\r\n\r\nimport React,  { ChangeEvent  } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus'; \r\nimport LoadBalanceForm from './LoadBalanceForm';\r\nimport LoadInventoryForm from './LoadInventoryForm';\r\n\r\n\r\nclass DashboardMain extends BaseMainMenus {\r\n    constructor(props: any) {\r\n        super(props, \"Dashboard\", true);\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div id=\"DashboardMain\" className=\"container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.displayName}</strong>\r\n                </div>\r\n                <LoadBalanceForm app={this.parentApp} />\r\n                <p></p>\r\n                <LoadInventoryForm app={this.parentApp} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(DashboardMain))","\r\nimport Filter from './../models/Filter';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport BaseEntity from './../models/BaseEntity';\r\nimport ManagementProperty from '../models/ManagementProperty';\r\nimport EntityProperty from './../models/EntityProperty';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService {\r\n    managementProperties: ManagementProperty[] = [];\r\n    private entityPropertyMap: Map<string, EntityProperty> = new Map();\r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    setEntityProperty(code: string, data?: EntityProperty) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.entityPropertyMap.set(code, data);\r\n    }\r\n    getEntityProperty(code?: string): EntityProperty | undefined {\r\n        if (code == undefined) {\r\n            return undefined;\r\n        }\r\n        return this.entityPropertyMap.get(code);\r\n    }\r\n\r\n    loadManagementProperties(req?: any) {\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/managementpages\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n\r\n    }\r\n    loadEntityProperty(code: string) {\r\n        console.debug(\"Load entity prop: \", code);\r\n        const request: WebRequest = {\r\n            entity: code\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/configv2\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    loadEntities(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    loadAllEntities(code: string) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                limit: 0, page: 0\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    getById(code: string, id: number) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                exacts: true,\r\n                limit: 1,\r\n                page: 0,\r\n                fieldsFilter: { 'id': id }\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getBy(code: string, fieldsFilter: {}, limit = 1) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                exacts: true,\r\n                limit: limit,\r\n                page: 0,\r\n                fieldsFilter: fieldsFilter\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete(code: string, id: number) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                fieldsFilter: { 'id': id }\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    save(code: string, model: BaseEntity, editMode: boolean) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            [code]: model\r\n        }\r\n        let endpoint: string;\r\n        if (editMode) {\r\n            endpoint = contextPath().concat(\"api/app/entity/update\");\r\n        } else {\r\n            endpoint = contextPath().concat(\"api/app/entity/add\");\r\n        }\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    updateApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n        const request: WebRequest = {\r\n            profile: applicationProfile\r\n        }\r\n        const endpoint = contextPath().concat(\"api/app/setting/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request)\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\nexport default class Modal extends Component<any, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    render() {\r\n       if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport EntityElement from \"./EntityElement\";\r\nimport HeaderProps from './HeaderProps'; \r\n\r\nexport default class EntityProperty{\r\n\tgroupNames?:string;\r\n\tentityName?:string;\r\n\talias?:string;\r\n\tfieldNames?:string;\r\n\tidField?:string;\r\n\tdetailFieldName?:string;\r\n\timageElementsJson?:string;\r\n\tdateElementsJson?:string;\r\n\tmultipleSelectElementsJson?:string;\r\n\tcurrencyElementsJson?:string;\r\n\tformInputColumn?:number;\r\n\teditable?:boolean;\r\n\twithDetail?:boolean;\r\n\tdateElements?:any[];\r\n\timageElements?:any[];\r\n\tcurrencyElements?:any[];\r\n\tmultipleSelectElements?:any[];\r\n\telements:EntityElement[] = new Array();\r\n\tfieldNameList?:string[];\r\n\tignoreBaseField?:boolean;\r\n\tisQuestionare?:boolean;\r\n\r\n\tstatic getEntityElement = (prop: EntityProperty, id:string) :EntityElement|undefined => {\r\n\t\tfor (let i = 0; i < prop.elements.length; i++) {\r\n\t\t\tconst element = prop.elements[i];\r\n\t\t\tif (element.id == id) {\r\n\t\t\t\treturn element;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tstatic getHeaderLabels = (prop:EntityProperty) : HeaderProps[] => {\r\n\t\tconst result:HeaderProps[] = new Array();\r\n\t\tif (prop.elements == undefined) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tconst elements:EntityElement[] = prop.elements;\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\r\n\t\t\tconst element = elements[i];\r\n\t\t\tconst header:HeaderProps=  {\r\n\t\t\t\tlabel:element.lableName,\r\n\t\t\t\tvalue:element.id,\r\n\t\t\t\tisDate:element.type == 'date'\r\n\t\t\t};\r\n\t\t\tresult.push(header);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic getRecordId(record:any, prop:EntityProperty) {\r\n\t\tconst elements = prop.elements;\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tconst element = elements[i];\r\n\t\t\tif (element.idField) {\r\n\t\t\t\treturn record[element.id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n","\nexport enum FieldType {\n\n\tFIELD_TYPE_TEXT = \"FIELD_TYPE_TEXT\",\n\tFIELD_TYPE_IMAGE =\n\t'FIELD_TYPE_IMAGE',\n\tFIELD_TYPE_CURRENCY =\n\t'FIELD_TYPE_CURRENCY',\n\tFIELD_TYPE_NUMBER =\n\t'FIELD_TYPE_NUMBER',\n\tFIELD_TYPE_HIDDEN =\n\t'FIELD_TYPE_HIDDEN',\n\tFIELD_TYPE_COLOR =\n\t'FIELD_TYPE_COLOR',\n\tFIELD_TYPE_FIXED_LIST =\n\t'FIELD_TYPE_FIXED_LIST',\n\tFIELD_TYPE_DYNAMIC_LIST =\n\t'FIELD_TYPE_DYNAMIC_LIST',\n\tFIELD_TYPE_TEXTAREA =\n\t'FIELD_TYPE_TEXTAREA',\n\tFIELD_TYPE_PLAIN_LIST =\n\t'FIELD_TYPE_PLAIN_LIST',\n\tFIELD_TYPE_DATE =\n\t'FIELD_TYPE_DATE'\n}\n\n","import React from 'react';\r\nimport EntityProperty from '../models/EntityProperty';\r\nimport EntityElement from '../models/EntityElement';\r\nimport { baseImageUrl } from '../constant/Url';\r\nimport { FieldType } from '../models/FieldType';\r\nimport { beautifyNominal } from './StringUtil';\r\nexport default class EntityValues {\r\n\tstatic parseValues(object:any, prop:EntityProperty) : Array<any> {\r\n\t\tconst result = new Array();\r\n\t\tconst elemnents:EntityElement[] =prop.elements;\r\n\t\tfor (let i = 0; i < elemnents.length; i++) {\r\n\t\t\tconst element = elemnents[i];\r\n\t\t\tconst elementid = element.id;\r\n\t\t\tlet value:any =  object[elementid];\r\n\t\t\tif (value == null) {\r\n\t\t\t\tresult.push(value);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tswitch(element.fieldType) {\r\n\t\t\t\tcase FieldType.FIELD_TYPE_FIXED_LIST:\r\n\t\t\t\tcase FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n\t\t\t\t\tconst valueAsObj = object[elementid];\r\n\t\t\t\t\tvalue = valueAsObj[element.optionItemName??\"id\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_DATE:\r\n\t\t\t\t\tvalue = new Date(value).toString();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_IMAGE:\r\n\t\t\t\t\tconst imgLink = new String(value).split(\"~\")[0];\r\n\t\t\t\t\tvalue = <img src ={baseImageUrl+imgLink} width=\"50\" height=\"50\"/>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_COLOR:\r\n\t\t\t\t\tvalue = <strong style={{color:value}} >{value}</strong>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_NUMBER:\r\n\t\t\t\t\tvalue = beautifyNominal(value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue = object[elementid];\r\n\t\t\t}\r\n\t\t\tresult.push(value);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Fragment, Component } from 'react';\r\nimport { toBase64v2 } from '../../../../utils/ComponentUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport BaseComponent from '../../../BaseComponent';\r\ninterface IState {\r\n    singlePreviewData?: string,\r\n    showInputFile: boolean\r\n}\r\nexport default class FormInputImage extends BaseComponent {\r\n    state: IState = {\r\n        singlePreviewData: undefined,\r\n        showInputFile: false\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    changeSingleImageData = (e) => {\r\n        const app = this;\r\n        toBase64v2(e.target).then(function (data) {\r\n            app.setState({ singlePreviewData: data });\r\n        })\r\n    }\r\n    removeImage = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Remove image?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doRemoveImage();\r\n                }\r\n            })\r\n    }\r\n\r\n    doRemoveImage = () => {\r\n        if (this.ref.current) {\r\n            this.ref.current.value = null;\r\n        }\r\n        this.setState({ singlePreviewData: undefined, showInputFile: false });\r\n    }\r\n\r\n    getEntityElement(): EntityElement {\r\n        return this.props.element;\r\n    }\r\n    componentDidMount() {\r\n        this.prepopulateForm();\r\n    }\r\n    prepopulateForm() {\r\n        if (!this.props.recordToEdit){ \r\n            return;\r\n        }\r\n        let defaultValue = this.props.recordToEdit[this.getEntityElement().id];\r\n        if (!defaultValue){ \r\n            return;\r\n        }\r\n        const fullUrl = baseImageUrl + defaultValue;\r\n        this.setState({ singlePreviewData: fullUrl, showInputFile:true });\r\n    }\r\n    render() {\r\n        const element: EntityElement = this.getEntityElement();\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showInputFile ?\r\n                    <input ref={this.ref}\r\n                        onChange={this.changeSingleImageData} type=\"file\" accept=\"image/*\" name={element.id} className='form-control' />\r\n\r\n                    :\r\n                    <Fragment>\r\n                        <p></p>\r\n                        <AnchorButton onClick={(e)=> this.setState({showInputFile:true})} iconClassName=\"fas fa-plus\" className=\"btn btn-info btn-sm\">Add Image</AnchorButton>\r\n                        <input type=\"hidden\" name={element.id} value=\"NULLED\" />\r\n                    </Fragment>\r\n                }\r\n                <ImagePreview imageData={this.state.singlePreviewData} />\r\n                <AnchorButton show={this.state.singlePreviewData != undefined} onClick={this.removeImage} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\">remove</AnchorButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n","\r\nimport React, { Fragment, Component } from 'react';\r\nimport { toBase64v2 } from '../../../../utils/ComponentUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport BaseComponent from './../../../BaseComponent';\r\ninterface IState {\r\n    previewData: Map<number, string>,\r\n    inputElements: number[]\r\n}\r\nexport default class FormInputImageMultiple extends BaseComponent {\r\n    state: IState = {\r\n        previewData: new Map(),\r\n        inputElements: [1]\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setImageData = (e, index) => {\r\n        const app = this;\r\n        toBase64v2(e.target).then(function (data) {\r\n            const previewData = app.state.previewData;\r\n            previewData.set(index, data);\r\n            app.setState({ previewData: previewData });\r\n        })\r\n    }\r\n\r\n    addInputElement = (e) => {\r\n        const element = this.state.inputElements;\r\n        if (element.length == 0) {\r\n            element.push(1);\r\n        } else {\r\n            element.push(element[element.length - 1] + 1);\r\n        }\r\n        this.setState({ inputElements: element });\r\n    }\r\n    removeInputElement = (removedIndex: number) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Delete image?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doRemoveInputElement(removedIndex);\r\n                }\r\n            })\r\n    }\r\n\r\n    doRemoveInputElement = (removedIndex: number) => {\r\n        const previewData = this.state.previewData;\r\n        const element = this.state.inputElements;\r\n        for (let i = 0; i < element.length; i++) {\r\n            const index = element[i];\r\n            if (index == removedIndex) {\r\n                element.splice(i, 1);\r\n                previewData.delete(removedIndex);\r\n            }\r\n        }\r\n        this.setState({ inputElements: element, previewData: previewData });\r\n    }\r\n    getEntityElement(): EntityElement {\r\n        return this.props.element;\r\n    }\r\n    componentDidMount() {\r\n        this.prepopulateForm();\r\n    }\r\n    prepopulateForm() {\r\n        if (!this.props.recordToEdit) {\r\n            return;\r\n        }\r\n        let defaultValue = this.props.recordToEdit[this.getEntityElement().id];\r\n        if (!defaultValue || new String(defaultValue).trim() == \"\") {\r\n            return;\r\n        }\r\n        const previewData: Map<number, string> = this.state.previewData;\r\n        const imageNames: string[] = new String(defaultValue).split(\"~\");\r\n        const inputElements: number[] = new Array<number>();\r\n        for (let i = 0; i < imageNames.length; i++) {\r\n            const imageName: string = imageNames[i];\r\n            previewData.set(i, imageName);\r\n            inputElements.push(i);\r\n        }\r\n        this.setState({ previewData: previewData, inputElements: inputElements });\r\n    }\r\n    render() {\r\n        const element: EntityElement = this.getEntityElement();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.inputElements.map(index => {\r\n                    const previewData: string | undefined = this.state.previewData.get(index);\r\n                    const isNull = previewData == undefined || new String(previewData).trim() == \"\";\r\n                    const isBase64 = !isNull && isBase64Image(previewData);\r\n                    return (\r\n                        <Fragment>\r\n                            {isNull ?\r\n                                <input onChange={(e) => this.setImageData(e, index)} type=\"file\" accept=\"image/*\"\r\n                                    name={element.id} className='form-control' /> : null}\r\n                            {isBase64 ?\r\n                                <div>\r\n                                    <input value={previewData} type=\"hidden\" name={element.id} />\r\n                                    <ImagePreview imageData={previewData} />\r\n                                </div>\r\n                                :\r\n                                !isNull ?\r\n                                    <div>\r\n                                        <input value={previewData} type=\"hidden\" name={element.id} className='form-control' />\r\n                                        <ImagePreview imageData={baseImageUrl + previewData} />\r\n                                        <p className=\"badge badge-warning\">{previewData}</p>\r\n                                    </div> :\r\n                                    null\r\n                            }\r\n                            <AnchorButton show={this.state.previewData != undefined}\r\n                                onClick={(e: any) => this.removeInputElement(index)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\">\r\n                                remove {index}\r\n                            </AnchorButton>\r\n                        </Fragment>)\r\n                })}\r\n                <p></p>\r\n                <AnchorButton iconClassName=\"fas fa-plus\" onClick={this.addInputElement}>Add</AnchorButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst isBase64Image = (string?: string) => {\r\n    return string && string.startsWith(\"data:image\");\r\n}\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport { FieldType } from '../../../../models/FieldType';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport FormInputImage from './FormInputImage';\r\nimport FormInputImageMultiple from './FormInputImageMultiple';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport FormGroup from './../../../form/FormGroup';\r\ninterface IState {\r\n    inputList: any[],\r\n    singlePreviewData?: string,\r\n    inputElements: number[]\r\n}\r\nclass FormInputField extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        inputList: [],\r\n        singlePreviewData: undefined,\r\n        inputElements: [1]\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    getEntityElement = (): EntityElement => {\r\n        return this.props.entityElement;\r\n    }\r\n    getRequiredAttr = () => {\r\n        const requiredAttr = { required: this.getEntityElement().required == true }\r\n        return (\r\n            // null\r\n            requiredAttr\r\n        )\r\n    }\r\n    inputListLoaded = (response: WebResponse) => {\r\n        if (!response.entities || response.entities.length == 0) {\r\n            throw new Error(\"Not found\");\r\n        }\r\n        this.setState({ inputList: response.entities });\r\n        this.prepopulateForm();\r\n    }\r\n    loadInputList = () => {\r\n        const element = this.getEntityElement();\r\n        const code = element.entityReferenceClass;\r\n        this.commonAjax(\r\n            this.masterDataService.loadAllEntities,\r\n            this.inputListLoaded,\r\n            this.showCommonErrorAlert,\r\n            code\r\n        )\r\n    }\r\n    hasInputList = () => {\r\n        if (this.getEntityElement().fieldType == FieldType.FIELD_TYPE_FIXED_LIST || this.getEntityElement().fieldType == FieldType.FIELD_TYPE_DYNAMIC_LIST) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    hasInputListAndNotReady = () => {\r\n        return this.hasInputList() && this.state.inputList.length == 0;\r\n    }\r\n    validateInputType = () => {\r\n        if (this.hasInputListAndNotReady()) {\r\n            this.loadInputList();\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateInputType();\r\n    }\r\n    componentDidMount() {\r\n        this.validateInputType();\r\n        this.prepopulateForm();\r\n    }\r\n\r\n    prepopulateForm = () => {\r\n        if (!this.props.recordToEdit || !this.ref.current) {\r\n            return;\r\n\r\n        }\r\n        const fieldName = this.getEntityElement().id;\r\n        let recordValue = this.props.recordToEdit[fieldName];\r\n        if (!recordValue) return;\r\n\r\n        const fieldType: FieldType = this.getEntityElement().fieldType;\r\n        let defaultInputValue = undefined;\r\n        switch (fieldType) {\r\n            case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n            case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                if (this.state.inputList.length == 0) {\r\n                    break;\r\n                }\r\n                const optionValueName = this.getEntityElement().optionValueName;\r\n                if (!optionValueName) break;\r\n                defaultInputValue = recordValue[optionValueName];\r\n                break;\r\n\r\n            default:\r\n                defaultInputValue = recordValue;\r\n                break;\r\n        }\r\n        if (defaultInputValue) {\r\n            this.ref.current.value = defaultInputValue;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const element = this.getEntityElement();\r\n        const requiredAttr = this.getRequiredAttr();\r\n        if (this.hasInputListAndNotReady()) {\r\n            return <div className=\"form-group\">Loading...</div>\r\n        }\r\n        if (element.idField == true) {\r\n            return (\r\n                <FormGroup orientation=\"vertical\" label={element.lableName}>\r\n                    <input {...requiredAttr} value=\"Generated\" ref={this.ref} className=\"form-control\" name={element.id} disabled />\r\n                </FormGroup>\r\n            )\r\n        }\r\n        let input = <Fragment />;\r\n        switch (element.fieldType) {\r\n            case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n            case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                const options = this.state.inputList;\r\n                input = <select ref={this.ref} className=\"form-control\" name={element.id} >\r\n                    {options.map(option => {\r\n                        const optionItemValue = element.optionValueName;\r\n                        const optionItemName = element.optionItemName;\r\n                        if (!optionItemName || !optionItemValue) { return null; }\r\n                        return (\r\n                            <option value={option[optionItemValue]} >{option[optionItemName]}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                break;\r\n            case FieldType.FIELD_TYPE_IMAGE:\r\n                input = element.multiple ?\r\n                    <FormInputImageMultiple app={this.parentApp} recordToEdit={this.props.recordToEdit} element={element} />\r\n                    :\r\n                    <FormInputImage app={this.parentApp} recordToEdit={this.props.recordToEdit} element={element} />\r\n                break;\r\n            case FieldType.FIELD_TYPE_TEXTAREA:\r\n                input = <textarea {...requiredAttr} ref={this.ref} className=\"form-control\" name={element.id} />\r\n                break;\r\n            default:\r\n                input = <input type={element.type} {...requiredAttr} ref={this.ref} className=\"form-control\" name={element.id} />\r\n\r\n        }\r\n        return (\r\n            <FormGroup orientation='vertical' label={element.lableName}>\r\n                { input}\r\n            </FormGroup>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(FormInputField))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport Modal from '../../../container/Modal';\r\nimport EntityProperty from '../../../../models/EntityProperty';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport WebResponse from '../../../../models/WebResponse'; \r\nimport { FieldType } from '../../../../models/FieldType';\r\nimport { toBase64FromFile } from '../../../../utils/ComponentUtil';\r\nimport FormInputField from './FormInputField';\r\n\r\nclass MasterDataForm extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    editMode:boolean = false;\r\n    recordToEdit?:{} = undefined;\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        if (props.recordToEdit) {\r\n            this.editMode = true;\r\n            this.recordToEdit = props.recordToEdit;\r\n        }\r\n    }\r\n    \r\n    getEntityProperty(): EntityProperty {\r\n        return this.props.entityProperty;\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.getEntityProperty().editable == false) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const form = e.target, app = this;\r\n        this.showConfirmation(\"Save data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.submit(form) }\r\n            });\r\n    }\r\n    getEntityElement(key:string) :EntityElement |undefined {\r\n        return EntityProperty.getEntityElement(this.getEntityProperty(), key);\r\n    }\r\n    submit = (form: HTMLFormElement) => {\r\n        const formData: FormData = new FormData(form);\r\n        const object: {} = {}, app = this;\r\n        const promises: Promise<any>[] = new Array();\r\n        const nulledFields:any[] = [];\r\n        formData.forEach((value, key) => {\r\n            console.debug(\"Form data \", key);\r\n            if (!object[key]) {\r\n                object[key] = new Array();\r\n            }\r\n            const element:EntityElement|undefined = this.getEntityElement(key);\r\n            if (!element) return false;\r\n            switch (element.fieldType) {\r\n                case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n                case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                    const valueAttr = element.optionValueName;\r\n                    if (valueAttr) {\r\n                        object[key].push({ [valueAttr]: value })\r\n                    }\r\n                    break;\r\n                case FieldType.FIELD_TYPE_IMAGE:\r\n                    console.debug(key, \" is image\");\r\n                    if (value == \"NULLED\") {\r\n                        console.debug(\"NULLED VALUE ADD: \", key);\r\n                        nulledFields.push(key);\r\n                   \r\n                    } else if(value.constructor.name == \"File\") {\r\n                        let promise = toBase64FromFile(value).then(data => {\r\n                            object[key].push(data);\r\n                        }).catch(console.error)\r\n                            .finally(function () { console.debug(\"finish\") });\r\n                        promises.push(promise);\r\n                    } else {\r\n                        object[key].push(value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    object[key].push(value);\r\n                    break;\r\n            }\r\n            return true;\r\n        }); \r\n        Promise.all(promises).then(function (val) {\r\n            const objectPayload = app.generateRequestPayload(object, nulledFields);\r\n            console.debug(\"Record object to save: \", objectPayload);\r\n            app.ajaxSubmit(objectPayload);\r\n        });\r\n    }\r\n\r\n    generateRequestPayload = (rawObject: {}, nulledFields:any[]): {} => { \r\n        const result:{nulledFields:Array<any>} = this.editMode && this.recordToEdit? \r\n        {...this.recordToEdit, nulledFields:nulledFields} : \r\n        {nulledFields:new Array() };\r\n        for (const key in rawObject) {\r\n            const element: any[] = rawObject[key];\r\n            console.debug(key, \" length: \", element.length);\r\n            if (element.length == 1) {\r\n                result[key] = element[0];\r\n            } else if (element.length > 1) {\r\n                result[key] = element.join(\"~\");\r\n            }\r\n        }\r\n        result.nulledFields = nulledFields;\r\n        return result;\r\n    }\r\n\r\n    ajaxSubmit = (object: any) => {\r\n        this.commonAjax(\r\n            this.masterDataService.save, this.recordSaved, this.showCommonErrorAlert,\r\n            this.getEntityProperty().entityName, object, this.editMode\r\n        )\r\n    }\r\n    recordSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Record saved\");\r\n    }\r\n    render() {\r\n        const entityProperty: EntityProperty = this.getEntityProperty();\r\n\r\n        const editModeStr = this.editMode ?  <span className=\"badge badge-warning\">Edit Mode</span>:\"\"\r\n        return ( \r\n            <div id=\"MasterDataForm\" >\r\n                <AnchorButton style={{ marginBottom: '5px' }} onClick={this.props.onClose} iconClassName=\"fas fa-angle-left\">Back</AnchorButton>\r\n                <form onSubmit={this.onSubmit} id=\"record-form\">\r\n                <Modal title={<span>{entityProperty.alias} Record Form {editModeStr}</span>} footerContent={<SubmitReset />}>\r\n                        <InputFields recordToEdit={this.recordToEdit} app={this.parentApp} entityProperty={entityProperty} />\r\n                    </Modal>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SubmitReset = (props) => {\r\n    return (\r\n        <div className=\"btn-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            <input type=\"reset\" className=\"btn btn-warning\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputFields = (props: { app: any, entityProperty: EntityProperty, recordToEdit:{}|undefined }) => {\r\n    const elements: EntityElement[] = props.entityProperty.elements;\r\n    const groupedElements: Array<Array<EntityElement>> = new Array();\r\n    let counter: number = 0;\r\n    groupedElements.push(new Array());\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        if (i > 0 && i % 5 == 0) {\r\n            counter++;\r\n            groupedElements.push(new Array());\r\n        }\r\n        groupedElements[counter].push(element);\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            {groupedElements.map(elements => {\r\n                return (\r\n                    <div className=\"col-lg-6\">\r\n                        {elements.map(element => {\r\n                            return <FormInputField recordToEdit={props.recordToEdit} app={props.app} entityElement={element} />\r\n                        })}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(connect(mapCommonUserStateToProps)(MasterDataForm))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport AnchorButton from './../../navigation/AnchorButton';\r\nimport EntityProperty from '../../../models/EntityProperty';\r\nimport WebResponse from './../../../models/WebResponse';\r\n\r\nclass EditDeleteAction extends BaseComponent {\r\n    masterDataService:MasterDataService = MasterDataService.getInstance();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n    }\r\n    delete = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(function(ok){\r\n            if (ok) {\r\n                app.doDelete();\r\n            }\r\n        });\r\n    }\r\n    doDelete = () => {\r\n        const record = this.props.record;\r\n        const entityProperty:EntityProperty = this.props.entityProperty;\r\n        const recordId = EntityProperty.getRecordId(record, entityProperty);\r\n        this.commonAjax(\r\n            this.masterDataService.delete,\r\n            this.recordDeleted,\r\n            this.showCommonErrorAlert,\r\n            entityProperty.entityName, recordId\r\n        )\r\n    }\r\n    getRecordById = () => {\r\n        const record = this.props.record;\r\n        const entityProperty:EntityProperty = this.props.entityProperty;\r\n        const recordId = EntityProperty.getRecordId(record, entityProperty);\r\n        this.commonAjax(\r\n            this.masterDataService.getById,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            entityProperty.entityName,\r\n            recordId\r\n        );\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (!response.entities || response.entities.length == 0){\r\n            throw new Error(\"Record not found\");\r\n        }\r\n        if(this.props.showEditForm) {\r\n            this.props.showEditForm(response);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record deleted\");\r\n        this.props.reload();\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton onClick={this.getRecordById} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"></AnchorButton>\r\n                <AnchorButton onClick={this.delete} className=\"btn btn-danger btn-sm\" iconClassName=\"fas fa-times\"></AnchorButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditDeleteAction))","\r\nimport React, { Component, Fragment } from 'react';\r\nimport HeaderProps from './../../../models/HeaderProps';\r\nexport default class DataTableHeader extends Component<any, any>\r\n{\r\n    render(){\r\n        const props = this.props;\r\n        const headerProps: HeaderProps[] = props.headerProps;\r\n        return (<thead>\r\n            <tr>\r\n                <th>No</th>\r\n                {headerProps.map(headerProp => {\r\n                    const isDate = headerProp.isDate;\r\n                    return (\r\n                        <th >\r\n                            <p>{headerProp.label}</p>\r\n                            <div>\r\n                                {isDate ?\r\n                                    <Fragment>\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-day\"}\r\n                                            className=\"input-filter\" placeholder={\"day\"} />\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-month\"}\r\n                                            className=\"input-filter\" placeholder={\"month\"} />\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-year\"}\r\n                                            className=\"input-filter\" placeholder={\"year\"} />\r\n                                    </Fragment>\r\n                                    :\r\n                                    <input onChange={props.filterOnChange} placeholder={headerProp.label}\r\n                                        className=\"input-filter\" name={headerProp.value} />\r\n                                }</div>\r\n                            <div className=\"btn-group\">\r\n                                <button data-orderType=\"asc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"btn btn-outline-secondary btn-sm\">\r\n                                    <i data-orderType=\"asc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"fas fa-angle-up\" /></button>\r\n                                <button data-orderType=\"desc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"btn btn-outline-secondary btn-sm\">\r\n                                    <i data-orderType=\"desc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"fas fa-angle-down\" /></button>\r\n                            </div>\r\n                        </th>\r\n                    )\r\n                })}\r\n                <th>Action</th>\r\n            </tr>\r\n        </thead>)\r\n    }\r\n}","\r\n\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Modal from '../../container/Modal';\r\nimport Filter from './../../../models/Filter';\r\nimport EntityProperty from './../../../models/EntityProperty';\r\nimport WebRequest from './../../../models/WebRequest';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport HeaderProps from './../../../models/HeaderProps';\r\nimport './DataTable.css'\r\nimport EntityValues from './../../../utils/EntityValues';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport MasterDataForm from './form/MasterDataForm';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport EditDeleteAction from './EditDeleteAction';\r\nimport DataTableHeader from './DataTableHeader';\r\nimport SimpleError from './../../alert/SimpleError';\r\nimport Spinner from './../../loader/Spinner';\r\ninterface IState { recordData?: WebResponse, showForm: boolean, filter: Filter, loading: boolean }\r\nclass MasterDataList extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        showForm: false, loading: false,\r\n        filter: { limit: 5, page: 0, fieldsFilter: {} }\r\n    }\r\n    recordToEdit?: {} = undefined;\r\n    entityProperty: EntityProperty;\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.entityProperty = this.props.entityProperty;\r\n    }\r\n    /**\r\n     * remove fieldsfilter empty values\";\r\n     */\r\n    adjustFilter = (filter: Filter): Filter => {\r\n        const fieldsFilter = filter.fieldsFilter;\r\n        for (const key in fieldsFilter) {\r\n            const element = fieldsFilter[key];\r\n            if (element == undefined || element == null || new String(element).length == 0) {\r\n                if (filter.fieldsFilter != undefined) {\r\n                    delete filter.fieldsFilter[key];\r\n                }\r\n            }\r\n        }\r\n        return filter;\r\n    }\r\n    loadEntities = (page: number | undefined) => {\r\n        const filter = this.state.filter;\r\n        const entityName = this.entityProperty.entityName;\r\n        filter.page = page ?? filter.page;\r\n        const request: WebRequest = {\r\n            entity: entityName,\r\n            filter: this.adjustFilter(filter)\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.loadEntities,\r\n            this.entitiesLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        );\r\n\r\n    }\r\n    entitiesLoaded = (response: WebResponse) => {\r\n        this.setState({ recordData: response, filter: response.filter });\r\n    }\r\n    checkDefaultData = () => {\r\n        if (this.state.loading) {\r\n            return;\r\n        }\r\n        if (this.entityProperty.entityName == this.props.entityProperty.entityName && this.state.recordData != undefined) {\r\n            return;\r\n        }\r\n        this.entityProperty = this.props.entityProperty;\r\n        this.loadEntities(0);\r\n    }\r\n    startLoading() { this.setState({ loading: true }) }\r\n    endLoading() { this.setState({ loading: false }) }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.checkDefaultData();\r\n    }\r\n    componentDidMount() {\r\n        this.checkDefaultData();\r\n    }\r\n    getRecordNumber = (i: number): number => {\r\n        let res = (this.state.filter.page ?? 0) * (this.state.filter.limit ?? 5) + i + 1;\r\n        return res;\r\n    }\r\n    filterFormSubmit = (e) => {\r\n        let page = this.state.filter.useExistingFilterPage ? this.state.filter.page : 0;\r\n        this.loadEntities(page);\r\n    }\r\n    filterOnChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter == undefined) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[name] = value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    filterReset = (e) => {\r\n        const filter = this.state.filter;\r\n        filter.fieldsFilter = {};\r\n        filter.limit = 5;\r\n        this.setState({ filter: filter });\r\n    }\r\n    orderButtonOnClick = (e) => {\r\n        const dataset: DOMStringMap = e.target.dataset;\r\n        const filter = this.state.filter;\r\n        filter.orderBy = dataset['orderby'];\r\n        filter.orderType = dataset['ordertype'];\r\n        this.setState({ filter: filter });\r\n        this.loadEntities(0);\r\n    }\r\n    showEditForm = (response: WebResponse) => {\r\n        if (!response.entities) {\r\n            return;\r\n        }\r\n        this.recordToEdit = response.entities[0];\r\n        this.setState({ showForm: true });\r\n    }\r\n    showCreateForm = (e) => {\r\n        this.recordToEdit = undefined;\r\n        this.setState({ showForm: true });\r\n    }\r\n    updateFilterPage = (page: any) => {\r\n        const filter = this.state.filter;\r\n        filter.useExistingFilterPage = true;\r\n        filter.page = parseInt(page) - 1;\r\n        this.setState({ filter: filter });\r\n    }\r\n    updateFilterLimit = (limit: any) => {\r\n        const filter = this.state.filter;\r\n        filter.limit = parseInt(limit);\r\n        this.setState({ filter: filter });\r\n    }\r\n    render() {\r\n        if (undefined == this.state.recordData) {\r\n            return <h2>Please Wait..</h2>\r\n        }\r\n        const headerProps: HeaderProps[] = EntityProperty.getHeaderLabels(this.props.entityProperty);\r\n        const resultList: any[] = this.state.recordData.entities ? this.state.recordData.entities : [];\r\n        if (headerProps == undefined || resultList == undefined) {\r\n            return <SimpleError />\r\n        }\r\n\r\n        if (this.state.showForm == true) {\r\n            return <MasterDataForm recordToEdit={this.recordToEdit} entityProperty={this.entityProperty} onClose={(e) => { this.setState({ showForm: false }) }} app={this.parentApp} />\r\n        }\r\n\r\n        return (\r\n            <div id=\"MasterDataList\">\r\n                <AnchorButton show={this.entityProperty.editable == true} style={{ marginBottom: '5px' }} onClick={this.showCreateForm} iconClassName=\"fas fa-plus\">Add Record</AnchorButton>\r\n                <form id=\"filter-form\" onSubmit={(e) => { e.preventDefault() }}>\r\n                    <Modal title=\"Filter\" toggleable={true}>\r\n                        <div>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-6\">\r\n                                    <input value={(this.state.filter.page ?? 0) + 1} onChange={(e) => { this.updateFilterPage(e.target.value) }} min=\"1\" className=\"form-control\" type=\"number\" placeholder=\"go to page\" />\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <input value={this.state.filter.limit} onChange={(e) => this.updateFilterLimit(e.target.value)} min=\"1\" className=\"form-control\" type=\"number\" placeholder=\"record per page\" />\r\n                                </div>\r\n                            </div>\r\n                            <SubmitResetButton onSubmit={this.filterFormSubmit} onReset={this.filterReset} />\r\n                        </div>\r\n                    </Modal>\r\n                    <NavigationButtons limit={this.state.filter.limit ?? 5} totalData={this.state.recordData.totalData ?? 0}\r\n                        activePage={this.state.filter.page ?? 0} onClick={this.loadEntities} />\r\n                    <Modal title=\"Data List\" >\r\n                        {this.state.loading ?\r\n                            <Loading loading={this.state.loading} /> : null}\r\n                        <div className=\"container-fluid\" style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\" >\r\n                                <DataTableHeader orderButtonOnClick={this.orderButtonOnClick} filterOnChange={this.filterOnChange} headerProps={headerProps} />\r\n                                <tbody>\r\n                                    {\r\n                                        resultList.map((result, i) => {\r\n                                            const number = this.getRecordNumber(i);\r\n                                            const values: Array<any> = EntityValues.parseValues(result, this.props.entityProperty);\r\n                                            return (<tr>\r\n                                                <td>{number}</td>\r\n                                                {values.map(value => {\r\n                                                    try {\r\n                                                        return (<td>{value}</td>)\r\n                                                    } catch (error) {\r\n                                                        return (<td>-</td>)\r\n                                                    }\r\n                                                })}\r\n                                                <td><EditDeleteAction show={this.entityProperty.editable == true} showEditForm={this.showEditForm} record={result} entityProperty={this.entityProperty} reload={() => this.loadEntities(undefined)} app={this.parentApp} /></td>\r\n                                            </tr>)\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </Modal>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst Loading = ({loading}) => {\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', paddingTop: '2rem', backgroundColor: 'rgb(240,240,240,0.5)', marginLeft: '-1rem', marginTop: '-1rem', position: 'absolute' }}>\r\n            <Spinner show={loading} />\r\n        </div>\r\n    )\r\n}\r\nconst SubmitResetButton = (props: any) => {\r\n    return (<div className=\"btn-group\">\r\n        <button onClick={props.onSubmit} className=\"btn btn-secondary btn-sm\"><span className=\"icon\"><i className=\"fas fa-play\" /></span>Apply Filter</button>\r\n        <button onClick={props.onReset} type=\"reset\" className=\"btn btn-warning btn-sm\"><span className=\"icon\"><i className=\"fas fa-sync-alt\" /></span>Reset</button>\r\n    </div>)\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(MasterDataList))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport EntityProperty from '../../../models/EntityProperty';\r\nimport MasterDataList from './MasterDataList';\r\ninterface IState {\r\n    entityProperty?: EntityProperty\r\n}\r\nclass MasterDataManagement extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    code: string = \"\";\r\n    loadingEntityProperty: boolean = false;\r\n    entityProperty: undefined\r\n    constructor(props: any) {\r\n        super(props, true);\r\n\r\n    }\r\n    entityPropertyLoaded = (response: WebResponse) => {\r\n        this.loadingEntityProperty = false;\r\n        if (response.entityProperty == undefined) {\r\n            return;\r\n        }\r\n        this.masterDataService.setEntityProperty(this.props.code, response.entityProperty);\r\n        this.setState({ entityProperty: response.entityProperty });\r\n        this.setTitle(response.entityProperty);\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.code != undefined && this.code != this.props.code) {\r\n            this.code = this.props.code;\r\n            this.loadEntityProperty();\r\n        }\r\n        console.debug(\"updated this.props.code: \", this.props.code);\r\n    }\r\n    setTitle = (entityProp: EntityProperty) => {\r\n        document.title = new String(entityProp?.alias).toString();\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.code != undefined && this.code != this.props.code) {\r\n            this.code = this.props.code;\r\n            this.loadEntityProperty();\r\n        }\r\n    }\r\n    startLoading() {\r\n        //\r\n    }\r\n    endLoading() {\r\n        //\r\n    }\r\n    loadEntityProperty() {\r\n\r\n        if (undefined == this.code && this.loadingEntityProperty == true) {\r\n            return;\r\n        }\r\n        const existingEntityProperty = this.masterDataService.getEntityProperty(this.code);\r\n        if (existingEntityProperty != undefined) {\r\n            this.loadingEntityProperty = false;\r\n            this.setState({ entityProperty: existingEntityProperty });\r\n            this.setTitle(existingEntityProperty);\r\n\r\n            return;\r\n        }\r\n        this.loadingEntityProperty = true;\r\n        this.setState({ entityProperty: undefined });\r\n        this.commonAjax(\r\n            this.masterDataService.loadEntityProperty,\r\n            this.entityPropertyLoaded,\r\n            (e: any) => { this.loadingEntityProperty = false; this.showCommonErrorAlert(e) },\r\n            this.code\r\n        )\r\n\r\n    }\r\n    render() {\r\n        if (this.state.entityProperty == undefined) {\r\n            return <div className=\"row\">\r\n                <div className=\"col-1\"><div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-10\"><h4>Loading configuration</h4></div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div id=\"MasterDataManagement\" className=\"container-fluid\">\r\n                <h2>{this.state.entityProperty.alias}</h2>\r\n                <MasterDataList app={this.parentApp} entityProperty={this.state.entityProperty} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MasterDataManagement))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport Menu from './../../../models/Menu';\r\nimport ManagementProperty from '../../../models/ManagementProperty';\r\nimport MasterDataManagement from './MasterDataManagement';\r\n\r\ninterface IState {\r\n    code?: string\r\n    // managementProperties:ManagementProperty[]\r\n}\r\nclass MasterDataMain extends BaseMainMenus {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        code: undefined\r\n    };\r\n    constructor(props: any) {\r\n        super(props, \"Master Data\", true);\r\n    }\r\n\r\n    managementPropertiesLoaded = (response: WebResponse) => {\r\n        this.masterDataService.managementProperties = response.generalList ? response.generalList : [];\r\n        this.setSidebarMenus();\r\n        this.refresh();\r\n    }\r\n    setSidebarMenus = () => {\r\n        const sidebarMenus: Menu[] = [];\r\n        const managementProperties: ManagementProperty[] = this.masterDataService.managementProperties;\r\n        for (let i = 0; i < managementProperties.length; i++) {\r\n            const element = managementProperties[i];\r\n            sidebarMenus.push({\r\n                name: element.label,\r\n                url: element.entityName,\r\n                code: element.entityName,\r\n                menuClass: element.iconClassName\r\n            });\r\n        }\r\n        if (this.props.setSidebarMenus) {\r\n            this.props.setSidebarMenus(sidebarMenus);\r\n        }\r\n    }\r\n    loadManagamenetPages = () => {\r\n        if (this.masterDataService.managementProperties.length > 0) {\r\n            this.setSidebarMenus();\r\n            this.refresh();\r\n            return;\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.loadManagementProperties,\r\n            this.managementPropertiesLoaded,\r\n            this.showCommonErrorAlert\r\n        );\r\n    }\r\n    getCode = (): string => {\r\n        return this.props.match.params.code;\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.loadManagamenetPages();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setSidebarMenus();\r\n        // console.debug(\"this.getCode(): \", this.getCode());\r\n        if (this.state.code != this.getCode()) {\r\n            this.setState({ code: this.getCode() });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.getCode() != undefined && this.getCode() != null && this.getCode() != \"\") {\r\n            return <MasterDataManagement app={this.parentApp} code={this.getCode()} />\r\n        }\r\n        if (this.masterDataService.managementProperties.length == 0) {\r\n            return <div className=\"container-fluid\"><h3>Loading</h3></div>\r\n        }\r\n        const properties: ManagementProperty[] = this.masterDataService.managementProperties;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Master Data Page</h2>\r\n                <div className=\"row\">\r\n                    {properties.map(property => {\r\n\r\n                        return (\r\n                            <div className=\"col-md-2 text-center\" style={{ marginBottom: '10px' }}>\r\n                                <h2 ><Link className=\"btn btn-warning btn-lg\" to={\"/management/\" + property.entityName} ><i className={property.iconClassName} /></Link></h2>\r\n                                <p>{property.label}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(MasterDataMain))","\r\n\r\nimport React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass TransactionMain extends BaseMainMenus {\r\n    constructor(props: any) {\r\n        super(props, \"Transaction\", true);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"TransactionMain\" className=\"container-fluid\">\r\n                <h2>Transaction Page</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 text-center\">\r\n                        <h1> <Link className=\"btn btn-info btn-lg\" to=\"/transaction/selling\"><i className=\"fas fa-cash-register\" /></Link></h1>\r\n                        <p>Selling</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 text-center\">\r\n                        <h1><Link className=\"btn btn-info btn-lg\" to=\"/transaction/purchasing\"><i className=\"fas fa-shopping-basket\" /></Link></h1>\r\n                        <p>Purchasing</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionMain))","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default class AnchorWithIcon extends Component<any, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={{marginRight:'5px'}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </Link>\r\n        )\r\n    }\r\n}","import * as url from '../constant/Url'\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport WebRequest from './../models/WebRequest';\r\nimport Filter from './../models/Filter';\r\nexport default class CatalogService {\r\n    private static instance?:CatalogService;\r\n    totalProduct:number = 0;\r\n\r\n    static getInstance(): CatalogService {\r\n        if (this.instance == null) {\r\n            this.instance = new CatalogService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    setTotalProduct = (value:number) => {\r\n        this.totalProduct = value;\r\n    }\r\n    getTotalProduct = () => {\r\n        const endpoint = url.contextPath().concat(\"api/public/totalproduct\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    /**\r\n     * \r\n     * @param {JSON} raw \r\n     */\r\n    getProductList = (raw:Filter) => {\r\n         \r\n        const fieldsFilter = {\r\n            // withStock: raw.withStock == true,\r\n            // withSupplier: raw.withSupplier == true,\r\n            // withCategories: raw.withCategories == true,\r\n            ... raw.fieldsFilter\r\n        }\r\n        \r\n        const request:WebRequest = {\r\n            entity: \"product\",\r\n            filter: {\r\n                exacts: raw.exacts == true,\r\n                limit: raw.limit ? raw.limit : 10,\r\n                page: raw.page ? raw.page : 0,\r\n                fieldsFilter: fieldsFilter,\r\n                orderBy: raw.orderBy,\r\n                orderType: raw.orderType\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n      \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} code \r\n     */\r\n    getProductDetail = (code:string) => this.getProductList({\r\n        limit: 1,\r\n        exacts: true,\r\n        fieldsFilter: {\r\n            'code' : code,\r\n            'withStock': true,\r\n            'withSupplier': true,\r\n        }\r\n    })\r\n\r\n  /**\r\n   * \r\n   * @param req \r\n   */\r\n    getMoreSupplier = (req:any) => { \r\n\r\n        const request:WebRequest = {\r\n            filter: {\r\n                page: req.page,\r\n                fieldsFilter: { productId: req.productId }\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/moresupplier\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n\r\n}","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Menu from './../../../models/Menu';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport Card from './../../container/Card';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport CatalogService from './../../../services/CatalogService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\ninterface IState { totalProduct: number }\r\nclass CatalogMain extends BaseMainMenus {\r\n    catalogService: CatalogService = CatalogService.getInstance();\r\n    state: IState = { totalProduct: 0 }\r\n    constructor(props: any) {\r\n        super(props, \"Catalog\");\r\n    }\r\n    totalProductLoaded = (response: WebResponse) => {\r\n        this.catalogService.setTotalProduct(response.totalData ?? 0);\r\n        this.setState({ totalProduct: response.totalData });\r\n    }\r\n    totalProductNotLoaded = (e: any) => {\r\n        console.error(e);\r\n    }\r\n    loadTotalProduct = () => {\r\n        this.commonAjax(\r\n            this.catalogService.getTotalProduct,\r\n            this.totalProductLoaded,\r\n            this.totalProductNotLoaded\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        if (this.catalogService.totalProduct <= 0) {\r\n            this.loadTotalProduct();\r\n        } else {\r\n            this.setState({ totalProduct: this.catalogService.totalProduct });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"CatalogMain\" className=\"container-fluid\">\r\n                <h2>Shop Catalog</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <Card title=\"Product Catalog\" className=\"bg-light\">\r\n                            <h4>Total Product: {this.state.totalProduct}</h4>\r\n                            <div className=\"btn-group\">\r\n                                <AnchorWithIcon className=\"btn btn-info\" to=\"/catalog/product\">View Catalog</AnchorWithIcon>\r\n                                <AnchorButton iconClassName=\"fas fa-sync-alt\" onClick={this.loadTotalProduct} />\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <Card title=\"Supplier Catalog\" className=\"bg-light\">\r\n                            <h4>Supplier catalog</h4>\r\n                            <AnchorWithIcon className=\"btn btn-info\" to=\"/catalog/supplier\">View Catalog</AnchorWithIcon>\r\n\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(CatalogMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'opx',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.shortDescription}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcomingMessage}</p>\r\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(HomeMain))","\nexport default class BaseEntity{\n\tid?:number;\n\tcreatedDate?:Date;\n\tmodifiedDate?:Date;\n\tdeletedDate?:Date;\n\tdeleted?:boolean;\n\n}\n","import BaseEntity from './BaseEntity';\nimport Unit from './Unit';\nimport Category from './Category';\nimport Supplier from './Supplier';\n\nexport default class Product extends BaseEntity{\n\tcode?:string;\n\tname?:string;\n\tdescription?:string;\n\tprice?:number;\n\ttype?:string;\n\timageUrl?:string;\n\tunit?:Unit;\n\tcategory?:Category;\n\tnewProduct?:boolean;\n\tcount?:number;\n\tsuppliers?:Supplier[];\n\n\tstatic getDefaultPicture(product:Product, baseImageUrl?:string) :string{\n\n\t\tif (product.imageUrl && product.imageUrl?.length >0) {\n\t\t\treturn (baseImageUrl?baseImageUrl:\"\") + product.imageUrl.split(\"~\")[0];\n\t\t}\n\t\treturn (baseImageUrl?baseImageUrl:\"\") + \"Default.bmp\";\n\t}\n\tstatic getPictureNames(product:Product, baseImageUrl?:string): string[] {\n\t\tif (product.imageUrl && product.imageUrl?.length >0) {\n\t\t\tlet names:string[] = product.imageUrl.split(\"~\");\n\t\t\tif (baseImageUrl) {\n\t\t\t\treturn names.map(name=>{\n\t\t\t\t\treturn baseImageUrl+name;\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn names;\n\t\t}\n\t\treturn [Product.getDefaultPicture(product, baseImageUrl)]\n\t}\n\n\tstatic countSummary(products:Product[]) : number\n\t{\n\t\tlet count = 0;\n\t\tfor (let i = 0; i < products.length; i++) {\n\t\t\tconst element = products[i];\n\t\t\tcount += element.count??0;\n\t\t}\n\t\treturn count;\n\t}\n\n}\n","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport Product from './../../../models/Product';\r\n\r\nclass CartMain extends BaseMainMenus\r\n{\r\n    constructor(props:any){\r\n        super(props, \"Shopping Cart\");\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"CartMain\" className=\"container-fluid\">\r\n                <h2>Shopping Cart</h2>\r\n                <div className=\"alert alert-info\">\r\n                   <p>Plan your shopping list</p>\r\n                   <p>Current items: <strong>{Product.countSummary(this.props.cart)}</strong></p>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(CartMain))","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { emptyPromise, commonAjaxPostCalls } from './Promises'; \r\nimport Transaction from './../models/Transaction';\r\nimport WebRequest from './../models/WebRequest';\r\nimport WebResponse from './../models/WebResponse';\r\nconst axios = require('axios');\r\nexport default class BaseTransactionService {\r\n\r\n    getProductList = (raw) => {\r\n        if( raw.value == null || raw.value.toString().trim() == \"\"){\r\n            return emptyPromise({entities:[]});\r\n        }\r\n        const fieldsFilter = {};\r\n        fieldsFilter[raw.key] = raw.value;\r\n        const request = {\r\n            entity: \"product\", \r\n            filter: { \r\n                page: 0, \r\n                exacts: (raw.exacts == true), \r\n                limit: 15, \r\n                fieldsFilter: fieldsFilter \r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/entity/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    submitTransactionSelling = (transaction:Transaction) => this.submitTransaction({...transaction, type:'SELLING' })\r\n    submitTransactionPurchasing = (transaction:Transaction) => this.submitTransaction({...transaction, type:'PURCHASING' })\r\n\r\n    submitTransaction = (raw:Transaction) => {\r\n        console.debug(\"submitTransaction \", raw.type);\r\n        const type = raw.type;\r\n        const request:WebRequest = {\r\n            productFlows: raw.productFlows\r\n        }\r\n        return new Promise<WebResponse>(function (resolve, reject) {\r\n            let endpoint:string = \"\";\r\n            switch (type) {\r\n                case \"SELLING\":\r\n                    if(null == raw.customer){\r\n                        reject(\"Invalid Customer\");\r\n                        break;\r\n                    }\r\n                    request.customer = raw.customer;\r\n                    endpoint = url.contextPath().concat(\"api/app/transaction/selling\")\r\n                    break;\r\n                case \"PURCHASING\": \r\n                default:\r\n                    if(null == raw.supplier){\r\n                        reject(\"Invalid Supplier\");\r\n                        break;\r\n                    }\r\n                    request.supplier = raw.supplier;\r\n                    endpoint = url.contextPath().concat(\"api/app/transaction/purchasing\")\r\n                    break;\r\n            } \r\n            axios.post(endpoint, request,{\r\n                headers: commonAuthorizedHeader(),\r\n            })\r\n                .then(response => response.data).then(function (response:WebResponse) {\r\n                    if (response.code == \"00\") \r\n                    { resolve(response) } \r\n                    else \r\n                    { reject(response) }\r\n                }).\r\n                catch((e:any) =>{ console.error(e); reject(e)});\r\n        })\r\n    }\r\n\r\n    getStockInfo = (productCode:string) => {\r\n        const request:WebRequest = {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                fieldsFilter: { \"code\": productCode, withStock: true }\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport BaseTransactionService from './BaseTransactionService';\r\nimport Supplier from './../models/Supplier';\r\nimport ProductFlow from './../models/ProductFlow';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class TransactionPurchasingService extends BaseTransactionService {\r\n    private static instance?:TransactionPurchasingService;\r\n\r\n    static getInstance(): TransactionPurchasingService {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionPurchasingService();\r\n        }\r\n        return this.instance;\r\n    } \r\n\r\n    // submit = (productFlows:ProductFlow[], supplier: Supplier) => {\r\n    //     const request:WebRequest = {\r\n    //         supplier:supplier,\r\n    //         productFlows:productFlows\r\n    //     };\r\n    //     const endpoint = contextPath()+\"api/app/transaction/purchasing\";\r\n    //     return commonAjaxPostCalls(endpoint, request);\r\n    // }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport TransactionPurchasingService from './../../../../services/TransactionPurchasingService';\r\nimport Supplier from './../../../../models/Supplier';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from './../../../../services/MasterDataService';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\r\nimport Spinner from './../../../loader/Spinner';\r\ninterface IState {\r\n    supplier?: Supplier;\r\n    supplierNotFound: boolean;\r\n    loading: boolean;    \r\n}\r\nclass SupplierForm extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        supplierNotFound: false, loading: false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchSupplier = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('id');\r\n        if (!id) return;\r\n        this.loadSupplier(parseInt(id.toString()));\r\n    }\r\n    supplierLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Supplier not found\");\r\n        }\r\n        this.props.setSupplier(response.entities[0]);\r\n        this.setState({ supplier: response.entities[0], supplierNotFound: false });\r\n    }\r\n    supplierNotFound = (e: any) => {\r\n        this.setState({ supplierNotFound: true });\r\n    }\r\n    loadSupplier = (id: number) => {\r\n        this.commonAjax(this.masterDataService.getById,\r\n            this.supplierLoaded, this.supplierNotFound, 'supplier', id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchSupplier} >\r\n                <Modal toggleable={true} title=\"Supplier form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/supplier\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Supplier code\" required type=\"number\" className=\"form-control\" name=\"id\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <SupplierDetail loading={this.state.loading} supplier={this.state.supplier} notFound={this.state.supplierNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst SupplierDetail = (props: {loading:boolean, supplier?: Supplier, notFound: boolean }) => {\r\n    const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Supplier not found</div></div>\r\n    }\r\n    if (!props.supplier) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select supplier</div></div>\r\n    }\r\n    const supplier: Supplier = props.supplier;\r\n    return (\r\n        <div style={style}>\r\n            <h2>{supplier.name}</h2>\r\n            <address>\r\n                {supplier.address}<br />\r\n                <abbr title=\"Contact\">Contact: </abbr>{supplier.contact}\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SupplierForm))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport TransactionPurchasingService from '../../../services/TransactionPurchasingService';\r\nimport Product from '../../../models/Product';\r\nimport ProductFlow from '../../../models/ProductFlow';\r\nimport Modal from '../../container/Modal';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport Spinner from '../../loader/Spinner';\r\ninterface IState {\r\n    product?: Product;\r\n    productFlows: ProductFlow[];\r\n    selectedProductFlow?: ProductFlow;\r\n    productNotFound: boolean;\r\n    loading:boolean;\r\n}\r\nexport default class ProductForm extends BaseComponent {\r\n\r\n    transactionService = TransactionPurchasingService.getInstance();\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        productFlows: [],\r\n        productNotFound: false,\r\n        loading:false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { ...this.state };\r\n\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchProduct = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('code');\r\n        if (!id) return;\r\n        this.loadProduct((id.toString()));\r\n    }\r\n    productLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Product not found\");\r\n        }\r\n        this.props.setProduct(response.entities[0]);\r\n        this.setState({ product: response.entities[0], productNotFound: false });\r\n    }\r\n    setProduct = (product: Product) => {\r\n        this.setState({ product: product, productNotFound: false });\r\n    }\r\n    productNotFound = (e: any) => {\r\n        this.setState({ productNotFound: true });\r\n    }\r\n    loadProduct = (code: string) => {\r\n        // this.commonAjax(this.masterDataService.getBy,\r\n        //     this.productLoaded, this.productNotFound, 'product', { code: code });\r\n\r\n        this.commonAjaxWithProgress(this.transactionService.getStockInfo,\r\n            this.productLoaded, this.productNotFound, code);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchProduct} >\r\n               \r\n                <Modal toggleable={true}  title=\"Product form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/product\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Product code\" required type=\"text\" className=\"form-control\" name=\"code\" />\r\n                        </FormGroup>\r\n                    </div> \r\n                    \r\n                    <ProductDetail loading={this.state.loading} product={this.state.product} notFound={this.state.productNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst ProductDetail = (props: { loading:boolean, product?: Product, notFound: boolean }) => {\r\n   const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Product not found</div></div>\r\n    }\r\n    if (!props.product) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select product</div></div>\r\n    }\r\n    const product: Product = props.product;\r\n    return (\r\n        <div style={style}>\r\n            <h4>{product.name}</h4>\r\n            <table className=\"table\">\r\n                <thead><tr>\r\n                    <th>Unit</th>\r\n                    <th>Category</th>\r\n                    <th>Price@Unit</th>\r\n                    <th>Current Amount</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{product.unit ? product.unit.name : '-'}</td>\r\n                        <td>{product.category ? product.category.name : '-'}</td>\r\n                        <td style={{ fontFamily: 'monospace' }}>{product.price}</td>\r\n                        <td>{product.count}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n","import BaseEntity from './BaseEntity';\nimport Customer from './Customer';\nimport ProductFlow from './ProductFlow';\nimport Supplier from './Supplier';\nimport User from './User';\n\nexport default class Transaction extends BaseEntity{\n\tcustomer?:Customer;\n\tsupplier?:Supplier;\n\tcode?:string;\n\ttype?:string;\n\tmode?:string;\n\ttransactionDate?:Date;\n\tuser?:User;\n\tproductFlows?:ProductFlow[];\n\tproductFlow?:any;\n\n}\n","import BaseEntity from './BaseEntity';\nimport Transaction from './Transaction';\nimport Product from './Product';\nimport ProductFlowStock from './ProductFlowStock';\n\nexport default class ProductFlow extends BaseEntity{\n\n\ttransaction?:Transaction;\n\texpiryDate?:Date;\n\tprice?:number;\n\tcount?:number;\n\tflowReferenceId?:number;\n\tproduct?:Product;\n\ttransactionId?:number;\n\tproductFlowStock?:ProductFlowStock;\n\ttotalPrice?:number; \n\tstatic create(product:Product) :Product{\n\t\tconst obj = new ProductFlow();\n\t\tobj.product = product;\n\t\treturn obj;\n\n\t}\n}\n","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport ProductFlow from './../../../models/ProductFlow';\r\nimport Supplier from './../../../models/Supplier';\r\nimport Product from '../../../models/Product';\r\nimport React from 'react';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Customer from './../../../models/Customer';\r\ninterface IState {\r\n    supplier?: Supplier;\r\n    productFlows: ProductFlow[];\r\n    selectedProductFlow?: ProductFlow;\r\n    customer?:Customer\r\n}\r\nexport default class BaseTransactionComponent extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        productFlows: []\r\n    }\r\n    productFormRef: React.RefObject<any> = React.createRef();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    setProduct = (product: Product) => {\r\n        const productFlow = ProductFlow.create(product);\r\n        this.setState({ selectedProductFlow: productFlow });\r\n    }\r\n    addToCart = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.selectedProductFlow) {\r\n            this.showError(\"Please select product!\");\r\n            return;\r\n        }\r\n        const productFlow: ProductFlow = Object.assign(new ProductFlow(), this.state.selectedProductFlow);\r\n        const existInCart: boolean = this.existInCart(productFlow);\r\n\r\n        if (existInCart) {\r\n            const app = this;\r\n            this.showConfirmation(\"Override \" + productFlow.product?.name + \" data?\")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.addProductFlowState(productFlow);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            this.addProductFlowState(productFlow);\r\n        }\r\n        e.target.reset();\r\n\r\n    }\r\n    addProductFlowState = (productFlow: ProductFlow) => {\r\n        const productFlows: ProductFlow[] = this.state.productFlows;\r\n        const existInCart: boolean = this.existInCart(productFlow);\r\n        if (existInCart) {\r\n            for (let i = 0; i < productFlows.length; i++) {\r\n                const element = productFlows[i];\r\n                if (element.product?.code == productFlow.product?.code) {\r\n                    productFlows[i] = productFlow;\r\n                }\r\n            }\r\n        } else {\r\n            productFlows.push(productFlow);\r\n        }\r\n\r\n        this.setState({ productFlows: productFlows });\r\n        this.clearSelectedProductFlow();\r\n    }\r\n\r\n    existInCart = (productFlow: ProductFlow) => {\r\n        for (let i = 0; i < this.state.productFlows.length; i++) {\r\n            const element = this.state.productFlows[i];\r\n            if (element.product?.code == productFlow.product?.code) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearSelectedProductFlow = () => {\r\n        if (!this.state.selectedProductFlow) {\r\n            return;\r\n        }\r\n        this.setState({ selectedProductFlow: undefined });\r\n        if (this.productFormRef.current)\r\n            this.productFormRef.current.setProduct(undefined);\r\n    }\r\n    editProduct = (code:any) => {\r\n        const productFlows =  this.state.productFlows;\r\n        const app= this;\r\n        \r\n        this.showConfirmation(\"Edit data \"+code+\"?\")\r\n        .then(function(ok){\r\n            let productFlow:ProductFlow|undefined = undefined;\r\n            for (let i = 0; i < productFlows.length; i++) {\r\n                const element = productFlows[i];\r\n                if (element.product?.code ==  code) {\r\n                    productFlow = Object.assign(new ProductFlow(), element);\r\n                }\r\n            }\r\n           \r\n            if (productFlow && ok && app.productFormRef.current) {\r\n                app.setState({selectedProductFlow:productFlow});\r\n                app.productFormRef.current.setProduct(productFlow.product);\r\n            }\r\n        })\r\n    }\r\n    removeProduct = (code:any) => {\r\n        const productFlows =  this.state.productFlows;\r\n        const app= this;\r\n        for (let i = 0; i < productFlows.length; i++) {\r\n            const element = productFlows[i];\r\n            if (element.product?.code ==  code) {\r\n                productFlows.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n        this.showConfirmationDanger(\"Remove data?\")\r\n        .then(function(ok){\r\n            if (ok) {\r\n                if (app.state.selectedProductFlow && code == app.state.selectedProductFlow.product?.code) {\r\n                    app.clearSelectedProductFlow();\r\n                }\r\n                app.setState({productFlows:productFlows});\r\n            }\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const totalUnitAndPrice = (productFlows:ProductFlow[]):{unit:number, productFlowPrice:number, productPrice:number} => {\r\n    let totalUnit:number = 0, totalPrice:number = 0, totalProductPrice:number = 0;\r\n    for (let i = 0; i < productFlows.length; i++) {\r\n        const element = productFlows[i];\r\n        totalUnit+=(element.count?element.count:0);\r\n        totalPrice+=((element.count??0)*(element.price??0));\r\n        totalProductPrice+=((element.count??0)*(element.product?.price??0));\r\n    }\r\n    return {\r\n        unit:totalUnit,\r\n        productFlowPrice:totalPrice,\r\n        productPrice:totalProductPrice    \r\n    }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport TransactionPurchasingService from './../../../../services/TransactionPurchasingService';\r\nimport Supplier from './../../../../models/Supplier';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from './../../../../services/MasterDataService';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport SupplierForm from './SupplierForm';\r\nimport ProductForm from '../ProductForm';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Product from '../../../../models/Product';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Transaction from './../../../../models/Transaction';\r\nimport BaseTransactionComponent, { totalUnitAndPrice } from './../BaseTransactionComponent';\r\n \r\nclass TransactionPurchasing extends BaseTransactionComponent {\r\n    transactionPurchasingService = TransactionPurchasingService.getInstance();\r\n    constructor(props: any) {\r\n        super(props); \r\n    }\r\n    setSupplier = (supplier: Supplier) => {\r\n        this.setState({ supplier: supplier });\r\n    } \r\n    \r\n    \r\n    updateSelectedProductFlowProp = (e) => {\r\n        const productFlow: ProductFlow | undefined = this.state.selectedProductFlow;\r\n        if (!productFlow) {\r\n            this.showError(\"Please select product!\");\r\n            e.target.value = null;\r\n            return;\r\n        }\r\n        const propName = e.target.name;\r\n        const value = e.target.type=='number'?parseInt(e.target.value) : e.target.value;\r\n        productFlow[propName] = value;\r\n        this.setState({ selectedProductFlow: productFlow });\r\n\r\n    }\r\n   \r\n    \r\n    submitTransaction = (e) => {\r\n        e.preventDefault();\r\n        const app = this;\r\n        const formData = new FormData(e.target);\r\n        this.showConfirmation(\"Submit Transactio?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.doSubmit(formData);\r\n            }\r\n        });\r\n    }\r\n\r\n    doSubmit = (formData:FormData) => {\r\n        const transaction:Transaction = new Transaction();\r\n        transaction.productFlows = this.state.productFlows;\r\n        transaction.supplier = this.state.supplier;\r\n        const date = formData.get('date');\r\n        transaction.transactionDate =date ? new Date(date.toString()) : new Date();\r\n        this.commonAjaxWithProgress(\r\n            this.transactionPurchasingService.submitTransactionPurchasing,\r\n            this.transactionSucess,\r\n            this.showCommonErrorAlert,\r\n            transaction\r\n        )\r\n    }\r\n\r\n    transactionSucess = (response:WebResponse) => {\r\n        const code = response.transaction?.code;\r\n        this.showInfo(\"Transaction success: \"+code);\r\n    }\r\n    \r\n    render() {\r\n        const productFlowsPopulated = this.state.productFlows.length > 0;\r\n        const supplierExist = this.state.supplier != undefined;\r\n        const showSubmitTrxButton = productFlowsPopulated == true && supplierExist == true;\r\n        return (\r\n            <div id=\"TransactionPurchasing\" className=\"container-fluid\">\r\n                <h2>Purchasing</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\" >\r\n                        <ProductForm ref={this.productFormRef} setProduct={this.setProduct} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <SupplierForm setSupplier={this.setSupplier} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.addToCart} >\r\n                            <Modal title={\"Product Data\"} footerContent={<Fragment>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Add\" />\r\n                                <input type=\"reset\" className=\"btn btn-warning\" value=\"Reset\" />\r\n                            </Fragment>}>\r\n                                <FormGroup label=\"Quantity\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.count} type=\"number\" onChange={this.updateSelectedProductFlowProp} name=\"count\" required min=\"1\" className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Price @Unit\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.price} type=\"number\" onChange={this.updateSelectedProductFlowProp} name=\"price\" min=\"0\" required className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Expired Date\">\r\n                                    <input defaultValue={new String(this.state.selectedProductFlow?.expiryDate).toString()} type=\"date\" onChange={this.updateSelectedProductFlowProp} name=\"expiryDate\" required className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        {showSubmitTrxButton?\r\n                        <form onSubmit={this.submitTransaction}>\r\n                            <Modal title=\"Action\">\r\n                                <FormGroup label=\"Date\">\r\n                                    <input required type=\"date\" name=\"date\" className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Action\">\r\n                                    <div>\r\n                                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Transaction\"/>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>:null}\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <Modal title=\"Products\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit</th>\r\n                                        <th>Exp Date</th>\r\n                                        <th>Price</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productFlows.map((productFlow, i) => {\r\n                                        return (\r\n                                            <tr key={\"pf_\"+i}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{productFlow.product?.name}</td>\r\n                                                <td>{productFlow.count}</td>\r\n                                                <td>{productFlow.product?.unit?.name}</td>\r\n                                                <td>{productFlow.expiryDate}</td>\r\n                                                <td>{productFlow.price}</td>\r\n                                                <td>{(productFlow.count ?? 0) * (productFlow.price ?? 0)}</td>\r\n                                                <td>\r\n                                                    <AnchorButton onClick={(e)=>this.editProduct(productFlow.product?.code)} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" >edit</AnchorButton>\r\n                                                    <AnchorButton onClick={(e)=>this.removeProduct(productFlow.product?.code)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" >remove</AnchorButton>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <td colSpan={2}><strong>Total</strong></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).unit}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).productFlowPrice}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    } \r\n} \r\n\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(TransactionPurchasing))","import * as url from '../constant/Url'\r\nimport BaseTransactionService from './BaseTransactionService';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport WebRequest from './../models/WebRequest';\r\nexport default class TransactionSellingService extends BaseTransactionService{\r\n    private static instance?:TransactionSellingService;\r\n\r\n    static getInstance(): TransactionSellingService {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionSellingService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    getCustomerList = (raw:any) => {\r\n        const fieldsFilter = {};\r\n        fieldsFilter[raw.key] = raw.value;\r\n        const request:WebRequest = {\r\n            entity: \"customer\",\r\n            filter: {\r\n                page: (raw.page > 0 ? raw.page : 0),\r\n                limit: (raw.limit > 0 ? raw.limit : 10),\r\n                exacts: (raw.exacts == true),\r\n                fieldsFilter: fieldsFilter\r\n            }\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/app/entity/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport Customer from '../../../../models/Customer';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\r\nimport Spinner from './../../../loader/Spinner';\r\ninterface IState {\r\n    customer?: Customer;\r\n    customerNotFound: boolean;\r\n    loading:boolean;\r\n}\r\nclass CustomerForm extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        customerNotFound: false, loading:false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchCustomer = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('id');\r\n        if (!id) return;\r\n        this.loadCustomer(parseInt(id.toString()));\r\n    }\r\n    customerLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Customer not found\");\r\n        }\r\n        this.props.setCustomer(response.entities[0]);\r\n        this.setState({ customer: response.entities[0], customerNotFound: false });\r\n    }\r\n    customerNotFound = (e: any) => {\r\n        this.setState({ customerNotFound: true });\r\n    }\r\n    loadCustomer = (id: number) => {\r\n        this.commonAjax(this.masterDataService.getById,\r\n            this.customerLoaded, this.customerNotFound, 'customer', id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchCustomer} >\r\n                <Modal toggleable={true}  title=\"Customer form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/customer\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Customer code\" required type=\"number\" className=\"form-control\" name=\"id\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <CustomerDetail loading={this.state.loading} customer={this.state.customer} notFound={this.state.customerNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst CustomerDetail = (props: { loading:boolean, customer?: Customer, notFound: boolean }) => {\r\n    const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Customer not found</div></div>\r\n    }\r\n    if (!props.customer) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select customer</div></div>\r\n    }\r\n    const customer: Customer = props.customer;\r\n    return (\r\n        <div style={style}>\r\n            <h2>{customer.name}</h2>\r\n            <address>\r\n                {customer.address}<br />\r\n                <abbr title=\"Contact\">Contact: </abbr>{customer.phone}\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(CustomerForm))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionSellingService from '../../../../services/TransactionSellingService';\r\nimport Customer from '../../../../models/Customer';\r\nimport ProductFlow from '../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport WebResponse from '../../../../models/WebResponse'; \r\nimport ProductForm from '../ProductForm';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Transaction from '../../../../models/Transaction';\r\nimport BaseTransactionComponent, { totalUnitAndPrice } from '../BaseTransactionComponent';\r\nimport CustomerForm from './CustomerForm';\r\n\r\nclass TransactionSelling extends BaseTransactionComponent {\r\n    transactionSellingService = TransactionSellingService.getInstance();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    setCustomer = (customer: Customer) => {\r\n        this.setState({ customer: customer });\r\n    }\r\n\r\n    updateSaleQty = (e) => {\r\n        const productFlow: ProductFlow | undefined = this.state.selectedProductFlow;\r\n        if (!productFlow) {\r\n            this.showError(\"Please select product!\");\r\n            e.target.value = null;\r\n            return;\r\n        }\r\n        const value = parseInt(e.target.value);\r\n        productFlow.count = value;\r\n        this.setState({ selectedProductFlow: productFlow });\r\n    }\r\n\r\n    submitTransaction = (e) => {\r\n        e.preventDefault();\r\n        const app = this;\r\n        const formData = new FormData(e.target);\r\n        this.showConfirmation(\"Submit Transactio?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doSubmit(formData);\r\n                }\r\n            });\r\n    }\r\n\r\n    doSubmit = (formData: FormData) => {\r\n        const transaction: Transaction = new Transaction();\r\n        transaction.productFlows = this.state.productFlows;\r\n        transaction.customer = this.state.customer;\r\n        const date = formData.get('date');\r\n        transaction.transactionDate = date ? new Date(date.toString()) : new Date();\r\n        this.commonAjaxWithProgress(\r\n            this.transactionSellingService.submitTransactionSelling,\r\n            this.transactionSucess,\r\n            this.showCommonErrorAlert,\r\n            transaction\r\n        )\r\n    }\r\n\r\n    transactionSucess = (response: WebResponse) => {\r\n        const code = response.transaction?.code;\r\n        this.showInfo(\"Transaction success: \" + code);\r\n    }\r\n\r\n    render() {\r\n        const productFlowsPopulated = this.state.productFlows.length > 0;\r\n        const customerExist = this.state.customer != undefined;\r\n        const showSubmitTrxButton = productFlowsPopulated == true && customerExist == true;\r\n        const selectedProductFlow = this.state.selectedProductFlow;\r\n        return (\r\n            <div id=\"TransactionSelling\"  className=\"container-fluid\">\r\n                <h2>Selling</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\" >\r\n                        <ProductForm ref={this.productFormRef} setProduct={this.setProduct} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <CustomerForm setCustomer={this.setCustomer} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.addToCart} >\r\n                            <Modal title={\"Product Data\"} footerContent={<Fragment>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Add\" />\r\n                                <input type=\"reset\" className=\"btn btn-warning\" value=\"Reset\" />\r\n                            </Fragment>}>\r\n                                <FormGroup label=\"Quantity\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.count}\r\n                                         type=\"number\" onChange={this.updateSaleQty} name=\"count\" required \r\n                                         min={1} max={\r\n                                            selectedProductFlow?selectedProductFlow.product?.count:0\r\n                                         } className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        {showSubmitTrxButton ?\r\n                            <form onSubmit={this.submitTransaction}>\r\n                                <Modal title=\"Action\">\r\n                                    <FormGroup label=\"Date\">\r\n                                        <input required type=\"date\" name=\"date\" className=\"form-control\" />\r\n                                    </FormGroup>\r\n                                    <FormGroup label=\"Action\">\r\n                                        <div>\r\n                                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Transaction\" />\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </Modal>\r\n                            </form> : null}\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <Modal title=\"Products\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit</th>\r\n                                        {/* <th>Exp Date</th> */}\r\n                                        <th>Price</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productFlows.map((productFlow, i) => {\r\n                                        return (\r\n                                            <tr key={\"pf_\" + i}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{productFlow.product?.name}</td>\r\n                                                <td>{productFlow.count}</td>\r\n                                                <td>{productFlow.product?.unit?.name}</td>\r\n                                                {/* <td>{productFlow.expiryDate}</td> */}\r\n                                                <td>{productFlow.product?.price}</td>\r\n                                                <td>{(productFlow.count ?? 0) * (productFlow.product?.price ?? 0)}</td>\r\n                                                <td>\r\n                                                    <AnchorButton onClick={(e) => this.editProduct(productFlow.product?.code)} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" >edit</AnchorButton>\r\n                                                    <AnchorButton onClick={(e) => this.removeProduct(productFlow.product?.code)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" >remove</AnchorButton>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <td colSpan={2}><strong>Total</strong></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).unit}</td>\r\n                                        {/* <td></td> */}\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).productPrice}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(TransactionSelling))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from './../../../../services/TransactionHistoryService';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport Transaction from './../../../../models/Transaction';\r\nimport Modal from './../../../container/Modal';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Product from '../../../../models/Product';\r\nimport { totalUnitAndPrice } from '../BaseTransactionComponent';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\ninterface IState {\r\n    transactionData?: Transaction;\r\n    transactionCode?: string;\r\n    dataNotFound: boolean\r\n}\r\nclass TransactionDetail extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state: IState = { dataNotFound: false };\r\n    constructor(props: any) {\r\n        super(props, true);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Transaction Detail\";\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    recordLoaded = (response: WebResponse) => {\r\n        if (!response.transaction) {\r\n            throw new Error(\"Not found\");\r\n        }\r\n        response.transaction.productFlows = response.entities;\r\n        this.setState({ transactionData: response.transaction, dataNotFound: false });\r\n    }\r\n\r\n    recordNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.setState({ dataNotFound: true, transactionData: undefined });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.commonAjax(\r\n            this.transactionHistoryService.getTransactionData,\r\n            this.recordLoaded,\r\n            this.recordNotLoaded,\r\n            this.state.transactionCode\r\n        )\r\n    }\r\n    setTransactionCode = (e) => {\r\n        this.setState({ transactionCode: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"TransactionDetail\" className=\"container-fluid\">\r\n                <h2>Transaction Detail Page</h2>\r\n                <div className=\"row\">\r\n                    <form className=\"col-md-6\" onSubmit={this.onSubmit}>\r\n                        <Modal title=\"Transaction Info\"\r\n                            footerContent={\r\n                                <Fragment>\r\n                                    <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/transaction\" className=\"btn btn-secondary\" >Transactions Record</AnchorWithIcon>\r\n                                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Search\" />\r\n                                </Fragment>\r\n                            }\r\n                        >\r\n                            <FormGroup label=\"Code\">\r\n                                <input required onChange={this.setTransactionCode} type=\"text\" placeholder=\"Transaction code\" className=\"form-control\" />\r\n                            </FormGroup>\r\n                        </Modal>\r\n                    </form>\r\n                    <div className=\"col-md-6\"></div>\r\n                    <div className=\"col-md-12\">\r\n                        <SimpleError show={this.state.dataNotFound == true} >Data not found</SimpleError>\r\n                        <TransactionData show={this.state.transactionData != undefined} transaction={this.state.transactionData} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst TransactionData = (props) => {\r\n    if (props.show == false) return null;\r\n    const transaction: Transaction = props.transaction;\r\n    const productFlows: ProductFlow[] = transaction.productFlows ? transaction.productFlows: [];\r\n    const isSelling = transaction.type == 'SELLING';\r\n    \r\n    return (\r\n        <Modal title=\"Transaction Data\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <FormGroup label=\"Code\" orientation='horizontal'>\r\n                        {transaction.code}\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Type\" orientation='horizontal'>\r\n                        {transaction.type}-{transaction.mode}\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Date\" orientation='horizontal'>\r\n                        {new Date(transaction.transactionDate ?? new Date()).toString()}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {isSelling ?\r\n                        <FormGroup label=\"Customer\" orientation='horizontal'>\r\n                            {transaction.customer?.name}\r\n                        </FormGroup> :\r\n                        <FormGroup label=\"Supplier\" orientation='horizontal'>\r\n                            {transaction.supplier?.name}\r\n                        </FormGroup>\r\n                    }\r\n\r\n                    <FormGroup label=\"User\" orientation='horizontal'>\r\n                        {transaction.user?.displayName}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <h3>Products</h3>\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>Name</th>\r\n                                <th>Quantity</th>\r\n                                <th>Unit</th>\r\n                                <th>@Price</th>\r\n                                <th>Total Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {productFlows.map((productFlow, i)=>{\r\n                                const product:Product = productFlow.product?? new Product();\r\n                                const price = productFlow.price;\r\n                                return (\r\n                                    <tr key={\"pf-tr-\"+i}>\r\n                                        <td>{i+1}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{beautifyNominal(productFlow.count)}</td>\r\n                                        <td>{product.unit?.name}</td>\r\n                                        <td>{beautifyNominal(price)}</td>\r\n                                        <td>{beautifyNominal((price??0) * (productFlow.count??0))}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"alert alert-info text-left\">\r\n                        <FormGroup label=\"Total unit\">\r\n                        <p>{beautifyNominal(totalUnitAndPrice(productFlows).unit)}</p>\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Total price\">\r\n                        <p>{beautifyNominal(totalUnitAndPrice(productFlows).productFlowPrice)}</p>\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n} \r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionDetail))","\r\nimport React, { Component, Fragment } from 'react';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport Product from './../../../../models/Product';\r\nimport Modal from './../../../container/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport { updateCart } from './../../../../redux/actionCreators';\r\nimport { withRouter, Link } from 'react-router-dom'; \r\nimport AnchorButton from './../../../navigation/AnchorButton'; \r\nimport BaseComponent from './../../../BaseComponent'; \r\nclass IState {\r\n    showCart: boolean = false\r\n}\r\nclass ProductCatalogList extends BaseComponent\r\n{\r\n    state:IState = new IState();\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    showShoppingCart = (e) => {\r\n        this.setState({ showCart: true });\r\n    }\r\n    hideShoppingCart = (e) => {\r\n        this.setState({ showCart: false });\r\n    }\r\n    getProductInCart = (id: any): Product | undefined => {\r\n        const cart = this.props.cart;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == id) {\r\n                return element;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    addOneToCart = (product: Product) => {\r\n\r\n        let productInCart = this.getProductInCart(product.id);\r\n        if (!productInCart) {\r\n            productInCart = Object.assign(new Product(), product);\r\n            productInCart.count = 0;\r\n        }\r\n        if (productInCart.count) {\r\n            productInCart.count++;\r\n        } else {\r\n            productInCart.count = 1;\r\n        }\r\n        if ((product.count??0) < productInCart.count) {\r\n            this.showError(\"Quantity insufficient! \"+product.count+ \" vs \"+productInCart.count);\r\n            return;\r\n        }\r\n        this.setProductToCart(productInCart);\r\n       \r\n    }\r\n    reduceOneFromCart = (product: Product) => {\r\n        let productInCart = this.getProductInCart(product.id);\r\n        if (!productInCart) {\r\n           return;\r\n        }\r\n        if (productInCart.count && productInCart.count > 0) {\r\n            productInCart.count--;\r\n        } else {\r\n            productInCart.count = 0;\r\n        }\r\n        this.setProductToCart(productInCart);\r\n    }\r\n    resetProductCart = (product:Product) => {\r\n        const productCloned = Object.assign(new Product(), product);\r\n        productCloned.count = 0;\r\n        this.setProductToCart(productCloned);\r\n    }\r\n    resetAllShoppingCart = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Reset Shopping Cart?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.props.updateCart([], app, app.parentApp ); \r\n            }\r\n        })\r\n        \r\n    }\r\n    getShoppingCartCounts = () => {\r\n       return Product.countSummary(this.props.cart);\r\n\r\n    }\r\n    setProductToCart = (product: Product) => {\r\n        // console.debug(\"SET PRODUCT TO CART: \", product);\r\n        const cart = this.props.cart\r\n        let found = false;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == product.id) {\r\n                cart[i] = product;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            cart.push(product);\r\n        }\r\n        this.props.updateCart(cart, this, this.parentApp ); \r\n    } \r\n    render() {\r\n        const props = this.props;\r\n        const showCart: boolean = this.state.showCart;\r\n        return (\r\n            <Modal title=\"Product List\">\r\n                <div className=\"btn-group\" style={{ marginBottom: '5px' }}>\r\n                    <AnchorButton onClick={this.showShoppingCart} show={showCart == false} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-angle-down\">Show Shopping Cart</AnchorButton>\r\n                    <AnchorButton onClick={this.hideShoppingCart} show={showCart == true} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-angle-up\">Hide Shopping Cart</AnchorButton>\r\n                    <AnchorButton onClick={this.resetAllShoppingCart} show={showCart == true} className=\"btn btn-danger btn-sm\" iconClassName=\"fas fa-cart-arrow-down\">Reset Cart</AnchorButton>\r\n                    <AnchorButton show={showCart == true} className=\"btn btn-warning btn-sm\" >{this.getShoppingCartCounts()}</AnchorButton>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {props.products.map((product:Product) => {\r\n                        const imgName = product.imageUrl ? product.imageUrl.split(\"~\")[0] ?? 'Default.bmp' : 'Default.bmp';\r\n                        const productInCart = this.getProductInCart(product.id);\r\n                        return (\r\n                            <div key={\"product_catalog_\"+product.id} className=\"col-md-2 catalog-item rounded border\">\r\n                                <img className=\"rounded img-fluid\" src={baseImageUrl + imgName} /> \r\n                                <Link to={\"/catalog/product/\"+product.code}\r\n                                //  target=\"_blank\" \r\n                                 ><h6>{product.name}</h6></Link>\r\n                                <span className=\"text-info\"><strong>{beautifyNominal(product.price)}</strong></span>\r\n                                {props.withStock ? <span style={{ marginLeft: '5px' }} className={(product.count??0)>0?'badge badge-warning text-dark':'badge badge-dark'}>{product.count}</span> : null}\r\n                                {showCart ?\r\n                                    <div><div className=\"btn-group\">\r\n                                            <AnchorButton onClick={(e)=>this.addOneToCart(product)} iconClassName=\"fas fa-plus\" className=\"btn btn-primary btn-sm\" />\r\n                                            <AnchorButton className=\"btn btn-outline-info btn-sm\"><strong>{productInCart?.count??0}</strong></AnchorButton>\r\n                                            <AnchorButton onClick={(e)=>this.reduceOneFromCart(product)} iconClassName=\"fas fa-minus\" className=\"btn btn-primary btn-sm\" />\r\n                                            <AnchorButton onClick={(e)=>this.resetProductCart(product)} iconClassName=\"fas fa-sync-alt\" className=\"btn btn-warning btn-sm\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    : null}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    updateCart: (cart: Product[], ...apps:any[] ) => dispatch(updateCart(cart, ...apps)),\r\n})\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ProductCatalogList))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport '../Catalog.css';\r\nimport CatalogService from './../../../../services/CatalogService';\r\nimport Product from './../../../../models/Product';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Modal from '../../../container/Modal';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Category from './../../../../models/Category';\r\nimport NavigationButtons from '../../../navigation/NavigationButtons';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport ProductCatalogList from './ProductCatalogList';\r\nclass IState {\r\n    products: Product[] = []; \r\n    filter: Filter = {\r\n        limit: 20,\r\n        page: 0,\r\n        useExistingFilterPage: false,\r\n        orderBy: 'name',\r\n        orderType: 'asc'\r\n    };\r\n    fieldsFilter: {} = {\r\n        withStock: true,\r\n        withCategories: true,\r\n    };\r\n    categories: Category[] = [];\r\n    totalData: number = 0;\r\n    dataNotFound: boolean = false;\r\n}\r\nclass ProductCatalog extends BaseComponent {\r\n    catalogService: CatalogService = CatalogService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    productNotLoaded = (e: any) => {\r\n        this.setState({ totalData: 0, products: [], dataNotFound: true });\r\n    }\r\n    productsLoaded = (response: WebResponse) => {\r\n        if (response.entities == undefined) {\r\n            this.productNotLoaded(response);\r\n            return;\r\n        }\r\n        if (this.state.fieldsFilter['withCategories'] == true) {\r\n            this.setState({ totalData: response.totalData, dataNotFound: false, products: response.entities, categories: response.generalList });\r\n        } else {\r\n            this.setState({ totalData: response.totalData, dataNotFound: false, products: response.entities });\r\n        }\r\n    }\r\n    loadProducts(page: number | undefined = 0) {\r\n        const filter = this.state.filter;\r\n        if (page != undefined && this.state.filter.useExistingFilterPage == false) {\r\n            filter.page = page;\r\n        }\r\n        filter.fieldsFilter = this.state.fieldsFilter;\r\n        const withProgess = filter.fieldsFilter['withStock'] == true;\r\n\r\n        this.doAjax(\r\n            this.catalogService.getProductList, withProgess,\r\n            this.productsLoaded, this.productNotLoaded,\r\n            filter,\r\n        )\r\n        filter.useExistingFilterPage = false;\r\n        this.setState({ filter: filter });\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Product Catalog\";\r\n        this.loadProducts(0);\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        this.loadProducts(0);\r\n    }\r\n    setFieldsFilterValue = (e) => {\r\n        const input: HTMLInputElement = e.target;\r\n        let name: string = input.name;\r\n        let value: any;\r\n\r\n        if (input.type == 'checkbox') {\r\n            value = input.checked == true;\r\n        } else {\r\n            value = input.value;\r\n        }\r\n        const fieldsFilter = this.state.fieldsFilter;\r\n        if (value == undefined || new String(value).trim() == \"\") {\r\n            if (fieldsFilter[name])\r\n                delete fieldsFilter[name];\r\n        } else {\r\n            fieldsFilter[name] = value;\r\n        }\r\n        this.setState({ fieldsFilter: fieldsFilter });\r\n    }\r\n    setFilterPage = (value: any) => {\r\n        const page = parseInt(value);\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.useExistingFilterPage = true;\r\n        this.setState({ filter: filter });\r\n    }\r\n    setLimit = (limit: number) => {\r\n        const filter = this.state.filter;\r\n        filter.limit = limit;\r\n        this.setState({ filter: filter });\r\n    }\r\n    setOrder = (e) => {\r\n        const value = e.target.value;\r\n        const filter = this.state.filter;\r\n        if (value != '') {\r\n            const rawOrder: string[] = new String(value).split(\"-\");\r\n            filter.orderBy = rawOrder[0];\r\n            filter.orderType = rawOrder[1];\r\n        } else {\r\n            delete filter.orderBy;\r\n            delete filter.orderType;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    render() {\r\n        const products: Product[] = this.state.products;\r\n        return (\r\n            <div id=\"ProductCatalog\" className=\"container-fluid\">\r\n                <h2>Product Catalog</h2>\r\n                <form onSubmit={this.filter} >\r\n                    \r\n                    <Modal toggleable={true} title=\"Filter\" footerContent={\r\n                        <input type=\"submit\" className=\"btn btn-primary\" />\r\n                    }  >\r\n                        <div className=\"row\">\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-6\" label=\"Name\">\r\n                                <input onChange={this.setFieldsFilterValue} defaultValue={this.state.fieldsFilter['name']} name=\"name\" placeholder=\"Product Name\" className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Order By\">\r\n                                <select onChange={this.setOrder} className=\"form-control\">\r\n                                    <option value=\"name-asc\">Name [A-Z]</option>\r\n                                    <option value=\"name-desc\">Name [Z-A]</option>\r\n                                    <option value=\"price-asc\">Price [Cheap]</option>\r\n                                    <option value=\"price-desc\">Price [Expensive]</option>\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Category\">\r\n                                <select onChange={this.setFieldsFilterValue} defaultValue={this.state.fieldsFilter['category,id[EXACTS]']} className=\"form-control\" name=\"category,id[EXACTS]\">\r\n                                    <option value=\"\">All</option>\r\n                                    {this.state.categories.map(category => {\r\n                                        return <option key={\"category-opt-\"+category.id} value={category.id}>{category.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"With Stock\">\r\n                                <input onChange={this.setFieldsFilterValue} defaultChecked={this.state.fieldsFilter['withStock'] == true} type=\"checkbox\" name=\"withStock\" />\r\n                                <label style={{ paddingLeft: '5px' }}>{this.state.fieldsFilter['withStock'] == true ? \"Yes\" : \"No\"}</label>\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Go To Page\">\r\n                                <input name=\"page\" min=\"1\" type=\"number\" onChange={\r\n                                    (e) => this.setFilterPage(parseInt(e.target.value) - 1)\r\n                                } defaultValue={(this.state.filter.page ?? 0) + 1} className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Displayed Item\">\r\n                                <input name=\"limit\" min=\"1\" type=\"number\" onChange={\r\n                                    (e) => this.setLimit(parseInt(e.target.value))\r\n                                } defaultValue={this.state.filter.limit} className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Total Data\">\r\n                                <label>{this.state.totalData}</label>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Modal>\r\n                </form>\r\n                <SimpleError show={this.state.dataNotFound}>Data not found</SimpleError>\r\n                <NavigationButtons limit={this.state.filter.limit ?? 20} activePage={this.state.filter.page ?? 0}\r\n                    totalData={this.state.totalData} onClick={(page: number) => this.loadProducts(page)} />\r\n                <ProductCatalogList app={this.parentApp} products={products} withStock={this.state.fieldsFilter['withStock']} />\r\n            </div>\r\n        )\r\n    }\r\n} \r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(ProductCatalog))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Product from './../../../models/Product';\r\nimport SimpleError from '../../alert/SimpleError';\r\nimport Modal from '../../container/Modal';\r\nimport { beautifyNominal } from '../../../utils/StringUtil';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport { updateCart } from './../../../redux/actionCreators';\r\n\r\nclass CartList extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Shopping Cart List\";\r\n    }\r\n    removeFromCart = (product:Product) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Remove \"+product.name+\" from shopping list?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.doRemoveFromCart(product);\r\n            }\r\n        })\r\n    }\r\n    doRemoveFromCart = (product:Product) => {\r\n        const cart:Product[] = this.props.cart\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == product.id) {\r\n                cart.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.props.updateCart(cart, this, this.parentApp );\r\n    }\r\n    render() {\r\n        const cartList: Product[] = this.props.cart;\r\n        let totalUnit: number = 0, totalPrice: number = 0;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Shopping Cart List</h2>\r\n                <SimpleError show={cartList.length == 0}>No shopping item</SimpleError>\r\n\r\n                <table className=\"table table-fluid table-striped\" style={{display: cartList.length>0?'block':'none'}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th colSpan={2}>Product</th>\r\n                            <th>Qty</th>\r\n                            <th>Unit</th>\r\n                            <th>Price</th>\r\n                            <th>Total Price</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {cartList.map((product, i) => {\r\n                            totalUnit += (product.count ?? 0);\r\n                            totalPrice += ((product.count ?? 0) * (product.price ?? 0));\r\n                            let imgName = Product.getDefaultPicture(product);\r\n                            const imgUrl = baseImageUrl + imgName;\r\n                            return (\r\n                                <tr key={\"cart-\" + i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td><img height=\"150\" src={imgUrl} /></td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{beautifyNominal(product.count)}</td>\r\n                                    <td>{product.unit?.name}</td>\r\n                                    <td>{beautifyNominal(product.price)}</td>\r\n                                    <td>{beautifyNominal((product.count ?? 0) * (product.price ?? 0))}</td>\r\n                                    <td>\r\n                                        <AnchorButton onClick={(e)=>this.removeFromCart(product)} iconClassName=\"fas fa-times\" className=\"btn btn-outline-danger\"/>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        <tr>\r\n                            <td colSpan={3}>Total</td>\r\n                            <td>{beautifyNominal(totalUnit)}</td>\r\n                            <td colSpan={2}></td>\r\n                            <td>{beautifyNominal(totalPrice)}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    updateCart: (cart: Product[], ...apps:any[] ) => dispatch(updateCart(cart, ...apps)),\r\n})\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(CartList))","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nimport Card from './Card';\r\nclass IProps {\r\n    imageUrls: string[] = [];\r\n}\r\nclass IState {\r\n    active: number = 0\r\n}\r\nexport default class Carousel extends Component<IProps, IState>\r\n{\r\n    state: IState = new IState();\r\n    imageLength: number = 0;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.imageLength = props.imageUrls.length;\r\n    }\r\n\r\n    getCurrentImage = (): string => {\r\n        return this.props.imageUrls[this.state.active];\r\n    }\r\n    prev = (e) => {\r\n        let currentActive = this.state.active;\r\n        if (currentActive == 0){\r\n            currentActive = this.imageLength-1;\r\n        } else {\r\n            currentActive--;\r\n        }\r\n        this.setState({active:currentActive});\r\n\r\n    }\r\n    next = (e) => {\r\n        let currentActive = this.state.active;\r\n        if (currentActive == this.imageLength-1){\r\n            currentActive = 0;\r\n        } else {\r\n            currentActive++;\r\n        }\r\n        this.setState({active:currentActive});\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Card className=\"container-fluid bg-secondary text-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <AnchorButton className=\"btn btn-light\" iconClassName=\"fas fa-arrow-left\" onClick={this.prev} />\r\n                    </div>\r\n                    <div className=\"col-md-8\" style={{overflowX:'scroll'}}>\r\n                        <img height=\"200\" src={this.getCurrentImage()} />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <AnchorButton className=\"btn btn-light\" iconClassName=\"fas fa-arrow-right\" onClick={this.next} />\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CatalogService from './../../../../services/CatalogService';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport Product from './../../../../models/Product';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Modal from './../../../container/Modal';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nimport Carousel from './../../../container/Carousel';\r\ninterface IState { product?:Product, notFound:boolean }\r\nclass ProductCatalogDetail extends BaseComponent {\r\n    catalogService:CatalogService = CatalogService.getInstance();\r\n    state:IState = {notFound:false}\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    getCode():string {\r\n        return this.props.match.params.code;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (response.entities == undefined || response.entities.length  == 0){\r\n            throw new Error(\"not found\");\r\n        }\r\n        this.setState({\r\n            product:response.entities[0], notFound:true\r\n        })\r\n        document.title = this.state.product?.name??\"Detail\";\r\n    }\r\n    recordNotLoaded = (e:any) => {\r\n        console.error(e);\r\n        this.setState({notFound:true});\r\n    }\r\n    loadProductDetail = () => {\r\n        this.commonAjax(\r\n            this.catalogService.getProductDetail,\r\n            this.recordLoaded,\r\n            this.recordNotLoaded,\r\n            this.getCode()\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.loadProductDetail();\r\n    }\r\n    render() {\r\n        if (!this.getCode() || this.getCode() == \"\") {\r\n            return <SimpleError>Not Found</SimpleError>\r\n        }\r\n        return (<div className=\"container-fluid\">\r\n            <h2>Product Detail</h2>\r\n            {this.state.product?\r\n            <Modal title={this.state.product.name}>\r\n                <Carousel imageUrls={Product.getPictureNames(this.state.product, baseImageUrl)} />\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Unit</th>\r\n                            <th>Category</th>\r\n                            <th>Current Stock</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{this.state.product.name}</td>\r\n                            <td>{this.state.product.description}</td>\r\n                            <td>{this.state.product.unit?.name}</td>\r\n                            <td>{this.state.product.category?.name}</td>\r\n                            <td>{this.state.product.count}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Modal>\r\n            : <SimpleError  >Not Found</SimpleError>}\r\n            <AnchorWithIcon iconClassName=\"fas fa-angle-left\" to=\"/catalog/product\">Back</AnchorWithIcon>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductCatalogDetail);","\r\nimport React, { Component } from 'react';\r\nimport Filter from '../../../models/Filter';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport Loader from '../../loader/Loader';\r\nimport SimpleError from '../../alert/SimpleError';\r\ninterface IProps {\r\n    filter: Filter,\r\n    onChange: Function,\r\n    onSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\r\n    transactionYears:number[]\r\n}\r\nclass IState {\r\n    error:boolean = false;\r\n}\r\nexport default class DashboardFilter extends Component<IProps, IState> {\r\n    state = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        this.props.onChange(e);\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.filter.yearTo == undefined || this.props.filter.year == undefined) {\r\n            return;\r\n        }\r\n        if (this.props.filter.year > this.props.filter.yearTo) {\r\n            this.setState({error:true});\r\n            return;\r\n        }\r\n        this.setState({error:false});\r\n        this.props.onSubmit(e);\r\n    }\r\n    render() {\r\n        const transactionYears: number[]  = this.props.transactionYears;\r\n        return (\r\n            <form onSubmit={this.submit}>\r\n                <Modal toggleable={true} title=\"Filter\" footerContent={\r\n                    <input type=\"submit\" className=\"btn btn-primary\" />\r\n                }>\r\n                    <div className=\"row  \">\r\n                        <div className=\"col-md-5\">\r\n                            <FormGroup label=\"Month\">\r\n                                <select className=\"form-control\" name=\"month\" onChange={this.updatePeriodFilter} value={this.props.filter.month} >\r\n                                    {MONTHS.map((monthName, i) => {\r\n                                        return <option value={i + 1}>{monthName} ({i + 1})</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Year\">\r\n                                <select className=\"form-control\" name=\"year\" onChange={this.updatePeriodFilter} value={this.props.filter.year} >\r\n                                    {transactionYears.map(year => {\r\n                                        return <option value={year}>{year}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center\">\r\n                            <div style={{ width: '75px', height: '75px', display: 'flex' }} className=\"bg-secondary text-light rounded-circle\">\r\n                                <h1 style={{ margin: 'auto' }}><i className=\"fas fa-angle-right\"></i></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                            <FormGroup label=\"Month\">\r\n                                <select className=\"form-control\" name=\"monthTo\" onChange={this.updatePeriodFilter} value={this.props.filter.monthTo} >\r\n                                    {MONTHS.map((monthName, i) => {\r\n                                        return <option value={i + 1}>{monthName} ({i + 1})</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Year\">\r\n                                <select className=\"form-control\" name=\"yearTo\" onChange={this.updatePeriodFilter} value={this.props.filter.yearTo}>\r\n                                    {transactionYears.map(year => {\r\n                                        return <option value={year}>{year}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <SimpleError show={this.state.error} >Invalid Year</SimpleError>\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n}","import DataSet from './DataSet';\r\nexport default class Cashflow implements DataSet {\r\n\r\n    amount: number = 0;\r\n    count: number = 0;\r\n    module: string = 'SELLING';\r\n    year: number = new Date().getFullYear();\r\n    month: number = 1;\r\n    getAmount: () => number;\r\n    getLabel: () => string;\r\n    constructor() {\r\n        this.getAmount = () => {\r\n            return this.amount;\r\n        }\r\n       this.getLabel = () => {\r\n            return this.month+\"-\"+this.year;\r\n        }\r\n    }\r\n    \r\n   \r\n    static toDataSet = (cashflow:Cashflow) : DataSet => {\r\n        return Object.assign(new Cashflow(), cashflow);\r\n    }\r\n    static toDataSets = (cashflows:Cashflow[]) : DataSet[] => {\r\n        const dataSets:DataSet[]  = new Array<DataSet>();\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            dataSets.push(Cashflow.toDataSet(element));\r\n        }\r\n        return dataSets;\r\n    }\r\n    static maxAmount = (cashflows: Cashflow[]): number => {\r\n        let max = 0;\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            if (element.amount > max) {\r\n                max = element.amount;\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Cashflow from '../../../models/Cashflow';\r\nimport { beautifyNominal, uniqueId } from '../../../utils/StringUtil';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport './ChartSvg.css';\r\nimport FormGroup from '../../form/FormGroup'; \r\nimport DataSet from '../../../models/DataSet';\r\ninterface IProps {\r\n    dataSet: DataSet[],\r\n    updated: Date,\r\n    onClick?:(index:number)=>void\r\n    onUnHover?:()=>void\r\n}\r\nclass IState {\r\n    hoveredIndex: number = -1;\r\n    updated: Date = new Date();\r\n}\r\nexport default class DashboardBarChart extends Component<IProps, IState>\r\n{\r\n    middleYAxisValue: number = 0;\r\n    bottomYAxisValue: number = 0;\r\n    offsetX: number = 100;\r\n    offsetY: number = 50;\r\n    baseYIndex: number = 200;\r\n    baseHeight: number = 150;\r\n    lineWidth: number = 0;\r\n    maxValue: number = 0;\r\n    state: IState = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.updateSizes();\r\n\r\n    }\r\n    maxAmount:(cashflows: DataSet[])=>number = (cashflows: DataSet[]): number => {\r\n        let max = 0;\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            \r\n            if (element.getAmount() > max) {\r\n                max = element.getAmount();\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n    updateSizes = () => {\r\n        this.maxValue = this.maxAmount(this.props.dataSet);\r\n        this.middleYAxisValue = Math.round(this.maxValue * 2 / 3);\r\n        this.bottomYAxisValue = Math.round(this.maxValue * 1 / 3);\r\n        this.lineWidth = (23) * (this.props.dataSet.length) + 100;\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateSizes();\r\n        if (this.props.updated != this.state.updated) {\r\n            this.setState({ updated: this.props.updated });\r\n        }\r\n    }\r\n    hover = (index: number) => {\r\n        this.setState({ hoveredIndex: index });\r\n        \r\n    }\r\n    onClick = (index:number) => {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(index);\r\n        }\r\n    }\r\n    unHover = () => {\r\n        this.setState({ hoveredIndex: -1 });\r\n        // if (this.props.onUnHover) {\r\n        //     this.props.onUnHover();\r\n        // }\r\n    }\r\n  \r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"border border-secondary\" style={{ minHeight: '300px', overflowX: 'scroll' }}>\r\n                    <svg onMouseOut={this.unHover} className=\"bg-light border\" version=\"1.1\" baseProfile=\"full\" width={this.offsetX * 2 + (23) * (props.dataSet.length)+ 100} height={300} xmlns=\"http://www.w3.org/2000/svg\">\r\n\r\n                        {props.dataSet.map((data, i) => {\r\n                            const percentage = (data.getAmount() / this.maxValue) * this.baseHeight;\r\n                            const labelY = this.baseYIndex + 15, labelX = this.offsetX + 10 + (23) * (i);\r\n                            const xTranslated = 0, yTranslated = 0;\r\n                            const transform = \"translate(\" + xTranslated + \",\" + yTranslated + \") rotate(-30,\" + labelX + \",\" + labelY + \")\";\r\n                            const hovered = i == this.state.hoveredIndex;\r\n                            return (\r\n                                <g style={hovered ? { cursor: 'pointer' } : {}} className=\"chart-group\"\r\n                                 onMouseOver={(e) => this.hover(i)} onClick={(e) => this.onClick(i)} onMouseOut={this.unHover} key={uniqueId() + \"-\" + i}>\r\n                                    <rect fill={hovered ? \"red\" : \"green\"} x={this.offsetX + (23) * (i)} y={this.baseYIndex - percentage} height={percentage} width={20} ></rect>\r\n                                    <text fill={hovered ? \"red\" : \"black\"} textAnchor=\"end\" fontSize={10} x={labelX} y={labelY} transform={transform}>{data.getLabel()}</text>\r\n                                    <circle cx={this.offsetX + (23) * (i + 1)} cy={this.baseYIndex} r=\"3\" fill=\"red\" />\r\n                                </g>\r\n                            )\r\n                        })}\r\n                        <rect name=\"base_axis_x\" x={this.offsetX} y={this.baseYIndex} height={2} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_top\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY} height={1} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_middle\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY + this.baseHeight * 1 / 3} height={1} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_bottom\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY + this.baseHeight * 2 / 3} height={1} width={this.lineWidth} />\r\n                        <rect name=\"base_axis_y\" x={this.offsetX} y={this.offsetY} height={this.baseHeight} width={2} />\r\n\r\n                        <text textAnchor=\"end\" name=\"top_val\" fontSize={10} x={this.offsetX} y={this.offsetY}>{beautifyNominal(this.maxValue)}</text>\r\n                        <text textAnchor=\"end\" name=\"middle_val\" fontSize={10} x={this.offsetX} y={this.offsetY + this.baseHeight * 1 / 3}>{beautifyNominal(this.middleYAxisValue)}</text>\r\n                        <text textAnchor=\"end\" name=\"bottom_val\" fontSize={10} x={this.offsetX} y={this.offsetY + this.baseHeight * 2 / 3}>{beautifyNominal(this.bottomYAxisValue)}</text>\r\n                    </svg>\r\n                </div>\r\n                <p><i className=\"fas fa-history\" /> {new Date(this.state.updated).toString()}</p> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component, Fragment, RefObject } from 'react';\r\nimport Card from '../../../container/Card';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Filter from './../../../../models/Filter';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Cashflow from './../../../../models/Cashflow';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport { uniqueId } from './../../../../utils/StringUtil';\r\nimport { transform } from 'typescript';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport { MONTHS } from './../../../../utils/DateUtil';\r\ninterface IProps {\r\n    cashflowData: WebResponse\r\n}\r\nclass IState {\r\n    activeSellingIndex: number = -1;\r\n    activePurchasingIndex: number = -1;\r\n}\r\nexport default class CashflowChart extends Component<IProps, IState>\r\n{\r\n    state: IState = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    getCashflowData = (): WebResponse => {\r\n        return this.props.cashflowData;\r\n    }\r\n    getPeriodString = () => {\r\n        const cashflowData = this.getCashflowData();\r\n        if (!cashflowData.filter) return \"\";\r\n        let filter: Filter = cashflowData.filter;\r\n        return MONTHS[(filter.month ?? 1) - 1] + \" \" + filter.year + \" - \" + MONTHS[(filter.monthTo ?? 1) - 1] + \" \" + filter.yearTo;\r\n    }\r\n    getSellingData = (): Cashflow | undefined => {\r\n        if (this.state.activeSellingIndex < 0) return undefined;\r\n        const list: Cashflow[] = this.props.cashflowData.sellings ?? [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (i == this.state.activeSellingIndex) return list[i];\r\n        }\r\n        return undefined;\r\n    }\r\n    getPurchasingData = (): Cashflow | undefined => {\r\n        if (this.state.activePurchasingIndex < 0) return undefined;\r\n        const list: Cashflow[] = this.props.cashflowData.purchasings ?? [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (i == this.state.activePurchasingIndex) return list[i];\r\n        }\r\n        return undefined;\r\n    }\r\n    setActiveSellingData = (i: number) => {\r\n        this.setState({ activeSellingIndex: i });\r\n    }\r\n    unSelectSellingData = () => {\r\n        this.setState({ activeSellingIndex: -1 });\r\n    }\r\n    setActivePurchasingData = (i: number) => {\r\n        this.setState({ activePurchasingIndex: i });\r\n    }\r\n    unSelectPurchasingData = () => {\r\n        this.setState({ activePurchasingIndex: -1 });\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n        const cashflowData = this.getCashflowData()\r\n        return (\r\n            <Card title=\"Cashflow\">\r\n                <FormGroup label=\"Period\" >{this.getPeriodString()}</FormGroup>\r\n                <div className=\"container-fluid\" >\r\n                    <h4>Selling</h4>\r\n                    <DashboardBarChart\r\n                        onClick={this.setActiveSellingData} onUnHover={this.unSelectSellingData}\r\n                        updated={cashflowData.date ?? new Date()} dataSet={Cashflow.toDataSets(cashflowData.sellings ?? [])} />\r\n                    <CashflowDetail cashflow={this.getSellingData()} />\r\n                    <h4>Purchasing</h4>\r\n                    <DashboardBarChart\r\n                        onClick={this.setActivePurchasingData} onUnHover={this.unSelectPurchasingData}\r\n                        updated={cashflowData.date ?? new Date()} dataSet={Cashflow.toDataSets(cashflowData.purchasings ?? [])} />\r\n                    <CashflowDetail cashflow={this.getPurchasingData()} />\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst CashflowDetail = (props: { cashflow?: Cashflow }) => {\r\n    const cashflow: Cashflow | undefined = props.cashflow;\r\n    if (!cashflow) return <div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n        <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\"/> Click the chart to see detail</div>\r\n    </div>;\r\n\r\n    return (<div className=\"row\" style={{ minHeight: '120px' }}>\r\n        <div className=\"col-md-6\"><FormGroup label=\"Module\"> {cashflow.module}</FormGroup></div>\r\n        <div className=\"col-md-6\"><FormGroup label=\"Period\">{MONTHS[cashflow.month - 1]} {cashflow.year}</FormGroup></div>\r\n        <div className=\"col-md-6\"> <FormGroup label=\"Count\">{beautifyNominal(cashflow.count)}</FormGroup></div>\r\n        <div className=\"col-md-6\"> <FormGroup label=\"Amount\">{beautifyNominal(cashflow.amount)}</FormGroup> </div>\r\n    </div >)\r\n}\r\n","import React from 'react'\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport TransactionHistoryService from './../../../../services/TransactionHistoryService';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport DashboardFilter from '../DashboardFilter';\r\nimport CashflowChart from './CashflowChart'; \r\nimport Spinner from '../../../loader/Spinner';\r\nconst date = new Date();\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year:  date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear()\r\n    };\r\n    cashflowData?: WebResponse = undefined\r\n}\r\nclass DashboardStatistic extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        this.loadStatistic();\r\n    }\r\n    cashflowDataLoaded = (response: WebResponse) => {\r\n        this.setState({ cashflowData: response });\r\n    }\r\n    cashflowDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n    }\r\n    loadStatistic = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getCashflowDetail,\r\n            this.cashflowDataLoaded,\r\n            this.cashflowDataNotLoaded,\r\n            this.state.filter\r\n        )\r\n    }\r\n\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadStatistic();\r\n    }\r\n\r\n    render() {\r\n        const cashflowData = this.state.cashflowData;\r\n        if (!cashflowData) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Statistics</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Statistics</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={cashflowData && cashflowData.transactionYears ? cashflowData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n                <CashflowChart cashflowData={cashflowData} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(DashboardStatistic))","import BaseEntity from './BaseEntity';\nimport Product from './Product';\nimport DataSet from './DataSet';\n\nexport default class ProductSales extends BaseEntity implements DataSet{\n\tproduct?:Product;\n\tsales?:number;\n\tmonth?:number;\n\tyear?:number;\n\tpercentage?:number;\n\tmaxValue?:number;\n\tmonthName?:string;\n\tgetAmount: () => number;\n    getLabel: () => string;\n    constructor() {\n\t\tsuper();\n        this.getAmount = () => {\n\t\t\treturn this.sales??0;\n        }\n       this.getLabel = () => {\n            return this.product?this.product.name??\"\":this.month+\"-\"+this.year;\n        }\n    }\n\tstatic toDataSet = (object:ProductSales) : DataSet => {\n        return Object.assign(new ProductSales(), object);\n    }\n    static toDataSets = (objects:ProductSales[]) : DataSet[] => {\n        const dataSets:DataSet[]  = new Array<DataSet>();\n        for (let i = 0; i < objects.length; i++) {\n            const element = objects[i];\n            dataSets.push(ProductSales.toDataSet(element));\n        }\n        return dataSets;\n    }\n    static sortBySales = (objects:ProductSales[]) : ProductSales[] => {\n        return objects.sort((p1, p2)=>{\n            return (p1.sales??0) - (p2.sales??0);\n        })\n    }\n    static sortBySalesDesc = (objects:ProductSales[]) : ProductSales[] => {\n        return objects.sort((p1, p2)=>{\n            return (p2.sales??0) - (p1.sales??0);\n        })\n    }\n}\n","import React, { Fragment } from 'react';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from '../../../../services/TransactionHistoryService';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport DashboardFilter from './../DashboardFilter';\r\nimport ProductSales from './../../../../models/ProductSales';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Modal from './../../../container/Modal';\r\nimport Carousel from '../../../container/Carousel';\r\nimport Product from '../../../../models/Product';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport Spinner from './../../../loader/Spinner';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nconst date: Date = new Date();\r\nconst DEFAULT_LIMIT: number = 50;\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year: date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear(),\r\n        page: 0,\r\n        limit: DEFAULT_LIMIT\r\n    };\r\n    sortType: string = \"asc\";\r\n    activeSalesDataIndex: number = -1;\r\n    salesData?: WebResponse = undefined\r\n}\r\nclass ProductSalesPage extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        const filter = this.state.filter;\r\n        filter.limit = DEFAULT_LIMIT;\r\n        this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    reload = (e) => {\r\n        e.preventDefault();\r\n        // const filter = this.state.filter;\r\n        // filter.limit = (filter.limit ?? 0) + 50;\r\n        // this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    salesDataLoaded = (response: WebResponse) => {\r\n        response.entities = ProductSales.sortBySalesDesc(response.entities ?? []);\r\n        this.setState({ salesData: response });\r\n    }\r\n    salesDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.validateLoginStatus();\r\n    }\r\n    loadSales = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getProductSales,\r\n            this.salesDataLoaded,\r\n            this.salesDataNotLoaded,\r\n            this.state.filter\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadSales();\r\n    }\r\n    setActiveSalesData = (i: number) => {\r\n        this.setState({ activeSalesDataIndex: i });\r\n    }\r\n    unSelectSalesData = () => {\r\n        this.setState({ activeSalesDataIndex: -1 });\r\n    }\r\n    getActiveSalesData = () => {\r\n        const salesList = this.state.salesData ? this.state.salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < salesList.length; i++) {\r\n            const element = salesList[i];\r\n            if (this.state.activeSalesDataIndex == i) return element;\r\n        }\r\n        return undefined;\r\n    }\r\n    sort = (e) => {\r\n        const salesData = this.state.salesData;\r\n        if (!salesData) {\r\n            return;\r\n        }\r\n        const salesList = salesData ? salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return;\r\n        }\r\n        let sortType: string;\r\n        if (this.state.sortType == \"asc\") {\r\n            salesData.entities = ProductSales.sortBySales(salesList);\r\n            sortType = \"desc\";\r\n        } else {\r\n            salesData.entities = ProductSales.sortBySalesDesc(salesList);\r\n            sortType = \"asc\";\r\n        }\r\n        this.setState({ salesData: salesData, sortType: sortType, activeSalesDataIndex: -1 });\r\n    }\r\n    render() {\r\n        const salesData = this.state.salesData;\r\n        if (!salesData) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Product Sales</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        const showBtnLoadMore = (this.state.filter?.limit ?? 0) < (this.state.salesData?.totalData ?? 0) + 1;\r\n        const btnSortIconClass = this.state.sortType == \"asc\" ? \"fas fa-sort-amount-down-alt\" : \"fas fa-sort-amount-up\";\r\n        return (\r\n            <div className=\"container-fluid\" style={{ paddingBottom: '10px' }}>\r\n                <h2>Product Sales</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={salesData && salesData.transactionYears ? salesData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n                <Modal title=\"Options\">\r\n                    <div className=\"inline-buttons-parent\">\r\n                        <AnchorButton className=\"btn btn-secondary btn-sm\">Loaded Product <span className=\"badge badge-light\">{salesData.entities?.length}</span></AnchorButton>\r\n                        <AnchorButton className=\"btn btn-secondary btn-sm\">Total Product <span className=\"badge badge-light\">{salesData.totalData}</span></AnchorButton>\r\n                        <AnchorButton className=\"btn btn-dark btn-sm\" iconClassName={btnSortIconClass} onClick={this.sort} >Sort</AnchorButton>\r\n                        <form style={{ marginTop: '10px' }} className=\"input-group\" onSubmit={this.reload} >\r\n                            <input placeholder=\"Product Count\" disabled className=\"form-control\" />\r\n                            <input placeholder=\"record count\" name=\"limit\" onChange={this.updatePeriodFilter} value={this.state.filter.limit} type=\"number\" min={1} max={this.state.salesData?.totalData} className=\"form-control\" />\r\n                            {showBtnLoadMore ? <button type=\"submit\" className=\"btn btn-dark btn-sm\" ><i className=\"fas fa-sync-alt\" /> Reload</button>\r\n                                : null}\r\n                        </form>\r\n                    </div>\r\n                </Modal>\r\n                <DashboardBarChart\r\n                    onClick={this.setActiveSalesData} onUnHover={this.unSelectSalesData}\r\n                    updated={salesData.date ?? new Date()} dataSet={ProductSales.toDataSets(salesData?.entities ?? [])} />\r\n                <ProductSalesDetail productSales={this.getActiveSalesData()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductSalesDetail = (props: { productSales?: ProductSales }) => {\r\n    const productSales: ProductSales | undefined = props.productSales;\r\n    if (!productSales || !productSales.product)\r\n        return (<div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n            <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\" /> Click the chart to see detail</div>\r\n        </div>);\r\n\r\n    return (<div className=\"row\" style={{ minHeight: '120px' }}>\r\n        <div className=\"col-md-6\">\r\n            <Carousel imageUrls={Product.getPictureNames(productSales.product, baseImageUrl)} />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n            <FormGroup label=\"Name\">{productSales.product ? productSales.product.name : \"\"}</FormGroup>\r\n            <FormGroup label=\"Sales\">{beautifyNominal(productSales.sales)}</FormGroup>\r\n            <FormGroup label=\"Option\">\r\n                <AnchorWithIcon attributes={{target:\"_blank\"}} to={\"/dashboard/productsales/\"+productSales.product.id} >Detail</AnchorWithIcon>\r\n            </FormGroup>\r\n        </div>\r\n    </div >);\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(ProductSalesPage))","import React, { Fragment } from 'react';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from '../../../../services/TransactionHistoryService';\r\nimport Filter from '../../../../models/Filter';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport DashboardFilter from '../DashboardFilter';\r\nimport ProductSales from '../../../../models/ProductSales';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Modal from '../../../container/Modal';\r\nimport Carousel from '../../../container/Carousel';\r\nimport Product from '../../../../models/Product';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport Spinner from '../../../loader/Spinner';\r\nimport SimpleError from '../../../alert/SimpleError';\r\nconst date: Date = new Date();\r\nconst DEFAULT_LIMIT: number = 50;\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year: date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear(),\r\n        page: 0,\r\n        limit: DEFAULT_LIMIT\r\n    };\r\n    sortType: string = \"asc\";\r\n    activeSalesDataIndex: number = -1;\r\n    salesData?: WebResponse = undefined;\r\n    notFound:boolean = false;\r\n}\r\nclass ProductSalesDetailPage extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        const filter = this.state.filter;\r\n        filter.limit = DEFAULT_LIMIT;\r\n        this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    salesDataLoaded = (response: WebResponse) => {\r\n        this.setState({ salesData: response, notFound: false });\r\n    }\r\n    salesDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.setState({ salesData:undefined, notFound: true});\r\n        this.validateLoginStatus();\r\n    }\r\n    getProductId = (): number => {\r\n        return this.props.match.params.id;\r\n    }\r\n    getProduct = (): Product | undefined => {\r\n        if (!this.state.salesData || !this.state.salesData.entity) {\r\n            return undefined;\r\n        }\r\n        const product = this.state.salesData?.entity;\r\n        return Object.assign(new Product(), product);\r\n    }\r\n    loadSales = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getProductSalesDetail,\r\n            this.salesDataLoaded,\r\n            this.salesDataNotLoaded,\r\n            this.getProductId(),\r\n            this.state.filter\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadSales();\r\n    }\r\n    setActiveSalesData = (i: number) => {\r\n        this.setState({ activeSalesDataIndex: i });\r\n    }\r\n    unSelectSalesData = () => {\r\n        this.setState({ activeSalesDataIndex: -1 });\r\n    }\r\n    getActiveSalesData = () => {\r\n        const salesList = this.state.salesData ? this.state.salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < salesList.length; i++) {\r\n            const element = salesList[i];\r\n            if (this.state.activeSalesDataIndex == i) return element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.notFound) {\r\n            return <SimpleError>Not Found</SimpleError>\r\n        }\r\n        const salesData = this.state.salesData;\r\n        const product: Product | undefined = this.getProduct();\r\n        if (!salesData || !product) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Product Sales : Loading</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\" style={{ paddingBottom: '10px' }}>\r\n                <h2>Product Sales : {product.name}</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={salesData && salesData.transactionYears ? salesData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n\r\n                <DashboardBarChart\r\n                    onClick={this.setActiveSalesData} onUnHover={this.unSelectSalesData}\r\n                    updated={salesData.date ?? new Date()} dataSet={ProductSales.toDataSets(salesData?.entities ?? [])} />\r\n                <ProductSalesDetail productSales={this.getActiveSalesData()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductSalesDetail = (props: { productSales?: ProductSales }) => {\r\n    const productSales: ProductSales | undefined = props.productSales;\r\n    if (!productSales)\r\n        return (<div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n            <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\" /> Click the chart to see detail</div>\r\n        </div>);\r\n\r\n    return (<div  style={{ minHeight: '120px' }}>\r\n        <FormGroup label=\"Period\">{productSales.monthName} {productSales.year}</FormGroup>\r\n        <FormGroup label=\"Sales\">{beautifyNominal(productSales.sales)}</FormGroup>\r\n\r\n    </div>)\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(ProductSalesDetailPage))","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'; \r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass SettingsMain extends BaseMainMenus \r\n{\r\n    constructor(props:any){\r\n        super(props, \"Settings\", true);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"SettingsMain\" className=\"container-fluid\">\r\n                <h2>Settings</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.displayName}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(SettingsMain))","import BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tusername?:string;\n\tdisplayName?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\tauthorities?:any[];\n\trequestId?:string;\n\tprocessingDate?:Date;\n\n}\n","\r\nimport User from './../models/User';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nexport default class UserService\r\n{\r\n    private static instance?:UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user:User) => {\r\n        \r\n        const request:WebRequest = {\r\n           user:user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/app/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","import React from 'react'\r\nimport AnchorButton from './../../navigation/AnchorButton';\r\nexport const EditField = ({ edit, name, toggleInput, value, updateProperty, ...props }) => {\r\n    return (edit == true ?\r\n        <PropertyInput updateProperty={updateProperty} name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n        :\r\n        <PropertyLabel name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n    )\r\n}\r\nconst PropertyInput = ({ name, toggleInput, value, updateProperty, type }) => {\r\n    return (<div className=\"row\">\r\n        <p className=\"col-md-10\"><input type={type ?? 'text'} name={name} onChange={updateProperty} value={value} className=\"form-control\" /></p>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }}\r\n                onClick={toggleInput} className=\"btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst PropertyLabel = ({ name, toggleInput, value, type }) => {\r\n\r\n    return (<div className=\"row\" >\r\n        <div className=\"col-md-10\">\r\n            <p style={{ backgroundColor: type == 'color' ? value : '#fff' }} >{type == 'color' ? 'Sample Color' : value}</p>\r\n            {type == 'color' ? <p>{value}</p> : null}\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport User from './../../../models/User';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setLoggedUser } from './../../../redux/actionCreators';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport UserService from './../../../services/UserService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport { resizeImage, toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField } from './helper';\r\nimport { base64StringFileSize, fileExtension } from './../../../utils/StringUtil';\r\ninterface EditField { username: boolean, displayName: boolean, password: boolean, profileImage: boolean }\r\nclass IState {\r\n    user?: User = undefined;\r\n    editFields: EditField = {\r\n        username: false,\r\n        displayName: false,\r\n        password: false,\r\n        profileImage: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        for (const key in this.editFields) {\r\n            if (this.editFields[key] == true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass UserProfile extends BaseComponent {\r\n\r\n    userService: UserService = UserService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.state.user = Object.assign(new User(), this.getLoggedUser());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"User Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return;\r\n\r\n        user[target.name] = target.value;\r\n        this.setState({ user: user });\r\n    }\r\n    updateProfleImage = (e:ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        const fileName:string|undefined = target.files ? target.files[0].name : undefined;\r\n        if (!fileName) return;\r\n        toBase64v2(target).then(function(imageData) {\r\n           app.setProfileImage(imageData);\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData:string) => {\r\n        const user:User|undefined = this.state.user;\r\n        if (!user) return;\r\n        user.profileImage = imageData;\r\n        this.setState({user:user});\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const user: User | undefined = this.state.user;\r\n        const actualLoggedUser: User | undefined = this.getLoggedUser();\r\n        if (null == target || !user || !actualLoggedUser) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            user[propertyName] = actualLoggedUser[propertyName];\r\n        }\r\n        this.setState({ user: user, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const user: User | undefined = this.getUserEditedData();\r\n        if (!user) return;\r\n        if (user.profileImage) {\r\n            this.commonAjaxWithProgress(\r\n                this.userService.updateProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                user\r\n            )\r\n        } else {\r\n            this.commonAjax(\r\n                this.userService.updateProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                user\r\n            )\r\n        }\r\n    }\r\n    getUserEditedData = (): User | undefined => {\r\n        const user: User | undefined = this.state.user;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!user) return undefined;\r\n        const editedUser: User = new User();\r\n        for (const key in editFields) {\r\n            const element:boolean = editFields[key];\r\n            if (element && key != 'profileImage') {\r\n                editedUser[key] = user[key];\r\n            }\r\n        }\r\n        if (editFields.profileImage && user.profileImage?.startsWith(\"data:image\")) {\r\n            editedUser.profileImage = user.profileImage;\r\n        }\r\n        return editedUser;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setLoggedUser(response.user);\r\n        const editFields = this.state.editFields;\r\n        for (const key in editFields) {\r\n            editFields[key] = false;\r\n        }\r\n        this.setState({editFields:editFields});\r\n    }\r\n\r\n    render() {\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        return (\r\n            <div id=\"UserProfile\" className=\"container-fluid\">\r\n                <h2>User Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{marginBottom:'10px'}}>\r\n                            <img style={{marginBottom:'10px'}} width=\"100\" height=\"100\" className=\"rounded-circle border border-primary\" src={user.profileImage?.startsWith(\"data:image\")?user.profileImage:baseImageUrl + user.profileImage} />\r\n                            <EditImage edit={editFields.profileImage} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"User Name\">\r\n                            <EditField edit={editFields.username} updateProperty={this.updateProfileProperty} name=\"username\" toggleInput={this.toggleInput} value={user.username} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.displayName} updateProperty={this.updateProfileProperty} name=\"displayName\" toggleInput={this.toggleInput} value={user.displayName} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Password\">\r\n                            <EditField edit={editFields.password} updateProperty={this.updateProfileProperty} name=\"password\" toggleInput={this.toggleInput} value={user.password} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                           {this.state.fieldChanged()? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />:null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EditImage = ({ edit, toggleInput, updateProperty }) => {\r\n    return (edit == true ? <>\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': 'profileImage', 'data-enabled': 'false'\r\n            }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n        <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name=\"profileImage\" />\r\n    </>\r\n        :\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': 'profileImage', 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image</AnchorButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setLoggedUser: (user: User) => dispatch(setLoggedUser(user)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(UserProfile))","import BaseEntity from './BaseEntity';\n\nexport default class ApplicationProfile extends BaseEntity{\n\tname?:string;\n\tappCode?:string;\n\tshortDescription?:string;\n\tabout?:string;\n\twelcomingMessage?:string;\n\taddress?:string;\n\tcontact?:string;\n\twebsite?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tfooterIconClass?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\n}\n","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setApplicationProfile } from '../../../redux/actionCreators';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport { resizeImage, toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField } from './helper';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport { base64StringFileSize, fileExtension } from './../../../utils/StringUtil';\r\ninterface EditField { name: boolean, welcomingMessage: boolean, shortDescription: boolean, backgroundUrl: boolean, address: boolean, about: boolean, color: boolean, fontColor: boolean }\r\nclass IState {\r\n    applicationProfile?: ApplicationProfile = undefined;\r\n    editFields: EditField = {\r\n        name: false,\r\n        welcomingMessage: false,\r\n        shortDescription: false,\r\n        backgroundUrl: false,\r\n        address: false,\r\n        about: false,\r\n        color: false,\r\n        fontColor: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        for (const key in this.editFields) {\r\n            if (this.editFields[key] == true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass EditApplicationProfile extends BaseComponent {\r\n\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.state.applicationProfile = Object.assign(new ApplicationProfile(), this.getApplicationProfile());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"ApplicationProfile Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n\r\n        applicationProfile[target.name] = target.value;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    updateProfleImage = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        const fileName:string|undefined = target.files ? target.files[0].name : undefined;\r\n        if (!fileName) return;\r\n        toBase64v2(target).then(function (imageData) {\r\n            app.setProfileImage(imageData);\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData: string) => {\r\n        const fileSize = base64StringFileSize(imageData);\r\n        \r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n        applicationProfile.backgroundUrl = imageData;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const appProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const actualAppProfile: ApplicationProfile | undefined = this.getApplicationProfile();\r\n        if (null == target || !appProfile || !actualAppProfile) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            appProfile[propertyName] = actualAppProfile[propertyName];\r\n        }\r\n        this.setState({ applicationProfile: appProfile, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.getApplicationEditedData();\r\n        if (!applicationProfile) return;\r\n        if (applicationProfile.backgroundUrl) {\r\n            this.commonAjaxWithProgress(\r\n                this.masterDataService.updateApplicationProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                applicationProfile\r\n            )\r\n        } else {\r\n            this.commonAjax(\r\n                this.masterDataService.updateApplicationProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                applicationProfile\r\n            )\r\n        }\r\n    }\r\n    getApplicationEditedData = (): ApplicationProfile | undefined => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!applicationProfile) return undefined;\r\n        const editedApplication: ApplicationProfile = new ApplicationProfile();\r\n        for (const key in editFields) {\r\n            const element: boolean = editFields[key];\r\n            if (element && key != 'backgroundUrl') {\r\n                editedApplication[key] = applicationProfile[key];\r\n            }\r\n        }\r\n        if (editFields.backgroundUrl && applicationProfile.backgroundUrl?.startsWith(\"data:image\")) {\r\n            editedApplication.backgroundUrl = applicationProfile.backgroundUrl;\r\n        }\r\n        return editedApplication;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setApplicationProfile(response.applicationProfile);\r\n        const editFields = this.state.editFields;\r\n        for (const key in editFields) {\r\n            editFields[key] = false;\r\n        }\r\n        this.setState({editFields:editFields});\r\n    }\r\n\r\n    render() {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        const bgUrl: string = applicationProfile.backgroundUrl ?? \"\";\r\n        return (\r\n            <div id=\"ApplicationProfile\" className=\"container-fluid\">\r\n                <h2>Application Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{ marginBottom: '10px' }}>\r\n                            <img style={{ marginBottom: '10px' }} height=\"100\" className=\"border border-primary\" src={bgUrl.startsWith(\"data:image\") ? bgUrl : baseImageUrl + bgUrl} />\r\n                            <EditImage edit={editFields.backgroundUrl} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.name} updateProperty={this.updateProfileProperty} name=\"name\" toggleInput={this.toggleInput} value={applicationProfile.name} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Welcoming Message\">\r\n                            <EditField edit={editFields.welcomingMessage} updateProperty={this.updateProfileProperty} name=\"welcomingMessage\" toggleInput={this.toggleInput} value={applicationProfile.welcomingMessage} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Short Description\">\r\n                            <EditField edit={editFields.shortDescription} updateProperty={this.updateProfileProperty} name=\"shortDescription\" toggleInput={this.toggleInput} value={applicationProfile.shortDescription} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Address\">\r\n                            <EditField edit={editFields.address} updateProperty={this.updateProfileProperty} name=\"address\" toggleInput={this.toggleInput} value={applicationProfile.address} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"About\">\r\n                            <EditField edit={editFields.about} updateProperty={this.updateProfileProperty} name=\"about\" toggleInput={this.toggleInput} value={applicationProfile.about} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Background Color\">\r\n                            <EditField type=\"color\" edit={editFields.color} updateProperty={this.updateProfileProperty} name=\"color\" toggleInput={this.toggleInput} value={applicationProfile.color} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Font Color\">\r\n                            <EditField type=\"color\" edit={editFields.fontColor} updateProperty={this.updateProfileProperty} name=\"fontColor\" toggleInput={this.toggleInput} value={applicationProfile.fontColor} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                            {this.state.fieldChanged() ? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" /> : null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EditImage = ({ edit, toggleInput, updateProperty }) => {\r\n    const name: string = \"backgroundUrl\";\r\n    return (edit == true ? <>\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n        <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name={name} />\r\n    </>\r\n        :\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image</AnchorButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setApplicationProfile: (applicationProfile: ApplicationProfile) => dispatch(setApplicationProfile(applicationProfile)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditApplicationProfile))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/DashboardMain';\r\nimport MasterDataMain from '../pages/masterdata/MasterDataMain';\r\nimport TransactionMain from '../pages/transaction/TransactionMain';\r\nimport CatalogMain from '../pages/catalog/CatalogMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport CartMain from '../pages/cart/CartMain';\r\nimport BaseMainMenus from './BaseMainMenus';\r\nimport Menu from './../../models/Menu';\r\nimport TransactionPurchasing from '../pages/transaction/purchasing/TransactionPurchasing';\r\nimport TransactionSelling from '../pages/transaction/selling/TransactionSelling';\r\nimport TransactionDetail from '../pages/transaction/detail/TransactionDetail';\r\nimport ProductCatalog from '../pages/catalog/product/ProductCatalog';\r\nimport CartList from '../pages/cart/CartList';\r\nimport ProductCatalogDetail from '../pages/catalog/productdetail/ProductCatalogDetail';\r\nimport DashboardStatistic from '../pages/dashboard/statistic/DashboardStatistic';\r\nimport ProductSales from './../../models/ProductSales';\r\nimport ProductSalesPage from '../pages/dashboard/sales/ProductSalesPage';\r\nimport ProductSalesDetailPage from '../pages/dashboard/sales/ProductSalesDetailPage';\r\nimport SettingsMain from '../pages/settings/SettingsMain';\r\nimport UserProfile from '../pages/settings/UserProfile';\r\nimport EditApplicationProfile from '../pages/settings/EditApplicationProfile';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n\r\n    ref: React.RefObject<BaseMainMenus> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus=(menus:Menu[])=>{\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ paddingTop: '65px' }}>\r\n                <Switch>\r\n                    <Route path=\"/login\" render={\r\n                        (props: any) =>\r\n                            <Login app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- home -------- */}\r\n                    <Route path=\"/home\" render={\r\n                        (props: any) =>\r\n                            <HomeMain app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- dashboard -------- */}\r\n                    <Route exact path=\"/dashboard\" render={\r\n                        (props: any) =>\r\n                            <DashboardMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/dashboard/statistic\" render={\r\n                        (props: any) =>\r\n                            <DashboardStatistic  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/dashboard/productsales\" render={\r\n                        (props: any) =>\r\n                            <ProductSalesPage  app={this.parentApp} />\r\n                    } />\r\n                     <Route exact path=\"/dashboard/productsales/:id\" render={\r\n                        (props: any) =>\r\n                            <ProductSalesDetailPage  app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- masterdata -------- */}\r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- transaction -------- */}\r\n                    <Route exact path=\"/transaction\" render={\r\n                        (props: any) =>\r\n                            <TransactionMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/purchasing\" render={\r\n                        (props: any) =>\r\n                            <TransactionPurchasing app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/selling\" render={\r\n                        (props: any) =>\r\n                            <TransactionSelling app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/detail\" render={\r\n                        (props: any) =>\r\n                            <TransactionDetail app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- settings --------- */}\r\n                    <Route exact path=\"/settings\" render={\r\n                        (props: any) =>\r\n                            <SettingsMain app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/settings/user-profile\" render={\r\n                        (props: any) =>\r\n                            <UserProfile app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/settings/app-profile\" render={\r\n                        (props: any) =>\r\n                            <EditApplicationProfile app={this.parentApp} />\r\n                    } />\r\n                    {/* ///////// PUBLIC ///////// */}\r\n                    {/* -------- catalog -------- */}\r\n                    <Route exact path=\"/catalog\" render={\r\n                        (props: any) => { \r\n                            return <CatalogMain  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/catalog/product\" render={\r\n                        (props: any) => { \r\n                            return <ProductCatalog  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/catalog/product/:code\" render={\r\n                        (props: any) => { \r\n                            return <ProductCatalogDetail  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/cart\" render={\r\n                        (props: any) =>\r\n                            <CartMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/cart/cartlist\" render={\r\n                        (props: any) =>\r\n                            <CartList  app={this.parentApp} />\r\n                    } />\r\n                </Switch>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","import BaseEntity from './BaseEntity';\nimport Page from './Page';\nimport { uniqueId } from './../utils/StringUtil';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:String = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string;\n\tmenuPage?:Page;\n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n}\n","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from './../../models/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { brand: any, sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n      \r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n                {menus.map(menu => {\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li  className={\"sidebar-item \"+menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}><div\r\n            style={{\r\n                textAlign: 'center', paddingTop: '10px',\r\n                paddingBottom: '10px'\r\n            }}>\r\n            <h3 className=\"text-dark\">\r\n                <i className={Menu.getIconClassName(props.brand)}></i>\r\n            </h3>\r\n            <Link to={props.brand.url} style={{textDecoration:'none'}}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n        </div></li>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","\r\n\r\nimport React from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from './../../models/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\ninterface IState {\r\n    showSidebar: boolean;\r\n    activeMenuCode: any;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = {\r\n        showSidebar: false,\r\n        activeMenuCode: null,\r\n        menu: undefined,\r\n        sidebarMenus: []\r\n    };\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        console.warn(\"SET MENU NULL\");\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        console.debug(\"SET MENU: \", menu.code);\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n       \r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () => {\r\n        if (this.state.menu && this.state.menu.subMenus != null && this.state.menu.subMenus?.length > 0) {\r\n            return this.state.menu?.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar = this.state.showSidebar == true;\r\n        return (\r\n            <div id=\"main-layout\">\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} app={this.parentApp} />\r\n                <div id=\"page-content\" className=\"container-fluid\" style={{ margin: 0, padding: 0, minHeight: '80vh' }}>\r\n                    {/* <div className=\"?\"> */}\r\n                    \r\n                    <div className=\"container-fluid\" style={{zIndex:  1 , position:'absolute'}} id={showSidebar ? \"app-content\" : \"content\"}>\r\n                        <ApplicationContent setSidebarMenus={this.setSidebarMenus} app={this.props.app} />\r\n                    </div>\r\n                    {showSidebar == true ?  \r\n                            <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} app={this.props.app} />\r\n                         : null}\r\n                    {/* </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport * as menus from './constant/Menus'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/WebResponse';\nimport Spinner from './component/loader/Spinner';\n\ninterface IState {\n  loading: boolean;\n  loadingPercentage: number;\n  requestId?: undefined;\n  mainAppUpdated: Date;\n  showAlert: boolean;\n  realtime: boolean;\n}\nclass App extends Component<any, IState> {\n\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\",\n    message: \"Info\",\n    yesOnly: false,\n    onOk: () => { },\n    onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ...this.state,\n      loading: false,\n      loadingPercentage: 0,\n      requestId: undefined,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n      realtime: false,\n    };\n\n  }\n  refresh() {\n    this.setState({ mainAppUpdated: new Date() });\n  }\n\n  requestAppId() {\n    this.props.requestAppId(this);\n  }\n\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    try{\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    } catch(e) {\n      console.error(e);\n    }\n\n  }\n\n  handleMessage(msg: WebResponse) {\n    const percentageFloat:number = msg.percentage??0; \n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div style={{paddingTop:'10%'}}>\n          <Spinner/>\n        </div>\n      )\n    }\n    const usedHost = url.contextPath();\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout app={this} />\n        <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\nfunction updateFavicon(profile: any) {\n  if (profile.pageIcon) {\n    let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\n      document.querySelector('link[rel=\"icon\"]');\n    if (!link) {\n      link = document.createElement('link');\n      link.id = 'favicon';\n      link.setAttribute(\"rel\", 'shortcut icon');\n      document.head.appendChild(link);\n    }\n    link.setAttribute(\"href\", url.baseImageUrl + 'ICON/' + profile.pageIcon);\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  requestAppId: (app: App) => dispatch(actions.requestAppId(app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    entities: [],\r\n    entity: {},  \r\n    requestId: null,\r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: [], \r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n         \r\n      \r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ }; \r\n        // case types.REQUEST_ID:\r\n\r\n        //     return { ...state, requestId: action.payload.message };\r\n        // case types.SEND_MESSAGE:\r\n        //     return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            return { ...state, cart: action.payload.cart };\r\n\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n            result = {\r\n                ...state, requestId: action.payload.requestId,\r\n                applicationProfile: action.payload.applicationProfile == null ? {} : action.payload.applicationProfile\r\n            };\r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n            setCookie(\"requestId\", result.requestId);\r\n            localStorage.setItem(\"assetsPath\", result.applicationProfile.assetsPath);\r\n            console.debug(\"action.payload.loginStatus: \", action.payload.loginStatus);\r\n            console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                setCookie(\"loginKey\", result.loginKey);\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setCookie(\"loginKey\", null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    productFlowStock: null, \r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n    let result = state;\r\n    switch (action.type) {\r\n       \r\n \r\n        case types.RESET_PRODUCTS:\r\n            return { ...state, productsData: null };\r\n\r\n        case types.GET_CASHFLOW_INFO:\r\n            result = state;\r\n\r\n            if (action.payload.entity.module == \"OUT\") {\r\n                result.cashflowInfoOut = action.payload.entity;\r\n            }\r\n            if (action.payload.entity.module == \"IN\") {\r\n                result.cashflowInfoIn = action.payload.entity;\r\n            }\r\n\r\n            return result;\r\n\r\n        case types.GET_CASHFLOW_DETAIL:\r\n            return { ...state, cashflowDetail: action.payload };\r\n        case types.GET_PRODUCT_SALES:\r\n            let currentProductSalesData = action.payload;\r\n            if (action.loadMore == true) {\r\n                currentProductSalesData = state.productSalesData;\r\n                let loadedProductList = action.payload.entities;\r\n                for (let i = 0; i < loadedProductList.length; i++) {\r\n                    currentProductSalesData.entities.push(loadedProductList[i]);\r\n                }\r\n            }\r\n            console.log(\"will update currentProductSalesData: \", currentProductSalesData.entities.length);\r\n            result = { ...state, productSalesData: currentProductSalesData };\r\n            action.referrer.refresh();\r\n            return result; \r\n        case types.GET_PRODUCT_SALES_DETAIL:\r\n            return { ...state, productSalesDetails: action.payload };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\" \r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer, \r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState, \r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, {}, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(response => {\r\n        const responseJson = response.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n\r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = response.headers['access-token'];\r\n            console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => {\r\n        const data = response.data;\r\n        if (data.code != \"00\") {\r\n            alert(\"Error requesting app ID\");\r\n            return;\r\n        }\r\n        common.updateAccessToken(response);\r\n        console.debug(\"response header:\", response.headers['access-token']);\r\n        let newAction = Object.assign({}, action, { payload: { loginStatus: data.loggedIn, ...data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n    const apps:any[] = action.payload.apps;\r\n    for (let i = 0; i < apps.length; i++) {\r\n        const app = apps[i];\r\n        if (app.refresh){ \r\n            app.refresh();\r\n        }\r\n    }\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware' \r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware, \r\n            userMiddleware.requestAppIdMiddleware, \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n\r\n            //transaction   \r\n            getCashflowInfoMiddleware,\r\n            getCashflowDetailMiddleware,\r\n            getProductSalesMiddleware,\r\n            resetProductsMiddleware,   \r\n            getProductSalesDetailMiddleware,\r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n  \r\n  \r\n\r\nconst getProductSalesDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.debug(\"getProductSalesDetailMiddleware Response:\", data);\r\n        if (data.code != \"00\") {\r\n            alert(\"Server error\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: data });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n    .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data, loadMore: action.meta.loadMore, referrer: action.meta.referrer });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.referrer.props.app.endLoading());\r\n}\r\n\r\nconst getCashflowDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getCashflowDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCashflowInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_INFO) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.debug(\"getCashflowInfoMiddleware Response:\", data);\r\n        if (data.code != \"00\") {\r\n            alert(\"Server error\");\r\n            return;\r\n        }\r\n\r\n        if (data.entity == null) {\r\n            alert(\"Data for cashflow: \" + action.payload.filter.module + \" in \" + action.payload.filter.month + \"/\" + action.payload.filter.year + \" period not found!\");\r\n            return;\r\n        }\r\n\r\n        if (data.entity.amount == null) {\r\n            data.entity.amount = 0;\r\n            data.entity.count = 0;\r\n            console.log(\"DATA:\", data);\r\n        }\r\n        let newAction = Object.assign({}, action, { payload: data });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n    .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n   \r\nconst resetProductsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCTS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
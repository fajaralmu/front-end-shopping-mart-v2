{"version":3,"sources":["constant/Url.js","redux/actionCreators.ts","redux/types.js","constant/stores.js","component/loader/Loader.js","component/alert/Alert.js","utils/StringUtil.ts","utils/ComponentUtil.ts","component/BaseComponent.tsx","constant/Menus.ts","component/navigation/Header.tsx","component/pages/login/Login.tsx","component/layout/BaseMainMenus.tsx","component/pages/dashboard/DashboardMain.tsx","middlewares/Common.js","services/Promises.ts","services/MasterDataService.ts","component/navigation/AnchorButton.tsx","component/container/Modal.tsx","models/EntityProperty.ts","models/FieldType.ts","utils/EntityValues.tsx","component/navigation/NavigationButtons.tsx","component/pages/masterdata/form/FormInputImage.tsx","component/pages/masterdata/form/FormInputImageMultiple.tsx","component/form/FormGroup.tsx","component/pages/masterdata/form/FormInputField.tsx","component/pages/masterdata/form/MasterDataForm.tsx","component/pages/masterdata/EditDeleteAction.tsx","component/pages/masterdata/DataTableHeader.tsx","component/alert/SimpleError.tsx","component/loader/Spinner.tsx","component/pages/masterdata/MasterDataList.tsx","component/pages/masterdata/MasterDataManagement.tsx","component/pages/masterdata/MasterDataMain.tsx","component/pages/transaction/TransactionMain.tsx","component/container/Card.tsx","component/navigation/AnchorWithIcon.tsx","services/CatalogService.ts","component/pages/catalog/CatalogMain.tsx","component/pages/home/HomeMain.tsx","models/BaseEntity.ts","models/Product.ts","component/pages/cart/CartMain.tsx","services/BaseTransactionService.ts","services/TransactionPurchasingService.ts","component/pages/transaction/purchasing/SupplierForm.tsx","component/pages/transaction/ProductForm.tsx","models/Transaction.ts","models/ProductFlow.ts","component/pages/transaction/BaseTransactionComponent.tsx","component/pages/transaction/purchasing/TransactionPurchasing.tsx","services/TransactionSellingService.ts","component/pages/transaction/selling/CustomerForm.tsx","component/pages/transaction/selling/TransactionSelling.tsx","services/TransactionHistoryService.ts","component/pages/transaction/detail/TransactionDetail.tsx","component/pages/catalog/product/ProductCatalogList.tsx","component/pages/catalog/product/ProductCatalog.tsx","component/pages/cart/CartList.tsx","component/container/Carousel.tsx","component/pages/catalog/productdetail/ProductCatalogDetail.tsx","utils/DateUtil.js","component/pages/dashboard/DashboardFilter.tsx","models/Cashflow.ts","component/pages/dashboard/DashboardBarChart.tsx","component/pages/dashboard/statistic/CashflowChart.tsx","component/pages/dashboard/statistic/DashboardStatistic.tsx","models/ProductSales.ts","component/pages/dashboard/sales/ProductSalesPage.tsx","component/pages/dashboard/sales/ProductSalesDetailPage.tsx","component/pages/settings/SettingsMain.tsx","models/User.ts","services/UserService.ts","component/pages/settings/helper.tsx","component/pages/settings/UserProfile.tsx","models/ApplicationProfile.ts","component/pages/settings/EditApplicationProfile.tsx","component/layout/ApplicationContent.tsx","models/Menu.ts","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","redux/shopReducer.js","redux/userReducer.js","redux/transactionReducer.js","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","middlewares/CatalogMiddleware.ts","redux/configureStore.js","Root.tsx","serviceWorker.js","index.js"],"names":["devMode","document","getElementById","value","rootValue","contextPath","concat","baseImageUrl","localStorage","getItem","usedHost","url","apiBaseUrl","apiAccount","updateCart","cart","apps","type","payload","meta","performLogout","app","startLoading","mapCommonUserStateToProps","state","applicationProfile","userState","loggedUser","loginStatus","requestId","shopState","LoaderContent","props","realtime","className","role","style","width","progress","transitionDuration","disabled","aria-hidden","Loader","timer","intervalId","update","clearInterval","console","log","setState","endMessage","this","withTimer","setInterval","msgStyle","text","zIndex","Component","Backdrop","backgroundColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","id","title","onClose","Alert","React","createRef","e","isError","current","focus","headerClassName","display","tabIndex","aria-labelledby","children","index","uniqueId","string","String","Date","getUTCMilliseconds","toString","beautifyNominal","val","isDecimal","includes","rawVal","parseInt","split","nominal","Math","abs","result","length","zeroIndex","i","base64StringFileSize","base64String","stringLength","sizeInBytes","ceil","fileExtension","fileName","splitted","byId","toBase64v2","fileInput","Promise","resolve","reject","reader","FileReader","readAsDataURL","files","debug","onload","onerror","error","resizeImage","data","ratio","extension","actualFilesize","img","Image","src","height","canvas","createElement","ctx","getContext","mime_type","drawImage","dataURL","toDataURL","BaseComponent","authenticated","parentApp","updated","validateLoginStatus","isLoggedUserNull","backToLogin","showCommonErrorAlert","msg","message","showError","event","target","checked","name","activeId","element","withProgress","endLoading","method","successCallback","errorCallback","params","then","response","catch","alert","finally","doAjax","user","password","body","showAlert","showAlertError","history","push","menus","code","menuClass","active","showSidebar","subMenus","IState","showNavLinks","toggleNavLinks","onLogout","showConfirmation","ok","menuSet","getMenus","position","padding","margin","label","getApplicationProfile","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","menu","isActive","activeMenuCode","key","setMenu","to","setMenuNull","isUserLoggedIn","getLoggedUser","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","displayName","withRouter","connect","dispatch","Login","formRef","preventDefault","formData","FormData","performLogin","get","onSubmit","login","PasswordField","placeholder","required","UsernameField","autoFocus","username","BaseMainMenus","DashboardMain","commonAuthorizedHeader","getRequestId","getLoginKey","getCookie","updateAccessToken","axiosResponse","headers","accessToken","setCookie","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","request","post","MasterDataService","managementProperties","entityPropertyMap","Map","updateApplicationProfile","profile","set","undefined","req","entity","filter","limit","page","exacts","fieldsFilter","model","editMode","instance","AnchorButton","show","btnClassName","attributes","iconClassName","Modal","hideModal","showModal","toggleable","marginBottom","footerContent","showFooter","EntityProperty","groupNames","entityName","alias","fieldNames","idField","detailFieldName","imageElementsJson","dateElementsJson","multipleSelectElementsJson","currencyElementsJson","formInputColumn","editable","withDetail","dateElements","imageElements","currencyElements","multipleSelectElements","elements","Array","fieldNameList","ignoreBaseField","isQuestionare","record","prop","getEntityElement","getHeaderLabels","header","lableName","isDate","FieldType","EntityValues","object","elemnents","elementid","fieldType","FIELD_TYPE_FIXED_LIST","FIELD_TYPE_DYNAMIC_LIST","optionItemName","FIELD_TYPE_DATE","FIELD_TYPE_IMAGE","imgLink","FIELD_TYPE_COLOR","color","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","min","max","FormInputImage","singlePreviewData","showInputFile","changeSingleImageData","removeImage","showConfirmationDanger","doRemoveImage","prepopulateForm","recordToEdit","defaultValue","fullUrl","Fragment","onChange","accept","imageData","ImagePreview","FormInputImageMultiple","previewData","inputElements","setImageData","addInputElement","removeInputElement","removedIndex","doRemoveInputElement","splice","delete","trim","imageNames","imageName","isNull","isBase64","isBase64Image","startsWith","FormGroup","orientation","FormInputField","masterDataService","getInstance","inputList","entityElement","getRequiredAttr","inputListLoaded","entities","Error","loadInputList","entityReferenceClass","commonAjax","loadAllEntities","hasInputList","hasInputListAndNotReady","validateInputType","fieldName","recordValue","defaultInputValue","optionValueName","requiredAttr","input","options","option","optionItemValue","multiple","FIELD_TYPE_TEXTAREA","MasterDataForm","form","submit","promises","nulledFields","forEach","file","valueAttr","constructor","promise","all","objectPayload","generateRequestPayload","ajaxSubmit","rawObject","join","save","recordSaved","getEntityProperty","showInfo","entityProperty","editModeStr","SubmitReset","InputFields","groupedElements","counter","EditDeleteAction","doDelete","recordId","getRecordId","recordDeleted","getRecordById","getById","recordLoaded","showEditForm","reload","DataTableHeader","headerProps","headerProp","filterOnChange","data-orderType","orderButtonOnClick","data-orderby","SimpleError","Spinner","innerDivs","visibility","MasterDataList","showForm","loading","adjustFilter","loadEntities","entitiesLoaded","recordData","checkDefaultData","getRecordNumber","filterFormSubmit","useExistingFilterPage","filterReset","dataset","orderBy","orderType","showCreateForm","updateFilterPage","updateFilterLimit","resultList","onReset","overflow","number","values","parseValues","Loading","paddingTop","marginLeft","marginTop","SubmitResetButton","MasterDataManagement","loadingEntityProperty","entityPropertyLoaded","setEntityProperty","setTitle","entityProp","loadEntityProperty","existingEntityProperty","MasterDataMain","managementPropertiesLoaded","generalList","setSidebarMenus","refresh","sidebarMenus","loadManagamenetPages","loadManagementProperties","getCode","match","properties","property","TransactionMain","Card","AnchorWithIcon","CatalogService","totalProduct","setTotalProduct","getTotalProduct","getProductList","raw","getProductDetail","getMoreSupplier","productId","CatalogMain","catalogService","totalProductLoaded","totalProductNotLoaded","loadTotalProduct","HomeMain","imageUrl","backgroundUrl","backgroundImage","backgroundSize","fontColor","shortDescription","welcomingMessage","BaseEntity","createdDate","modifiedDate","deletedDate","deleted","Product","description","price","unit","category","newProduct","count","suppliers","product","names","getDefaultPicture","products","CartMain","countSummary","BaseTransactionService","defaultResponse","res","rej","submitTransactionSelling","transaction","submitTransaction","submitTransactionPurchasing","productFlows","customer","supplier","getStockInfo","productCode","withStock","TransactionPurchasingService","SupplierForm","supplierNotFound","searchSupplier","loadSupplier","supplierLoaded","setSupplier","notFound","SupplierDetail","address","contact","ProductForm","transactionService","productNotFound","searchProduct","loadProduct","productLoaded","setProduct","commonAjaxWithProgress","ProductDetail","fontFamily","Transaction","mode","transactionDate","productFlow","ProductFlow","expiryDate","flowReferenceId","transactionId","productFlowStock","totalPrice","obj","BaseTransactionComponent","productFormRef","create","selectedProductFlow","addToCart","Object","assign","existInCart","addProductFlowState","reset","clearSelectedProductFlow","editProduct","removeProduct","totalUnitAndPrice","totalUnit","totalProductPrice","productFlowPrice","productPrice","TransactionPurchasing","transactionPurchasingService","updateSelectedProductFlowProp","propName","doSubmit","date","transactionSucess","productFlowsPopulated","supplierExist","showSubmitTrxButton","colSpan","TransactionSellingService","getCustomerList","CustomerForm","customerNotFound","searchCustomer","loadCustomer","customerLoaded","setCustomer","CustomerDetail","phone","TransactionSelling","transactionSellingService","updateSaleQty","customerExist","TransactionHistoryService","getProductSales","getProductSalesDetail","getCashflowDetail","getTransactionData","transactionCode","getInventoriesQuantity","getBalanceInfo","TransactionDetail","transactionHistoryService","dataNotFound","transactionData","recordNotLoaded","setTransactionCode","TransactionData","isSelling","showCart","ProductCatalogList","showShoppingCart","hideShoppingCart","getProductInCart","addOneToCart","productInCart","setProductToCart","reduceOneFromCart","resetProductCart","productCloned","resetAllShoppingCart","getShoppingCartCounts","found","imgName","withCategories","categories","ProductCatalog","productNotLoaded","productsLoaded","loadProducts","setFieldsFilterValue","setFilterPage","setLimit","setOrder","rawOrder","withProgess","defaultChecked","CartList","removeFromCart","doRemoveFromCart","cartList","imgUrl","Carousel","imageLength","getCurrentImage","imageUrls","prev","currentActive","next","overflowX","ProductCatalogDetail","loadProductDetail","getPictureNames","MONTHS","DashboardFilter","updatePeriodFilter","yearTo","year","transactionYears","month","monthName","monthTo","Cashflow","amount","module","getFullYear","getAmount","getLabel","toDataSet","cashflow","toDataSets","cashflows","dataSets","maxAmount","hoveredIndex","DashboardBarChart","middleYAxisValue","bottomYAxisValue","offsetX","offsetY","baseYIndex","baseHeight","lineWidth","maxValue","updateSizes","dataSet","round","hover","unHover","minHeight","onMouseOut","version","baseProfile","xmlns","percentage","labelY","labelX","transform","hovered","cursor","onMouseOver","fill","x","y","textAnchor","cx","cy","r","activeSellingIndex","activePurchasingIndex","CashflowChart","getCashflowData","cashflowData","getPeriodString","getSellingData","list","sellings","getPurchasingData","purchasings","setActiveSellingData","unSelectSellingData","setActivePurchasingData","unSelectPurchasingData","onUnHover","CashflowDetail","getMonth","DashboardStatistic","loadStatistic","cashflowDataLoaded","cashflowDataNotLoaded","ProductSales","sales","objects","sortBySales","sort","p1","p2","sortBySalesDesc","sortType","activeSalesDataIndex","salesData","ProductSalesPage","loadSales","salesDataLoaded","salesDataNotLoaded","setActiveSalesData","unSelectSalesData","getActiveSalesData","salesList","showBtnLoadMore","btnSortIconClass","paddingBottom","productSales","ProductSalesDetail","ProductSalesDetailPage","getProductId","getProduct","SettingsMain","User","profileImage","authorities","processingDate","UserService","updateProfile","EditField","edit","toggleInput","updateProperty","PropertyInput","PropertyLabel","editFields","fieldChanged","UserProfile","userService","updateProfileProperty","updateProfleImage","fileSize","resizedData","setProfileImage","actualLoggedUser","propertyName","getAttribute","enabled","saveRecord","doSaveRecord","getUserEditedData","profileSaved","editedUser","setLoggedUser","EditImage","ApplicationProfile","appCode","about","website","iconUrl","pageIcon","footerIconClass","EditApplicationProfile","appProfile","actualAppProfile","getApplicationEditedData","editedApplication","setApplicationProfile","bgUrl","ApplicationContent","path","render","exact","Menu","pathVariables","menuPage","defaultMenuIconClassName","getIconClassName","SideBar","isSidebarActive","parentMenu","pathName","location","pathname","window","addEventListener","handleScroll","removeEventListener","scrollTop","srcElement","brand","menuClassName","Brand","textAlign","textDecoration","MainLayout","currentPathName","warn","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","clientRef","alertCallback","onOk","loadingPercentage","mainAppUpdated","requestAppId","incrementLoadings","decrementLoadings","percentageFloat","floor","yesCallback","noCallback","dismissAlert","link","querySelector","setAttribute","head","appendChild","updateFavicon","topics","onMessage","handleMessage","client","actions","initState","messages","userAlias","reducer","action","loginKey","loginFailed","menuData","loginAttempt","setItem","assetsPath","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","currentProductSalesData","loadMore","loadedProductList","referrer","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","initialState","performLoginMiddleware","store","responseJson","loginSuccess","newAction","requestAppIdMiddleware","common","loggedIn","param","getLoggedUserMiddleware","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","JSON","stringify","json","err","storeChatMessageLocallyMiddleware","removeEntityMiddleware","updateCartMiddleware","getProductSalesDetailMiddleware","getProductSalesMiddleware","getCashflowDetailMiddleware","getCashflowInfoMiddleware","resetProductsMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","realtimeChatMiddleware","Root","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iaACMA,EAC2C,kBAA7CC,SAASC,eAAe,YAAYC,OACS,IAA7CF,SAASC,eAAe,YAAYC,MAClCC,EAAYJ,EACb,wBAA0BC,SAASC,eAAe,YAAYC,MAAM,IAE5DE,EAAc,WACvB,IAAMA,EAAcL,EAAS,wBAAwBM,OAAOF,GAAWA,EAEvE,OAAOC,GAMEE,EAAeC,aAAaC,QAAQ,cAAe,UCT1DC,EAAWC,IACXC,EAAaF,EAAW,cAExBG,EAAaH,EAAW,mBAIjBI,EAAa,SAACC,GAA8B,IAAD,uBAATC,EAAS,iCAATA,EAAS,kBAEpD,MAAO,CAAEC,KCAc,cDAWC,QAAS,CAAEH,KAAMA,EAAMC,KAAMA,GAAQG,KAAM,CAAEF,KCAxD,iBDiOdG,EAAgB,SAACC,GAO1B,OANAA,EAAIC,eACe,CACfL,KC7OiB,YD8OjBC,QAAS,GACTC,KAAM,CAAEE,IAAKA,EAAKJ,KC/OD,YD+OwBN,IAAKE,EAAWP,OAAO,a,wBErP3DiB,EAA4B,SAACC,GACtC,MAAO,CACHC,mBAAoBD,EAAME,UAAUD,mBACpCE,WAAYH,EAAME,UAAUC,WAC5BC,YAAaJ,EAAME,UAAUE,YAC7BC,UAAWL,EAAME,UAAUG,UAC3Bd,KAAMS,EAAMM,UAAUf,O,OC0C9B,SAASgB,EAAcC,GACnB,OAAGA,EAAMC,SAED,yBAAKC,UAAU,oCAAoCC,KAAK,cAAcC,MAAO,CACzEC,MAAOL,EAAMM,SAAW,IACxBC,mBAAoB,WAM5B,4BAAQL,UAAU,gBAAgBjB,KAAK,SAASuB,UAAQ,GACpD,0BAAMN,UAAU,mCAAmCC,KAAK,SAASM,cAAY,SAC7E,0BAAMP,UAAU,KAAhB,eAKGQ,M,kDA/DX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IACDR,MAAQ,CACTmB,MAAO,IACPC,WAAY,GAEhB,EAAKC,OAAS,WACN,EAAKrB,MAAMmB,MAAQ,GACnBG,cAAc,EAAKtB,MAAMoB,YAE7BG,QAAQC,IAAI,QACZ,EAAKC,SAAS,CAAEN,MAAO,EAAKnB,MAAMmB,MAAQ,IACtC,EAAKnB,MAAMmB,MAAQ,GAAK,EAAKX,MAAMkB,YACnC,EAAKlB,MAAMkB,cAbJ,E,gEAmBf,GAA4B,GAAxBC,KAAKnB,MAAMoB,UAAmB,CAC9B,IAAIR,EAAaS,YAAYF,KAAKN,OAAQ,EAAG,MAC7CM,KAAKF,SAAS,CAAEL,WAAYA,O,+BAKhC,IAAIV,EAAY,mBAAqBiB,KAAKnB,MAAMf,KAG5CqC,GAFcH,KAAKnB,MAAMuB,KAEd,IAOf,OAN2B,GAAvBJ,KAAKnB,MAAMC,WACXC,EAAY,2BACE,0BAAMA,UAAU,UAAUiB,KAAKnB,MAAMM,SAAW,KAC9DgB,EAASE,OAAS,KAIlB,yBAAKpB,MAAOkB,EAAUpB,UAAWA,GAC7B,kBAACH,EAAD,CAAeO,SAAUa,KAAKnB,MAAMM,SAAUL,SAAUkB,KAAKnB,MAAMC,gB,GAvC9DwB,aCyDrB,SAASC,EAAS1B,GACd,OACI,yBAAKE,UAAU,iBAAiBE,MAAO,CAACuB,gBAAiB,2BAIjE,SAASC,EAAO5B,GACZ,OACI,yBAAKE,UAAW,gBAAgBF,EAAME,WAClC,4BAAQ2B,IAAK7B,EAAM8B,aAAc7C,KAAK,SAClC8C,QAAS/B,EAAMgC,MAAO9B,UAAU,2BADpC,OAECF,EAAMiC,QAAU,KAAO,4BAAQJ,IAAK7B,EAAMkC,YAAajD,KAAK,SACzD8C,QAAS/B,EAAMmC,KAAMjC,UAAU,6BADX,OAMpC,SAASkC,EAAOpC,GACZ,OAAQ,yBAAKE,UAAW,gBAAgBF,EAAME,WAC1C,wBAAIA,UAAW,eAAeF,EAAMqC,cAAeC,GAAG,2BAA2BtC,EAAMuC,OACvF,4BAAQR,QAAS/B,EAAMwC,QAASvD,KAAK,SAASiB,UAAU,SACpD,0BAAMO,cAAY,OAAOP,UAAWF,EAAMqC,eAAe,uBAAGnC,UAAU,oBAKnEuC,M,kDAlFX,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IACD8B,aAAeY,IAAMC,YAC1B,EAAKT,YAAcQ,IAAMC,YAEzB,EAAKX,MAAQ,SAACY,GAEN,EAAK5C,MAAMgC,OACX,EAAKhC,MAAMgC,MAAMY,IAGzB,EAAKT,KAAO,SAACS,GAEL,EAAK5C,MAAMmC,MACX,EAAKnC,MAAMmC,KAAKS,IAGxB,EAAKJ,QAAU,SAACI,GACR,EAAK5C,MAAMwC,SACX,EAAKxC,MAAMwC,QAAQI,IAnBZ,E,gEAyBf,IAAMC,EAAgC,GAAtB1B,KAAKnB,MAAM6C,SACtBA,GAAW1B,KAAKW,aAAagB,QAC9B3B,KAAKW,aAAagB,QAAQC,QACnBF,GAAW1B,KAAKe,YAAYY,SACnC3B,KAAKe,YAAYY,QAAQC,U,+BAK7B,IAAMR,EAAQpB,KAAKnB,MAAMuC,MAAQpB,KAAKnB,MAAMuC,MAAQ,OAC9CN,EAAgC,GAAtBd,KAAKnB,MAAMiC,QAErBe,EADgC,GAAtB7B,KAAKnB,MAAM6C,QACO,YAAY,UAE9C,OACI,oCACI,kBAACnB,EAAD,MACA,yBAAKxB,UAAU,kBAAkBE,MAAO,CAAE6C,QAAS,SAAWX,GAAG,qBAAqBY,SAAS,KAAK/C,KAAK,SAASgD,kBAAgB,0BAA0B1C,cAAY,QACpK,yBAAKP,UAAU,qCAAqCC,KAAK,YACrD,yBAAKD,UAAU,iBACX,kBAAC,EAAD,CAAQmC,cAPA,aAOoCnC,UAAW8C,EAAiBT,MAAOA,EAAOC,QAASrB,KAAKqB,UACpG,yBAAKtC,UAAU,cAAf,IAA8BiB,KAAKnB,MAAMoD,UACzC,kBAACxB,EAAD,CAAQM,YAAaf,KAAKe,YAAaJ,aAAcX,KAAKW,aAAcG,QAASA,EAASD,MAAOb,KAAKa,MAAOG,KAAMhB,KAAKgB,e,GAjDhIV,a,QCFhB4B,EAAQ,EACCC,EAAW,WACvB,IAAIC,EAAS,IAAIC,QAAO,IAAIC,MAAOC,sBAAsBC,WAEzD,QADAN,EACe,IAAME,GAGf,SAASK,EAAgBC,GAC/B,GAAW,IAAPA,GAAoB,MAAPA,EAAa,MAAO,IACrC,IAAMC,EAAoB,IAAIN,OAAOK,GAAKE,SAAS,KAE7CC,EAASF,EAAWG,SAAU,IAAIT,OAAOK,GAAKK,MAAM,KAAK,IAAMD,SAASJ,GAC1EM,EAAUC,KAAKC,IAAIL,GAAQL,WAC3BW,EAAS,GACb,GAAIH,EAAQI,OAAS,EAAG,CAEvB,IADA,IAAIC,EAAoB,EACfC,EAAIN,EAAQI,OAAS,EAAGE,EAAI,EAAGA,IACvCD,IACAF,EAASH,EAAQM,GAAKH,EACL,GAAbE,IACHF,EAAS,IAAMA,EACfE,EAAY,GAIdF,EAASH,EAAQ,GAAKG,OAEtBA,EAAST,EAEV,OAAIG,EAAS,EACLA,GAEJF,IACHQ,GAAS,IAAK,IAAId,OAAOK,GAAKK,MAAM,KAAK,IAEnCI,GAGD,IA8BMI,EAAuB,SAACC,GAChCA,EAAaZ,SAAS,OACzBY,EAAeA,EAAaT,MAAM,KAAK,IAExC,IAAIU,EAAeD,EAAaJ,OAE5BM,EAAc,EAAIT,KAAKU,KAAMF,EAAe,GAAI,kBAEpD,OAAOC,GAGKE,EAAgB,SAACC,GAC7B,GAA8B,GAA1BA,EAASjB,SAAS,KACrB,MAAO,IAGR,IAAMkB,EAAWD,EAASd,MAAM,KAChC,OAAOe,EAASA,EAASV,OAAS,ICpFtBW,EAAO,SAAC5C,GAAS,OAAOrE,SAASC,eAAeoE,IAYtD,SAAS6C,EAAWC,GACvB,OAAO,IAAIC,SAAa,SAAUC,EAASC,GACvC,IACI,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,EAAUO,MAAM,IACrC5E,QAAQ6E,MAAM,uBAAwBR,EAAUO,MAAM,IACtDH,EAAOK,OAAS,WAAcP,EAAQE,EAAOlB,SAC7CkB,EAAOM,QAAU,SAAUC,GACvBR,EAAOQ,IAEb,MAAOnD,GACL2C,EAAO3C,OAMZ,IAAMoD,EAAc,SAACC,EAAaC,EAAcC,GACnD,IAAMC,EAAiB1B,EAAqBuB,GAE5C,OADAlF,QAAQ6E,MAAM,oBAAqBQ,GAC5B,IAAIf,SAAgB,SAASC,EAASC,GACzC,IAAMc,EAAM,IAAIC,MAChBD,EAAIE,IAAMN,EACVI,EAAIR,OAAS,WACT,IAAMxF,EAAQgG,EAAIhG,MAAU6F,EACtBM,EAASH,EAAIG,OAAWN,EAE1BO,EAA2BxI,SAASyI,cAAc,UAChDC,EAAMF,EAAOG,WAAW,MAC9B,GAAKD,EAAL,CAEAF,EAAOpG,MAAQA,EACfoG,EAAOD,OAASA,EAChB,IAAIK,EAAY,SAASV,EAEzBQ,EAAIG,UAAUT,EAAK,EAAG,EAAGhG,EAAOmG,GAChCzF,QAAQ6E,MAAM,iBAAkBM,EAAO,cAAcW,GAErD,IAAME,EAAWN,EAAOO,YACxBjG,QAAQ6E,MAAM,qBAAsBlB,EAAqBqC,IACzDzB,EAAQyB,SAsBb,ICrEcE,E,kDAIjB,WAAYjH,GAAoC,IAAD,EAAvBkH,EAAuB,oFAC3C,cAAMlH,IAJVmH,eAG+C,IAF/CD,eAAyB,EAEsB,EAD/C1H,MAAa,CAAE4H,QAAS,IAAI3D,MACmB,EAS/C4D,oBAAsB,WACQ,GAAtB,EAAKH,eACL,EAAKI,oBACL,EAAKC,eAZkC,EAyI/CC,qBAAuB,SAAC5E,GAAW,IAAD,EAC9B7B,QAAQgF,MAAMnD,GACd,IAAM6E,EAAG,UAAG7E,EAAE8E,eAAL,QAAc9E,EACvB,EAAK+E,UAAU,qBAAqBF,IA1IpC,EAAKN,UAAYnH,EAAMX,IACvB,EAAK6H,cAAgBA,EACrB,EAAK1H,MAAL,eACO,EAAKA,OAL+B,E,oEAkB3C,OAAwC,MAAjC2B,KAAKnB,MAAMP,mBAA6B,GAAK0B,KAAKnB,MAAMP,qB,wCAGjDmI,GACd,IAAMC,EAASD,EAAMC,OACf1J,EAAuB,YAAf0J,EAAO5I,KAAqB4I,EAAOC,QAAUD,EAAO1J,MAClEgD,KAAKF,SAAL,eAAiB4G,EAAOE,KAAO5J,IAC/B4C,QAAQ6E,MAAM,kBAAmBiC,EAAOE,KAAM5J,K,2CAI9C,GAA2B,MAAvBgD,KAAK3B,MAAMwI,UAAiD,MAA7B9C,EAAK/D,KAAK3B,MAAMwI,UAAmB,CAClE,IAAMC,EAAU/C,EAAK/D,KAAK3B,MAAMwI,UACjB,MAAXC,GACAA,EAAQlF,W,mCAQPmF,GACT/G,KAAKgG,UAAU7H,aAAa4I,K,mCAI5B/G,KAAKgG,UAAUgB,e,6BAUZC,EAAkBF,EAAuBG,EAA2BC,GAA4C,IAAD,OAClHnH,KAAK7B,aAAa4I,GADgG,2BAAdK,EAAc,iCAAdA,EAAc,kBAGlHH,EAAM,WAAN,EAAUG,GAAQC,MAAK,SAAUC,GACzBJ,GACAA,EAAgBI,MAErBC,OAAM,SAAU9F,GACX0F,EACAA,EAAc1F,IAEI,iBAANA,GACR+F,MAAM,qBAAuB/F,GAEjC+F,MAAM,0BAEXC,SAAQ,SAAChG,GACR,EAAKuF,kB,iCAIFC,EAAkBC,EAA2BC,GAAyC,IAAD,uBAAZC,EAAY,iCAAZA,EAAY,kBAC5FpH,KAAK0H,OAAL,MAAA1H,KAAA,CAAYiH,GAAQ,EAAOC,EAAiBC,GAA5C,OAA8DC,M,6CAE3CH,EAAkBC,EAA2BC,GAAyC,IAAD,uBAAZC,EAAY,iCAAZA,EAAY,kBACxGpH,KAAK0H,OAAL,MAAA1H,KAAA,CAAYiH,GAAQ,EAAMC,EAAiBC,GAA3C,OAA6DC,M,sCAG7D,IAAMO,EAAsB3H,KAAKnB,MAAML,WACvC,GAAKmJ,EAEL,OADAA,EAAKC,SAAW,MACTD,I,yCAGP,OAAO,GAAS3H,KAAKnB,MAAMJ,aAAe,MAAQuB,KAAKnB,MAAML,a,uCAG7D,OAAO,GAAQwB,KAAKnB,MAAMJ,aAAe,MAAQuB,KAAKnB,MAAML,a,uCAE/CqJ,GACb,IAAM3J,EAAM8B,KACZ,OAAO,IAAIkE,SAAQ,SAASC,EAASC,GAOjClG,EAAI8H,UAAU8B,UAAU,eAAgBD,GAAM,GANhC,SAAUpG,GACpB0C,GAAQ,MAEC,SAAU1C,GACnB0C,GAAQ,W,6CAMG0D,GACnB,IAAM3J,EAAM8B,KACZ,OAAO,IAAIkE,SAAQ,SAASC,EAASC,GAOjClG,EAAI8H,UAAU+B,eAAe,eAAgBF,GAAM,GANrC,SAAUpG,GACpB0C,GAAQ,MAEC,SAAU1C,GACnB0C,GAAQ,W,+BAMX0D,GACL7H,KAAKgG,UAAU8B,UAAU,OAAQD,GAAM,GAAM,iB,gCAEvCA,GACN7H,KAAKgG,UAAU+B,eAAe,QAASF,GAAM,GAAM,iB,oCAI9C7H,KAAK+F,eAAuC,MAAtB/F,KAAKnB,MAAMmJ,SAGtChI,KAAKnB,MAAMmJ,QAAQC,KAAK,Y,gCAGxBjI,KAAKF,SAAS,CAAEmG,QAAS,IAAI3D,S,2CAUH,GAAtBtC,KAAK+F,eAAyB/F,KAAKmG,qBACnCvG,QAAQ6E,aAAazE,KAAO,iBAC5BA,KAAKkG,2B,GAtJ0B5F,a,cC2C9B4H,EAAgB,CACzB,CACIC,KAhDY,OAiDZvB,KAAM,OACNpJ,IAAK,QACL4K,UAAW,aACXC,QAAQ,EACRtC,eAAe,EACfuC,aAAa,GAEjB,CACIH,KAxDe,UAyDfvB,KAAM,UACNpJ,IAAK,WACL4K,UAAW,iBACXC,QAAQ,EACRtC,eAAe,EACfuC,aAAa,EACbC,SAAU,CAAC,CACPJ,KAAM,kBACNvB,KAAM,UACNpJ,IAAK,UACL4K,UAAW,gBAEf,CACID,KAAM,mBACNvB,KAAM,WACNpJ,IAAK,cAGb,CACI2K,KAhEY,OAiEZvB,KAAM,gBACNpJ,IAAK,QACL4K,UAAW,sBACXC,QAAQ,EACRtC,eAAe,EACfuC,aAAa,EACbC,SAAU,CACN,CACIJ,KAAM,YACNvB,KAAM,qBACNwB,UAAW,sBACX5K,IAAK,cAIjB,CACI2K,KAxFiB,YAyFjBvB,KAAM,YACNpJ,IAAK,aACL4K,UAAW,wBACXC,QAAQ,EACRtC,eAAe,EACfuC,aAAa,EACbC,SAAU,CACN,CACIJ,KAAM,iBACNvB,KAAM,YACNpJ,IAAK,YACL4K,UAAW,oBAGf,CACID,KAAM,yBACNvB,KAAM,gBACNpJ,IAAK,eACL4K,UAAW,uBAIvB,CACID,KA9GwB,aA+GxBvB,KAAM,cACNpJ,IAAK,eACL4K,UAAW,kBACXC,QAAQ,EACRtC,eAAe,EACfuC,aAAa,EACbC,SAAU,CACN,CACIJ,KAAM,cACNvB,KAAM,UACNwB,UAAW,uBACX5K,IAAK,WAET,CACI2K,KAAM,iBACNvB,KAAM,aACNwB,UAAW,yBACX5K,IAAK,cAET,CACI2K,KAAM,aACNvB,KAAM,qBACNwB,UAAW,wBACX5K,IAAK,YAIjB,CACI2K,KAxIwB,aAyIxBvB,KAAM,cACNpJ,IAAK,cACL4K,UAAW,iBACXC,QAAQ,EACRtC,eAAe,EACfuC,aAAa,GAEjB,CACIH,KAnJoB,WAoJpBvB,KAAM,UACNpJ,IAAK,YACL4K,UAAW,cACXC,QAAQ,EACRtC,eAAe,EACfuC,aAAa,EACbC,SAAU,CACN,CACIJ,KAAM,eACNvB,KAAM,UACNwB,UAAW,kBACX5K,IAAK,gBAET,CACI2K,KAAM,cACNvB,KAAM,sBACNwB,UAAW,aACX5K,IAAK,kBCxKfgL,G,6CACFC,cAAwB,IAEtBxH,E,kDAEF,WAAYpC,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAFjBR,MAAgB,IAAImK,EACI,EAGxBE,eAAiB,WACb,EAAK5I,SAAS,CAAE2I,cAAe,EAAKpK,MAAMoK,gBAJtB,EAMxBE,SAAW,SAAClH,GACR,IAAMvD,EAAG,eACTA,EAAI0K,iBAAiB,WAAWvB,MAC5B,SAAUwB,GACFA,GACA3K,EAAIW,MAAMZ,cAAcC,EAAI8H,eAXpB,E,qDAgBd,IAAD,OACCyC,EAAwBzI,KAAK3B,MAAMoK,aACnCP,EDdU,WAEpB,IADA,IAAIY,EAAkB,GACbxF,EAAI,EAAGA,EAAI4E,EAAM9E,OAAQE,IAAK,CACnC,IAAMwD,EAAgBoB,EAAM5E,GAC5BwF,EAAQb,KAAKnB,GAEjB,OAAOgC,ECQWC,GACd,OACI,yBAAKhK,UAAU,0BAA0BE,MAAO,CAAE+J,SAAU,QAAS3I,OAAQ,GAAI4I,QAAS,EAAGC,OAAQ,IACjG,kBAAC,EAAD,CAAWC,MAAOnJ,KAAKoJ,wBAAwBxC,OAC/C,yBAAKzF,GAAG,SAASpC,UAAU,8CAA8CE,MAAO,CAAEC,MAAO,SAErF,uBAAGiC,GAAG,eAAepC,UAAU,eAAesK,KAAK,KAAKrJ,KAAKoJ,wBAAwBxC,MACrF,4BAAQhG,QAASZ,KAAK0I,eAAgB3J,UAAU,iBAAiBjB,KAAK,SAASwL,cAAY,WACvFC,cAAY,iBAAiBC,gBAAc,gBAC3CC,gBAAc,QAAQC,aAAW,qBACjC,uBAAG3K,UAAW0J,EAAe,eAAiB,iBAElD,yBAAK1J,UAAW,2BAA4BoC,GAAG,iBAC3C,wBAAIA,GAAG,aAAapC,UAAU,mCACzBmJ,EAAMyB,KAAI,SAAAC,GACP,GAAY,MAARA,GAAgBA,EAAK7D,eAAiB,EAAKI,mBAAoB,OAAO,KAC1E,IAAM0D,EAAW,EAAKhL,MAAMiL,gBAAkBF,EAAKzB,KACnD,OACI,wBAAI4B,IAAK,eAAiB,IAAI1H,OAAOuH,EAAKzB,MAAOpJ,UAAW,aAAe8K,EAAW,oBAAsB,iBACxG,kBAAC,IAAD,CAAMjJ,QAAS,kBAAM,EAAK/B,MAAMmL,QAAQJ,IAAO7K,UAAW,aACtDkL,GAAIL,EAAKpM,KAAK,8BAAOoM,EAAKhD,YAK9C,0BAAM7H,UAAU,4BACZ,kBAAC,EAAD,CAAUmL,YAAalK,KAAKnB,MAAMqL,YAAanE,cAAe/F,KAAKmK,iBAC/DxB,SAAU3I,KAAK2I,SAAUhB,KAAM3H,KAAKoK,0B,GA/C/CtE,GAwDfuE,EAAY,SAACxL,GACf,OACI,yBAAKsC,GAAG,mBAAmBlC,MAAO,CAAEqL,YAAa,UAAYvL,UAAU,mBACnE,uBAAGE,MAAO,CAAEsL,SAAU,QAAUxL,UAAU,0BAA0BsK,KAAK,KACrE,gCAASxK,EAAMsK,UAKzBqB,EAAW,SAAC3L,GACd,OAAIA,EAAMkH,cAEF,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMnF,QAAS/B,EAAMqL,YAAajL,MAAO,CAAEwL,YAAa,OAAS1L,UAAU,oCACvEkL,GAAG,0BAAyB,uBAAGlL,UAAU,uBAD7C,OAC6EF,EAAM8I,KAAK+C,aAExF,uBAAGzL,MAAO,CAACwL,YAAY,OAAQ1L,UAAU,sCACrC6B,QAAS/B,EAAM8J,UAAU,uBAAG5J,UAAU,wBAD1C,eAOR,kBAAC,IAAD,CAAME,MAAO,CAACwL,YAAY,OAAQ7J,QAAS/B,EAAMqL,YAAanL,UAAU,mCACpEkL,GAAG,UADP,IACiB,uBAAGlL,UAAU,uBAD9B,cAWO4L,cAAWC,YACtBxM,GANuB,SAACyM,GAAD,MAAyB,CAChD5M,cAAe,SAACC,GAAD,OAAc2M,EAAS5M,EAAcC,QAI9B0M,CAGxB3J,IChGI6J,G,yDAEF,WAAYjM,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAFjBkM,QAAsCxJ,IAAMC,YACpB,E,kDAGlBC,GACFA,EAAEuJ,iBACwBvJ,EAAEiF,OAC5B,GAAI,MAAQ1G,KAAK+K,QAAQpJ,QAAzB,CAGA,IAAMsJ,EAAqB,IAAIC,SAASlL,KAAK+K,QAAQpJ,SACrD/B,QAAQ6E,MAAM,aAAcwG,GAC5BjL,KAAKnB,MAAMsM,aAAaF,EAASG,IAAI,YAAaH,EAASG,IAAI,YAAapL,KAAKgG,c,0CAGjFlJ,SAASsE,MAAQ,QACbpB,KAAKmK,kBACLnK,KAAKnB,MAAMmJ,QAAQC,KAAK,gB,2CAK5BrI,QAAQ6E,MAAM,gBACd7E,QAAQ6E,MAAM,eAAgBzE,KAAKnB,MAAMJ,aACzCmB,QAAQ6E,MAAM,iBAAkBzE,KAAKoK,iBACjCpK,KAAKmK,kBACLnK,KAAKnB,MAAMmJ,QAAQC,KAAK,gB,+BAGtB,IAAD,OACL,OACI,yBAAK9G,GAAG,SACJ,0BAAMT,IAAKV,KAAK+K,QAASnE,KAAK,QAAQyE,SAAU,SAAC5J,GAAQ,EAAK6J,MAAM7J,IAChEwF,OAAO,OAAOlI,UAAU,eACxB,yBAAKA,UAAU,eACX,4BAAI,uBAAGA,UAAU,wBACjB,wBAAIA,UAAU,8BAAd,mBAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,4BAAQA,UAAU,mCAAmCjB,KAAK,UAA1D,WACA,2BAAO8I,KAAK,iBAAiB9I,KAAK,SAASd,MAAM,e,GA1CjD8I,IAiDdyF,EAAgB,SAAC1M,GACnB,OAAO,kBAAC,WAAD,KACH,2BAAOE,UAAU,WAAjB,YACA,2BAAO6H,KAAK,WAAW9I,KAAK,WAAWqD,GAAG,gBAAgBpC,UAAU,eAChEyM,YAAY,WAAWC,UAAQ,MAGrCC,EAAgB,SAAC7M,GACnB,OAAQ,kBAAC,WAAD,KACJ,2BAAOE,UAAU,WAAjB,YACA,2BAAO6H,KAAK,WAAW9I,KAAK,OAAOqD,GAAG,WAAWpC,UAAU,eACvDyM,YAAY,WAAWC,UAAQ,EAACE,WAAS,MAQtChB,cAAWC,YACtBxM,GANuB,SAACyM,GAAD,MAAyB,CAChDM,aAAc,SAACS,EAAkBhE,EAAkB1J,GAArC,OAAkD2M,EVkLxC,SAACe,EAAUhE,EAAU1J,GAU7C,OATAA,EAAIC,eACe,CACfL,KCxPgB,WDyPhBC,QAAS,GACTC,KAAM,CACFF,KC3PY,WD2PUN,IAAKN,IAAcC,OAAO,kBAAoByO,EAAW,aAC3EhE,EAAW,wBAAyB1J,IAAKA,IUzLoBiN,CAAaS,EAAUhE,EAAU1J,QAIpF0M,CAGxBE,IC7EmBe,G,kDAGjB,WAAYhN,EAAOuC,GAA8C,IAAD,EAA/B2E,EAA+B,oFAC5D,cAAMlH,EAAOkH,IAFjB3E,MAAe,GAGX,EAAKA,MAAQA,EAF+C,E,gEAMxDpB,KAAK+F,eACL/F,KAAKkG,sBAETpJ,SAASsE,MAAQpB,KAAKoB,U,GAZa0E,GCMrCgG,G,kDAEF,WAAYjN,GAAW,uCACbA,EAAO,aAAa,G,qDAErB,IAAD,EACJ,OACI,yBAAKsC,GAAG,gBAAgBpC,UAAU,mBAC9B,yCACA,yBAAKA,UAAU,oBAAf,YACa,0CAASiB,KAAKoK,uBAAd,aAAS,EAAsBM,mB,GAVhCmB,IAqBblB,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGtBkB,K,kBChCSC,GAAyB,WAClC,MAAO,CACH,eAAgB,mBAChB,UAAaC,KACb,cAAiB,UAAUC,OAItBA,GAAc,WACvB,OAAOC,GAAU,aAGRC,GAAoB,SAACC,GAC9B,GAAIA,GAAiBA,EAAcC,SAAWD,EAAcC,QAAQ,gBAAiB,CACjF,IAAMC,EAAcF,EAAcC,QAAQ,gBAE1CE,GAAU,WAAYD,KAIjBN,GAAe,WACxB,OAAOE,GAAU,cAGRK,GAAY,SAAUC,EAAOC,EAAQC,GAC9C,IAAIC,EAAI,IAAIrK,KACZqK,EAAEC,QAAQD,EAAEE,UAAsB,GAATH,EAAc,GAAK,GAAK,KACjD,IAAII,EAAU,WAAaH,EAAEI,cAC7BjQ,SAASkQ,OAASR,EAAQ,IAAMC,EAAS,IAAMK,EAAU,WAEhDZ,GAAY,SAAUM,GAI/B,IAHA,IAAI5F,EAAO4F,EAAQ,IAEfS,EADgBC,mBAAmBpQ,SAASkQ,QACzBjK,MAAM,KACpBO,EAAI,EAAGA,EAAI2J,EAAG7J,OAAQE,IAAK,CAEhC,IADA,IAAI6J,EAAIF,EAAG3J,GACW,KAAf6J,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAuB,GAAnBF,EAAEG,QAAQ1G,GACV,OAAOuG,EAAEE,UAAUzG,EAAKxD,OAAQ+J,EAAE/J,QAG1C,MAAO,ICvCLmK,GAAQC,EAAQ,IAYTC,GAAsB,SAACC,EAAkB3P,GAClD,IAAM4P,EAAqB,MAAX5P,EAAkB,GAAKA,EACvC,OAAO,IAAImG,SAAqB,SAAUC,EAASC,GAC/CmJ,GAAMK,KAAKF,EAAUC,EAAS,CAC1BtB,QAASN,OAER1E,MAAK,SAAA+E,GACFD,GAAkBC,GAClB,IAAM9E,EAAwB8E,EAActH,KACvB,MAAjBwC,EAASa,KAEThE,EAAQmD,GAELlD,EAAOkD,MAEjBC,OAAM,SAAC9F,GAAa7B,QAAQgF,MAAMnD,GAAI2C,EAAO3C,UCtBrCoM,G,iDACjBC,qBAA6C,G,KACrCC,kBAAiD,IAAIC,I,KAuG7DC,yBAA2B,SAAC3P,GACxB,IAAMqP,EAAsB,CACxBO,QAAS5P,GAEPoP,EAAWxQ,IAAcC,OAAO,iCACtC,OAAOsQ,GAAoBC,EAAUC,I,8DAlGvBxF,EAAcrD,GACvBA,GAGL9E,KAAK+N,kBAAkBI,IAAIhG,EAAMrD,K,wCAEnBqD,GACd,QAAYiG,GAARjG,EAGJ,OAAOnI,KAAK+N,kBAAkB3C,IAAIjD,K,+CAGbkG,GACrB,IAAMX,EAAmBxQ,IAAcC,OAAO,kCAC9C,OAAOsQ,GAAoBC,EAAU,M,yCAGtBvF,GACfvI,QAAQ6E,MAAM,qBAAsB0D,GACpC,IAAMwF,EAAsB,CACxBW,OAAQnG,GAENuF,EAAmBxQ,IAAcC,OAAO,2BAC9C,OAAOsQ,GAAoBC,EAAUC,K,mCAG5BA,GACT,IAAMD,EAAmBxQ,IAAcC,OAAO,sBAC9C,OAAOsQ,GAAoBC,EAAUC,K,sCAGzBxF,GACZ,IAAMwF,EAAsB,CACxBW,OAAQnG,EACRoG,OAAQ,CACJC,MAAO,EAAGC,KAAM,IAGlBf,EAAmBxQ,IAAcC,OAAO,sBAC9C,OAAOsQ,GAAoBC,EAAUC,K,8BAGjCxF,EAAchH,GAClB,IAAMwM,EAAsB,CACxBW,OAAQnG,EACRoG,OAAQ,CACJG,QAAQ,EACRF,MAAO,EACPC,KAAM,EACNE,aAAc,CAAE,GAAMxN,KAGxBuM,EAAmBxQ,IAAcC,OAAO,sBAC9C,OAAOsQ,GAAoBC,EAAUC,K,4BAEnCxF,EAAcwG,GAA8B,IAAZH,EAAW,uDAAH,EACpCb,EAAsB,CACxBW,OAAQnG,EACRoG,OAAQ,CACJG,QAAQ,EACRF,MAAOA,EACPC,KAAM,EACNE,aAAcA,IAGhBjB,EAAmBxQ,IAAcC,OAAO,sBAC9C,OAAOsQ,GAAoBC,EAAUC,K,6BAElCxF,EAAchH,GACjB,IAAMwM,EAAsB,CACxBW,OAAQnG,EACRoG,OAAQ,CACJI,aAAc,CAAE,GAAMxN,KAGxBuM,EAAmBxQ,IAAcC,OAAO,yBAC9C,OAAOsQ,GAAoBC,EAAUC,K,2BAEpCxF,EAAcyG,EAAmBC,GAClC,IAIInB,EAJEC,EAAmB,aACrBW,OAAQnG,GACPA,EAAOyG,GAQZ,OAJIlB,EADAmB,EACW3R,IAAcC,OAAO,yBAErBD,IAAcC,OAAO,sBAE7BsQ,GAAoBC,EAAUC,M,qCA7FrC,OAHqB,MAAjB3N,KAAK8O,WACL9O,KAAK8O,SAAW,IAAIjB,GAEjB7N,KAAK8O,a,KATCjB,GAGFiB,c,eCHEC,G,kDAEjB,WAAYlQ,GAAY,uCACdA,G,qDAEA,IAAD,EACL,GAAuB,GAAnBmB,KAAKnB,MAAMmQ,KAAe,OAAO,KACrC,IAAMC,EAAY,UAAGjP,KAAKnB,MAAME,iBAAd,QAAyB,4BAC3C,OACI,qCAAGE,MAAOe,KAAKnB,MAAMI,OAAWe,KAAKnB,MAAMqQ,WAA3C,CAAuDtO,QAASZ,KAAKnB,MAAM+B,QAAS7B,UAAWkQ,IAC1FjP,KAAKnB,MAAMsQ,cACZ,0BAAMlQ,MAAOe,KAAKnB,MAAMoD,SAAS,CAACwI,YAAY,OAAO,IAAI,uBAAG1L,UAAWiB,KAAKnB,MAAMsQ,iBAElF,KACCnP,KAAKnB,MAAMoD,c,GAdc3B,aCPpCkI,G,sCACFwG,MAAe,GAEEI,G,kDAEjB,WAAYvQ,GAAa,IAAD,8BACpB,cAAMA,IAFVR,MAAe,IAAImK,GACK,EAGxB6G,UAAY,WACR,EAAKvP,SAAS,CAACkP,MAAK,KAJA,EAMxBM,UAAY,WACR,EAAKxP,SAAS,CAACkP,MAAK,KAPA,E,qDASd,IAAD,EACN,GAAuB,GAAnBhP,KAAKnB,MAAMmQ,KAAiB,OAAO,KACtC,IAAM5N,EAAK,UAAGpB,KAAKnB,MAAMuC,aAAd,QAAsB,QACjC,GAA6B,GAAzBpB,KAAKnB,MAAM0Q,YAAyC,GAAnBvP,KAAK3B,MAAM2Q,KAC5C,OACI,kBAAC,GAAD,CAAc/P,MAAO,CAACuQ,aAAa,QAAS5O,QAASZ,KAAKsP,UAAWH,cAAc,qBAAnF,QAA8G/N,GAGtH,IAAMvC,EAAS,cAAGI,MAAH,EAAU+P,KAAV,EAAgBS,cAAhB,EAA+BF,WAA/B,sEAAiEvP,KAAKnB,OACrF,OACI,yCAASA,EAAT,CAAgBE,UAAU,iBAAiBE,MAAK,2BAAMJ,EAAMI,OAAZ,IAAmBuQ,aAAa,WAC5E,yBAAKzQ,UAAU,gBACX,wBAAIA,UAAU,eAAeqC,GAC5BpB,KAAKnB,MAAM0Q,WACZ,4BAAQzR,KAAK,SAASiB,UAAU,aAAa6B,QAASZ,KAAKqP,UAAW3F,aAAW,SAC7E,0BAAMpK,cAAY,QACd,uBAAGP,UAAU,mBAIrB,MAEJ,yBAAKA,UAAU,cACViB,KAAKnB,MAAMoD,UAEfjC,KAAKnB,MAAM4Q,eAA0C,GAAzBzP,KAAKnB,MAAM6Q,WACxC,yBAAK3Q,UAAU,gBACViB,KAAKnB,MAAM4Q,eAEf,U,GAxCkBnP,aCFdqP,G,iDACpBC,gB,OACAC,gB,OACAC,W,OACAC,gB,OACAC,a,OACAC,qB,OACAC,uB,OACAC,sB,OACAC,gC,OACAC,0B,OACAC,qB,OACAC,c,OACAC,gB,OACAC,kB,OACAC,mB,OACAC,sB,OACAC,4B,OACAC,SAA2B,IAAIC,M,KAC/BC,mB,OACAC,qB,OACAC,mB,+DA+BmBC,EAAYC,GAE9B,IADA,IAAMN,EAAWM,EAAKN,SACbvN,EAAI,EAAGA,EAAIuN,EAASzN,OAAQE,IAAK,CACzC,IAAMwD,EAAU+J,EAASvN,GACzB,GAAIwD,EAAQkJ,QACX,OAAOkB,EAAOpK,EAAQ3F,IAGxB,OAAO,S,KA5DYwO,GAuBbyB,iBAAmB,SAACD,EAAsBhQ,GAChD,IAAK,IAAImC,EAAI,EAAGA,EAAI6N,EAAKN,SAASzN,OAAQE,IAAK,CAC9C,IAAMwD,EAAUqK,EAAKN,SAASvN,GAC9B,GAAIwD,EAAQ3F,IAAMA,EACjB,OAAO2F,IA3BU6I,GAiCb0B,gBAAkB,SAACF,GACzB,IAAMhO,EAAuB,IAAI2N,MACjC,QAAqB1C,GAAjB+C,EAAKN,SACR,OAAO1N,EAGR,IADA,IAAM0N,EAA2BM,EAAKN,SAC7BvN,EAAI,EAAGA,EAAIuN,EAASzN,OAAQE,IAAK,CAEzC,IAAMwD,EAAU+J,EAASvN,GACnBgO,EAAqB,CAC1BnI,MAAMrC,EAAQyK,UACdvU,MAAM8J,EAAQ3F,GACdqQ,OAAuB,QAAhB1K,EAAQhJ,MAEhBqF,EAAO8E,KAAKqJ,GAEb,OAAOnO,G,ICpDGsO,G,iBAAAA,K,kCAAAA,E,oCAAAA,E,0CAAAA,E,sCAAAA,E,sCAAAA,E,oCAAAA,E,8CAAAA,E,kDAAAA,E,0CAAAA,E,8CAAAA,E,mCAAAA,Q,SCISC,G,yGACDC,EAAYR,GAG9B,IAHiE,IAAD,EAC1DhO,EAAS,IAAI2N,MACbc,EAA2BT,EAAKN,SAC7BvN,EAAI,EAAGA,EAAIsO,EAAUxO,OAAQE,IAAK,CAC1C,IAAMwD,EAAU8K,EAAUtO,GACpBuO,EAAY/K,EAAQ3F,GACtBnE,EAAa2U,EAAOE,GACxB,GAAa,MAAT7U,EAAJ,CAIA,OAAO8J,EAAQgL,WACd,KAAKL,GAAUM,sBACf,KAAKN,GAAUO,wBAEdhV,EADmB2U,EAAOE,GACR,UAAC/K,EAAQmL,sBAAT,QAAyB,MAC3C,MACD,KAAKR,GAAUS,gBACdlV,EAAQ,IAAIsF,KAAKtF,GAAOwF,WACxB,MACD,KAAKiP,GAAUU,iBACd,IAAMC,EAAU,IAAI/P,OAAOrF,GAAO+F,MAAM,KAAK,GAC7C/F,EAAQ,yBAAKoI,IAAMhI,EAAagV,EAASlT,MAAM,KAAKmG,OAAO,OAC3D,MACD,KAAKoM,GAAUY,iBACdrV,EAAQ,4BAAQiC,MAAO,CAACqT,MAAMtV,IAAUA,GACxC,MACD,QACCA,EAAQ2U,EAAOE,GAEjB1O,EAAO8E,KAAKjL,QAtBXmG,EAAO8E,KAAKjL,GAwBd,OAAOmG,M,KC7BYoP,G,kDACjB,WAAY1T,GAAgB,uCAClBA,G,qDAEA,IAAD,OACC2T,EAAgBC,GAAqBzS,KAAKnB,MAAM2P,MAAOxO,KAAKnB,MAAM6T,UAAW1S,KAAKnB,MAAM8T,YAC9F,GAA4B,GAAxBH,EAAcpP,OAAe,OAAO,KACxC,IAAMwP,EAAYJ,EAAcA,EAAcpP,OAAS,GACjDyP,EAAW7S,KAAKnB,MAAM8T,WAAa,GAAKC,EAAa,EAAI5S,KAAKnB,MAAM8T,WAAa,EACjFG,EAAc9S,KAAKnB,MAAM8T,WAAa,EAAI,EAAGC,EAAU,EAAI5S,KAAKnB,MAAM8T,WAAa,EACzF,OAAQ,6BACJ,yBAAKjJ,aAAW,2BACZ,wBAAI3K,UAAU,cACV,wBAAIA,UAAU,aAAY,uBAAGA,UAAU,YAAY6B,QAAS,SAACa,GAAD,OAAO,EAAK5C,MAAM+B,QAAQkS,KAA5D,aACzBN,EAAc7I,KAAI,SAAC8E,EAAMnL,GACtB,OAAO,wBAAIyG,IAAK,OAAO5H,IAAYpD,UAAW,cAAc0P,EAAK,GAAK,EAAK5P,MAAM8T,WAAW,SAAS,KAAK,uBAAG5T,UAAU,aAAa6B,QAAS,SAACa,GAAD,OAAO,EAAK5C,MAAM+B,QAAQ6N,EAAO,KAAMA,OAExL,wBAAI1P,UAAU,aAAY,uBAAGA,UAAU,YAAY6B,QAAS,SAACa,GAAD,OAAO,EAAK5C,MAAM+B,QAAQiS,KAA5D,gB,GAjBCvS,aAwBzCmS,GAAuB,SAACjE,EAAekE,EAAmBK,GAG5D,IAAMC,EAA8B,GAC9BC,EAAchQ,KAAKU,KAAK+O,EAAYlE,GAGpC0E,EAAOH,EAAe,EACtBI,EAAOJ,EAAe,EAKxBE,EAAc,GACdD,EAAkB/K,KAAK,GAE3B,IAAK,IAAI3E,EAAI4P,EAAK5P,GAAK6P,EAAK7P,IACpBA,EAAI,GAAKA,GAAK2P,GACbD,EAAkB/K,KAAK3E,GAMhC,OAHI6P,EAAMF,GACND,EAAkB/K,KAAKgL,GAEpBD,GC9CUI,G,kDAMjB,WAAYvU,GAAa,IAAD,8BACpB,cAAMA,GAAO,IANjBR,MAAgB,CACZgV,uBAAmBjF,EACnBkF,eAAe,GAGK,EADxB5S,IAA4Ba,IAAMC,YACV,EAGxB+R,sBAAwB,SAAC9R,GACrB,IAAMvD,EAAG,eACT8F,EAAWvC,EAAEiF,QAAQW,MAAK,SAAUvC,GAChC5G,EAAI4B,SAAS,CAAEuT,kBAAmBvO,QANlB,EASxB0O,YAAc,SAAC/R,GACX,IAAMvD,EAAG,eACT,EAAKuV,uBAAuB,iBACvBpM,MAAK,SAAUwB,GACRA,GACA3K,EAAIwV,oBAdI,EAmBxBA,cAAgB,WACR,EAAKhT,IAAIiB,UACT,EAAKjB,IAAIiB,QAAQ3E,MAAQ,MAE7B,EAAK8C,SAAS,CAAEuT,uBAAmBjF,EAAWkF,eAAe,KAvBzC,E,+DA2BpB,OAAOtT,KAAKnB,MAAMiI,U,0CAGlB9G,KAAK2T,oB,wCAGL,GAAK3T,KAAKnB,MAAM+U,aAAhB,CAGA,IAAIC,EAAe7T,KAAKnB,MAAM+U,aAAa5T,KAAKoR,mBAAmBjQ,IACnE,GAAK0S,EAAL,CAGA,IAAMC,EAAU1W,EAAeyW,EAC/B7T,KAAKF,SAAS,CAAEuT,kBAAmBS,EAASR,eAAc,Q,+BAEpD,IAAD,OACCxM,EAAyB9G,KAAKoR,mBACpC,OACI,kBAAC,IAAM2C,SAAP,KACK/T,KAAK3B,MAAMiV,cACR,2BAAO5S,IAAKV,KAAKU,IACbsT,SAAUhU,KAAKuT,sBAAuBzV,KAAK,OAAOmW,OAAO,UAAUrN,KAAME,EAAQ3F,GAAIpC,UAAU,iBAGnG,kBAAC,WAAD,KACI,4BACA,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,OAAM,EAAK3B,SAAS,CAACwT,eAAc,KAAQnE,cAAc,cAAcpQ,UAAU,uBAAxG,aACA,2BAAOjB,KAAK,SAAS8I,KAAME,EAAQ3F,GAAInE,MAAM,YAGrD,kBAAC,GAAD,CAAckX,UAAWlU,KAAK3B,MAAMgV,oBACpC,kBAAC,GAAD,CAAcrE,UAAsCZ,GAAhCpO,KAAK3B,MAAMgV,kBAAgCzS,QAASZ,KAAKwT,YAAarE,cAAc,eAAepQ,UAAU,yBAAjI,e,GAjE4B+G,GAuEtCqO,GAAe,SAACtV,GAClB,OAAkB,GAAdA,EAAMmQ,MAAkBnQ,EAAMqV,UAC3B,yBAAKnV,UAAU,QAAQE,MAAO,CAAEiK,OAAQ,OAAS9D,IAAKvG,EAAMqV,UAAWhV,MAAM,KAAKmG,OAAO,OAD5C,MCxEnC+O,G,kDAMjB,WAAYvV,GAAa,IAAD,8BACpB,cAAMA,GAAO,IANjBR,MAAgB,CACZgW,YAAa,IAAIrG,IACjBsG,cAAe,CAAC,IAGI,EADxB5T,IAA4Ba,IAAMC,YACV,EAGxB+S,aAAe,SAAC9S,EAAGS,GACf,IAAMhE,EAAG,eACT8F,EAAWvC,EAAEiF,QAAQW,MAAK,SAAUvC,GAChC,IAAMuP,EAAcnW,EAAIG,MAAMgW,YAC9BA,EAAYlG,IAAIjM,EAAO4C,GACvB5G,EAAI4B,SAAS,CAAEuU,YAAaA,QARZ,EAYxBG,gBAAkB,SAAC/S,GACf,IAAMqF,EAAU,EAAKzI,MAAMiW,cACL,GAAlBxN,EAAQ1D,OACR0D,EAAQmB,KAAK,GAEbnB,EAAQmB,KAAKnB,EAAQA,EAAQ1D,OAAS,GAAK,GAE/C,EAAKtD,SAAS,CAAEwU,cAAexN,KAnBX,EAqBxB2N,mBAAqB,SAACC,GAClB,IAAMxW,EAAG,eACT,EAAKuV,uBAAuB,iBACvBpM,MAAK,SAAUwB,GACRA,GACA3K,EAAIyW,qBAAqBD,OA1BjB,EA+BxBC,qBAAuB,SAACD,GAGpB,IAFA,IAAML,EAAc,EAAKhW,MAAMgW,YACzBvN,EAAU,EAAKzI,MAAMiW,cAClBhR,EAAI,EAAGA,EAAIwD,EAAQ1D,OAAQE,IAAK,CACvBwD,EAAQxD,IACToR,IACT5N,EAAQ8N,OAAOtR,EAAG,GAClB+Q,EAAYQ,OAAOH,IAG3B,EAAK5U,SAAS,CAAEwU,cAAexN,EAASuN,YAAaA,KAzCjC,E,+DA4CpB,OAAOrU,KAAKnB,MAAMiI,U,0CAGlB9G,KAAK2T,oB,wCAGL,GAAK3T,KAAKnB,MAAM+U,aAAhB,CAGA,IAAIC,EAAe7T,KAAKnB,MAAM+U,aAAa5T,KAAKoR,mBAAmBjQ,IACnE,GAAK0S,GAAmD,IAAnC,IAAIxR,OAAOwR,GAAciB,OAA9C,CAMA,IAHA,IAAMT,EAAmCrU,KAAK3B,MAAMgW,YAC9CU,EAAuB,IAAI1S,OAAOwR,GAAc9Q,MAAM,KACtDuR,EAA0B,IAAIxD,MAC3BxN,EAAI,EAAGA,EAAIyR,EAAW3R,OAAQE,IAAK,CACxC,IAAM0R,EAAoBD,EAAWzR,GACrC+Q,EAAYlG,IAAI7K,EAAG0R,GACnBV,EAAcrM,KAAK3E,GAEvBtD,KAAKF,SAAS,CAAEuU,YAAaA,EAAaC,cAAeA,Q,+BAEnD,IAAD,OACCxN,EAAyB9G,KAAKoR,mBAEpC,OACI,kBAAC,IAAM2C,SAAP,KACK/T,KAAK3B,MAAMiW,cAAc3K,KAAI,SAAAzH,GAC1B,IAAMmS,EAAkC,EAAKhW,MAAMgW,YAAYjJ,IAAIlJ,GAC7D+S,OAAwB7G,GAAfiG,GAA8D,IAAlC,IAAIhS,OAAOgS,GAAaS,OAC7DI,GAAYD,GAAUE,GAAcd,GAC1C,OACI,kBAAC,WAAD,KACKY,EACG,2BAAOjB,SAAU,SAACvS,GAAD,OAAO,EAAK8S,aAAa9S,EAAGS,IAAQpE,KAAK,OAAOmW,OAAO,UACpErN,KAAME,EAAQ3F,GAAIpC,UAAU,iBAAoB,KACvDmW,EACG,6BACI,2BAAOlY,MAAOqX,EAAavW,KAAK,SAAS8I,KAAME,EAAQ3F,KACvD,kBAAC,GAAD,CAAc+S,UAAWG,KAG5BY,EAMG,KALA,6BACI,2BAAOjY,MAAOqX,EAAavW,KAAK,SAAS8I,KAAME,EAAQ3F,GAAIpC,UAAU,iBACrE,kBAAC,GAAD,CAAcmV,UAAW9W,EAAeiX,IACxC,uBAAGtV,UAAU,uBAAuBsV,IAIhD,kBAAC,GAAD,CAAcrF,UAAgCZ,GAA1B,EAAK/P,MAAMgW,YAC3BzT,QAAS,SAACa,GAAD,OAAY,EAAKgT,mBAAmBvS,IAAQiN,cAAc,eAAepQ,UAAU,yBADhG,UAEYmD,OAIxB,4BACA,kBAAC,GAAD,CAAciN,cAAc,cAAcvO,QAASZ,KAAKwU,iBAAxD,Y,GA5GoC1O,GAkH9CqP,GAAgB,SAAC/S,GACnB,OAAOA,GAAUA,EAAOgT,WAAW,eAEjCjB,GAAe,SAACtV,GAClB,OAAkB,GAAdA,EAAMmQ,MAAkBnQ,EAAMqV,UAC3B,yBAAKnV,UAAU,QAAQE,MAAO,CAAEiK,OAAQ,OAAS9D,IAAKvG,EAAMqV,UAAWhV,MAAM,KAAKmG,OAAO,OAD5C,MC/HnCgQ,G,kDAEjB,WAAYxW,GAAQ,uCACVA,G,qDAGN,IAAMyW,EAAwC,YAA1BtV,KAAKnB,MAAMyW,YAA4B,WAAa,aACxE,OACI,yBAAKvW,UAAW,cAAeiB,KAAKnB,MAAME,UAAW,KAAsB,YAAfuW,EAA4B,GAAK,QACzF,2BAAOvW,UAA2B,YAAfuW,EAA4B,GAAK,YAAa,gCAAStV,KAAKnB,MAAMsK,MAAQnJ,KAAKnB,MAAMsK,MAAQ,OAChH,yBAAKpK,UAA2B,YAAfuW,EAA4B,GAAK,YAC7CtV,KAAKnB,MAAMoD,e,GAXO3B,aCiBjCiV,G,kDAQF,WAAY1W,GAAa,IAAD,8BACpB,cAAMA,GAAO,IARjB2W,kBAAuC3H,GAAkB4H,cAOjC,EANxBpX,MAAgB,CACZqX,UAAW,GACXrC,uBAAmBjF,EACnBkG,cAAe,CAAC,IAGI,EADxB5T,IAA4Ba,IAAMC,YACV,EAGxB4P,iBAAmB,WACf,OAAO,EAAKvS,MAAM8W,eAJE,EAMxBC,gBAAkB,WAEd,MADqB,CAAEnK,SAA8C,GAApC,EAAK2F,mBAAmB3F,WAPrC,EAaxBoK,gBAAkB,SAACvO,GACf,IAAKA,EAASwO,UAAwC,GAA5BxO,EAASwO,SAAS1S,OACxC,MAAM,IAAI2S,MAAM,aAEpB,EAAKjW,SAAS,CAAE4V,UAAWpO,EAASwO,WACpC,EAAKnC,mBAlBe,EAoBxBqC,cAAgB,WACZ,IACM7N,EADU,EAAKiJ,mBACA6E,qBACrB,EAAKC,WACD,EAAKV,kBAAkBW,gBACvB,EAAKN,gBACL,EAAKxP,qBACL8B,IA3BgB,EA8BxBiO,aAAe,WACX,OAAI,EAAKhF,mBAAmBU,WAAaL,GAAUM,uBAAyB,EAAKX,mBAAmBU,WAAaL,GAAUO,yBA/BvG,EAoCxBqE,wBAA0B,WACtB,OAAO,EAAKD,gBAAiD,GAA/B,EAAK/X,MAAMqX,UAAUtS,QArC/B,EAuCxBkT,kBAAoB,WACZ,EAAKD,2BACL,EAAKL,iBAzCW,EAoDxBrC,gBAAkB,WACd,GAAK,EAAK9U,MAAM+U,cAAiB,EAAKlT,IAAIiB,QAA1C,CAIA,IAAM4U,EAAY,EAAKnF,mBAAmBjQ,GACtCqV,EAAc,EAAK3X,MAAM+U,aAAa2C,GAC1C,GAAKC,EAAL,CAEA,IACIC,OAAoBrI,EACxB,OAF6B,EAAKgD,mBAAmBU,WAGjD,KAAKL,GAAUO,wBACf,KAAKP,GAAUM,sBACX,GAAmC,GAA/B,EAAK1T,MAAMqX,UAAUtS,OACrB,MAEJ,IAAMsT,EAAkB,EAAKtF,mBAAmBsF,gBAChD,IAAKA,EAAiB,MACtBD,EAAoBD,EAAYE,GAChC,MAEJ,QACID,EAAoBD,EAGxBC,IACA,EAAK/V,IAAIiB,QAAQ3E,MAAQyZ,MA/ET,E,iEA6CpBzW,KAAKsW,sB,0CAGLtW,KAAKsW,oBACLtW,KAAK2T,oB,+BAmCL,IAAM7M,EAAU9G,KAAKoR,mBACfuF,EAAe3W,KAAK4V,kBAC1B,GAAI5V,KAAKqW,0BACL,OAAO,yBAAKtX,UAAU,cAAf,cAEX,GAAuB,GAAnB+H,EAAQkJ,QACR,OACI,kBAAC,GAAD,CAAWsF,YAAY,WAAWnM,MAAOrC,EAAQyK,WAC7C,2CAAWoF,EAAX,CAAyB3Z,MAAM,YAAY0D,IAAKV,KAAKU,IAAK3B,UAAU,eAAe6H,KAAME,EAAQ3F,GAAI9B,UAAQ,MAIzH,IAAIuX,EAAQ,kBAAC,WAAD,MACZ,OAAQ9P,EAAQgL,WACZ,KAAKL,GAAUO,wBACf,KAAKP,GAAUM,sBACX,IAAM8E,EAAU7W,KAAK3B,MAAMqX,UAC3BkB,EAAQ,4BAAQlW,IAAKV,KAAKU,IAAK3B,UAAU,eAAe6H,KAAME,EAAQ3F,IACjE0V,EAAQlN,KAAI,SAAAmN,GACT,IAAMC,EAAkBjQ,EAAQ4P,gBAC1BzE,EAAiBnL,EAAQmL,eAC/B,OAAKA,GAAmB8E,EAEpB,4BAAQ/Z,MAAO8Z,EAAOC,IAAoBD,EAAO7E,IAFH,SAM1D,MACJ,KAAKR,GAAUU,iBACXyE,EAAQ9P,EAAQkQ,SACZ,kBAAC,GAAD,CAAwB9Y,IAAK8B,KAAKgG,UAAW4N,aAAc5T,KAAKnB,MAAM+U,aAAc9M,QAASA,IAE7F,kBAAC,GAAD,CAAgB5I,IAAK8B,KAAKgG,UAAW4N,aAAc5T,KAAKnB,MAAM+U,aAAc9M,QAASA,IACzF,MACJ,KAAK2K,GAAUwF,oBACXL,EAAQ,8CAAcD,EAAd,CAA4BjW,IAAKV,KAAKU,IAAK3B,UAAU,eAAe6H,KAAME,EAAQ3F,MAC1F,MACJ,QACIyV,EAAQ,yCAAO9Y,KAAMgJ,EAAQhJ,MAAU6Y,EAA/B,CAA6CjW,IAAKV,KAAKU,IAAK3B,UAAU,eAAe6H,KAAME,EAAQ3F,MAGnH,OACI,kBAAC,GAAD,CAAWmU,YAAY,WAAWnM,MAAOrC,EAAQyK,WAC3CqF,O,GAvIW9Q,GAmJd6E,eAAWC,YACtBxM,EADsBwM,CAExB2K,KCvJI2B,G,kDAIF,WAAYrY,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAJjB2W,kBAAuC3H,GAAkB4H,cAGjC,EAFxB5G,UAAmB,EAEK,EADxB+E,kBAAmBxF,EACK,EAgBxB/C,SAAW,SAAC5J,GACRA,EAAEuJ,iBACF,IAAMmM,EAAO1V,EAAEiF,OAAQxI,EAAG,eAC1B,EAAK0K,iBAAiB,cACjBvB,MAAK,SAAUwB,GACRA,GAAM3K,EAAIkZ,OAAOD,OArBT,EA2BxBC,OAAS,SAACD,GACN,IAAMlM,EAAqB,IAAIC,SAASiM,GAClCxF,EAAa,GAAIzT,EAAG,eACpBmZ,EAA2B,IAAIvG,MAC/BwG,EAAqB,GAC3BrM,EAASsM,SAAQ,SAACva,EAAO+M,GACrBnK,QAAQ6E,MAAM,aAAcsF,GACvB4H,EAAO5H,KACR4H,EAAO5H,GAAO,IAAI+G,OAEtB,IpBAqB0G,EoBAf1Q,EAAkC,EAAKsK,iBAAiBrH,GAC9D,IAAKjD,EAAS,OAAO,EACrB,OAAQA,EAAQgL,WACZ,KAAKL,GAAUO,wBACf,KAAKP,GAAUM,sBACX,IAAM0F,EAAY3Q,EAAQ4P,gBACtBe,GACA9F,EAAO5H,GAAK9B,KAAZ,eAAoBwP,EAAYza,IAEpC,MACJ,KAAKyU,GAAUU,iBAEX,GADAvS,QAAQ6E,MAAMsF,EAAK,aACN,UAAT/M,EACA4C,QAAQ6E,MAAM,qBAAsBsF,GACpCuN,EAAarP,KAAK8B,QAEf,GAA6B,QAA1B/M,EAAM0a,YAAY9Q,KAAgB,CACxC,IAAI+Q,GpBjBKH,EoBiBsBxa,EpBhB5C,IAAIkH,SAAQ,SAAUC,EAASC,GAClC,IACI,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAciT,GACrBnT,EAAOK,OAAS,WAAcP,EAAQE,EAAOlB,SAC7CkB,EAAOM,QAAU,SAAUC,GACvBR,EAAOQ,IAEb,MAAOnD,GACL2C,EAAO3C,QoBO2C4F,MAAK,SAAAvC,GACvC6M,EAAO5H,GAAK9B,KAAKnD,MAClByC,MAAM3H,QAAQgF,OACZ6C,SAAQ,WAAc7H,QAAQ6E,MAAM,aACzC4S,EAASpP,KAAK0P,QAEdhG,EAAO5H,GAAK9B,KAAKjL,GAErB,MACJ,QACI2U,EAAO5H,GAAK9B,KAAKjL,GAGzB,OAAO,KAEXkH,QAAQ0T,IAAIP,GAAUhQ,MAAK,SAAU3E,GACjC,IAAMmV,EAAgB3Z,EAAI4Z,uBAAuBnG,EAAQ2F,GACzD1X,QAAQ6E,MAAM,0BAA2BoT,GACzC3Z,EAAI6Z,WAAWF,OAxEC,EA4ExBC,uBAAyB,SAACE,EAAeV,GACrC,IAAMnU,EAAmC,EAAK0L,UAAY,EAAK+E,aAAtB,2BACrC,EAAKA,cADgC,IAClB0D,aAAaA,IACpC,CAACA,aAAa,IAAIxG,OAClB,IAAK,IAAM/G,KAAOiO,EAAW,CACzB,IAAMlR,EAAiBkR,EAAUjO,GACjCnK,QAAQ6E,MAAMsF,EAAK,YAAajD,EAAQ1D,QAClB,GAAlB0D,EAAQ1D,OACRD,EAAO4G,GAAOjD,EAAQ,GACfA,EAAQ1D,OAAS,IACxBD,EAAO4G,GAAOjD,EAAQmR,KAAK,MAInC,OADA9U,EAAOmU,aAAeA,EACfnU,GA1Fa,EA6FxB4U,WAAa,SAACpG,GACV,EAAKuE,WACD,EAAKV,kBAAkB0C,KAAM,EAAKC,YAAa,EAAK9R,qBACpD,EAAK+R,oBAAoBvI,WAAY8B,EAAQ,EAAK9C,WAhGlC,EAmGxBsJ,YAAc,SAAC7Q,GACX,EAAK+Q,SAAS,iBAlGVxZ,EAAM+U,eACN,EAAK/E,UAAW,EAChB,EAAK+E,aAAe/U,EAAM+U,cAJV,E,gEASpB,OAAO5T,KAAKnB,MAAMyZ,iB,2CAGuB,GAArCtY,KAAKoY,oBAAoB7H,UACzBvQ,KAAKnB,MAAMwC,Y,uCAWF0I,GACb,OAAO4F,GAAeyB,iBAAiBpR,KAAKoY,oBAAqBrO,K,+BA8EjE,IAAMuO,EAAiCtY,KAAKoY,oBAEtCG,EAAcvY,KAAK6O,SAAY,0BAAM9P,UAAU,uBAAhB,aAAuD,GAC5F,OACI,yBAAKoC,GAAG,kBACJ,kBAAC,GAAD,CAAclC,MAAO,CAAEuQ,aAAc,OAAS5O,QAASZ,KAAKnB,MAAMwC,QAAS8N,cAAc,qBAAzF,QACA,0BAAM9D,SAAUrL,KAAKqL,SAAUlK,GAAG,eAClC,kBAAC,GAAD,CAAOC,MAAO,8BAAOkX,EAAexI,MAAtB,gBAA0CyI,GAAqB9I,cAAe,kBAAC,GAAD,OACpF,kBAAC,GAAD,CAAamE,aAAc5T,KAAK4T,aAAc1V,IAAK8B,KAAKgG,UAAWsS,eAAgBA,W,GAnH9ExS,GA2HvB0S,GAAc,SAAC3Z,GACjB,OACI,yBAAKE,UAAU,aACX,4BAAQjB,KAAK,SAASiB,UAAU,mBAAhC,UACA,2BAAOjB,KAAK,QAAQiB,UAAU,sBAKpC0Z,GAAc,SAAC5Z,GACjB,IAAMgS,EAA4BhS,EAAMyZ,eAAezH,SACjD6H,EAA+C,IAAI5H,MACrD6H,EAAkB,EACtBD,EAAgBzQ,KAAK,IAAI6I,OACzB,IAAK,IAAIxN,EAAI,EAAGA,EAAIuN,EAASzN,OAAQE,IAAK,CACtC,IAAMwD,EAAU+J,EAASvN,GACrBA,EAAI,GAAKA,EAAI,GAAK,IAClBqV,IACAD,EAAgBzQ,KAAK,IAAI6I,QAE7B4H,EAAgBC,GAAS1Q,KAAKnB,GAElC,OACI,yBAAK/H,UAAU,OACV2Z,EAAgB/O,KAAI,SAAAkH,GACjB,OACI,yBAAK9R,UAAU,YACV8R,EAASlH,KAAI,SAAA7C,GACV,OAAO,kBAAC,GAAD,CAAgB8M,aAAc/U,EAAM+U,aAAc1V,IAAKW,EAAMX,IAAKyX,cAAe7O,aAQrG6D,eAAWC,YAAQxM,EAARwM,CAAmCsM,KCpKvD0B,G,kDAEF,WAAY/Z,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAFjB2W,kBAAsC3H,GAAkB4H,cAChC,EAGxBZ,OAAS,SAACpT,GACN,IAAMvD,EAAG,eACT,EAAKuV,uBAAuB,kBAC3BpM,MAAK,SAASwB,GACPA,GACA3K,EAAI2a,eARQ,EAYxBA,SAAW,WACP,IAAM3H,EAAS,EAAKrS,MAAMqS,OACpBoH,EAAgC,EAAKzZ,MAAMyZ,eAC3CQ,EAAWnJ,GAAeoJ,YAAY7H,EAAQoH,GACpD,EAAKpC,WACD,EAAKV,kBAAkBX,OACvB,EAAKmE,cACL,EAAK3S,qBACLiS,EAAezI,WAAYiJ,IApBX,EAuBxBG,cAAgB,WACZ,IAAM/H,EAAS,EAAKrS,MAAMqS,OACpBoH,EAAgC,EAAKzZ,MAAMyZ,eAC3CQ,EAAWnJ,GAAeoJ,YAAY7H,EAAQoH,GACpD,EAAKpC,WACD,EAAKV,kBAAkB0D,QACvB,EAAKC,aACL,EAAK9S,qBACLiS,EAAezI,WACfiJ,IAhCgB,EAmCxBK,aAAe,SAAC7R,GACZ,IAAKA,EAASwO,UAAwC,GAA5BxO,EAASwO,SAAS1S,OACxC,MAAM,IAAI2S,MAAM,oBAEjB,EAAKlX,MAAMua,cACV,EAAKva,MAAMua,aAAa9R,IAxCR,EA2CxB0R,cAAgB,SAAC1R,GACb,EAAK+Q,SAAS,kBACd,EAAKxZ,MAAMwa,UA7CS,E,qDAgDpB,OAAuB,GAAnBrZ,KAAKnB,MAAMmQ,KAAsB,KAEjC,yBAAKjQ,UAAU,aACX,kBAAC,GAAD,CAAc6B,QAASZ,KAAKiZ,cAAe9J,cAAc,cAAcpQ,UAAU,2BACjF,kBAAC,GAAD,CAAc6B,QAASZ,KAAK6U,OAAQ9V,UAAU,wBAAwBoQ,cAAc,sB,GAtDrErJ,GAgEhB6E,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGxBgO,KC5EmBU,G,uKAGb,IAAMza,EAAQmB,KAAKnB,MACb0a,EAA6B1a,EAAM0a,YACzC,OAAQ,+BACJ,4BACI,kCACCA,EAAY5P,KAAI,SAAA6P,GACb,IAAMhI,EAASgI,EAAWhI,OAC1B,OACI,4BACI,2BAAIgI,EAAWrQ,OACf,6BACKqI,EACG,kBAAC,WAAD,KACI,2BAAOwC,SAAUnV,EAAM4a,eAAgB7S,KAAM4S,EAAWxc,MAAQ,OAC5D+B,UAAU,eAAeyM,YAAa,QAC1C,2BAAOwI,SAAUnV,EAAM4a,eAAgB7S,KAAM4S,EAAWxc,MAAQ,SAC5D+B,UAAU,eAAeyM,YAAa,UAC1C,2BAAOwI,SAAUnV,EAAM4a,eAAgB7S,KAAM4S,EAAWxc,MAAQ,QAC5D+B,UAAU,eAAeyM,YAAa,UAG9C,2BAAOwI,SAAUnV,EAAM4a,eAAgBjO,YAAagO,EAAWrQ,MAC3DpK,UAAU,eAAe6H,KAAM4S,EAAWxc,SAEtD,yBAAK+B,UAAU,aACX,4BAAQ2a,iBAAe,MAAM9Y,QAAS/B,EAAM8a,mBAAoBC,eAAcJ,EAAWxc,MAAO+B,UAAU,oCACtG,uBAAG2a,iBAAe,MAAM9Y,QAAS/B,EAAM8a,mBAAoBC,eAAcJ,EAAWxc,MAAO+B,UAAU,qBACzG,4BAAQ2a,iBAAe,OAAO9Y,QAAS/B,EAAM8a,mBAAoBC,eAAcJ,EAAWxc,MAAO+B,UAAU,oCACvG,uBAAG2a,iBAAe,OAAO9Y,QAAS/B,EAAM8a,mBAAoBC,eAAcJ,EAAWxc,MAAO+B,UAAU,4BAK1H,4C,GApC6BuB,aCDxBuZ,G,uKAGP,IAAD,EACL,OAAuB,GAAnB7Z,KAAKnB,MAAMmQ,KAAsB,KAEjC,yBAAKjQ,UAAU,sBAAf,UACKiB,KAAKnB,MAAMoD,gBADhB,QAC0B,qB,GAPG3B,aCCpBwZ,I,yDACjB,WAAYjb,GAAQ,uCACVA,G,qDAKN,IADA,IAAMkb,EAA0B,IAAIjJ,MAC3BxN,EAAI,EAAGA,GAAK,GAAIA,IACrByW,EAAU9R,KAAK,yBAAK8B,IAAK,gBAAgBzG,KAE7C,OACI,yBAAKrE,MAAO,CAACC,MAAM,OAAQmG,OAAO,OAAQvD,QAAQ,SAAU/C,UAAU,+BACjE,yBAAKE,MAAO,CAAC+a,WAA8B,GAAnBha,KAAKnB,MAAMmQ,KAAc,SAAS,WAAYjQ,UAAU,eAC9Egb,Q,GAbkBzZ,cCsB/B2Z,G,kDAQF,WAAYpb,GAAa,IAAD,8BACpB,cAAMA,GAAO,IARjB2W,kBAAuC3H,GAAkB4H,cAOjC,EANxBpX,MAAgB,CACZ6b,UAAU,EAAOC,SAAS,EAC1B5L,OAAQ,CAAEC,MAAO,EAAGC,KAAM,EAAGE,aAAc,KAIvB,EAFxBiF,kBAAoBxF,EAEI,EADxBkK,oBACwB,IAOxB8B,aAAe,SAAC7L,GACZ,IAAMI,EAAeJ,EAAOI,aAC5B,IAAK,IAAM5E,KAAO4E,EAAc,CAC5B,IAAM7H,EAAU6H,EAAa5E,QACdqE,GAAXtH,GAAmC,MAAXA,GAAiD,GAA9B,IAAIzE,OAAOyE,GAAS1D,aACpCgL,GAAvBG,EAAOI,qBACAJ,EAAOI,aAAa5E,GAIvC,OAAOwE,GAjBa,EAmBxB8L,aAAe,SAAC5L,GACZ,IAAMF,EAAS,EAAKlQ,MAAMkQ,OACpBsB,EAAa,EAAKyI,eAAezI,WACvCtB,EAAOE,KAAP,OAAcA,QAAd,IAAcA,IAAQF,EAAOE,KAC7B,IAAMd,EAAsB,CACxBW,OAAQuB,EACRtB,OAAQ,EAAK6L,aAAa7L,IAE9B,EAAK2H,WACD,EAAKV,kBAAkB6E,aACvB,EAAKC,eACL,EAAKjU,qBACLsH,IA/BgB,EAmCxB2M,eAAiB,SAAChT,GACd,EAAKxH,SAAS,CAAEya,WAAYjT,EAAUiH,OAAQjH,EAASiH,UApCnC,EAsCxBiM,iBAAmB,WACX,EAAKnc,MAAM8b,SAGX,EAAK7B,eAAezI,YAAc,EAAKhR,MAAMyZ,eAAezI,iBAAuCzB,GAAzB,EAAK/P,MAAMkc,aAGzF,EAAKjC,eAAiB,EAAKzZ,MAAMyZ,eACjC,EAAK+B,aAAa,KA9CE,EAyDxBI,gBAAkB,SAACnX,GAAuB,IAAD,IAErC,OADU,UAAC,EAAKjF,MAAMkQ,OAAOE,YAAnB,QAA2B,IAA3B,UAAiC,EAAKpQ,MAAMkQ,OAAOC,aAAnD,QAA4D,GAAKlL,EAAI,GA1D3D,EA6DxBoX,iBAAmB,SAACjZ,GAChB,IAAIgN,EAAO,EAAKpQ,MAAMkQ,OAAOoM,sBAAwB,EAAKtc,MAAMkQ,OAAOE,KAAO,EAC9E,EAAK4L,aAAa5L,IA/DE,EAiExBgL,eAAiB,SAAChY,GACd,IAAMmF,EAAOnF,EAAEiF,OAAOE,KAChB5J,EAAQyE,EAAEiF,OAAO1J,MACjBuR,EAAS,EAAKlQ,MAAMkQ,YACCH,GAAvBG,EAAOI,eACPJ,EAAOI,aAAe,IAE1BJ,EAAOI,aAAa/H,GAAQ5J,EAC5B,EAAK8C,SAAS,CAAEyO,OAAQA,KAzEJ,EA2ExBqM,YAAc,SAACnZ,GACX,IAAM8M,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAOI,aAAe,GACtBJ,EAAOC,MAAQ,EACf,EAAK1O,SAAS,CAAEyO,OAAQA,KA/EJ,EAiFxBoL,mBAAqB,SAAClY,GAClB,IAAMoZ,EAAwBpZ,EAAEiF,OAAOmU,QACjCtM,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAOuM,QAAUD,EAAO,QACxBtM,EAAOwM,UAAYF,EAAO,UAC1B,EAAK/a,SAAS,CAAEyO,OAAQA,IACxB,EAAK8L,aAAa,IAvFE,EAyFxBjB,aAAe,SAAC9R,GACPA,EAASwO,WAGd,EAAKlC,aAAetM,EAASwO,SAAS,GACtC,EAAKhW,SAAS,CAAEoa,UAAU,MA9FN,EAgGxBc,eAAiB,SAACvZ,GACd,EAAKmS,kBAAexF,EACpB,EAAKtO,SAAS,CAAEoa,UAAU,KAlGN,EAoGxBe,iBAAmB,SAACxM,GAChB,IAAMF,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAOoM,uBAAwB,EAC/BpM,EAAOE,KAAO3L,SAAS2L,GAAQ,EAC/B,EAAK3O,SAAS,CAAEyO,OAAQA,KAxGJ,EA0GxB2M,kBAAoB,SAAC1M,GACjB,IAAMD,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAOC,MAAQ1L,SAAS0L,GACxB,EAAK1O,SAAS,CAAEyO,OAAQA,KA3GxB,EAAK+J,eAAiB,EAAKzZ,MAAMyZ,eAFb,E,2DAgDPtY,KAAKF,SAAS,CAAEqa,SAAS,M,mCAC3Bna,KAAKF,SAAS,CAAEqa,SAAS,M,2CAEpCna,KAAKkG,sBACLlG,KAAKwa,qB,0CAGLxa,KAAKwa,qB,+BAwDC,IAAD,eACL,QAAIpM,GAAapO,KAAK3B,MAAMkc,WACxB,OAAO,6CAEX,IAAMhB,EAA6B5J,GAAe0B,gBAAgBrR,KAAKnB,MAAMyZ,gBACvE6C,EAAoBnb,KAAK3B,MAAMkc,WAAWzE,SAAW9V,KAAK3B,MAAMkc,WAAWzE,SAAW,GAC5F,YAAmB1H,GAAfmL,QAA0CnL,GAAd+M,EACrB,kBAAC,GAAD,MAGgB,GAAvBnb,KAAK3B,MAAM6b,SACJ,kBAAC,GAAD,CAAgBtG,aAAc5T,KAAK4T,aAAc0E,eAAgBtY,KAAKsY,eAAgBjX,QAAS,SAACI,GAAQ,EAAK3B,SAAS,CAAEoa,UAAU,KAAYhc,IAAK8B,KAAKgG,YAI/J,yBAAK7E,GAAG,kBACJ,kBAAC,GAAD,CAAc6N,KAAsC,GAAhChP,KAAKsY,eAAe/H,SAAkBtR,MAAO,CAAEuQ,aAAc,OAAS5O,QAASZ,KAAKgb,eAAgB7L,cAAc,eAAtI,cACA,0BAAMhO,GAAG,cAAckK,SAAU,SAAC5J,GAAQA,EAAEuJ,mBACxC,kBAAC,GAAD,CAAO5J,MAAM,SAASmO,YAAY,GAC9B,6BACI,yBAAKxQ,UAAU,kBACX,yBAAKA,UAAU,SACX,2BAAO/B,OAAO,UAACgD,KAAK3B,MAAMkQ,OAAOE,YAAnB,QAA2B,GAAK,EAAGuF,SAAU,SAACvS,GAAQ,EAAKwZ,iBAAiBxZ,EAAEiF,OAAO1J,QAAUkW,IAAI,IAAInU,UAAU,eAAejB,KAAK,SAAS0N,YAAY,gBAE5K,yBAAKzM,UAAU,SACX,2BAAO/B,MAAOgD,KAAK3B,MAAMkQ,OAAOC,MAAOwF,SAAU,SAACvS,GAAD,OAAO,EAAKyZ,kBAAkBzZ,EAAEiF,OAAO1J,QAAQkW,IAAI,IAAInU,UAAU,eAAejB,KAAK,SAAS0N,YAAY,sBAGnK,kBAAC,GAAD,CAAmBH,SAAUrL,KAAK0a,iBAAkBU,QAASpb,KAAK4a,gBAG1E,kBAAC,GAAD,CAAmBpM,MAAK,UAAExO,KAAK3B,MAAMkQ,OAAOC,aAApB,QAA6B,EAAGkE,UAAS,UAAE1S,KAAK3B,MAAMkc,WAAW7H,iBAAxB,QAAqC,EAClGC,WAAU,UAAE3S,KAAK3B,MAAMkQ,OAAOE,YAApB,QAA4B,EAAG7N,QAASZ,KAAKqa,eAC3D,kBAAC,GAAD,CAAOjZ,MAAM,aACRpB,KAAK3B,MAAM8b,QACR,kBAAC,GAAD,CAASA,QAASna,KAAK3B,MAAM8b,UAAc,KAC/C,yBAAKpb,UAAU,kBAAkBE,MAAO,CAAEoc,SAAU,WAChD,2BAAOtc,UAAU,SACb,kBAAC,GAAD,CAAiB4a,mBAAoB3Z,KAAK2Z,mBAAoBF,eAAgBzZ,KAAKyZ,eAAgBF,YAAaA,IAChH,+BAEQ4B,EAAWxR,KAAI,SAACxG,EAAQG,GACpB,IAAMgY,EAAS,EAAKb,gBAAgBnX,GAC9BiY,EAAqB7J,GAAa8J,YAAYrY,EAAQ,EAAKtE,MAAMyZ,gBACvE,OAAQ,4BACJ,4BAAKgD,GACJC,EAAO5R,KAAI,SAAA3M,GACR,IACI,OAAQ,4BAAKA,GACf,MAAO4H,GACL,OAAQ,qCAGhB,4BAAI,kBAAC,GAAD,CAAkBoK,KAAsC,GAAhC,EAAKsJ,eAAe/H,SAAkB6I,aAAc,EAAKA,aAAclI,OAAQ/N,EAAQmV,eAAgB,EAAKA,eAAgBe,OAAQ,kBAAM,EAAKgB,kBAAajM,IAAYlQ,IAAK,EAAK8H,2B,GA5KjOF,GAyLvB2V,GAAU,SAAC,GAAe,IAAdtB,EAAa,EAAbA,QACd,OACI,yBAAKlb,MAAO,CAAEC,MAAO,OAAQmG,OAAQ,OAAQqW,WAAY,OAAQlb,gBAAiB,uBAAwBmb,WAAY,QAASC,UAAW,QAAS5S,SAAU,aACzJ,kBAAC,GAAD,CAASgG,KAAMmL,MAIrB0B,GAAoB,SAAChd,GACvB,OAAQ,yBAAKE,UAAU,aACnB,4BAAQ6B,QAAS/B,EAAMwM,SAAUtM,UAAU,4BAA2B,0BAAMA,UAAU,QAAO,uBAAGA,UAAU,iBAA1G,gBACA,4BAAQ6B,QAAS/B,EAAMuc,QAAStd,KAAK,QAAQiB,UAAU,0BAAyB,0BAAMA,UAAU,QAAO,uBAAGA,UAAU,qBAApH,WAIO4L,eAAWC,YACtBxM,EADsBwM,CAExBqP,KCpNI6B,G,kDAKF,WAAYjd,GAAa,IAAD,8BACpB,cAAMA,GAAO,IALjB2W,kBAAuC3H,GAAkB4H,cAIjC,EAHxBtN,KAAe,GAGS,EAFxB4T,uBAAiC,EAET,EADxBzD,oBACwB,IAIxB0D,qBAAuB,SAAC1U,GACpB,EAAKyU,uBAAwB,OACE3N,GAA3B9G,EAASgR,iBAGb,EAAK9C,kBAAkByG,kBAAkB,EAAKpd,MAAMsJ,KAAMb,EAASgR,gBACnE,EAAKxY,SAAS,CAAEwY,eAAgBhR,EAASgR,iBACzC,EAAK4D,SAAS5U,EAASgR,kBAXH,EAoBxB4D,SAAW,SAACC,GACRrf,SAASsE,MAAQ,IAAIiB,OAAJ,OAAW8Z,QAAX,IAAWA,OAAX,EAAWA,EAAYrM,OAAOtN,YArB3B,E,sEAcG4L,GAAnBpO,KAAKnB,MAAMsJ,MAAqBnI,KAAKmI,MAAQnI,KAAKnB,MAAMsJ,OACxDnI,KAAKmI,KAAOnI,KAAKnB,MAAMsJ,KACvBnI,KAAKoc,sBAETxc,QAAQ6E,MAAM,4BAA6BzE,KAAKnB,MAAMsJ,Q,+CAM/BiG,GAAnBpO,KAAKnB,MAAMsJ,MAAqBnI,KAAKmI,MAAQnI,KAAKnB,MAAMsJ,OACxDnI,KAAKmI,KAAOnI,KAAKnB,MAAMsJ,KACvBnI,KAAKoc,wB,yHASS,IAAD,OAEjB,QAAIhO,GAAapO,KAAKmI,MAAsC,GAA9BnI,KAAK+b,sBAAnC,CAGA,IAAMM,EAAyBrc,KAAKwV,kBAAkB4C,kBAAkBpY,KAAKmI,MAC7E,QAA8BiG,GAA1BiO,EAKA,OAJArc,KAAK+b,uBAAwB,EAC7B/b,KAAKF,SAAS,CAAEwY,eAAgB+D,SAChCrc,KAAKkc,SAASG,GAIlBrc,KAAK+b,uBAAwB,EAC7B/b,KAAKF,SAAS,CAAEwY,oBAAgBlK,IAChCpO,KAAKkW,WACDlW,KAAKwV,kBAAkB4G,mBACvBpc,KAAKgc,sBACL,SAACva,GAAa,EAAKsa,uBAAwB,EAAO,EAAK1V,qBAAqB5E,KAC5EzB,KAAKmI,S,+BAKT,YAAiCiG,GAA7BpO,KAAK3B,MAAMia,eACJ,yBAAKvZ,UAAU,OAClB,yBAAKA,UAAU,SAAQ,yBAAKA,UAAU,iBAAiBC,KAAK,UACxD,0BAAMD,UAAU,WAAhB,gBAGJ,yBAAKA,UAAU,UAAS,uDAI5B,yBAAKoC,GAAG,uBAAuBpC,UAAU,mBACrC,4BAAKiB,KAAK3B,MAAMia,eAAexI,OAC/B,kBAAC,GAAD,CAAgB5R,IAAK8B,KAAKgG,UAAWsS,eAAgBtY,KAAK3B,MAAMia,sB,GA5E7CxS,GAsFpB6E,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGxBkR,KCtFIQ,G,kDAKF,WAAYzd,GAAa,IAAD,8BACpB,cAAMA,EAAO,eAAe,IALhC2W,kBAAuC3H,GAAkB4H,cAIjC,EAHxBpX,MAAgB,CACZ8J,UAAMiG,GAEc,EAIxBmO,2BAA6B,SAACjV,GAC1B,EAAKkO,kBAAkB1H,qBAAuBxG,EAASkV,YAAclV,EAASkV,YAAc,GAC5F,EAAKC,kBACL,EAAKC,WAPe,EASxBD,gBAAkB,WAGd,IAFA,IAAME,EAAuB,GACvB7O,EAA6C,EAAK0H,kBAAkB1H,qBACjExK,EAAI,EAAGA,EAAIwK,EAAqB1K,OAAQE,IAAK,CAClD,IAAMwD,EAAUgH,EAAqBxK,GACrCqZ,EAAa1U,KAAK,CACdrB,KAAME,EAAQqC,MACd3L,IAAKsJ,EAAQ+I,WACb1H,KAAMrB,EAAQ+I,WACdzH,UAAWtB,EAAQqI,gBAGvB,EAAKtQ,MAAM4d,iBACX,EAAK5d,MAAM4d,gBAAgBE,IAtBX,EAyBxBC,qBAAuB,WACnB,GAAI,EAAKpH,kBAAkB1H,qBAAqB1K,OAAS,EAGrD,OAFA,EAAKqZ,uBACL,EAAKC,UAGT,EAAKxG,WACD,EAAKV,kBAAkBqH,yBACvB,EAAKN,2BACL,EAAKlW,uBAlCW,EAqCxByW,QAAU,WACN,OAAO,EAAKje,MAAMke,MAAM3V,OAAOe,MAtCX,E,gEAyCpB,4EACAnI,KAAK4c,yB,2CAGL5c,KAAKyc,kBAEDzc,KAAK3B,MAAM8J,MAAQnI,KAAK8c,WACxB9c,KAAKF,SAAS,CAAEqI,KAAMnI,KAAK8c,c,+BAK/B,QAAsB1O,GAAlBpO,KAAK8c,WAA4C,MAAlB9c,KAAK8c,WAAuC,IAAlB9c,KAAK8c,UAC9D,OAAO,kBAAC,GAAD,CAAsB5e,IAAK8B,KAAKgG,UAAWmC,KAAMnI,KAAK8c,YAEjE,GAA0D,GAAtD9c,KAAKwV,kBAAkB1H,qBAAqB1K,OAC5C,OAAO,yBAAKrE,UAAU,mBAAkB,wCAE5C,IAAMie,EAAmChd,KAAKwV,kBAAkB1H,qBAChE,OACI,yBAAK/O,UAAU,mBACX,gDACA,yBAAKA,UAAU,OACVie,EAAWrT,KAAI,SAAAsT,GAEZ,OACI,yBAAKle,UAAU,uBAAuBE,MAAO,CAAEuQ,aAAc,SACzD,4BAAK,kBAAC,IAAD,CAAMzQ,UAAU,yBAAyBkL,GAAI,eAAiBgT,EAASpN,YAAa,uBAAG9Q,UAAWke,EAAS9N,kBAChH,2BAAI8N,EAAS9T,iB,GA1EhB0C,IAmFdlB,eAAWC,YACtBxM,EADsBwM,CAExB0R,KC9FIY,G,kDACF,WAAYre,GAAa,uCACfA,EAAO,eAAe,G,qDAK5B,OACI,yBAAKsC,GAAG,kBAAkBpC,UAAU,mBAChC,gDACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,gCAAK,kBAAC,IAAD,CAAMA,UAAU,sBAAsBkL,GAAG,wBAAuB,uBAAGlL,UAAU,2BAClF,uCAEJ,yBAAKA,UAAU,wBACX,4BAAI,kBAAC,IAAD,CAAMA,UAAU,sBAAsBkL,GAAG,2BAA0B,uBAAGlL,UAAU,6BACpF,gD,GAjBM8M,IA6BflB,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGxBsS,KCtCmBC,G,kDACjB,WAAYte,GAAa,uCACfA,G,qDAKN,OACI,yCAASmB,KAAKnB,MAAMqQ,WAApB,CAAgCnQ,UAAW,QAAUiB,KAAKnB,MAAME,YAC3DiB,KAAKnB,MAAMuC,MAAQ,yBAAKrC,UAAU,eAC9BiB,KAAKnB,MAAMuC,OACP,KACT,yBAAKrC,UAAU,aACViB,KAAKnB,MAAMoD,eAEamM,GAA5BpO,KAAKnB,MAAM4Q,cACR,yBAAK1Q,UAAU,eACViB,KAAKnB,MAAM4Q,eAEd,U,GAnBYnP,aCCb8c,G,kDAEjB,WAAYve,GAAY,uCACdA,G,qDAEA,IAAD,EACL,GAAuB,GAAnBmB,KAAKnB,MAAMmQ,KAAe,OAAO,KACrC,IAAMC,EAAY,UAAGjP,KAAKnB,MAAME,iBAAd,QAAyB,4BAC3C,OACI,kBAAC,IAAD,iBAAUiB,KAAKnB,MAAMqQ,WAArB,CAAiCjF,GAAIjK,KAAKnB,MAAMoL,GAAIhL,MAAOe,KAAKnB,MAAMI,MAAO2B,QAASZ,KAAKnB,MAAM+B,QAAS7B,UAAWkQ,IAChHjP,KAAKnB,MAAMsQ,cACZ,0BAAMlQ,MAAO,CAACwL,YAAY,QAAQ,uBAAG1L,UAAWiB,KAAKnB,MAAMsQ,iBAE3D,KACCnP,KAAKnB,MAAMoD,c,GAdgB3B,aCCvB+c,G,4DAEjBC,aAAsB,E,KAQtBC,gBAAkB,SAACvgB,GACf,EAAKsgB,aAAetgB,G,KAExBwgB,gBAAkB,WACd,IAAM9P,EAAWlQ,IAAkBL,OAAO,2BAC1C,OAAOsQ,GAAoBC,EAAU,K,KAMzC+P,eAAiB,SAACC,GAEd,IAAM/O,EAAY,eAIV+O,EAAI/O,cAGNhB,EAAqB,CACvBW,OAAQ,UACRC,OAAQ,CACJG,OAAsB,GAAdgP,EAAIhP,OACZF,MAAOkP,EAAIlP,MAAQkP,EAAIlP,MAAQ,GAC/BC,KAAMiP,EAAIjP,KAAOiP,EAAIjP,KAAO,EAC5BE,aAAcA,EACdmM,QAAS4C,EAAI5C,QACbC,UAAW2C,EAAI3C,YAGjBrN,EAAWlQ,IAAkBL,OAAO,kBAC1C,OAAOsQ,GAAoBC,EAAUC,I,KAQzCgQ,iBAAmB,SAACxV,GAAD,OAAiB,EAAKsV,eAAe,CACpDjP,MAAO,EACPE,QAAQ,EACRC,aAAc,CACV,KAASxG,EACT,WAAa,EACb,cAAgB,M,KAQxByV,gBAAkB,SAACvP,GAEf,IAAMV,EAAqB,CACvBY,OAAQ,CACJE,KAAMJ,EAAII,KACVE,aAAc,CAAEkP,UAAWxP,EAAIwP,aAGjCnQ,EAAWlQ,IAAkBL,OAAO,2BAC1C,OAAOsQ,GAAoBC,EAAUC,I,+DAjErC,OAHqB,MAAjB3N,KAAK8O,WACL9O,KAAK8O,SAAW,IAAIuO,GAEjBrd,KAAK8O,a,KARCuO,GACFvO,c,MCUbgP,G,kDAGF,WAAYjf,GAAa,IAAD,8BACpB,cAAMA,EAAO,YAHjBkf,eAAiCV,GAAe5H,cAExB,EADxBpX,MAAgB,CAAEif,aAAc,GACR,EAGxBU,mBAAqB,SAAC1W,GAA2B,IAAD,EAC5C,EAAKyW,eAAeR,gBAApB,UAAoCjW,EAASoL,iBAA7C,QAA0D,GAC1D,EAAK5S,SAAS,CAAEwd,aAAchW,EAASoL,aALnB,EAOxBuL,sBAAwB,SAACxc,GACrB7B,QAAQgF,MAAMnD,IARM,EAUxByc,iBAAmB,WACf,EAAKhI,WACD,EAAK6H,eAAeP,gBACpB,EAAKQ,mBACL,EAAKC,wBAdW,E,gEAkBhBje,KAAK+d,eAAeT,cAAgB,EACpCtd,KAAKke,mBAELle,KAAKF,SAAS,CAAEwd,aAActd,KAAK+d,eAAeT,iB,+BAKtD,OACI,yBAAKnc,GAAG,cAAcpC,UAAU,mBAC5B,4CACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAMqC,MAAM,kBAAkBrC,UAAU,YACpC,8CAAoBiB,KAAK3B,MAAMif,cAC/B,yBAAKve,UAAU,aACX,kBAAC,GAAD,CAAgBA,UAAU,eAAekL,GAAG,oBAA5C,gBACA,kBAAC,GAAD,CAAckF,cAAc,kBAAkBvO,QAASZ,KAAKke,sBAIxE,yBAAKnf,UAAU,YACX,kBAAC,GAAD,CAAMqC,MAAM,mBAAmBrC,UAAU,YACrC,gDACA,kBAAC,GAAD,CAAgBA,UAAU,eAAekL,GAAG,qBAA5C,wB,GA7CF4B,IA2DXlB,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGxBkT,KCnEIK,G,kDACF,WAAYtf,GAAa,uCACfA,GAAO,G,gEAIb/B,SAASsE,MAAQ,S,+BAGjB,IAAM9C,EAAyC0B,KAAKoJ,wBAC9CgV,EAAmBhhB,EAAekB,EAAmB+f,cAC3D,OACI,yBAAKtf,UAAU,kBAAkBE,MAAO,CAACgK,QAAQ,IAC7C,yBAAKlK,UAAU,YACXE,MAAO,CACHiK,OAAO,MACP0S,UAAW,OACX0C,gBAAiB,QAAUF,EAAW,KACtCG,eAAgB,QAChBjM,MAAOhU,EAAmBkgB,YAG9B,wBAAIzf,UAAU,aAAaT,EAAmBsI,MAC9C,uBAAG7H,UAAU,QAAQT,EAAmBmgB,kBACxC,wBAAI1f,UAAU,SACd,2BAAIT,EAAmBogB,kBACvB,uBAAG3f,UAAU,yBAAyBsK,KAAK,IAAIrK,KAAK,UAApD,oB,GA1BG8G,GAsCR6E,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGxBuT,KClDmBQ,G,sCACpBxd,Q,OACAyd,iB,OACAC,kB,OACAC,iB,OACAC,a,GCDoBC,G,4MACpB7W,U,IACAvB,U,IACAqY,iB,IACAC,W,IACAphB,U,IACAsgB,c,IACAe,U,IACAC,c,IACAC,gB,IACAC,W,IACAC,e,uEAEyBC,EAAiBpiB,GAA8B,IAAD,EAEtE,OAAIoiB,EAAQpB,WAAY,UAAAoB,EAAQpB,gBAAR,eAAkBhb,QAAQ,GACzChG,GAA0B,IAAMoiB,EAAQpB,SAASrb,MAAM,KAAK,IAE7D3F,GAA0B,IAAM,gB,sCAElBoiB,EAAiBpiB,GAAiC,IAAD,EACvE,GAAIoiB,EAAQpB,WAAY,UAAAoB,EAAQpB,gBAAR,eAAkBhb,QAAQ,EAAG,CACpD,IAAIqc,EAAiBD,EAAQpB,SAASrb,MAAM,KAC5C,OAAI3F,EACIqiB,EAAM9V,KAAI,SAAA/C,GAChB,OAAOxJ,EAAawJ,KAGf6Y,EAER,MAAO,CAACT,EAAQU,kBAAkBF,EAASpiB,M,mCAGxBuiB,GAGnB,IADA,IAAIL,EAAQ,EACHhc,EAAI,EAAGA,EAAIqc,EAASvc,OAAQE,IAAK,CAAC,IAAD,EAEzCgc,GAAK,UADWK,EAASrc,GACRgc,aAAZ,QAAmB,EAEzB,OAAOA,M,GAxC4BX,ICK/BiB,G,kDAEF,WAAY/gB,GAAW,uCACbA,EAAO,iB,qDAGb,OACI,yBAAKsC,GAAG,WAAWpC,UAAU,mBACzB,6CACA,yBAAKA,UAAU,oBACZ,sDACA,6CAAkB,gCAASigB,GAAQa,aAAa7f,KAAKnB,MAAMjB,c,GAXvDiO,IAsBRlB,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGtBgV,KC7BErS,GAAQC,EAAQ,IACDsS,G,iDAEjBrC,eAAiB,SAACC,GACd,GAAiB,MAAbA,EAAI1gB,OAAgD,IAA/B0gB,EAAI1gB,MAAMwF,WAAWsS,OAC1C,O7BEiBiL,E6BFG,CAACjK,SAAS,I7BEY,IAAI5R,SAAQ,SAAU8b,EAAKC,GAC7ED,EAAID,MADoB,IAACA,E6BAfpR,EAAe,GACrBA,EAAa+O,EAAI3T,KAAO2T,EAAI1gB,MAC5B,IAAM2Q,EAAU,CACZW,OAAQ,UACRC,OAAQ,CACJE,KAAM,EACNC,OAAuB,GAAdgP,EAAIhP,OACbF,MAAO,GACPG,aAAcA,IAGhBjB,EAAWlQ,IAAkBL,OAAO,sBAC1C,OAAOsQ,GAAoBC,EAAUC,I,KAGzCuS,yBAA2B,SAACC,GAAD,OAA6B,EAAKC,kBAAL,2BAA2BD,GAA3B,IAAwCriB,KAAK,c,KACrGuiB,4BAA8B,SAACF,GAAD,OAA6B,EAAKC,kBAAL,2BAA2BD,GAA3B,IAAwCriB,KAAK,iB,KAExGsiB,kBAAoB,SAAC1C,GACjB9d,QAAQ6E,MAAM,qBAAsBiZ,EAAI5f,MACxC,IAAMA,EAAO4f,EAAI5f,KACX6P,EAAqB,CACvB2S,aAAc5C,EAAI4C,cAEtB,OAAO,IAAIpc,SAAqB,SAAUC,EAASC,GAC/C,IAAIsJ,EAAkB,GACtB,OAAQ5P,GACJ,IAAK,UACD,GAAG,MAAQ4f,EAAI6C,SAAS,CACpBnc,EAAO,oBACP,MAEJuJ,EAAQ4S,SAAW7C,EAAI6C,SACvB7S,EAAWlQ,IAAkBL,OAAO,+BACpC,MACJ,IAAK,aACL,QACI,GAAG,MAAQugB,EAAI8C,SAAS,CACpBpc,EAAO,oBACP,MAEJuJ,EAAQ6S,SAAW9C,EAAI8C,SACvB9S,EAAWlQ,IAAkBL,OAAO,kCAG5CoQ,GAAMK,KAAKF,EAAUC,EAAQ,CACzBtB,QAASN,OAER1E,MAAK,SAAAC,GAAQ,OAAIA,EAASxC,QAAMuC,MAAK,SAAUC,GACvB,MAAjBA,EAASa,KACXhE,EAAQmD,GAERlD,EAAOkD,MAEbC,OAAM,SAAC9F,GAAW7B,QAAQgF,MAAMnD,GAAI2C,EAAO3C,U,KAIvDgf,aAAe,SAACC,GACZ,IAAM/S,EAAqB,CACvBW,OAAQ,UACRC,OAAQ,CACJC,MAAO,EACPE,QAAQ,EACRC,aAAc,CAAE,KAAQ+R,EAAaC,WAAW,KAGlDjT,EAAWlQ,IAAkBL,OAAO,kBAC1C,OAAOsQ,GAAoBC,EAAUC,KCzExBiT,G,iLAOb,OAHqB,MAAjB5gB,KAAK8O,WACL9O,KAAK8O,SAAW,IAAI8R,GAEjB5gB,KAAK8O,a,GAPsCgR,IAArCc,GACF9R,c,MCYb+R,G,kDAKF,WAAYhiB,GAAa,IAAD,8BACpB,cAAMA,IALV2W,kBAAoB3H,GAAkB4H,cAId,EAHxBpX,MAAgB,CACZyiB,kBAAkB,EAAO3G,SAAS,GAEd,EAGxBhc,aAAe,kBAAM,EAAK2B,SAAS,CAACqa,SAAQ,KAHpB,EAIxBnT,WAAa,kBAAM,EAAKlH,SAAS,CAACqa,SAAQ,KAJlB,EAKxB4G,eAAiB,SAACtf,GACdA,EAAEuJ,iBACF,IACM7J,EADqB,IAAI+J,SAASzJ,EAAEiF,QACtB0E,IAAI,MACnBjK,GACL,EAAK6f,aAAale,SAAS3B,EAAGqB,cAVV,EAYxBye,eAAiB,SAAC3Z,GACd,IAAKA,EAASwO,WAAaxO,EAASwO,SAAS,GACzC,MAAM,IAAIC,MAAM,sBAEpB,EAAKlX,MAAMqiB,YAAY5Z,EAASwO,SAAS,IACzC,EAAKhW,SAAS,CAAE0gB,SAAUlZ,EAASwO,SAAS,GAAIgL,kBAAkB,KAjB9C,EAmBxBA,iBAAmB,SAACrf,GAChB,EAAK3B,SAAS,CAAEghB,kBAAkB,KApBd,EAsBxBE,aAAe,SAAC7f,GACZ,EAAK+U,WAAW,EAAKV,kBAAkB0D,QACnC,EAAK+H,eAAgB,EAAKH,iBAAkB,WAAY3f,IAxBxC,E,qDA2BpB,OAEI,0BAAMkK,SAAUrL,KAAK+gB,gBACjB,kBAAC,GAAD,CAAOxR,YAAY,EAAMnO,MAAM,gBAAgBqO,cAC3C,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAgBN,cAAc,cAAcD,WAAY,CAAExI,OAAQ,UAAYuD,GAAG,uBAAuBlL,UAAU,8BAClH,2BAAOjB,KAAK,SAASiB,UAAU,oBAAoB/B,MAAM,WACzD,2BAAOc,KAAK,QAAQiB,UAAU,gCAGlC,yBAAKA,UAAU,cACX,kBAAC,GAAD,CAAWoK,MAAM,QACb,2BAAOqC,YAAY,gBAAgBC,UAAQ,EAAC3N,KAAK,SAASiB,UAAU,eAAe6H,KAAK,SAGhG,kBAAC,GAAD,CAAgBuT,QAASna,KAAK3B,MAAM8b,QAASqG,SAAUxgB,KAAK3B,MAAMmiB,SAAUW,SAAUnhB,KAAK3B,MAAMyiB,yB,GA/C1Fhb,GAsDrBsb,GAAiB,SAACviB,GACpB,IAAMI,EAAQ,CAAEoG,OAAQ,SACxB,GAAIxG,EAAMsb,QACN,OAAO,yBAAKlb,MAAOA,GAAO,kBAAC,GAAD,OAE9B,GAAI,GAAQJ,EAAMsiB,SACd,OAAO,yBAAKliB,MAAOA,GAAO,yBAAKF,UAAU,uBAAf,uBAE9B,IAAKF,EAAM2hB,SACP,OAAO,yBAAKvhB,MAAOA,GAAO,yBAAKF,UAAU,yBAAf,2BAE9B,IAAMyhB,EAAqB3hB,EAAM2hB,SACjC,OACI,yBAAKvhB,MAAOA,GACR,4BAAKuhB,EAAS5Z,MACd,iCACK4Z,EAASa,QAAQ,6BAClB,0BAAMjgB,MAAM,WAAZ,aAAuCof,EAASc,WASjD3W,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGxBiW,KCpFmBU,G,kDASjB,WAAY1iB,GAAa,IAAD,8BACpB,cAAMA,IARV2iB,mBAAqBZ,GAA6BnL,cAO1B,EANxBD,kBAAoB3H,GAAkB4H,cAMd,EALxBpX,MAAgB,CACZiiB,aAAc,GACdmB,iBAAiB,EACjBtH,SAAQ,GAEY,EAKxBhc,aAAe,kBAAM,EAAK2B,SAAS,CAACqa,SAAQ,KALpB,EAMxBnT,WAAa,kBAAM,EAAKlH,SAAS,CAACqa,SAAQ,KANlB,EAOxBuH,cAAgB,SAACjgB,GACbA,EAAEuJ,iBACF,IACM7J,EADqB,IAAI+J,SAASzJ,EAAEiF,QACtB0E,IAAI,QACnBjK,GACL,EAAKwgB,YAAaxgB,EAAGqB,aAZD,EAcxBof,cAAgB,SAACta,GACb,IAAKA,EAASwO,WAAaxO,EAASwO,SAAS,GACzC,MAAM,IAAIC,MAAM,qBAEpB,EAAKlX,MAAMgjB,WAAWva,EAASwO,SAAS,IACxC,EAAKhW,SAAS,CAAE0f,QAASlY,EAASwO,SAAS,GAAI2L,iBAAiB,KAnB5C,EAqBxBI,WAAa,SAACrC,GACV,EAAK1f,SAAS,CAAE0f,QAASA,EAASiC,iBAAiB,KAtB/B,EAwBxBA,gBAAkB,SAAChgB,GACf,EAAK3B,SAAS,CAAE2hB,iBAAiB,KAzBb,EA2BxBE,YAAc,SAACxZ,GAIX,EAAK2Z,uBAAuB,EAAKN,mBAAmBf,aAChD,EAAKmB,cAAe,EAAKH,gBAAiBtZ,IA9B9C,EAAK9J,MAAL,eAAkB,EAAKA,OAFH,E,qDAmCpB,OAEI,0BAAMgN,SAAUrL,KAAK0hB,eAEjB,kBAAC,GAAD,CAAOnS,YAAY,EAAOnO,MAAM,eAAeqO,cAC3C,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAgBN,cAAc,cAAcD,WAAY,CAAExI,OAAQ,UAAYuD,GAAG,sBAAsBlL,UAAU,8BACjH,2BAAOjB,KAAK,SAASiB,UAAU,oBAAoB/B,MAAM,WACzD,2BAAOc,KAAK,QAAQiB,UAAU,gCAGlC,yBAAKA,UAAU,cACX,kBAAC,GAAD,CAAWoK,MAAM,QACb,2BAAOqC,YAAY,eAAeC,UAAQ,EAAC3N,KAAK,OAAOiB,UAAU,eAAe6H,KAAK,WAI7F,kBAAC,GAAD,CAAeuT,QAASna,KAAK3B,MAAM8b,QAASqF,QAASxf,KAAK3B,MAAMmhB,QAAS2B,SAAUnhB,KAAK3B,MAAMojB,wB,GA7DzE3b,GAoEnCic,GAAgB,SAACljB,GACpB,IAAMI,EAAQ,CAAEoG,OAAQ,SACvB,GAAIxG,EAAMsb,QACN,OAAO,yBAAKlb,MAAOA,GAAO,kBAAC,GAAD,OAE9B,GAAI,GAAQJ,EAAMsiB,SACd,OAAO,yBAAKliB,MAAOA,GAAO,yBAAKF,UAAU,uBAAf,sBAE9B,IAAKF,EAAM2gB,QACP,OAAO,yBAAKvgB,MAAOA,GAAO,yBAAKF,UAAU,yBAAf,0BAE9B,IAAMygB,EAAmB3gB,EAAM2gB,QAC/B,OACI,yBAAKvgB,MAAOA,GACR,4BAAKugB,EAAQ5Y,MACb,2BAAO7H,UAAU,SACb,+BAAO,4BACH,oCACA,wCACA,0CACA,gDAGJ,+BACI,4BACI,4BAAKygB,EAAQL,KAAOK,EAAQL,KAAKvY,KAAO,KACxC,4BAAK4Y,EAAQJ,SAAWI,EAAQJ,SAASxY,KAAO,KAChD,wBAAI3H,MAAO,CAAE+iB,WAAY,cAAgBxC,EAAQN,OACjD,4BAAKM,EAAQF,YC9GhB2C,G,4MACpB1B,c,IACAC,c,IACArY,U,IACArK,U,IACAokB,U,IACAC,qB,IACAxa,U,IACA2Y,kB,IACA8B,iB,cATwCzD,ICDpB0D,G,4MAEpBlC,iB,IACAmC,gB,IACApD,W,IACAI,W,IACAiD,qB,IACA/C,a,IACAgD,mB,IACAC,sB,IACAC,gB,4DACclD,GACb,IAAMmD,EAAM,IAAIN,EAEhB,OADAM,EAAInD,QAAUA,EACPmD,M,GAdgChE,ICSpBiE,G,kDAMjB,WAAY/jB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IANjB2W,kBAAoB3H,GAAkB4H,cAKnB,EAJnBpX,MAAgB,CACZiiB,aAAc,IAGC,EADnBuC,eAAuCthB,IAAMC,YAC1B,EASnBqgB,WAAa,SAACrC,GACV,IAAM4C,EAAcC,GAAYS,OAAOtD,GACvC,EAAK1f,SAAS,CAAEijB,oBAAqBX,KAXtB,EAanBY,UAAY,SAACvhB,GAET,GADAA,EAAEuJ,iBACG,EAAK3M,MAAM0kB,oBAAhB,CAIA,IAAMX,EAA2Ba,OAAOC,OAAO,IAAIb,GAAe,EAAKhkB,MAAM0kB,qBAG7E,GAF6B,EAAKI,YAAYf,GAE7B,CAAC,IAAD,EACPlkB,EAAG,eACT,EAAK0K,iBAAiB,uBAAcwZ,EAAY5C,eAA1B,aAAc,EAAqB5Y,MAAO,UAC3DS,MAAK,SAAUwB,GACRA,GACA3K,EAAIklB,oBAAoBhB,WAKpC,EAAKgB,oBAAoBhB,GAE7B3gB,EAAEiF,OAAO2c,aAlBL,EAAK7c,UAAU,2BAhBJ,EAqCnB4c,oBAAsB,SAAChB,GACnB,IAAM9B,EAA8B,EAAKjiB,MAAMiiB,aAE/C,GAD6B,EAAK6C,YAAYf,GAE1C,IAAK,IAAI9e,EAAI,EAAGA,EAAIgd,EAAald,OAAQE,IAAK,CAAC,IAAD,KAEtC,UADYgd,EAAahd,GACjBkc,eAAR,eAAiBrX,QAAjB,UAAyBia,EAAY5C,eAArC,aAAyB,EAAqBrX,QAC9CmY,EAAahd,GAAK8e,QAI1B9B,EAAarY,KAAKma,GAGtB,EAAKtiB,SAAS,CAAEwgB,aAAcA,IAC9B,EAAKgD,4BApDU,EAuDnBH,YAAc,SAACf,GACX,IAAK,IAAI9e,EAAI,EAAGA,EAAI,EAAKjF,MAAMiiB,aAAald,OAAQE,IAAK,CAAC,IAAD,IAErD,IAAI,UADY,EAAKjF,MAAMiiB,aAAahd,GAC5Bkc,eAAR,eAAiBrX,QAAjB,UAAyBia,EAAY5C,eAArC,aAAyB,EAAqBrX,MAC9C,OAAO,EAGf,OAAO,GA9DQ,EAiEnBmb,yBAA2B,WAClB,EAAKjlB,MAAM0kB,sBAGhB,EAAKjjB,SAAS,CAAEijB,yBAAqB3U,IACjC,EAAKyU,eAAelhB,SACpB,EAAKkhB,eAAelhB,QAAQkgB,gBAAWzT,KAvE5B,EAyEnBmV,YAAc,SAACpb,GACX,IAAMmY,EAAgB,EAAKjiB,MAAMiiB,aAC3BpiB,EAAI,eAEV,EAAK0K,iBAAiB,aAAaT,EAAK,KACvCd,MAAK,SAASwB,GAEX,IADA,IAAIuZ,OAAoChU,EAC/B9K,EAAI,EAAGA,EAAIgd,EAAald,OAAQE,IAAK,CAAC,IAAD,EACpCwD,EAAUwZ,EAAahd,IACzB,UAAAwD,EAAQ0Y,eAAR,eAAiBrX,OAASA,IAC1Bia,EAAca,OAAOC,OAAO,IAAIb,GAAevb,IAInDsb,GAAevZ,GAAM3K,EAAI2kB,eAAelhB,UACxCzD,EAAI4B,SAAS,CAACijB,oBAAoBX,IAClClkB,EAAI2kB,eAAelhB,QAAQkgB,WAAWO,EAAY5C,cAzF3C,EA6FnBgE,cAAgB,SAACrb,GAGb,IAFA,IAAMmY,EAAgB,EAAKjiB,MAAMiiB,aAC3BpiB,EAAI,eACDoF,EAAI,EAAGA,EAAIgd,EAAald,OAAQE,IAAK,CAAC,IAAD,EAE1C,IAAI,UADYgd,EAAahd,GACjBkc,eAAR,eAAiBrX,OAASA,EAAM,CAChCmY,EAAa1L,OAAOtR,EAAE,GACtB,OAGR,EAAKmQ,uBAAuB,gBAC3BpM,MAAK,SAASwB,GACF,IAAD,EAAJA,IACI3K,EAAIG,MAAM0kB,qBAAuB5a,IAAI,UAAIjK,EAAIG,MAAM0kB,oBAAoBvD,eAAlC,aAAI,EAAuCrX,OAChFjK,EAAIolB,2BAERplB,EAAI4B,SAAS,CAACwgB,aAAaA,SA7GpB,E,iEAIftgB,KAAKkG,wB,0CAGLlG,KAAKkG,0B,GAbyCJ,GA0HzC2d,GAAoB,SAACnD,GAE9B,IADA,IAAIoD,EAAmB,EAAGhB,EAAoB,EAAGiB,EAA2B,EACnErgB,EAAI,EAAGA,EAAIgd,EAAald,OAAQE,IAAK,CAAC,IAAD,UACpCwD,EAAUwZ,EAAahd,GAC7BogB,GAAY5c,EAAQwY,MAAMxY,EAAQwY,MAAM,EACxCoD,IAAa,UAAC5b,EAAQwY,aAAT,QAAgB,IAAhB,UAAoBxY,EAAQoY,aAA5B,QAAmC,GAChDyE,IAAoB,UAAC7c,EAAQwY,aAAT,QAAgB,IAAhB,oBAAoBxY,EAAQ0Y,eAA5B,aAAoB,EAAiBN,aAArC,QAA4C,GAEpE,MAAO,CACHC,KAAKuE,EACLE,iBAAiBlB,EACjBmB,aAAaF,IC9HfG,G,kDAEF,WAAYjlB,GAAa,IAAD,8BACpB,cAAMA,IAFVklB,6BAA+BnD,GAA6BnL,cACpC,EAGxByL,YAAc,SAACV,GACX,EAAK1gB,SAAS,CAAE0gB,SAAUA,KAJN,EAQxBwD,8BAAgC,SAACviB,GAC7B,IAAM2gB,EAAuC,EAAK/jB,MAAM0kB,oBACxD,IAAKX,EAGD,OAFA,EAAK5b,UAAU,+BACf/E,EAAEiF,OAAO1J,MAAQ,MAGrB,IAAMinB,EAAWxiB,EAAEiF,OAAOE,KACpB5J,EAAuB,UAAfyE,EAAEiF,OAAO5I,KAAegF,SAASrB,EAAEiF,OAAO1J,OAASyE,EAAEiF,OAAO1J,MAC1EolB,EAAY6B,GAAYjnB,EACxB,EAAK8C,SAAS,CAAEijB,oBAAqBX,KAlBjB,EAuBxBhC,kBAAoB,SAAC3e,GACjBA,EAAEuJ,iBACF,IAAM9M,EAAG,eACH+M,EAAW,IAAIC,SAASzJ,EAAEiF,QAChC,EAAKkC,iBAAiB,sBACrBvB,MAAK,SAASwB,GACPA,GACA3K,EAAIgmB,SAASjZ,OA9BD,EAmCxBiZ,SAAW,SAACjZ,GACR,IAAMkV,EAA0B,IAAI8B,GACpC9B,EAAYG,aAAe,EAAKjiB,MAAMiiB,aACtCH,EAAYK,SAAW,EAAKniB,MAAMmiB,SAClC,IAAM2D,EAAOlZ,EAASG,IAAI,QAC1B+U,EAAYgC,gBAAiBgC,EAAO,IAAI7hB,KAAK6hB,EAAK3hB,YAAc,IAAIF,KACpE,EAAKwf,uBACD,EAAKiC,6BAA6B1D,4BAClC,EAAK+D,kBACL,EAAK/d,qBACL8Z,IA7CgB,EAiDxBiE,kBAAoB,SAAC9c,GAA0B,IAAD,EACpCa,EAAI,UAAGb,EAAS6Y,mBAAZ,aAAG,EAAsBhY,KACnC,EAAKkQ,SAAS,wBAAwBlQ,IAnDlB,E,qDAsDd,IAAD,aACCkc,EAAwBrkB,KAAK3B,MAAMiiB,aAAald,OAAS,EACzDkhB,OAAuClW,GAAvBpO,KAAK3B,MAAMmiB,SAC3B+D,EAA+C,GAAzBF,GAAkD,GAAjBC,EAC7D,OACI,yBAAKnjB,GAAG,wBAAwBpC,UAAU,mBACtC,0CACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAa2B,IAAKV,KAAK6iB,eAAgBhB,WAAY7hB,KAAK6hB,WAAY3jB,IAAK8B,KAAKgG,aAElF,yBAAKjH,UAAU,YACX,kBAAC,GAAD,CAAcmiB,YAAalhB,KAAKkhB,YAAahjB,IAAK8B,KAAKgG,aAE3D,yBAAKjH,UAAU,YACX,0BAAMsM,SAAUrL,KAAKgjB,WACjB,kBAAC,GAAD,CAAO5hB,MAAO,eAAgBqO,cAAe,kBAAC,WAAD,KACzC,2BAAO3R,KAAK,SAASiB,UAAU,eAAe/B,MAAM,QACpD,2BAAOc,KAAK,QAAQiB,UAAU,kBAAkB/B,MAAM,YAEtD,kBAAC,GAAD,CAAWmM,MAAM,YACb,2BAAO0K,aAAY,UAAE7T,KAAK3B,MAAM0kB,2BAAb,aAAE,EAAgCzD,MAAOxhB,KAAK,SAASkW,SAAUhU,KAAKgkB,8BAA+Bpd,KAAK,QAAQ6E,UAAQ,EAACyH,IAAI,IAAInU,UAAU,kBAEpK,kBAAC,GAAD,CAAWoK,MAAM,eACb,2BAAO0K,aAAY,UAAE7T,KAAK3B,MAAM0kB,2BAAb,aAAE,EAAgC7D,MAAOphB,KAAK,SAASkW,SAAUhU,KAAKgkB,8BAA+Bpd,KAAK,QAAQsM,IAAI,IAAIzH,UAAQ,EAAC1M,UAAU,kBAEpK,kBAAC,GAAD,CAAWoK,MAAM,gBACb,2BAAO0K,aAAc,IAAIxR,OAAJ,UAAWrC,KAAK3B,MAAM0kB,2BAAtB,aAAW,EAAgCT,YAAY9f,WAAY1E,KAAK,OAAOkW,SAAUhU,KAAKgkB,8BAA+Bpd,KAAK,aAAa6E,UAAQ,EAAC1M,UAAU,qBAKvM,yBAAKA,UAAU,YACVwlB,EACD,0BAAMlZ,SAAUrL,KAAKogB,mBACjB,kBAAC,GAAD,CAAOhf,MAAM,UACT,kBAAC,GAAD,CAAW+H,MAAM,QACb,2BAAOsC,UAAQ,EAAC3N,KAAK,OAAO8I,KAAK,OAAO7H,UAAU,kBAEtD,kBAAC,GAAD,CAAWoK,MAAM,UACb,6BACI,2BAAOrL,KAAK,SAASiB,UAAU,kBAAkB/B,MAAM,2BAI/D,MAEZ,yBAAK+B,UAAU,aACX,kBAAC,GAAD,CAAOqC,MAAM,YACT,2BAAOrC,UAAU,SACb,+BACI,4BACI,kCACA,oCACA,wCACA,oCACA,wCACA,qCACA,2CACA,wCAGR,+BACKiB,KAAK3B,MAAMiiB,aAAa3W,KAAI,SAACyY,EAAa9e,GAAO,IAAD,UAC7C,OACI,wBAAIyG,IAAK,MAAMzG,GACX,4BAAKA,EAAI,GACT,sCAAK8e,EAAY5C,eAAjB,aAAK,EAAqB5Y,MAC1B,4BAAKwb,EAAY9C,OACjB,sCAAK8C,EAAY5C,eAAjB,iBAAK,EAAqBL,YAA1B,aAAK,EAA2BvY,MAChC,4BAAKwb,EAAYE,YACjB,4BAAKF,EAAYlD,OACjB,6BAAK,UAACkD,EAAY9C,aAAb,QAAsB,IAAtB,UAA4B8C,EAAYlD,aAAxC,QAAiD,IACtD,4BACI,kBAAC,GAAD,CAActe,QAAS,SAACa,GAAD,aAAK,EAAK8hB,YAAL,UAAiBnB,EAAY5C,eAA7B,aAAiB,EAAqBrX,OAAOgH,cAAc,cAAcpQ,UAAU,0BAA/G,QACA,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,aAAK,EAAK+hB,cAAL,UAAmBpB,EAAY5C,eAA/B,aAAmB,EAAqBrX,OAAOgH,cAAc,eAAepQ,UAAU,yBAAlH,eAKhB,4BACI,wBAAIylB,QAAS,GAAG,0CAChB,4BAAKf,GAAkBzjB,KAAK3B,MAAMiiB,cAAcnB,MAChD,6BACA,6BACA,6BACA,4BAAKsE,GAAkBzjB,KAAK3B,MAAMiiB,cAAcsD,kBAChD,wC,GA/IJhB,IA6JrBjY,eAAWC,YACtBxM,EADsBwM,CAExBkZ,KChLmBW,G,4MAUjBC,gBAAkB,SAAChH,GACf,IAAM/O,EAAe,GACrBA,EAAa+O,EAAI3T,KAAO2T,EAAI1gB,MAC5B,IAAM2Q,EAAqB,CACvBW,OAAQ,WACRC,OAAQ,CACJE,KAAOiP,EAAIjP,KAAO,EAAIiP,EAAIjP,KAAO,EACjCD,MAAQkP,EAAIlP,MAAQ,EAAIkP,EAAIlP,MAAQ,GACpCE,OAAuB,GAAdgP,EAAIhP,OACbC,aAAcA,IAIhBjB,EAAWlQ,IAAkBL,OAAO,sBAC1C,OAAOsQ,GAAoBC,EAAUC,I,iEAjBrC,OAHqB,MAAjB3N,KAAK8O,WACL9O,KAAK8O,SAAW,IAAI2V,GAEjBzkB,KAAK8O,a,GAPmCgR,IAAlC2E,GACF3V,c,MCcb6V,G,kDAKF,WAAY9lB,GAAa,IAAD,8BACpB,cAAMA,IALV2W,kBAAoB3H,GAAkB4H,cAId,EAHxBpX,MAAgB,CACZumB,kBAAkB,EAAOzK,SAAQ,GAEb,EAIxBhc,aAAe,kBAAM,EAAK2B,SAAS,CAACqa,SAAQ,KAJpB,EAKxBnT,WAAa,kBAAM,EAAKlH,SAAS,CAACqa,SAAQ,KALlB,EAMxB0K,eAAiB,SAACpjB,GACdA,EAAEuJ,iBACF,IACM7J,EADqB,IAAI+J,SAASzJ,EAAEiF,QACtB0E,IAAI,MACnBjK,GACL,EAAK2jB,aAAahiB,SAAS3B,EAAGqB,cAXV,EAaxBuiB,eAAiB,SAACzd,GACd,IAAKA,EAASwO,WAAaxO,EAASwO,SAAS,GACzC,MAAM,IAAIC,MAAM,sBAEpB,EAAKlX,MAAMmmB,YAAY1d,EAASwO,SAAS,IACzC,EAAKhW,SAAS,CAAEygB,SAAUjZ,EAASwO,SAAS,GAAI8O,kBAAkB,KAlB9C,EAoBxBA,iBAAmB,SAACnjB,GAChB,EAAK3B,SAAS,CAAE8kB,kBAAkB,KArBd,EAuBxBE,aAAe,SAAC3jB,GACZ,EAAK+U,WAAW,EAAKV,kBAAkB0D,QACnC,EAAK6L,eAAgB,EAAKH,iBAAkB,WAAYzjB,IAzBxC,E,qDA4BpB,OAEI,0BAAMkK,SAAUrL,KAAK6kB,gBACjB,kBAAC,GAAD,CAAOtV,YAAY,EAAOnO,MAAM,gBAAgBqO,cAC5C,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAgBN,cAAc,cAAcD,WAAY,CAAExI,OAAQ,UAAYuD,GAAG,uBAAuBlL,UAAU,8BAClH,2BAAOjB,KAAK,SAASiB,UAAU,oBAAoB/B,MAAM,WACzD,2BAAOc,KAAK,QAAQiB,UAAU,gCAGlC,yBAAKA,UAAU,cACX,kBAAC,GAAD,CAAWoK,MAAM,QACb,2BAAOqC,YAAY,gBAAgBC,UAAQ,EAAC3N,KAAK,SAASiB,UAAU,eAAe6H,KAAK,SAGhG,kBAAC,GAAD,CAAgBuT,QAASna,KAAK3B,MAAM8b,QAASoG,SAAUvgB,KAAK3B,MAAMkiB,SAAUY,SAAUnhB,KAAK3B,MAAMumB,yB,GAhD1F9e,GAuDrBmf,GAAiB,SAACpmB,GACpB,IAAMI,EAAQ,CAAEoG,OAAQ,SACxB,GAAIxG,EAAMsb,QACN,OAAO,yBAAKlb,MAAOA,GAAO,kBAAC,GAAD,OAE9B,GAAI,GAAQJ,EAAMsiB,SACd,OAAO,yBAAKliB,MAAOA,GAAO,yBAAKF,UAAU,uBAAf,uBAE9B,IAAKF,EAAM0hB,SACP,OAAO,yBAAKthB,MAAOA,GAAO,yBAAKF,UAAU,yBAAf,2BAE9B,IAAMwhB,EAAqB1hB,EAAM0hB,SACjC,OACI,yBAAKthB,MAAOA,GACR,4BAAKshB,EAAS3Z,MACd,iCACK2Z,EAASc,QAAQ,6BAClB,0BAAMjgB,MAAM,WAAZ,aAAuCmf,EAAS2E,SAMjDva,eAAWC,YACtBxM,EADsBwM,CAExB+Z,KCjFIQ,G,kDAEF,WAAYtmB,GAAa,IAAD,8BACpB,cAAMA,IAFVumB,0BAA4BX,GAA0BhP,cAC9B,EAGxBuP,YAAc,SAACzE,GACX,EAAKzgB,SAAS,CAAEygB,SAAUA,KAJN,EAOxB8E,cAAgB,SAAC5jB,GACb,IAAM2gB,EAAuC,EAAK/jB,MAAM0kB,oBACxD,IAAKX,EAGD,OAFA,EAAK5b,UAAU,+BACf/E,EAAEiF,OAAO1J,MAAQ,MAGrB,IAAMA,EAAQ8F,SAASrB,EAAEiF,OAAO1J,OAChColB,EAAY9C,MAAQtiB,EACpB,EAAK8C,SAAS,CAAEijB,oBAAqBX,KAhBjB,EAmBxBhC,kBAAoB,SAAC3e,GACjBA,EAAEuJ,iBACF,IAAM9M,EAAG,eACH+M,EAAW,IAAIC,SAASzJ,EAAEiF,QAChC,EAAKkC,iBAAiB,sBACjBvB,MAAK,SAAUwB,GACRA,GACA3K,EAAIgmB,SAASjZ,OA1BL,EA+BxBiZ,SAAW,SAACjZ,GACR,IAAMkV,EAA2B,IAAI8B,GACrC9B,EAAYG,aAAe,EAAKjiB,MAAMiiB,aACtCH,EAAYI,SAAW,EAAKliB,MAAMkiB,SAClC,IAAM4D,EAAOlZ,EAASG,IAAI,QAC1B+U,EAAYgC,gBAAkBgC,EAAO,IAAI7hB,KAAK6hB,EAAK3hB,YAAc,IAAIF,KACrE,EAAKwf,uBACD,EAAKsD,0BAA0BlF,yBAC/B,EAAKkE,kBACL,EAAK/d,qBACL8Z,IAzCgB,EA6CxBiE,kBAAoB,SAAC9c,GAA2B,IAAD,EACrCa,EAAI,UAAGb,EAAS6Y,mBAAZ,aAAG,EAAsBhY,KACnC,EAAKkQ,SAAS,wBAA0BlQ,IA/CpB,E,qDAkDd,IAAD,WACCkc,EAAwBrkB,KAAK3B,MAAMiiB,aAAald,OAAS,EACzDkiB,OAAuClX,GAAvBpO,KAAK3B,MAAMkiB,SAC3BgE,EAA+C,GAAzBF,GAAkD,GAAjBiB,EACvDvC,EAAsB/iB,KAAK3B,MAAM0kB,oBACvC,OACI,yBAAK5hB,GAAG,qBAAsBpC,UAAU,mBACpC,uCACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAa2B,IAAKV,KAAK6iB,eAAgBhB,WAAY7hB,KAAK6hB,WAAY3jB,IAAK8B,KAAKgG,aAElF,yBAAKjH,UAAU,YACX,kBAAC,GAAD,CAAcimB,YAAahlB,KAAKglB,YAAa9mB,IAAK8B,KAAKgG,aAE3D,yBAAKjH,UAAU,YACX,0BAAMsM,SAAUrL,KAAKgjB,WACjB,kBAAC,GAAD,CAAO5hB,MAAO,eAAgBqO,cAAe,kBAAC,WAAD,KACzC,2BAAO3R,KAAK,SAASiB,UAAU,eAAe/B,MAAM,QACpD,2BAAOc,KAAK,QAAQiB,UAAU,kBAAkB/B,MAAM,YAEtD,kBAAC,GAAD,CAAWmM,MAAM,YACb,2BAAO0K,aAAY,UAAE7T,KAAK3B,MAAM0kB,2BAAb,aAAE,EAAgCzD,MAChDxhB,KAAK,SAASkW,SAAUhU,KAAKqlB,cAAeze,KAAK,QAAQ6E,UAAQ,EACjEyH,IAAK,EAAGC,IACL4P,EAAmB,UAACA,EAAoBvD,eAArB,aAAC,EAA6BF,MAAM,EACxDvgB,UAAU,qBAKjC,yBAAKA,UAAU,YACVwlB,EACG,0BAAMlZ,SAAUrL,KAAKogB,mBACjB,kBAAC,GAAD,CAAOhf,MAAM,UACT,kBAAC,GAAD,CAAW+H,MAAM,QACb,2BAAOsC,UAAQ,EAAC3N,KAAK,OAAO8I,KAAK,OAAO7H,UAAU,kBAEtD,kBAAC,GAAD,CAAWoK,MAAM,UACb,6BACI,2BAAOrL,KAAK,SAASiB,UAAU,kBAAkB/B,MAAM,2BAI7D,MAElB,yBAAK+B,UAAU,aACX,kBAAC,GAAD,CAAOqC,MAAM,YACT,2BAAOrC,UAAU,SACb,+BACI,4BACI,kCACA,oCACA,wCACA,oCAEA,qCACA,2CACA,wCAGR,+BACKiB,KAAK3B,MAAMiiB,aAAa3W,KAAI,SAACyY,EAAa9e,GAAO,IAAD,cAC7C,OACI,wBAAIyG,IAAK,MAAQzG,GACb,4BAAKA,EAAI,GACT,sCAAK8e,EAAY5C,eAAjB,aAAK,EAAqB5Y,MAC1B,4BAAKwb,EAAY9C,OACjB,sCAAK8C,EAAY5C,eAAjB,iBAAK,EAAqBL,YAA1B,aAAK,EAA2BvY,MAEhC,sCAAKwb,EAAY5C,eAAjB,aAAK,EAAqBN,OAC1B,6BAAK,UAACkD,EAAY9C,aAAb,QAAsB,IAAtB,oBAA4B8C,EAAY5C,eAAxC,aAA4B,EAAqBN,aAAjD,QAA0D,IAC/D,4BACI,kBAAC,GAAD,CAActe,QAAS,SAACa,GAAD,aAAO,EAAK8hB,YAAL,UAAiBnB,EAAY5C,eAA7B,aAAiB,EAAqBrX,OAAOgH,cAAc,cAAcpQ,UAAU,0BAAjH,QACA,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,aAAO,EAAK+hB,cAAL,UAAmBpB,EAAY5C,eAA/B,aAAmB,EAAqBrX,OAAOgH,cAAc,eAAepQ,UAAU,yBAApH,eAKhB,4BACI,wBAAIylB,QAAS,GAAG,0CAChB,4BAAKf,GAAkBzjB,KAAK3B,MAAMiiB,cAAcnB,MAEhD,6BACA,6BACA,4BAAKsE,GAAkBzjB,KAAK3B,MAAMiiB,cAAcuD,cAChD,wC,GA1IPjB,IAwJlBjY,eAAWC,YACtBxM,EADsBwM,CAExBua,KCxKmBI,G,iDAUjBC,gBAAkB,SAACjX,GACf,IAAMZ,EAAqB,CACvBY,OAAOA,GAELb,EAAWlQ,IAAkBL,OAAO,oCAC1C,OAAOsQ,GAAoBC,EAAUC,I,KAEzC8X,sBAAwB,SAACtkB,EAAWoN,GAChC,IAAMZ,EAAqB,CACvBY,OAAOA,GAELb,EAAWlQ,IAAkBL,OAAO,0CAA0CgE,GACpF,OAAOsM,GAAoBC,EAAUC,I,KAEzC+X,kBAAoB,SAACnX,GACjB,IAAMZ,EAAqB,CACvBY,OAAOA,GAELb,EAAWlQ,IAAkBL,OAAO,sCAC1C,OAAOsQ,GAAoBC,EAAUC,I,KAEzCgY,mBAAqB,SAAUC,GAC3B,IAAMlY,EAAWlQ,IAAkBL,OAAO,uCAAyCyoB,GACnF,OAAOnY,GAAoBC,EAAU,K,KAIzCmY,uBAAyB,WAAyB,IAAflY,EAAc,uDAAJ,GACnCD,EAAWlQ,IAAkBL,OAAO,2CAC1C,OAAOsQ,GAAoBC,EAAUC,I,KAIzCmY,eAAiB,SAACnY,GACd,IAAMD,EAAWlQ,IAAkBL,OAAO,yBAC1C,OAAOsQ,GAAoBC,EAAUC,I,+DArCrC,OAHqB,MAAjB3N,KAAK8O,WACL9O,KAAK8O,SAAW,IAAIyW,GAEjBvlB,KAAK8O,a,KARCyW,GACFzW,c,MCkBbiX,G,kDAGF,WAAYlnB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjBmnB,0BAAuDT,GAA0B9P,cAEzD,EADxBpX,MAAgB,CAAE4nB,cAAc,GACR,EAaxB9M,aAAe,SAAC7R,GACZ,IAAKA,EAAS6Y,YACV,MAAM,IAAIpK,MAAM,aAEpBzO,EAAS6Y,YAAYG,aAAehZ,EAASwO,SAC7C,EAAKhW,SAAS,CAAEomB,gBAAiB5e,EAAS6Y,YAAa8F,cAAc,KAlBjD,EAqBxBE,gBAAkB,SAAC1kB,GACf7B,QAAQgF,MAAMnD,GACd,EAAK3B,SAAS,CAAEmmB,cAAc,EAAMC,qBAAiB9X,KAvBjC,EA0BxB/C,SAAW,SAAC5J,GACRA,EAAEuJ,iBACF,EAAKkL,WACD,EAAK8P,0BAA0BL,mBAC/B,EAAKxM,aACL,EAAKgN,gBACL,EAAK9nB,MAAMunB,kBAhCK,EAmCxBQ,mBAAqB,SAAC3kB,GAClB,EAAK3B,SAAS,CAAE8lB,gBAAiBnkB,EAAEiF,OAAO1J,SApCtB,E,gEAMpBgD,KAAKkG,sBACLpJ,SAASsE,MAAQ,uB,2CAGjBpB,KAAKkG,wB,+BA8BL,OACI,yBAAK/E,GAAG,oBAAoBpC,UAAU,mBAClC,uDACA,yBAAKA,UAAU,OACX,0BAAMA,UAAU,WAAWsM,SAAUrL,KAAKqL,UACtC,kBAAC,GAAD,CAAOjK,MAAM,mBACTqO,cACI,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAgBN,cAAc,cAAcD,WAAY,CAAExI,OAAQ,UAAYuD,GAAG,0BAA0BlL,UAAU,qBAArH,uBACA,2BAAOjB,KAAK,SAASiB,UAAU,kBAAkB/B,MAAM,aAI/D,kBAAC,GAAD,CAAWmM,MAAM,QACb,2BAAOsC,UAAQ,EAACuI,SAAUhU,KAAKomB,mBAAoBtoB,KAAK,OAAO0N,YAAY,mBAAmBzM,UAAU,oBAIpH,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACX,kBAAC,GAAD,CAAaiQ,KAAiC,GAA3BhP,KAAK3B,MAAM4nB,cAA9B,kBACA,kBAAC,GAAD,CAAiBjX,UAAoCZ,GAA9BpO,KAAK3B,MAAM6nB,gBAA8B/F,YAAangB,KAAK3B,MAAM6nB,yB,GAhEhFpgB,GAwE1BugB,GAAkB,SAACxnB,GAAW,IAAD,QAC/B,GAAkB,GAAdA,EAAMmQ,KAAe,OAAO,KAChC,IAAMmR,EAA2BthB,EAAMshB,YACjCG,EAA8BH,EAAYG,aAAeH,EAAYG,aAAc,GACnFgG,EAAgC,WAApBnG,EAAYriB,KAE9B,OACI,kBAAC,GAAD,CAAOsD,MAAM,oBACT,yBAAKrC,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAWoK,MAAM,OAAOmM,YAAY,cAC/B6K,EAAYhY,MAEjB,kBAAC,GAAD,CAAWgB,MAAM,OAAOmM,YAAY,cAC/B6K,EAAYriB,KADjB,IACwBqiB,EAAY+B,MAEpC,kBAAC,GAAD,CAAW/Y,MAAM,OAAOmM,YAAY,cAC/B,IAAIhT,KAAJ,UAAS6d,EAAYgC,uBAArB,QAAwC,IAAI7f,MAAQE,aAG7D,yBAAKzD,UAAU,YACVunB,EACG,kBAAC,GAAD,CAAWnd,MAAM,WAAWmM,YAAY,cAAxC,UACK6K,EAAYI,gBADjB,aACK,EAAsB3Z,MAE3B,kBAAC,GAAD,CAAWuC,MAAM,WAAWmM,YAAY,cAAxC,UACK6K,EAAYK,gBADjB,aACK,EAAsB5Z,MAI/B,kBAAC,GAAD,CAAWuC,MAAM,OAAOmM,YAAY,cAApC,UACK6K,EAAYxY,YADjB,aACK,EAAkB+C,cAG3B,yBAAK3L,UAAU,aACX,wCACA,2BAAOA,UAAU,uBACb,+BACI,4BACI,kCACA,oCACA,wCACA,oCACA,sCACA,6CAGR,+BACKuhB,EAAa3W,KAAI,SAACyY,EAAa9e,GAAK,IAAD,MAC1Bkc,EAAe,UAAG4C,EAAY5C,eAAf,QAAyB,IAAIR,GAC5CE,EAAQkD,EAAYlD,MAC1B,OACI,wBAAInV,IAAK,SAASzG,GACd,4BAAKA,EAAE,GACP,4BAAKkc,EAAQ5Y,MACb,4BAAKnE,EAAgB2f,EAAY9C,QACjC,sCAAKE,EAAQL,YAAb,aAAK,EAAcvY,MACnB,4BAAKnE,EAAgByc,IACrB,4BAAKzc,GAAgB,OAACyc,QAAD,IAACA,IAAO,IAAR,UAAckD,EAAY9C,aAA1B,QAAiC,WAM1E,yBAAKvgB,UAAU,8BACX,kBAAC,GAAD,CAAWoK,MAAM,cACjB,2BAAI1G,EAAgBghB,GAAkBnD,GAAcnB,QAEpD,kBAAC,GAAD,CAAWhW,MAAM,eACjB,2BAAI1G,EAAgBghB,GAAkBnD,GAAcsD,yBAW7DjZ,eAAWC,YACtBxM,GAJuB,SAACyM,GAAD,MAAyB,KAG1BD,CAGxBmb,KCtKIvd,I,6CACF+d,UAAoB,IAElBC,G,kDAGF,WAAY3nB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAFjBR,MAAe,IAAImK,GACA,EAGnBie,iBAAmB,SAAChlB,GAChB,EAAK3B,SAAS,CAAEymB,UAAU,KAJX,EAMnBG,iBAAmB,SAACjlB,GAChB,EAAK3B,SAAS,CAAEymB,UAAU,KAPX,EASnBI,iBAAmB,SAACxlB,GAEhB,IADA,IAAMvD,EAAO,EAAKiB,MAAMjB,KACf0F,EAAI,EAAGA,EAAI1F,EAAKwF,OAAQE,IAAK,CAClC,IAAMwD,EAAmBlJ,EAAK0F,GAC9B,GAAIwD,EAAQ3F,IAAMA,EACd,OAAO2F,IAdA,EAmBnB8f,aAAe,SAACpH,GAAsB,IAAD,EAE7BqH,EAAgB,EAAKF,iBAAiBnH,EAAQre,IAC7C0lB,KACDA,EAAgB5D,OAAOC,OAAO,IAAIlE,GAAWQ,IAC/BF,MAAQ,GAEtBuH,EAAcvH,MACduH,EAAcvH,QAEduH,EAAcvH,MAAQ,GAEtB,UAACE,EAAQF,aAAT,QAAgB,GAAKuH,EAAcvH,MACnC,EAAK9Y,UAAU,0BAA0BgZ,EAAQF,MAAO,OAAOuH,EAAcvH,OAGjF,EAAKwH,iBAAiBD,IAnCP,EAsCnBE,kBAAoB,SAACvH,GACjB,IAAIqH,EAAgB,EAAKF,iBAAiBnH,EAAQre,IAC7C0lB,IAGDA,EAAcvH,OAASuH,EAAcvH,MAAQ,EAC7CuH,EAAcvH,QAEduH,EAAcvH,MAAQ,EAE1B,EAAKwH,iBAAiBD,KAhDP,EAkDnBG,iBAAmB,SAACxH,GAChB,IAAMyH,EAAgBhE,OAAOC,OAAO,IAAIlE,GAAWQ,GACnDyH,EAAc3H,MAAQ,EACtB,EAAKwH,iBAAiBG,IArDP,EAuDnBC,qBAAuB,SAACzlB,GACpB,IAAMvD,EAAG,eACT,EAAKuV,uBAAuB,wBAC3BpM,MAAK,SAASwB,GACPA,GACA3K,EAAIW,MAAMlB,WAAW,GAAIO,EAAKA,EAAI8H,eA5D3B,EAiEnBmhB,sBAAwB,WACrB,OAAOnI,GAAQa,aAAa,EAAKhhB,MAAMjB,OAlEvB,EAqEnBkpB,iBAAmB,SAACtH,GAIhB,IAFA,IAAM5hB,EAAO,EAAKiB,MAAMjB,KACpBwpB,GAAQ,EACH9jB,EAAI,EAAGA,EAAI1F,EAAKwF,OAAQE,IAAK,CAElC,GADyB1F,EAAK0F,GAClBnC,IAAMqe,EAAQre,GAAI,CAC1BvD,EAAK0F,GAAKkc,EACV4H,GAAQ,EACR,OAGHA,GACDxpB,EAAKqK,KAAKuX,GAEd,EAAK3gB,MAAMlB,WAAWC,EAAtB,eAAkC,EAAKoI,YApFxB,E,qDAsFT,IAAD,OACCnH,EAAQmB,KAAKnB,MACb0nB,EAAoBvmB,KAAK3B,MAAMkoB,SACrC,OACI,kBAAC,GAAD,CAAOnlB,MAAM,gBACT,yBAAKrC,UAAU,YAAYE,MAAO,CAAEuQ,aAAc,QAC9C,kBAAC,GAAD,CAAc5O,QAASZ,KAAKymB,iBAAkBzX,KAAkB,GAAZuX,EAAmBxnB,UAAU,2BAA2BoQ,cAAc,qBAA1H,sBACA,kBAAC,GAAD,CAAcvO,QAASZ,KAAK0mB,iBAAkB1X,KAAkB,GAAZuX,EAAkBxnB,UAAU,2BAA2BoQ,cAAc,mBAAzH,sBACA,kBAAC,GAAD,CAAcvO,QAASZ,KAAKknB,qBAAsBlY,KAAkB,GAAZuX,EAAkBxnB,UAAU,wBAAwBoQ,cAAc,0BAA1H,cACA,kBAAC,GAAD,CAAcH,KAAkB,GAAZuX,EAAkBxnB,UAAU,0BAA2BiB,KAAKmnB,0BAEpF,yBAAKpoB,UAAU,OACVF,EAAM8gB,SAAShW,KAAI,SAAC6V,GAAqB,IAAD,MAC/B6H,EAAU7H,EAAQpB,UAAR,UAAmBoB,EAAQpB,SAASrb,MAAM,KAAK,UAA/C,QAAqE,cAC/E8jB,EAAgB,EAAKF,iBAAiBnH,EAAQre,IACpD,OACI,yBAAK4I,IAAK,mBAAmByV,EAAQre,GAAIpC,UAAU,wCAC/C,yBAAKA,UAAU,oBAAoBqG,IAAKhI,EAAeiqB,IACvD,kBAAC,IAAD,CAAMpd,GAAI,oBAAoBuV,EAAQrX,MAEpC,4BAAKqX,EAAQ5Y,OACf,0BAAM7H,UAAU,aAAY,gCAAS0D,EAAgB+c,EAAQN,SAC5DrgB,EAAM8hB,UAAY,0BAAM1hB,MAAO,CAAE0c,WAAY,OAAS5c,WAAW,UAACygB,EAAQF,aAAT,QAAgB,GAAG,EAAE,gCAAgC,oBAAqBE,EAAQF,OAAgB,KACnKiH,EACG,6BAAK,yBAAKxnB,UAAU,aACZ,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,OAAK,EAAKmlB,aAAapH,IAAUrQ,cAAc,cAAcpQ,UAAU,2BAC9F,kBAAC,GAAD,CAAcA,UAAU,+BAA8B,iDAAS8nB,QAAT,IAASA,OAAT,EAASA,EAAevH,aAAxB,QAA+B,IACrF,kBAAC,GAAD,CAAc1e,QAAS,SAACa,GAAD,OAAK,EAAKslB,kBAAkBvH,IAAUrQ,cAAc,eAAepQ,UAAU,2BACpG,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,OAAK,EAAKulB,iBAAiBxH,IAAUrQ,cAAc,kBAAkBpQ,UAAU,6BAG5G,e,GAxHL+G,GAqIlB6E,eAAWC,YACtBxM,GAJuB,SAACyM,GAAD,MAAyB,CAChDlN,WAAY,SAACC,GAAD,2BAAqBC,EAArB,iCAAqBA,EAArB,yBAAqCgN,EAASlN,EAAU,WAAV,GAAWC,GAAX,OAAoBC,SAExD+M,CAGxB4b,KCrIIhe,G,sCACFmX,SAAsB,G,KACtBpR,OAAiB,CACbC,MAAO,GACPC,KAAM,EACNkM,uBAAuB,EACvBG,QAAS,OACTC,UAAW,O,KAEfpM,aAAmB,CACfgS,WAAW,EACX2G,gBAAgB,G,KAEpBC,WAAyB,G,KACzB7U,UAAoB,E,KACpBuT,cAAwB,GAEtBuB,G,kDAGF,WAAY3oB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjBkf,eAAiCV,GAAe5H,cAExB,EADxBpX,MAAgB,IAAImK,GACI,EAGxBif,iBAAmB,SAAChmB,GAChB,EAAK3B,SAAS,CAAE4S,UAAW,EAAGiN,SAAU,GAAIsG,cAAc,KAJtC,EAMxByB,eAAiB,SAACpgB,QACW8G,GAArB9G,EAASwO,SAIoC,GAA7C,EAAKzX,MAAMsQ,aAAX,eACA,EAAK7O,SAAS,CAAE4S,UAAWpL,EAASoL,UAAWuT,cAAc,EAAOtG,SAAUrY,EAASwO,SAAUyR,WAAYjgB,EAASkV,cAEtH,EAAK1c,SAAS,CAAE4S,UAAWpL,EAASoL,UAAWuT,cAAc,EAAOtG,SAAUrY,EAASwO,WANvF,EAAK2R,iBAAiBngB,IARN,EAqCxBiH,OAAS,SAAC9M,GACNA,EAAEuJ,iBACF,EAAK2c,aAAa,IAvCE,EAyCxBC,qBAAuB,SAACnmB,GACpB,IAEIzE,EAFE4Z,EAA0BnV,EAAEiF,OAC9BE,EAAegQ,EAAMhQ,KAIrB5J,EADc,YAAd4Z,EAAM9Y,KACmB,GAAjB8Y,EAAMjQ,QAENiQ,EAAM5Z,MAElB,IAAM2R,EAAe,EAAKtQ,MAAMsQ,kBACnBP,GAATpR,GAAkD,IAA5B,IAAIqF,OAAOrF,GAAO8X,OACpCnG,EAAa/H,WACN+H,EAAa/H,GAExB+H,EAAa/H,GAAQ5J,EAEzB,EAAK8C,SAAS,CAAE6O,aAAcA,KA1DV,EA4DxBkZ,cAAgB,SAAC7qB,GACb,IAAMyR,EAAO3L,SAAS9F,GAChBuR,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAOE,KAAOA,EACdF,EAAOoM,uBAAwB,EAC/B,EAAK7a,SAAS,CAAEyO,OAAQA,KAjEJ,EAmExBuZ,SAAW,SAACtZ,GACR,IAAMD,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAOC,MAAQA,EACf,EAAK1O,SAAS,CAAEyO,OAAQA,KAtEJ,EAwExBwZ,SAAW,SAACtmB,GACR,IAAMzE,EAAQyE,EAAEiF,OAAO1J,MACjBuR,EAAS,EAAKlQ,MAAMkQ,OAC1B,GAAa,IAATvR,EAAa,CACb,IAAMgrB,EAAqB,IAAI3lB,OAAOrF,GAAO+F,MAAM,KACnDwL,EAAOuM,QAAUkN,EAAS,GAC1BzZ,EAAOwM,UAAYiN,EAAS,eAErBzZ,EAAOuM,eACPvM,EAAOwM,UAElB,EAAKjb,SAAS,CAAEyO,OAAQA,KAnFJ,E,2DAiBoB,IAA/BE,EAA8B,uDAAH,EAC9BF,EAASvO,KAAK3B,MAAMkQ,YACdH,GAARK,GAAgE,GAA3CzO,KAAK3B,MAAMkQ,OAAOoM,wBACvCpM,EAAOE,KAAOA,GAElBF,EAAOI,aAAe3O,KAAK3B,MAAMsQ,aACjC,IAAMsZ,EAAkD,GAApC1Z,EAAOI,aAAP,UAEpB3O,KAAK0H,OACD1H,KAAK+d,eAAeN,eAAgBwK,EACpCjoB,KAAK0nB,eAAgB1nB,KAAKynB,iBAC1BlZ,GAEJA,EAAOoM,uBAAwB,EAC/B3a,KAAKF,SAAS,CAAEyO,OAAQA,M,0CAGxBzR,SAASsE,MAAQ,kBACjBpB,KAAK2nB,aAAa,K,+BAmDZ,IAAD,aACChI,EAAsB3f,KAAK3B,MAAMshB,SACvC,OACI,yBAAKxe,GAAG,iBAAiBpC,UAAU,mBAC/B,+CACA,0BAAMsM,SAAUrL,KAAKuO,QAEjB,kBAAC,GAAD,CAAOgB,YAAY,EAAMnO,MAAM,SAASqO,cACpC,2BAAO3R,KAAK,SAASiB,UAAU,qBAE/B,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAWuW,YAAY,WAAWvW,UAAU,WAAWoK,MAAM,QACzD,2BAAO6K,SAAUhU,KAAK4nB,qBAAsB/T,aAAc7T,KAAK3B,MAAMsQ,aAAX,KAAiC/H,KAAK,OAAO4E,YAAY,eAAezM,UAAU,kBAEhJ,kBAAC,GAAD,CAAWuW,YAAY,WAAWvW,UAAU,WAAWoK,MAAM,YACzD,4BAAQ6K,SAAUhU,KAAK+nB,SAAUhpB,UAAU,gBACvC,4BAAQ/B,MAAM,YAAd,cACA,4BAAQA,MAAM,aAAd,cACA,4BAAQA,MAAM,aAAd,iBACA,4BAAQA,MAAM,cAAd,uBAGR,kBAAC,GAAD,CAAWsY,YAAY,WAAWvW,UAAU,WAAWoK,MAAM,YACzD,4BAAQ6K,SAAUhU,KAAK4nB,qBAAsB/T,aAAc7T,KAAK3B,MAAMsQ,aAAa,uBAAwB5P,UAAU,eAAe6H,KAAK,uBACrI,4BAAQ5J,MAAM,IAAd,OACCgD,KAAK3B,MAAMkpB,WAAW5d,KAAI,SAAAyV,GACvB,OAAO,4BAAQrV,IAAK,gBAAgBqV,EAASje,GAAInE,MAAOoiB,EAASje,IAAKie,EAASxY,WAK3F,kBAAC,GAAD,CAAW0O,YAAY,WAAWvW,UAAU,WAAWoK,MAAM,cACzD,2BAAO6K,SAAUhU,KAAK4nB,qBAAsBM,eAAwD,GAAxCloB,KAAK3B,MAAMsQ,aAAX,UAA8C7Q,KAAK,WAAW8I,KAAK,cAC/H,2BAAO3H,MAAO,CAAEqL,YAAa,QAAkD,GAAxCtK,KAAK3B,MAAMsQ,aAAX,UAA+C,MAAQ,OAElG,kBAAC,GAAD,CAAW2G,YAAY,WAAWvW,UAAU,WAAWoK,MAAM,cACzD,2BAAOvC,KAAK,OAAOsM,IAAI,IAAIpV,KAAK,SAASkW,SACrC,SAACvS,GAAD,OAAO,EAAKomB,cAAc/kB,SAASrB,EAAEiF,OAAO1J,OAAS,IACvD6W,cAAc,UAAC7T,KAAK3B,MAAMkQ,OAAOE,YAAnB,QAA2B,GAAK,EAAG1P,UAAU,kBAEjE,kBAAC,GAAD,CAAWuW,YAAY,WAAWvW,UAAU,WAAWoK,MAAM,kBACzD,2BAAOvC,KAAK,QAAQsM,IAAI,IAAIpV,KAAK,SAASkW,SACtC,SAACvS,GAAD,OAAO,EAAKqmB,SAAShlB,SAASrB,EAAEiF,OAAO1J,SACzC6W,aAAc7T,KAAK3B,MAAMkQ,OAAOC,MAAOzP,UAAU,kBAEvD,kBAAC,GAAD,CAAWuW,YAAY,WAAWvW,UAAU,WAAWoK,MAAM,cACzD,+BAAQnJ,KAAK3B,MAAMqU,eAKnC,kBAAC,GAAD,CAAa1D,KAAMhP,KAAK3B,MAAM4nB,cAA9B,kBACA,kBAAC,GAAD,CAAmBzX,MAAK,UAAExO,KAAK3B,MAAMkQ,OAAOC,aAApB,QAA6B,GAAImE,WAAU,UAAE3S,KAAK3B,MAAMkQ,OAAOE,YAApB,QAA4B,EAC3FiE,UAAW1S,KAAK3B,MAAMqU,UAAW9R,QAAS,SAAC6N,GAAD,OAAkB,EAAKkZ,aAAalZ,MAClF,kBAAC,GAAD,CAAoBvQ,IAAK8B,KAAKgG,UAAW2Z,SAAUA,EAAUgB,UAAW3gB,KAAK3B,MAAMsQ,aAAX,iB,GA/I3D7I,GAoJd6E,eAAWC,YACtBxM,EADsBwM,CAExB4c,KC1KIW,G,kDACF,WAAYtpB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAKjBupB,eAAiB,SAAC5I,GACd,IAAMthB,EAAG,eACT,EAAKuV,uBAAuB,UAAU+L,EAAQ5Y,KAAK,wBAClDS,MAAK,SAASwB,GACPA,GACA3K,EAAImqB,iBAAiB7I,OAXT,EAexB6I,iBAAmB,SAAC7I,GAEhB,IADA,IAAM5hB,EAAiB,EAAKiB,MAAMjB,KACzB0F,EAAI,EAAGA,EAAI1F,EAAKwF,OAAQE,IAAK,CAElC,GADyB1F,EAAK0F,GAClBnC,IAAMqe,EAAQre,GAAI,CAC1BvD,EAAKgX,OAAOtR,EAAG,GACf,OAGR,EAAKzE,MAAMlB,WAAWC,EAAtB,eAAkC,EAAKoI,YAxBnB,E,gEAIpBlJ,SAASsE,MAAQ,uB,+BAsBX,IAAD,OACCknB,EAAsBtoB,KAAKnB,MAAMjB,KACnC8lB,EAAoB,EAAGhB,EAAqB,EAChD,OACI,yBAAK3jB,UAAU,mBACX,kDACA,kBAAC,GAAD,CAAaiQ,KAAyB,GAAnBsZ,EAASllB,QAA5B,oBAEA,2BAAOrE,UAAU,kCAAkCE,MAAO,CAAC6C,QAASwmB,EAASllB,OAAO,EAAE,QAAQ,SAC1F,+BACI,4BACI,kCACA,wBAAIohB,QAAS,GAAb,WACA,mCACA,oCACA,qCACA,2CACA,wCAGR,+BACK8D,EAAS3e,KAAI,SAAC6V,EAASlc,GAAO,IAAD,YAC1BogB,GAAS,UAAKlE,EAAQF,aAAb,QAAsB,EAC/BoD,IAAe,UAAClD,EAAQF,aAAT,QAAkB,IAAlB,UAAwBE,EAAQN,aAAhC,QAAyC,GACxD,IAAImI,EAAUrI,GAAQU,kBAAkBF,GAClC+I,EAASnrB,EAAeiqB,EAC9B,OACI,wBAAItd,IAAK,QAAUzG,GACf,4BAAKA,EAAI,GACT,4BAAI,yBAAK+B,OAAO,MAAMD,IAAKmjB,KAC3B,4BAAK/I,EAAQ5Y,MACb,4BAAKnE,EAAgB+c,EAAQF,QAC7B,sCAAKE,EAAQL,YAAb,aAAK,EAAcvY,MACnB,4BAAKnE,EAAgB+c,EAAQN,QAC7B,4BAAKzc,GAAgB,UAAC+c,EAAQF,aAAT,QAAkB,IAAlB,UAAwBE,EAAQN,aAAhC,QAAyC,KAC9D,4BACI,kBAAC,GAAD,CAActe,QAAS,SAACa,GAAD,OAAK,EAAK2mB,eAAe5I,IAAUrQ,cAAc,eAAepQ,UAAU,gCAKjH,4BACI,wBAAIylB,QAAS,GAAb,SACA,4BAAK/hB,EAAgBihB,IACrB,wBAAIc,QAAS,IACb,4BAAK/hB,EAAgBigB,IACrB,qC,GAzEL5c,GAuFR6E,eAAWC,YACtBxM,GAJuB,SAACyM,GAAD,MAAyB,CAChDlN,WAAY,SAACC,GAAD,2BAAqBC,EAArB,iCAAqBA,EAArB,yBAAqCgN,EAASlN,EAAU,WAAV,GAAWC,GAAX,OAAoBC,SAExD+M,CAGxBud,KClGI3f,G,sCACFH,OAAiB,GAEAmgB,G,kDAIjB,WAAY3pB,GAAgB,IAAD,8BACvB,cAAMA,IAHVR,MAAgB,IAAImK,GAEO,EAD3BigB,YAAsB,EACK,EAK3BC,gBAAkB,WACd,OAAO,EAAK7pB,MAAM8pB,UAAU,EAAKtqB,MAAMgK,SANhB,EAQ3BugB,KAAO,SAACnnB,GACJ,IAAIonB,EAAgB,EAAKxqB,MAAMgK,OACV,GAAjBwgB,EACAA,EAAgB,EAAKJ,YAAY,EAEjCI,IAEJ,EAAK/oB,SAAS,CAACuI,OAAOwgB,KAfC,EAkB3BC,KAAO,SAACrnB,GACJ,IAAIonB,EAAgB,EAAKxqB,MAAMgK,OAC3BwgB,GAAiB,EAAKJ,YAAY,EAClCI,EAAgB,EAEhBA,IAEJ,EAAK/oB,SAAS,CAACuI,OAAOwgB,KAvBtB,EAAKJ,YAAc5pB,EAAM8pB,UAAUvlB,OAFZ,E,qDA6BvB,OACI,kBAAC,GAAD,CAAMrE,UAAU,4CACZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAcA,UAAU,gBAAgBoQ,cAAc,oBAAoBvO,QAASZ,KAAK4oB,QAE5F,yBAAK7pB,UAAU,WAAWE,MAAO,CAAC8pB,UAAU,WACxC,yBAAK1jB,OAAO,MAAMD,IAAKpF,KAAK0oB,qBAEhC,yBAAK3pB,UAAU,YACX,kBAAC,GAAD,CAAcA,UAAU,gBAAgBoQ,cAAc,qBAAqBvO,QAASZ,KAAK8oB,c,GA3C3ExoB,aCGhC0oB,G,kDAGF,WAAYnqB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjBkf,eAAgCV,GAAe5H,cAEvB,EADxBpX,MAAe,CAAC8iB,UAAS,GACD,EAMxBhI,aAAe,SAAC7R,GAA0B,IAAD,IACrC,QAAyB8G,GAArB9G,EAASwO,UAAsD,GAA7BxO,EAASwO,SAAS1S,OACpD,MAAM,IAAI2S,MAAM,aAEpB,EAAKjW,SAAS,CACV0f,QAAQlY,EAASwO,SAAS,GAAIqL,UAAS,IAE3CrkB,SAASsE,MAAT,oBAAiB,EAAK/C,MAAMmhB,eAA5B,aAAiB,EAAoB5Y,YAArC,QAA2C,UAbvB,EAexBuf,gBAAkB,SAAC1kB,GACf7B,QAAQgF,MAAMnD,GACd,EAAK3B,SAAS,CAACqhB,UAAS,KAjBJ,EAmBxB8H,kBAAoB,WAChB,EAAK/S,WACD,EAAK6H,eAAeJ,iBACpB,EAAKxE,aACL,EAAKgN,gBACL,EAAKrJ,YAxBW,E,sDAIpB,OAAO9c,KAAKnB,MAAMke,MAAM3V,OAAOe,O,0CAwB/BnI,KAAKipB,sB,+BAEC,IAAD,IACL,OAAKjpB,KAAK8c,WAA+B,IAAlB9c,KAAK8c,UAGpB,yBAAK/d,UAAU,mBACnB,8CACCiB,KAAK3B,MAAMmhB,QACZ,kBAAC,GAAD,CAAOpe,MAAOpB,KAAK3B,MAAMmhB,QAAQ5Y,MAC7B,kBAAC,GAAD,CAAU+hB,UAAW3J,GAAQkK,gBAAgBlpB,KAAK3B,MAAMmhB,QAASpiB,KACjE,2BAAO2B,UAAU,SACb,+BACI,4BACI,oCACA,2CACA,oCACA,wCACA,+CAGR,+BACI,4BACI,4BAAKiB,KAAK3B,MAAMmhB,QAAQ5Y,MACxB,4BAAK5G,KAAK3B,MAAMmhB,QAAQP,aACxB,sCAAKjf,KAAK3B,MAAMmhB,QAAQL,YAAxB,aAAK,EAAyBvY,MAC9B,sCAAK5G,KAAK3B,MAAMmhB,QAAQJ,gBAAxB,aAAK,EAA6BxY,MAClC,4BAAK5G,KAAK3B,MAAMmhB,QAAQF,WAKtC,kBAAC,GAAD,kBACF,kBAAC,GAAD,CAAgBnQ,cAAc,oBAAoBlF,GAAG,oBAArD,SA7BO,kBAAC,GAAD,sB,GAnCgBnE,GAqEpB6E,eAAWqe,IClFbG,GAAS,CAClB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YCGE3gB,G,sCACF5D,OAAgB,GAECwkB,G,kDAEjB,WAAYvqB,GAAgB,IAAD,8BACvB,cAAMA,IAFVR,MAAQ,IAAImK,GACe,EAG3B6gB,mBAAqB,SAAC5nB,GAClB,EAAK5C,MAAMmV,SAASvS,IAJG,EAM3B2V,OAAS,SAAC3V,GACNA,EAAEuJ,sBAC8BoD,GAA5B,EAAKvP,MAAM0P,OAAO+a,aAAiDlb,GAA1B,EAAKvP,MAAM0P,OAAOgb,OAG3D,EAAK1qB,MAAM0P,OAAOgb,KAAO,EAAK1qB,MAAM0P,OAAO+a,OAC3C,EAAKxpB,SAAS,CAAC8E,OAAM,KAGzB,EAAK9E,SAAS,CAAC8E,OAAM,IACrB,EAAK/F,MAAMwM,SAAS5J,MAhBG,E,qDAmBvB,IAAM+nB,EAA8BxpB,KAAKnB,MAAM2qB,iBAC/C,OACI,0BAAMne,SAAUrL,KAAKoX,QACjB,kBAAC,GAAD,CAAO7H,YAAY,EAAMnO,MAAM,SAASqO,cACpC,2BAAO3R,KAAK,SAASiB,UAAU,qBAE/B,yBAAKA,UAAU,SACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAWoK,MAAM,SACb,4BAAQpK,UAAU,eAAe6H,KAAK,QAAQoN,SAAUhU,KAAKqpB,mBAAoBrsB,MAAOgD,KAAKnB,MAAM0P,OAAOkb,OACrGN,GAAOxf,KAAI,SAAC+f,EAAWpmB,GACpB,OAAO,4BAAQtG,MAAOsG,EAAI,GAAIomB,EAAvB,KAAoCpmB,EAAI,EAAxC,UAInB,kBAAC,GAAD,CAAW6F,MAAM,QACb,4BAAQpK,UAAU,eAAe6H,KAAK,OAAOoN,SAAUhU,KAAKqpB,mBAAoBrsB,MAAOgD,KAAKnB,MAAM0P,OAAOgb,MACpGC,EAAiB7f,KAAI,SAAA4f,GAClB,OAAO,4BAAQvsB,MAAOusB,GAAOA,SAK7C,yBAAKxqB,UAAU,wBACX,yBAAKE,MAAO,CAAEC,MAAO,OAAQmG,OAAQ,OAAQvD,QAAS,QAAU/C,UAAU,0CACtE,wBAAIE,MAAO,CAAEiK,OAAQ,SAAU,uBAAGnK,UAAU,0BAGpD,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAWoK,MAAM,SACb,4BAAQpK,UAAU,eAAe6H,KAAK,UAAUoN,SAAUhU,KAAKqpB,mBAAoBrsB,MAAOgD,KAAKnB,MAAM0P,OAAOob,SACvGR,GAAOxf,KAAI,SAAC+f,EAAWpmB,GACpB,OAAO,4BAAQtG,MAAOsG,EAAI,GAAIomB,EAAvB,KAAoCpmB,EAAI,EAAxC,UAInB,kBAAC,GAAD,CAAW6F,MAAM,QACb,4BAAQpK,UAAU,eAAe6H,KAAK,SAASoN,SAAUhU,KAAKqpB,mBAAoBrsB,MAAOgD,KAAKnB,MAAM0P,OAAO+a,QACtGE,EAAiB7f,KAAI,SAAA4f,GAClB,OAAO,4BAAQvsB,MAAOusB,GAAOA,UAMjD,kBAAC,GAAD,CAAava,KAAMhP,KAAK3B,MAAMuG,OAA9B,sB,GAlEyBtE,aCjBxBspB,GASjB,aAAe,IAAD,gCAPdC,OAAiB,EAOH,KANdvK,MAAgB,EAMF,KALdwK,OAAiB,UAKH,KAJdP,MAAe,IAAIjnB,MAAOynB,cAIZ,KAHdN,MAAgB,EAGF,KAFdO,eAEc,OADdC,cACc,EACVjqB,KAAKgqB,UAAY,WACb,OAAO,EAAKH,QAEjB7pB,KAAKiqB,SAAW,WACX,OAAO,EAAKR,MAAM,IAAI,EAAKF,OAdlBK,GAmBVM,UAAY,SAACC,GAChB,OAAOlH,OAAOC,OAAO,IAAI0G,GAAYO,IApBxBP,GAsBVQ,WAAa,SAACC,GAEjB,IADA,IAAMC,EAAsB,IAAIxZ,MACvBxN,EAAI,EAAGA,EAAI+mB,EAAUjnB,OAAQE,IAAK,CACvC,IAAMwD,EAAUujB,EAAU/mB,GAC1BgnB,EAASriB,KAAK2hB,GAASM,UAAUpjB,IAErC,OAAOwjB,GA5BMV,GA8BVW,UAAY,SAACF,GAEhB,IADA,IAAIlX,EAAM,EACD7P,EAAI,EAAGA,EAAI+mB,EAAUjnB,OAAQE,IAAK,CACvC,IAAMwD,EAAUujB,EAAU/mB,GACtBwD,EAAQ+iB,OAAS1W,IACjBA,EAAMrM,EAAQ+iB,QAItB,OAAO1W,G,WC1BT3K,G,sCACFgiB,cAAwB,E,KACxBvkB,QAAgB,IAAI3D,MAEHmoB,G,kDAWjB,WAAY5rB,GAAgB,IAAD,8BACvB,cAAMA,IAVV6rB,iBAA2B,EASA,EAR3BC,iBAA2B,EAQA,EAP3BC,QAAkB,IAOS,EAN3BC,QAAkB,GAMS,EAL3BC,WAAqB,IAKM,EAJ3BC,WAAqB,IAIM,EAH3BC,UAAoB,EAGO,EAF3BC,SAAmB,EAEQ,EAD3B5sB,MAAgB,IAAImK,GACO,EAK3B+hB,UAA2C,SAACF,GAExC,IADA,IAAIlX,EAAM,EACD7P,EAAI,EAAGA,EAAI+mB,EAAUjnB,OAAQE,IAAK,CACvC,IAAMwD,EAAUujB,EAAU/mB,GAEtBwD,EAAQkjB,YAAc7W,IACtBA,EAAMrM,EAAQkjB,aAItB,OAAO7W,GAfgB,EAiB3B+X,YAAc,WACV,EAAKD,SAAW,EAAKV,UAAU,EAAK1rB,MAAMssB,SAC1C,EAAKT,iBAAmBznB,KAAKmoB,MAAsB,EAAhB,EAAKH,SAAe,GACvD,EAAKN,iBAAmB1nB,KAAKmoB,MAAsB,EAAhB,EAAKH,SAAe,GACvD,EAAKD,UAAa,GAAO,EAAKnsB,MAAMssB,QAAQ/nB,OAAU,KArB/B,EA6B3BioB,MAAQ,SAACnpB,GACL,EAAKpC,SAAS,CAAE0qB,aAActoB,KA9BP,EAiC3BtB,QAAU,SAACsB,GACH,EAAKrD,MAAM+B,SACX,EAAK/B,MAAM+B,QAAQsB,IAnCA,EAsC3BopB,QAAU,WACN,EAAKxrB,SAAS,CAAE0qB,cAAe,KArC/B,EAAKU,cAFkB,E,iEAwBvBlrB,KAAKkrB,cACDlrB,KAAKnB,MAAMoH,SAAWjG,KAAK3B,MAAM4H,SACjCjG,KAAKF,SAAS,CAAEmG,QAASjG,KAAKnB,MAAMoH,Y,+BAmBlC,IAAD,OACCpH,EAAQmB,KAAKnB,MACnB,OACI,6BACI,yBAAKE,UAAU,0BAA0BE,MAAO,CAAEssB,UAAW,QAASxC,UAAW,WAC7E,yBAAKyC,WAAYxrB,KAAKsrB,QAASvsB,UAAU,kBAAkB0sB,QAAQ,MAAMC,YAAY,OAAOxsB,MAAsB,EAAfc,KAAK4qB,QAAe,GAAO/rB,EAAMssB,QAAQ/nB,OAAS,IAAKiC,OAAQ,IAAKsmB,MAAM,8BAExK9sB,EAAMssB,QAAQxhB,KAAI,SAAC7E,EAAMxB,GACtB,IAAMsoB,EAAc9mB,EAAKklB,YAAc,EAAKiB,SAAY,EAAKF,WACvDc,EAAS,EAAKf,WAAa,GAAIgB,EAAS,EAAKlB,QAAU,GAAM,GAAOtnB,EAEpEyoB,EAAY,6BAAmED,EAAS,IAAMD,EAAS,IACvGG,EAAU1oB,GAAK,EAAKjF,MAAMmsB,aAChC,OACI,uBAAGvrB,MAAO+sB,EAAU,CAAEC,OAAQ,WAAc,GAAIltB,UAAU,cACzDmtB,YAAa,SAACzqB,GAAD,OAAO,EAAK4pB,MAAM/nB,IAAI1C,QAAS,SAACa,GAAD,OAAO,EAAKb,QAAQ0C,IAAIkoB,WAAY,EAAKF,QAASvhB,IAAK5H,IAAa,IAAMmB,GACnH,0BAAM6oB,KAAMH,EAAU,MAAQ,QAASI,EAAG,EAAKxB,QAAW,GAAOtnB,EAAI+oB,EAAG,EAAKvB,WAAac,EAAYvmB,OAAQumB,EAAY1sB,MAAO,KACjI,0BAAMitB,KAAMH,EAAU,MAAQ,QAASM,WAAW,MAAM/hB,SAAU,GAAI6hB,EAAGN,EAAQO,EAAGR,EAAQE,UAAWA,GAAYjnB,EAAKmlB,YACxH,4BAAQsC,GAAI,EAAK3B,QAAW,IAAOtnB,EAAI,GAAIkpB,GAAI,EAAK1B,WAAY2B,EAAE,IAAIN,KAAK,YAIvF,0BAAMvlB,KAAK,cAAcwlB,EAAGpsB,KAAK4qB,QAASyB,EAAGrsB,KAAK8qB,WAAYzlB,OAAQ,EAAGnG,MAAOc,KAAKgrB,YACrF,0BAAMpkB,KAAK,iBAAiBulB,KAAK,mBAAmBC,EAAGpsB,KAAK4qB,QAASyB,EAAGrsB,KAAK6qB,QAASxlB,OAAQ,EAAGnG,MAAOc,KAAKgrB,YAC7G,0BAAMpkB,KAAK,oBAAoBulB,KAAK,mBAAmBC,EAAGpsB,KAAK4qB,QAASyB,EAAGrsB,KAAK6qB,QAA4B,EAAlB7qB,KAAK+qB,WAAiB,EAAG1lB,OAAQ,EAAGnG,MAAOc,KAAKgrB,YAC1I,0BAAMpkB,KAAK,oBAAoBulB,KAAK,mBAAmBC,EAAGpsB,KAAK4qB,QAASyB,EAAGrsB,KAAK6qB,QAA4B,EAAlB7qB,KAAK+qB,WAAiB,EAAG1lB,OAAQ,EAAGnG,MAAOc,KAAKgrB,YAC1I,0BAAMpkB,KAAK,cAAcwlB,EAAGpsB,KAAK4qB,QAASyB,EAAGrsB,KAAK6qB,QAASxlB,OAAQrF,KAAK+qB,WAAY7rB,MAAO,IAE3F,0BAAMotB,WAAW,MAAM1lB,KAAK,UAAU2D,SAAU,GAAI6hB,EAAGpsB,KAAK4qB,QAASyB,EAAGrsB,KAAK6qB,SAAUpoB,EAAgBzC,KAAKirB,WAC5G,0BAAMqB,WAAW,MAAM1lB,KAAK,aAAa2D,SAAU,GAAI6hB,EAAGpsB,KAAK4qB,QAASyB,EAAGrsB,KAAK6qB,QAA4B,EAAlB7qB,KAAK+qB,WAAiB,GAAItoB,EAAgBzC,KAAK0qB,mBACzI,0BAAM4B,WAAW,MAAM1lB,KAAK,aAAa2D,SAAU,GAAI6hB,EAAGpsB,KAAK4qB,QAASyB,EAAGrsB,KAAK6qB,QAA4B,EAAlB7qB,KAAK+qB,WAAiB,GAAItoB,EAAgBzC,KAAK2qB,qBAGjJ,2BAAG,uBAAG5rB,UAAU,mBAAhB,IAAqC,IAAIuD,KAAKtC,KAAK3B,MAAM4H,SAASzD,iB,GAzFnClC,aCHzCkI,G,sCACFkkB,oBAA8B,E,KAC9BC,uBAAiC,GAEhBC,G,kDAGjB,WAAY/tB,GAAgB,IAAD,8BACvB,cAAMA,IAFVR,MAAgB,IAAImK,GACO,EAG3BqkB,gBAAkB,WACd,OAAO,EAAKhuB,MAAMiuB,cAJK,EAM3BC,gBAAkB,WAAO,IAAD,IACdD,EAAe,EAAKD,kBAC1B,IAAKC,EAAave,OAAQ,MAAO,GACjC,IAAIA,EAAiBue,EAAave,OAClC,OAAO4a,IAAO,UAAC5a,EAAOkb,aAAR,QAAiB,GAAK,GAAK,IAAMlb,EAAOgb,KAAO,MAAQJ,IAAO,UAAC5a,EAAOob,eAAR,QAAmB,GAAK,GAAK,IAAMpb,EAAO+a,QAV/F,EAY3B0D,eAAiB,WAA6B,IAAD,EACzC,KAAI,EAAK3uB,MAAMquB,mBAAqB,GAEpC,IADA,IAAMO,EAAgB,UAAG,EAAKpuB,MAAMiuB,aAAaI,gBAA3B,QAAuC,GACpD5pB,EAAI,EAAGA,EAAI2pB,EAAK7pB,OAAQE,IAC7B,GAAIA,GAAK,EAAKjF,MAAMquB,mBAAoB,OAAOO,EAAK3pB,IAhBjC,EAoB3B6pB,kBAAoB,WAA6B,IAAD,EAC5C,KAAI,EAAK9uB,MAAMsuB,sBAAwB,GAEvC,IADA,IAAMM,EAAgB,UAAG,EAAKpuB,MAAMiuB,aAAaM,mBAA3B,QAA0C,GACvD9pB,EAAI,EAAGA,EAAI2pB,EAAK7pB,OAAQE,IAC7B,GAAIA,GAAK,EAAKjF,MAAMsuB,sBAAuB,OAAOM,EAAK3pB,IAxBpC,EA4B3B+pB,qBAAuB,SAAC/pB,GACpB,EAAKxD,SAAS,CAAE4sB,mBAAoBppB,KA7Bb,EA+B3BgqB,oBAAsB,WAClB,EAAKxtB,SAAS,CAAE4sB,oBAAqB,KAhCd,EAkC3Ba,wBAA0B,SAACjqB,GACvB,EAAKxD,SAAS,CAAE6sB,sBAAuBrpB,KAnChB,EAqC3BkqB,uBAAyB,WACrB,EAAK1tB,SAAS,CAAE6sB,uBAAwB,KAtCjB,E,mGA2CjB,IAAD,QACCG,EAAe9sB,KAAK6sB,kBAC1B,OACI,kBAAC,GAAD,CAAMzrB,MAAM,YACR,kBAAC,GAAD,CAAW+H,MAAM,UAAWnJ,KAAK+sB,mBACjC,yBAAKhuB,UAAU,mBACX,uCACA,kBAAC,GAAD,CACI6B,QAASZ,KAAKqtB,qBAAsBI,UAAWztB,KAAKstB,oBACpDrnB,QAAO,UAAE6mB,EAAa3I,YAAf,QAAuB,IAAI7hB,KAAQ6oB,QAASvB,GAASQ,WAAT,UAAoB0C,EAAaI,gBAAjC,QAA6C,MACpG,kBAAC,GAAD,CAAgB/C,SAAUnqB,KAAKgtB,mBAC/B,0CACA,kBAAC,GAAD,CACIpsB,QAASZ,KAAKutB,wBAAyBE,UAAWztB,KAAKwtB,uBACvDvnB,QAAO,UAAE6mB,EAAa3I,YAAf,QAAuB,IAAI7hB,KAAQ6oB,QAASvB,GAASQ,WAAT,UAAoB0C,EAAaM,mBAAjC,QAAgD,MACvG,kBAAC,GAAD,CAAgBjD,SAAUnqB,KAAKmtB,4B,GA7DR7sB,aAoErCotB,GAAiB,SAAC7uB,GACpB,IAAMsrB,EAAiCtrB,EAAMsrB,SAC7C,OAAKA,EAIG,yBAAKprB,UAAU,MAAME,MAAO,CAAEssB,UAAW,UAC7C,yBAAKxsB,UAAU,YAAW,kBAAC,GAAD,CAAWoK,MAAM,UAAjB,IAA4BghB,EAASL,SAC/D,yBAAK/qB,UAAU,YAAW,kBAAC,GAAD,CAAWoK,MAAM,UAAUggB,GAAOgB,EAASV,MAAQ,GAAnD,IAAwDU,EAASZ,OAC3F,yBAAKxqB,UAAU,YAAf,IAA2B,kBAAC,GAAD,CAAWoK,MAAM,SAAS1G,EAAgB0nB,EAAS7K,SAC9E,yBAAKvgB,UAAU,YAAf,IAA2B,kBAAC,GAAD,CAAWoK,MAAM,UAAU1G,EAAgB0nB,EAASN,SAA/E,MARkB,yBAAK9qB,UAAU,kBAAkBE,MAAO,CAAEssB,UAAW,UACvE,yBAAKxsB,UAAU,oBAAmB,uBAAGA,UAAU,yBAA/C,oCC/EFolB,GAAO,IAAI7hB,KACXkG,G,sCACF+F,OAAiB,CACbkb,MAAOtF,GAAKwJ,WAAa,EACzBpE,KAAOpF,GAAK4F,cACZJ,QAASxF,GAAKwJ,WAAa,EAC3BrE,OAAQnF,GAAK4F,e,KAEjB+C,kBAA6B1e,GAE3Bwf,G,kDAGF,WAAY/uB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAHjBmnB,0BAAuDT,GAA0B9P,cAE9D,EADnBpX,MAAgB,IAAImK,GACD,EAInB+F,OAAS,SAAC9M,GACNA,EAAEuJ,iBACF,EAAK6iB,iBANU,EAQnBC,mBAAqB,SAACxmB,GAClB,EAAKxH,SAAS,CAAEgtB,aAAcxlB,KATf,EAWnBymB,sBAAwB,SAACtsB,GACrB7B,QAAQgF,MAAMnD,IAZC,EAcnBosB,cAAgB,WACZ,EAAK/L,uBACD,EAAKkE,0BAA0BN,kBAC/B,EAAKoI,mBACL,EAAKC,sBACL,EAAK1vB,MAAMkQ,SAnBA,EAuBnB8a,mBAAqB,SAAC5nB,GAClB,IAAMmF,EAAOnF,EAAEiF,OAAOE,KAChB2H,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAO3H,GAAQ9D,SAASrB,EAAEiF,OAAO1J,OACjC,EAAK8C,SAAS,CAAEyO,OAAQA,KA3BT,E,gEA+BfvO,KAAKkG,sBACLlG,KAAK6tB,kB,+BAIL,IAAMf,EAAe9sB,KAAK3B,MAAMyuB,aAChC,OAAKA,EAOD,yBAAK/tB,UAAU,mBACX,0CACA,kBAAC,GAAD,CAAiBiV,SAAUhU,KAAKqpB,mBAAoBG,iBAAkBsD,GAAgBA,EAAatD,iBAAmBsD,EAAatD,iBAAmB,GAClJne,SAAUrL,KAAKuO,OAAQA,OAAQvO,KAAK3B,MAAMkQ,SAC9C,kBAAC,GAAD,CAAeue,aAAcA,KAV1B,yBAAK/tB,UAAU,mBAClB,0CACA,kBAAC,GAAD,W,GA3CiB+G,GAyDlB6E,eAAWC,YACtBxM,EADsBwM,CAGxBgjB,KC7EmBI,G,kDAUjB,aAAe,IAAD,8BAChB,gBAVDxO,aASiB,IARjByO,WAQiB,IAPjBxE,WAOiB,IANjBF,UAMiB,IALjBqC,gBAKiB,IAJjBX,cAIiB,IAHjBvB,eAGiB,IAFjBM,eAEiB,IADdC,cACc,EAEV,EAAKD,UAAY,WAAO,IAAD,EAC5B,iBAAO,EAAKiE,aAAZ,QAAmB,GAEf,EAAKhE,SAAW,WAAO,IAAD,EACjB,OAAO,EAAKzK,QAAL,UAAa,EAAKA,QAAQ5Y,YAA1B,QAAgC,GAAG,EAAK6iB,MAAM,IAAI,EAAKF,MANxD,E,UAVwB5K,IAArBqP,GAmBb9D,UAAY,SAACvY,GACb,OAAOsR,OAAOC,OAAO,IAAI8K,GAAgBrc,IApB5Bqc,GAsBV5D,WAAa,SAAC8D,GAEjB,IADA,IAAM5D,EAAsB,IAAIxZ,MACvBxN,EAAI,EAAGA,EAAI4qB,EAAQ9qB,OAAQE,IAAK,CACrC,IAAMwD,EAAUonB,EAAQ5qB,GACxBgnB,EAASriB,KAAK+lB,GAAa9D,UAAUpjB,IAEzC,OAAOwjB,GA5BM0D,GA8BVG,YAAc,SAACD,GAClB,OAAOA,EAAQE,MAAK,SAACC,EAAIC,GAAM,IAAD,IAC1B,OAAO,UAACD,EAAGJ,aAAJ,QAAW,IAAX,UAAiBK,EAAGL,aAApB,QAA2B,OAhCzBD,GAmCVO,gBAAkB,SAACL,GACtB,OAAOA,EAAQE,MAAK,SAACC,EAAIC,GAAM,IAAD,IAC1B,OAAO,UAACA,EAAGL,aAAJ,QAAW,IAAX,UAAiBI,EAAGJ,aAApB,QAA2B,OCrB9C,IAAM9J,GAAa,IAAI7hB,KAEjBkG,G,sCACF+F,OAAiB,CACbkb,MAAOtF,GAAKwJ,WAAa,EACzBpE,KAAMpF,GAAK4F,cACXJ,QAASxF,GAAKwJ,WAAa,EAC3BrE,OAAQnF,GAAK4F,cACbtb,KAAM,EACND,MARsB,I,KAU1BggB,SAAmB,M,KACnBC,sBAAgC,E,KAChCC,eAA0BtgB,GAExBugB,G,kDAGF,WAAY9vB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAHjBmnB,0BAAuDT,GAA0B9P,cAE9D,EADnBpX,MAAQ,IAAImK,GACO,EAGnB6gB,mBAAqB,SAAC5nB,GAClB,IAAMmF,EAAOnF,EAAEiF,OAAOE,KAChB2H,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAO3H,GAAQ9D,SAASrB,EAAEiF,OAAO1J,OACjC,EAAK8C,SAAS,CAAEyO,OAAQA,KAPT,EASnBA,OAAS,SAAC9M,GACNA,EAAEuJ,iBACF,IAAMuD,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAOC,MA7Be,GA8BtB,EAAK1O,SAAS,CAAEyO,OAAQA,IACxB,EAAKqgB,aAdU,EAgBnBvV,OAAS,SAAC5X,GACNA,EAAEuJ,iBAIF,EAAK4jB,aArBU,EAuBnBC,gBAAkB,SAACvnB,GAA2B,IAAD,EACzCA,EAASwO,SAAWkY,GAAaO,gBAAb,UAA6BjnB,EAASwO,gBAAtC,QAAkD,IACtE,EAAKhW,SAAS,CAAE4uB,UAAWpnB,KAzBZ,EA2BnBwnB,mBAAqB,SAACrtB,GAClB7B,QAAQgF,MAAMnD,GACd,EAAKyE,uBA7BU,EA+BnB0oB,UAAY,WACR,EAAK9M,uBACD,EAAKkE,0BAA0BR,gBAC/B,EAAKqJ,gBACL,EAAKC,mBACL,EAAKzwB,MAAMkQ,SApCA,EA2CnBwgB,mBAAqB,SAACzrB,GAClB,EAAKxD,SAAS,CAAE2uB,qBAAsBnrB,KA5CvB,EA8CnB0rB,kBAAoB,WAChB,EAAKlvB,SAAS,CAAE2uB,sBAAuB,KA/CxB,EAiDnBQ,mBAAqB,WACjB,IAAMC,EAAY,EAAK7wB,MAAMqwB,UAAY,EAAKrwB,MAAMqwB,UAAU5Y,cAAW1H,EACzE,GAAK8gB,EAGL,IAAK,IAAI5rB,EAAI,EAAGA,EAAI4rB,EAAU9rB,OAAQE,IAAK,CACvC,IAAMwD,EAAUooB,EAAU5rB,GAC1B,GAAI,EAAKjF,MAAMowB,sBAAwBnrB,EAAG,OAAOwD,IAxDtC,EA4DnBsnB,KAAO,SAAC3sB,GACJ,IAAMitB,EAAY,EAAKrwB,MAAMqwB,UAC7B,GAAKA,EAAL,CAGA,IAIIF,EAJEU,EAAYR,EAAYA,EAAU5Y,cAAW1H,EACnD,GAAK8gB,EAIsB,OAAvB,EAAK7wB,MAAMmwB,UACXE,EAAU5Y,SAAWkY,GAAaG,YAAYe,GAC9CV,EAAW,SAEXE,EAAU5Y,SAAWkY,GAAaO,gBAAgBW,GAClDV,EAAW,OAEf,EAAK1uB,SAAS,CAAE4uB,UAAWA,EAAWF,SAAUA,EAAUC,sBAAuB,MA7ElE,E,gEAwCfzuB,KAAKkG,sBACLlG,KAAK4uB,c,+BAsCC,IAAD,gBACCF,EAAY1uB,KAAK3B,MAAMqwB,UAC7B,IAAKA,EACD,OAAO,yBAAK3vB,UAAU,mBAClB,6CACA,kBAAC,GAAD,OAGR,IAAMowB,GAAkB,oBAACnvB,KAAK3B,MAAMkQ,cAAZ,aAAC,EAAmBC,aAApB,QAA6B,IAAK,oBAACxO,KAAK3B,MAAMqwB,iBAAZ,aAAC,EAAsBhc,iBAAvB,QAAoC,GAAK,EAC7F0c,EAA0C,OAAvBpvB,KAAK3B,MAAMmwB,SAAoB,8BAAgC,wBACxF,OACI,yBAAKzvB,UAAU,kBAAkBE,MAAO,CAAEowB,cAAe,SACrD,6CACA,kBAAC,GAAD,CAAiBrb,SAAUhU,KAAKqpB,mBAAoBG,iBAAkBkF,GAAaA,EAAUlF,iBAAmBkF,EAAUlF,iBAAmB,GACzIne,SAAUrL,KAAKuO,OAAQA,OAAQvO,KAAK3B,MAAMkQ,SAC9C,kBAAC,GAAD,CAAOnN,MAAM,WACT,yBAAKrC,UAAU,yBACX,kBAAC,GAAD,CAAcA,UAAU,4BAAxB,kBAAkE,0BAAMA,UAAU,qBAAhB,UAAqC2vB,EAAU5Y,gBAA/C,aAAqC,EAAoB1S,SAC3H,kBAAC,GAAD,CAAcrE,UAAU,4BAAxB,iBAAiE,0BAAMA,UAAU,qBAAqB2vB,EAAUhc,YAChH,kBAAC,GAAD,CAAc3T,UAAU,sBAAsBoQ,cAAeigB,EAAkBxuB,QAASZ,KAAKouB,MAA7F,QACA,0BAAMnvB,MAAO,CAAE2c,UAAW,QAAU7c,UAAU,cAAcsM,SAAUrL,KAAKqZ,QACvE,2BAAO7N,YAAY,gBAAgBnM,UAAQ,EAACN,UAAU,iBACtD,2BAAOyM,YAAY,eAAe5E,KAAK,QAAQoN,SAAUhU,KAAKqpB,mBAAoBrsB,MAAOgD,KAAK3B,MAAMkQ,OAAOC,MAAO1Q,KAAK,SAASoV,IAAK,EAAGC,IAAG,UAAEnT,KAAK3B,MAAMqwB,iBAAb,aAAE,EAAsBhc,UAAW3T,UAAU,iBACvLowB,EAAkB,4BAAQrxB,KAAK,SAASiB,UAAU,uBAAuB,uBAAGA,UAAU,oBAApE,WACb,QAIlB,kBAAC,GAAD,CACI6B,QAASZ,KAAK+uB,mBAAoBtB,UAAWztB,KAAKgvB,kBAClD/oB,QAAO,UAAEyoB,EAAUvK,YAAZ,QAAoB,IAAI7hB,KAAQ6oB,QAAS6C,GAAa5D,WAAb,iBAAwBsE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAW5Y,gBAAnC,QAA+C,MACnG,kBAAC,GAAD,CAAoBwZ,aAActvB,KAAKivB,4B,GAjHxBnpB,GAuHzBypB,GAAqB,SAAC1wB,GACxB,IAAMywB,EAAyCzwB,EAAMywB,aACrD,OAAKA,GAAiBA,EAAa9P,QAK3B,yBAAKzgB,UAAU,MAAME,MAAO,CAAEssB,UAAW,UAC7C,yBAAKxsB,UAAU,YACX,kBAAC,GAAD,CAAU4pB,UAAW3J,GAAQkK,gBAAgBoG,EAAa9P,QAASpiB,MAEvE,yBAAK2B,UAAU,YACX,kBAAC,GAAD,CAAWoK,MAAM,QAAQmmB,EAAa9P,QAAU8P,EAAa9P,QAAQ5Y,KAAO,IAC5E,kBAAC,GAAD,CAAWuC,MAAM,SAAS1G,EAAgB6sB,EAAarB,QACvD,kBAAC,GAAD,CAAW9kB,MAAM,UACb,kBAAC,GAAD,CAAgB+F,WAAY,CAACxI,OAAO,UAAWuD,GAAI,2BAA2BqlB,EAAa9P,QAAQre,IAAnG,aAZA,yBAAKpC,UAAU,kBAAkBE,MAAO,CAAEssB,UAAW,UACzD,yBAAKxsB,UAAU,oBAAmB,uBAAGA,UAAU,yBAA/C,oCAgBG4L,eAAWC,YACtBxM,EADsBwM,CAGxB+jB,KC7JIxK,GAAa,IAAI7hB,KAEjBkG,G,sCACF+F,OAAiB,CACbkb,MAAOtF,GAAKwJ,WAAa,EACzBpE,KAAMpF,GAAK4F,cACXJ,QAASxF,GAAKwJ,WAAa,EAC3BrE,OAAQnF,GAAK4F,cACbtb,KAAM,EACND,MARsB,I,KAU1BggB,SAAmB,M,KACnBC,sBAAgC,E,KAChCC,eAA0BtgB,E,KAC1B+S,UAAmB,GAEjBqO,G,kDAGF,WAAY3wB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAHjBmnB,0BAAuDT,GAA0B9P,cAE9D,EADnBpX,MAAQ,IAAImK,GACO,EAGnB6gB,mBAAqB,SAAC5nB,GAClB,IAAMmF,EAAOnF,EAAEiF,OAAOE,KAChB2H,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAO3H,GAAQ9D,SAASrB,EAAEiF,OAAO1J,OACjC,EAAK8C,SAAS,CAAEyO,OAAQA,KAPT,EASnBA,OAAS,SAAC9M,GACNA,EAAEuJ,iBACF,IAAMuD,EAAS,EAAKlQ,MAAMkQ,OAC1BA,EAAOC,MA9Be,GA+BtB,EAAK1O,SAAS,CAAEyO,OAAQA,IACxB,EAAKqgB,aAdU,EAgBnBC,gBAAkB,SAACvnB,GACf,EAAKxH,SAAS,CAAE4uB,UAAWpnB,EAAU6Z,UAAU,KAjBhC,EAmBnB2N,mBAAqB,SAACrtB,GAClB7B,QAAQgF,MAAMnD,GACd,EAAK3B,SAAS,CAAE4uB,eAAUtgB,EAAW+S,UAAU,IAC/C,EAAKjb,uBAtBU,EAwBnBupB,aAAe,WACX,OAAO,EAAK5wB,MAAMke,MAAM3V,OAAOjG,IAzBhB,EA2BnBuuB,WAAa,WAA4B,IAAD,EACpC,GAAK,EAAKrxB,MAAMqwB,WAAc,EAAKrwB,MAAMqwB,UAAUpgB,OAAnD,CAGA,IAAMkR,EAAO,UAAG,EAAKnhB,MAAMqwB,iBAAd,aAAG,EAAsBpgB,OACtC,OAAO2U,OAAOC,OAAO,IAAIlE,GAAWQ,KAhCrB,EAkCnBoP,UAAY,WACR,EAAK9M,uBACD,EAAKkE,0BAA0BP,sBAC/B,EAAKoJ,gBACL,EAAKC,mBACL,EAAKW,eACL,EAAKpxB,MAAMkQ,SAxCA,EA+CnBwgB,mBAAqB,SAACzrB,GAClB,EAAKxD,SAAS,CAAE2uB,qBAAsBnrB,KAhDvB,EAkDnB0rB,kBAAoB,WAChB,EAAKlvB,SAAS,CAAE2uB,sBAAuB,KAnDxB,EAqDnBQ,mBAAqB,WACjB,IAAMC,EAAY,EAAK7wB,MAAMqwB,UAAY,EAAKrwB,MAAMqwB,UAAU5Y,cAAW1H,EACzE,GAAK8gB,EAGL,IAAK,IAAI5rB,EAAI,EAAGA,EAAI4rB,EAAU9rB,OAAQE,IAAK,CACvC,IAAMwD,EAAUooB,EAAU5rB,GAC1B,GAAI,EAAKjF,MAAMowB,sBAAwBnrB,EAAG,OAAOwD,IA5DtC,E,gEA4Cf9G,KAAKkG,sBACLlG,KAAK4uB,c,+BAoBC,IAAD,IACL,GAAI5uB,KAAK3B,MAAM8iB,SACX,OAAO,kBAAC,GAAD,kBAEX,IAAMuN,EAAY1uB,KAAK3B,MAAMqwB,UACvBlP,EAA+Bxf,KAAK0vB,aAC1C,OAAKhB,GAAclP,EAOf,yBAAKzgB,UAAU,kBAAkBE,MAAO,CAAEowB,cAAe,SACrD,+CAAqB7P,EAAQ5Y,MAC7B,kBAAC,GAAD,CAAiBoN,SAAUhU,KAAKqpB,mBAAoBG,iBAAkBkF,GAAaA,EAAUlF,iBAAmBkF,EAAUlF,iBAAmB,GACzIne,SAAUrL,KAAKuO,OAAQA,OAAQvO,KAAK3B,MAAMkQ,SAE9C,kBAAC,GAAD,CACI3N,QAASZ,KAAK+uB,mBAAoBtB,UAAWztB,KAAKgvB,kBAClD/oB,QAAO,UAAEyoB,EAAUvK,YAAZ,QAAoB,IAAI7hB,KAAQ6oB,QAAS6C,GAAa5D,WAAb,iBAAwBsE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAW5Y,gBAAnC,QAA+C,MACnG,kBAAC,GAAD,CAAoBwZ,aAActvB,KAAKivB,wBAdpC,yBAAKlwB,UAAU,mBAClB,uDACA,kBAAC,GAAD,W,GA7EqB+G,GA+F/BypB,GAAqB,SAAC1wB,GACxB,IAAMywB,EAAyCzwB,EAAMywB,aACrD,OAAKA,EAKG,yBAAMrwB,MAAO,CAAEssB,UAAW,UAC9B,kBAAC,GAAD,CAAWpiB,MAAM,UAAUmmB,EAAa5F,UAAxC,IAAoD4F,EAAa/F,MACjE,kBAAC,GAAD,CAAWpgB,MAAM,SAAS1G,EAAgB6sB,EAAarB,SAN/C,yBAAKlvB,UAAU,kBAAkBE,MAAO,CAAEssB,UAAW,UACzD,yBAAKxsB,UAAU,oBAAmB,uBAAGA,UAAU,yBAA/C,oCASG4L,eAAWC,YACtBxM,EADsBwM,CAGxB4kB,KC3IIG,G,kDAEF,WAAY9wB,GAAW,uCACbA,EAAO,YAAY,G,qDAEpB,IAAD,EACJ,OACI,yBAAKsC,GAAG,eAAepC,UAAU,mBAC7B,wCACA,yBAAKA,UAAU,oBAAf,YACa,0CAASiB,KAAKoK,uBAAd,aAAS,EAAsBM,mB,GAVjCmB,IAqBZlB,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,KAI1BD,CAGtB+kB,KC9BiBC,G,4MACpBhkB,c,IACAlB,iB,IACA9C,c,IACAioB,kB,IACAC,iB,IACApxB,e,IACAqxB,oB,cAPiCpR,ICGbqR,G,iDAUjBC,cAAgB,SAACtoB,GAEb,IAAMgG,EAAqB,CACxBhG,KAAKA,GAGF+F,EAAWxQ,IAAcC,OAAO,iCACtC,OAAOsQ,GAAoBC,EAAUC,I,+DATrC,OAHqB,MAAjB3N,KAAK8O,WACL9O,KAAK8O,SAAW,IAAIkhB,GAEjBhwB,KAAK8O,a,KARCkhB,GAEFlhB,c,ECLZ,IAAMohB,GAAY,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,KAAMvpB,EAAyD,EAAzDA,KAAMwpB,EAAmD,EAAnDA,YAAapzB,EAAsC,EAAtCA,MAAOqzB,EAA+B,EAA/BA,eAAmBxxB,EAAY,uEACvF,OAAgB,GAARsxB,EACJ,kBAAC,GAAD,CAAeE,eAAgBA,EAAgBzpB,KAAMA,EAAMwpB,YAAaA,EAAapzB,MAAOA,EAAOc,KAAMe,EAAMf,OAE/G,kBAAC,GAAD,CAAe8I,KAAMA,EAAMwpB,YAAaA,EAAapzB,MAAOA,EAAOc,KAAMe,EAAMf,QAGjFwyB,GAAgB,SAAC,GAAwD,IAAtD1pB,EAAqD,EAArDA,KAAMwpB,EAA+C,EAA/CA,YAAapzB,EAAkC,EAAlCA,MAAOqzB,EAA2B,EAA3BA,eAAgBvyB,EAAW,EAAXA,KAC/D,OAAQ,yBAAKiB,UAAU,OACnB,uBAAGA,UAAU,aAAY,2BAAOjB,KAAI,OAAEA,QAAF,IAAEA,IAAQ,OAAQ8I,KAAMA,EAAMoN,SAAUqc,EAAgBrzB,MAAOA,EAAO+B,UAAU,kBACpH,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAcmQ,WAAY,CACtB,YAAatI,EAAM,eAAgB,SAEnChG,QAASwvB,EAAarxB,UAAU,4BAHpC,aAQNwxB,GAAgB,SAAC,GAAwC,IAAtC3pB,EAAqC,EAArCA,KAAMwpB,EAA+B,EAA/BA,YAAapzB,EAAkB,EAAlBA,MAAOc,EAAW,EAAXA,KAE/C,OAAQ,yBAAKiB,UAAU,OACnB,yBAAKA,UAAU,aACX,uBAAGE,MAAO,CAAEuB,gBAAyB,SAAR1C,EAAkBd,EAAQ,SAAoB,SAARc,EAAkB,eAAiBd,GAC7F,SAARc,EAAkB,2BAAId,GAAa,MAExC,yBAAK+B,UAAU,YACX,kBAAC,GAAD,CAAcmQ,WAAY,CACtB,YAAatI,EAAM,eAAgB,QACpChG,QAASwvB,EAAarxB,UAAU,wBAFnC,WCZNyJ,G,iDACFb,UAAcyG,E,KACdoiB,WAAwB,CACpB5kB,UAAU,EACVlB,aAAa,EACb9C,UAAU,EACVioB,cAAc,G,KAElBY,aAAe,WACX,OAAO,EAAKD,WAAWX,cAAgB,EAAKW,WAAW5kB,UAAY,EAAK4kB,WAAW9lB,aAAe,EAAK8lB,WAAW5oB,WAGpH8oB,G,kDAIF,WAAY7xB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjB8xB,YAA2BX,GAAYva,cAEf,EADxBpX,MAAgB,IAAImK,GACI,EAQxBooB,sBAAwB,SAACnvB,GACrB,IAAMiF,EAAkCjF,EAAEiF,OAC1C,GAAI,MAAQA,EAAZ,CACA,IAAMiB,EAAyB,EAAKtJ,MAAMsJ,KACrCA,IAELA,EAAKjB,EAAOE,MAAQF,EAAO1J,MAC3B,EAAK8C,SAAS,CAAE6H,KAAMA,OAfF,EAiBxBkpB,kBAAoB,SAACpvB,GACjB,IAAMiF,EAAkCjF,EAAEiF,OAC1C,GAAI,MAAQA,EAAZ,CACA,IAAMxI,EAAG,eACH2F,EAA4B6C,EAAOlC,MAAQkC,EAAOlC,MAAM,GAAGoC,UAAOwH,EACnEvK,GACLG,EAAW0C,GAAQW,MAAK,SAAS6M,GAC7B,IAAM4c,EAAWvtB,EAAqB2Q,GAClCnP,EAAe,EACf+rB,EAAW,MACX/rB,EAAQ,IAAQ+rB,GAEpBjsB,EAAYqP,EAAWnP,EAAOnB,EAAcC,IACvCwD,MAAK,SAAU0pB,GACZ7yB,EAAI8yB,gBAAgBD,SAE7BxpB,MAAM3H,QAAQgF,SAjCG,EAmCxBosB,gBAAkB,SAAC9c,GACf,IAAMvM,EAAsB,EAAKtJ,MAAMsJ,KAClCA,IACLA,EAAKkoB,aAAe3b,EACpB,EAAKpU,SAAS,CAAC6H,KAAKA,MAvCA,EAyCxByoB,YAAc,SAAC3uB,GACX,IAAMiF,EAAmCjF,EAAEiF,OACrCiB,EAAyB,EAAKtJ,MAAMsJ,KACpCspB,EAAqC,EAAK7mB,gBAChD,GAAI,MAAQ1D,GAAWiB,GAASspB,EAAhC,CAIA,IAAMC,EAA8BxqB,EAAOyqB,aAAa,aACxD,GAAI,MAAQD,EAAZ,CAGA,IAAME,EAA0D,QAAvC1qB,EAAOyqB,aAAa,gBACvCX,EAAa,EAAKnyB,MAAMmyB,WAC9BA,EAAWU,GAAgBE,EACtBA,IACDzpB,EAAKupB,GAAgBD,EAAiBC,IAE1C,EAAKpxB,SAAS,CAAE6H,KAAMA,EAAM6oB,WAAYA,OA3DpB,EA6DxBa,WAAa,SAAC5vB,GAEV,GADAA,EAAEuJ,iBAC+B,GAA7B,EAAK3M,MAAMoyB,eAAf,CAGA,IAAMvyB,EAAG,eACT,EAAK0K,iBAAiB,cACjBvB,MAAK,SAAUwB,GACRA,GAAM3K,EAAIozB,oBArEF,EAwExBA,aAAe,WACX,IAAM3pB,EAAyB,EAAK4pB,oBAC/B5pB,GACL,EAAKuO,WACD,EAAKya,YAAYV,cACjB,EAAKuB,aAAc,EAAKnrB,qBACxBsB,IA9EgB,EAiFxB4pB,kBAAoB,WAAyB,IAAD,EAClC5pB,EAAyB,EAAKtJ,MAAMsJ,KACpC6oB,EAAwB,EAAKnyB,MAAMmyB,WACzC,GAAK7oB,EAAL,CACA,IAAM8pB,EAAmB,IAAI7B,GAC7B,IAAK,IAAM7lB,KAAOymB,EAAY,CACFA,EAAWzmB,IACb,gBAAPA,IACX0nB,EAAW1nB,GAAOpC,EAAKoC,IAM/B,OAHIymB,EAAWX,eAAX,UAA2BloB,EAAKkoB,oBAAhC,aAA2B,EAAmBza,WAAW,iBACzDqc,EAAW5B,aAAeloB,EAAKkoB,cAE5B4B,IA/Fa,EAiGxBD,aAAe,SAAClqB,GACZ,EAAK+Q,SAAS,WACd,EAAKxZ,MAAM6yB,cAAcpqB,EAASK,OAjGlC,EAAKtJ,MAAMsJ,KAAOsb,OAAOC,OAAO,IAAI0M,GAAQ,EAAKxlB,iBAF7B,E,gEAKpBpK,KAAKkG,sBACLpJ,SAASsE,MAAQ,iB,+BAgGX,IAAD,EACCuG,EAAyB3H,KAAK3B,MAAMsJ,KAC1C,IAAKA,EAAM,OAAO,KAClB,IAAM6oB,EAAwBxwB,KAAK3B,MAAMmyB,WACzC,OACI,yBAAKrvB,GAAG,cAAcpC,UAAU,mBAC5B,4CACA,kBAAC,GAAD,CAAMqC,MAAM,gBACR,0BAAMiK,SAAUrL,KAAKqxB,YACjB,yBAAKtyB,UAAU,8BAA8BE,MAAO,CAACuQ,aAAa,SAC9D,yBAAKvQ,MAAO,CAACuQ,aAAa,QAAStQ,MAAM,MAAMmG,OAAO,MAAMtG,UAAU,uCAAuCqG,KAAK,UAAAuC,EAAKkoB,oBAAL,eAAmBza,WAAW,eAAczN,EAAKkoB,aAAazyB,EAAeuK,EAAKkoB,eACpM,kBAAC,GAAD,CAAWM,KAAMK,EAAWX,aAAcQ,eAAgBrwB,KAAK6wB,kBAAmBT,YAAapwB,KAAKowB,eAExG,kBAAC,GAAD,CAAWjnB,MAAM,aACb,kBAAC,GAAD,CAAWgnB,KAAMK,EAAW5kB,SAAUykB,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,WAAWwpB,YAAapwB,KAAKowB,YAAapzB,MAAO2K,EAAKiE,YAEjJ,kBAAC,GAAD,CAAWzC,MAAM,QACb,kBAAC,GAAD,CAAWgnB,KAAMK,EAAW9lB,YAAa2lB,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,cAAcwpB,YAAapwB,KAAKowB,YAAapzB,MAAO2K,EAAK+C,eAEvJ,kBAAC,GAAD,CAAWvB,MAAM,YACb,kBAAC,GAAD,CAAWgnB,KAAMK,EAAW5oB,SAAUyoB,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,WAAWwpB,YAAapwB,KAAKowB,YAAapzB,MAAO2K,EAAKC,YAEjJ,kBAAC,GAAD,KACI5H,KAAK3B,MAAMoyB,eAAgB,2BAAO3yB,KAAK,SAASiB,UAAU,kBAAkB/B,MAAM,SAAU,a,GAjI9F8I,GA0IpB6rB,GAAY,SAAC,GAA2C,IAAzCxB,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACpC,OAAgB,GAARF,EAAe,oCACnB,6BACI,kBAAC,GAAD,CAAcjhB,WAAY,CACtB,YAAa,eAAgB,eAAgB,SAC9CtO,QAASwvB,EAAarxB,UAAU,6BAFnC,WAIJ,2BAAOiV,SAAUqc,EAAgBtxB,UAAU,eAAekV,OAAO,UAAUnW,KAAK,OAAO8I,KAAK,kBAG5F,6BACI,kBAAC,GAAD,CAAcsI,WAAY,CACtB,YAAa,eAAgB,eAAgB,QAC9CtO,QAASwvB,EAAarxB,UAAU,wBAFnC,gBAWG4L,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,CAChD6mB,cAAe,SAAC/pB,GAAD,OAAgBkD,E1EwFN,SAAClD,GAO1B,MALc,CACV7J,KC3PuB,kBD4PvBC,QAAS,CAAE4J,KAAMA,GACjB3J,KAAM,CAAEF,KC7Pe,oByEgKa4zB,CAAc/pB,QAGhCiD,CAGxB8lB,KC9LmBkB,G,4MACpBhrB,U,IACAirB,a,IACApT,sB,IACAqT,W,IACApT,sB,IACA2C,a,IACAC,a,IACAyQ,a,IACAC,a,IACAC,c,IACA5T,mB,IACA6T,qB,IACA5f,W,IACAkM,e,cAd+CG,ICe1CnW,G,iDACFlK,wBAA0C8P,E,KAC1CoiB,WAAwB,CACpB5pB,MAAM,EACN8X,kBAAkB,EAClBD,kBAAkB,EAClBJ,eAAe,EACfgD,SAAS,EACTyQ,OAAO,EACPxf,OAAO,EACPkM,WAAW,G,KAEfiS,aAAe,WACX,IAAK,IAAM1mB,KAAO,EAAKymB,WAAY,CAE/B,GAAe,GADC,EAAKA,WAAWzmB,GAE5B,OAAO,EAGf,OAAO,IAGTooB,G,kDAIF,WAAYtzB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjB2W,kBAAuC3H,GAAkB4H,cAEjC,EADxBpX,MAAgB,IAAImK,GACI,EAQxBooB,sBAAwB,SAACnvB,GACrB,IAAMiF,EAAkCjF,EAAEiF,OAC1C,GAAI,MAAQA,EAAZ,CACA,IAAMpI,EAAqD,EAAKD,MAAMC,mBACjEA,IAELA,EAAmBoI,EAAOE,MAAQF,EAAO1J,MACzC,EAAK8C,SAAS,CAAExB,mBAAoBA,OAfhB,EAiBxBuyB,kBAAoB,SAACpvB,GACjB,IAAMiF,EAAkCjF,EAAEiF,OAC1C,GAAI,MAAQA,EAAZ,CACA,IAAMxI,EAAG,eACH2F,EAA4B6C,EAAOlC,MAAQkC,EAAOlC,MAAM,GAAGoC,UAAOwH,EACnEvK,GACLG,EAAW0C,GAAQW,MAAK,SAAU6M,GAC9B,IAAM4c,EAAWvtB,EAAqB2Q,GAElCnP,EAAe,EACf+rB,EAAW,MACX/rB,EAAQ,IAAQ+rB,GAEpBjsB,EAAYqP,EAAWnP,EAAOnB,EAAcC,IACvCwD,MAAK,SAAU0pB,GACZ7yB,EAAI8yB,gBAAgBD,SAE7BxpB,MAAM3H,QAAQgF,SAlCG,EAoCxBosB,gBAAkB,SAAC9c,GACE3Q,EAAqB2Q,GAAtC,IAEM5V,EAAqD,EAAKD,MAAMC,mBACjEA,IACLA,EAAmB+f,cAAgBnK,EACnC,EAAKpU,SAAS,CAAExB,mBAAoBA,MA1ChB,EA4CxB8xB,YAAc,SAAC3uB,GACX,IAAMiF,EAAmCjF,EAAEiF,OACrC0rB,EAA6C,EAAK/zB,MAAMC,mBACxD+zB,EAAmD,EAAKjpB,wBAC9D,GAAI,MAAQ1C,GAAW0rB,GAAeC,EAAtC,CAIA,IAAMnB,EAA8BxqB,EAAOyqB,aAAa,aACxD,GAAI,MAAQD,EAAZ,CAGA,IAAME,EAA0D,QAAvC1qB,EAAOyqB,aAAa,gBACvCX,EAAa,EAAKnyB,MAAMmyB,WAC9BA,EAAWU,GAAgBE,EACtBA,IACDgB,EAAWlB,GAAgBmB,EAAiBnB,IAEhD,EAAKpxB,SAAS,CAAExB,mBAAoB8zB,EAAY5B,WAAYA,OA9DxC,EAgExBa,WAAa,SAAC5vB,GAEV,GADAA,EAAEuJ,iBAC+B,GAA7B,EAAK3M,MAAMoyB,eAAf,CAGA,IAAMvyB,EAAG,eACT,EAAK0K,iBAAiB,cACjBvB,MAAK,SAAUwB,GACRA,GAAM3K,EAAIozB,oBAxEF,EA2ExBA,aAAe,WACX,IAAMhzB,EAAqD,EAAKg0B,2BAC3Dh0B,GACL,EAAK4X,WACD,EAAKV,kBAAkBvH,yBACvB,EAAKujB,aAAc,EAAKnrB,qBACxB/H,IAjFgB,EAoFxBg0B,yBAA2B,WAAuC,IAAD,EACvDh0B,EAAqD,EAAKD,MAAMC,mBAChEkyB,EAAwB,EAAKnyB,MAAMmyB,WACzC,GAAKlyB,EAAL,CACA,IAAMi0B,EAAwC,IAAIX,GAClD,IAAK,IAAM7nB,KAAOymB,EAAY,CACDA,EAAWzmB,IACd,iBAAPA,IACXwoB,EAAkBxoB,GAAOzL,EAAmByL,IAMpD,OAHIymB,EAAWnS,gBAAX,UAA4B/f,EAAmB+f,qBAA/C,aAA4B,EAAkCjJ,WAAW,iBACzEmd,EAAkBlU,cAAgB/f,EAAmB+f,eAElDkU,IAlGa,EAoGxBf,aAAe,SAAClqB,GACZ,EAAK+Q,SAAS,WACd,EAAKxZ,MAAM2zB,sBAAsBlrB,EAAShJ,qBApG1C,EAAKD,MAAMC,mBAAqB2kB,OAAOC,OAAO,IAAI0O,GAAsB,EAAKxoB,yBAFzD,E,gEAKpBpJ,KAAKkG,sBACLpJ,SAASsE,MAAQ,+B,+BAmGX,IAAD,EACC9C,EAAqD0B,KAAK3B,MAAMC,mBACtE,IAAKA,EAAoB,OAAO,KAChC,IAAMkyB,EAAwBxwB,KAAK3B,MAAMmyB,WACnCiC,EAAa,UAAGn0B,EAAmB+f,qBAAtB,QAAuC,GAC1D,OACI,yBAAKld,GAAG,qBAAqBpC,UAAU,mBACnC,mDACA,kBAAC,GAAD,CAAMqC,MAAM,gBACR,0BAAMiK,SAAUrL,KAAKqxB,YACjB,yBAAKtyB,UAAU,8BAA8BE,MAAO,CAAEuQ,aAAc,SAChE,yBAAKvQ,MAAO,CAAEuQ,aAAc,QAAUnK,OAAO,MAAMtG,UAAU,wBAAwBqG,IAAKqtB,EAAMrd,WAAW,cAAgBqd,EAAQr1B,EAAeq1B,IAClJ,kBAAC,GAAD,CAAWtC,KAAMK,EAAWnS,cAAegS,eAAgBrwB,KAAK6wB,kBAAmBT,YAAapwB,KAAKowB,eAEzG,kBAAC,GAAD,CAAWjnB,MAAM,QACb,kBAAC,GAAD,CAAWgnB,KAAMK,EAAW5pB,KAAMypB,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,OAAOwpB,YAAapwB,KAAKowB,YAAapzB,MAAOsB,EAAmBsI,QAEvJ,kBAAC,GAAD,CAAWuC,MAAM,qBACb,kBAAC,GAAD,CAAWgnB,KAAMK,EAAW9R,iBAAkB2R,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,mBAAmBwpB,YAAapwB,KAAKowB,YAAapzB,MAAOsB,EAAmBogB,oBAE/K,kBAAC,GAAD,CAAWvV,MAAM,qBACb,kBAAC,GAAD,CAAWgnB,KAAMK,EAAW/R,iBAAkB4R,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,mBAAmBwpB,YAAapwB,KAAKowB,YAAapzB,MAAOsB,EAAmBmgB,oBAE/K,kBAAC,GAAD,CAAWtV,MAAM,WACb,kBAAC,GAAD,CAAWgnB,KAAMK,EAAWnP,QAASgP,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,UAAUwpB,YAAapwB,KAAKowB,YAAapzB,MAAOsB,EAAmB+iB,WAE7J,kBAAC,GAAD,CAAWlY,MAAM,SACb,kBAAC,GAAD,CAAWgnB,KAAMK,EAAWsB,MAAOzB,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,QAAQwpB,YAAapwB,KAAKowB,YAAapzB,MAAOsB,EAAmBwzB,SAEzJ,kBAAC,GAAD,CAAW3oB,MAAM,oBACb,kBAAC,GAAD,CAAWrL,KAAK,QAAQqyB,KAAMK,EAAWle,MAAO+d,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,QAAQwpB,YAAapwB,KAAKowB,YAAapzB,MAAOsB,EAAmBgU,SAEtK,kBAAC,GAAD,CAAWnJ,MAAM,cACb,kBAAC,GAAD,CAAWrL,KAAK,QAAQqyB,KAAMK,EAAWhS,UAAW6R,eAAgBrwB,KAAK4wB,sBAAuBhqB,KAAK,YAAYwpB,YAAapwB,KAAKowB,YAAapzB,MAAOsB,EAAmBkgB,aAE9K,kBAAC,GAAD,KACKxe,KAAK3B,MAAMoyB,eAAiB,2BAAO3yB,KAAK,SAASiB,UAAU,kBAAkB/B,MAAM,SAAY,a,GAjJvF8I,GA0J/B6rB,GAAY,SAAC,GAA2C,IAAzCxB,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAC9BzpB,EAAe,gBACrB,OAAgB,GAARupB,EAAe,oCACnB,6BACI,kBAAC,GAAD,CAAcjhB,WAAY,CACtB,YAAatI,EAAM,eAAgB,SACpChG,QAASwvB,EAAarxB,UAAU,6BAFnC,WAIJ,2BAAOiV,SAAUqc,EAAgBtxB,UAAU,eAAekV,OAAO,UAAUnW,KAAK,OAAO8I,KAAMA,KAG7F,6BACI,kBAAC,GAAD,CAAcsI,WAAY,CACtB,YAAatI,EAAM,eAAgB,QACpChG,QAASwvB,EAAarxB,UAAU,wBAFnC,2BAWG4L,eAAWC,YACtBxM,GALuB,SAACyM,GAAD,MAAyB,CAChD2nB,sBAAuB,SAACl0B,GAAD,OAA4CuM,E5EuElC,SAACvM,GAOlC,MALc,CACVR,KCpQ+B,0BDqQ/BC,QAAS,CAAEO,mBAAoBA,GAC/BN,KAAM,CAAEF,KCtQuB,4B2E0LyC00B,CAAsBl0B,QAG5EsM,CAGxBunB,KC7LIO,G,kDAGF,WAAY7zB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAFjB6B,IAAsCa,IAAMC,YACpB,EAGxBib,gBAAgB,SAACvU,GACb,EAAKrJ,MAAM4d,gBAAgBvU,IAJP,E,qDAMd,IAAD,OACL,OACI,yBAAKjJ,MAAO,CAAEyc,WAAY,SACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiX,KAAK,SAASC,OACjB,SAAC/zB,GAAD,OACI,kBAAC,EAAD,CAAOX,IAAK,EAAK8H,eAGzB,kBAAC,IAAD,CAAO2sB,KAAK,QAAQC,OAChB,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAUX,IAAK,EAAK8H,eAG5B,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,aAAaC,OAC3B,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAgBX,IAAK,EAAK8H,eAElC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,uBAAuBC,OACrC,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAqBX,IAAK,EAAK8H,eAEvC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,0BAA0BC,OACxC,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAmBX,IAAK,EAAK8H,eAEpC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,8BAA8BC,OAC7C,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAyBX,IAAK,EAAK8H,eAG3C,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,cAAcC,OAC5B,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAgB4d,gBAAiB,EAAKA,gBAAiBve,IAAK,EAAK8H,eAEzE,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,oBAAoBC,OAClC,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAgB4d,gBAAiB,EAAKA,gBAAiBve,IAAK,EAAK8H,eAGzE,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,eAAeC,OAC7B,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAkBX,IAAK,EAAK8H,eAEpC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,0BAA0BC,OACxC,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAuBX,IAAK,EAAK8H,eAEzC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,uBAAuBC,OACrC,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAoBX,IAAK,EAAK8H,eAEtC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,sBAAsBC,OACpC,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAmBX,IAAK,EAAK8H,eAGrC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,YAAYC,OAC1B,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAcX,IAAK,EAAK8H,eAEhC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,yBAAyBC,OACvC,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAaX,IAAK,EAAK8H,eAE/B,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,wBAAwBC,OACtC,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAwBX,IAAK,EAAK8H,eAI1C,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,WAAWC,OACzB,SAAC/zB,GACG,OAAO,kBAAC,GAAD,CAAcX,IAAK,EAAK8H,eAGvC,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,mBAAmBC,OACjC,SAAC/zB,GACG,OAAO,kBAAC,GAAD,CAAiBX,IAAK,EAAK8H,eAG1C,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,yBAAyBC,OACvC,SAAC/zB,GACG,OAAO,kBAAC,GAAD,CAAuBX,IAAK,EAAK8H,eAIhD,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,QAAQC,OACtB,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAWX,IAAK,EAAK8H,eAE7B,kBAAC,IAAD,CAAO6sB,OAAK,EAACF,KAAK,iBAAiBC,OAC/B,SAAC/zB,GAAD,OACI,kBAAC,GAAD,CAAWX,IAAK,EAAK8H,mB,kDAtGhBF,GAwHlB6E,eAAWC,YACtBxM,GAJuB,SAACyM,GAAD,MAAyB,KAG1BD,CAGxB8nB,KCrJmBI,G,4MAGpB3qB,KAAchG,I,EACdyE,U,IACAqY,iB,IACAzhB,S,IACAu1B,mB,IACAC,c,IACAhB,a,IACA1f,W,IACAkM,e,IAGAnW,QAAkB,E,EAClBD,UAAoB,gB,EACpBrC,eAAyB,E,EACzBuC,aAAwB,E,EACxBC,cAAmB6F,E,YAlBcuQ,IAAbmU,GACbG,yBAAkC,gBADrBH,GAoBbI,iBAAmB,SAACtpB,GAC1B,YAAIwE,GAAaxE,EAAKxB,UACd0qB,GAAKG,yBAENrpB,EAAKxB,W,WCjBR+qB,G,kDACF,WAAYt0B,GAA+C,IAAD,8BACtD,cAAMA,GAAO,IAEjBu0B,gBAAkB,SAACxpB,GACf,IAAMypB,EAAmB,EAAKx0B,MAAMw0B,WACpC,GAAI,MAAQA,EAAc,OAAO,EACjC,IAAMC,EAAW,EAAKz0B,MAAM00B,SAASC,SACrC,OAAOH,EAAW71B,IAAM,IAAMoM,EAAKpM,KAAO81B,GAPY,E,gEAUtDG,OAAOC,iBAAiB,SAAU1zB,KAAK2zB,gB,6CAIvCF,OAAOG,oBAAoB,SAAU5zB,KAAK2zB,gB,mCAGjCltB,GACT,IAAIotB,EAAYptB,EAAMqtB,WAAWjsB,KAAKgsB,UAClB5wB,KAAKiQ,IAAI,EAAG2gB,EAAY,EAAI,M,+BAI1C,IAAD,OACCR,EAAmBrzB,KAAKnB,MAAMw0B,WACpC,GAAI,MAAQA,EAAc,OAAO,KACjC,IAAMnrB,EAA2C,MAA3BlI,KAAKnB,MAAM8d,aAAuB,GAAK3c,KAAKnB,MAAM8d,aAExE,OACI,wBAAIxb,GAAG,UAAUpC,UAAU,wBACvB,kBAAC,GAAD,CAAOiQ,KAAoB,MAAdqkB,EAAoBU,MAAOV,IACvCnrB,EAAMyB,KAAI,SAAAC,GACP,IACMoqB,EADoB,EAAKZ,gBAAgBxpB,GACd,cAAgB,eACjD,OACI,wBAAK7K,UAAW,gBAAgBi1B,EAAejqB,IAAK,WAAaH,EAAKzB,MAAM,kBAAC,IAAD,CAAM8B,GAAIopB,EAAW71B,IAAM,IAAMoM,EAAKpM,KAC9G,0BAAMuB,UAAU,gBAAe,uBAAGA,UAAW+zB,GAAKI,iBAAiBtpB,MACnE,0BAAM7K,UAAW,cAAgB6K,EAAKhD,gB,GAtC5Cd,GAgDhBmuB,GAAQ,SAACp1B,GACX,OAAkB,GAAdA,EAAMmQ,KAAsB,KAE5B,wBAAI7N,GAAG,gBAAgBpC,UAAU,gBAAgBE,MAAO,CAAEuQ,aAAc,SAAU,yBAC9EvQ,MAAO,CACHi1B,UAAW,SAAUxY,WAAY,OACjC2T,cAAe,SAEnB,wBAAItwB,UAAU,aACV,uBAAGA,UAAW+zB,GAAKI,iBAAiBr0B,EAAMk1B,UAE9C,kBAAC,IAAD,CAAM9pB,GAAIpL,EAAMk1B,MAAMv2B,IAAKyB,MAAO,CAACk1B,eAAe,SAAS,wBAAIp1B,UAAU,aAAaF,EAAMk1B,MAAMntB,UAS/F+D,eAAWC,YACtBxM,GANuB,SAACyM,GAAD,MAAyB,CAChD5M,cAAe,SAACC,GAAD,OAAc2M,EAAS5M,EAAcC,QAI9B0M,CAGxBuoB,KC9DIiB,I,yDAQF,WAAYv1B,GAAa,IAAD,8BACpB,cAAMA,GAAO,IARjBR,MAAgB,CACZiK,aAAa,EACbwB,eAAgB,KAChBF,UAAMwE,EACNuO,aAAc,IAGM,EADxB0X,gBAA0B,GACF,EAMxBnqB,YAAc,WACVtK,QAAQ00B,KAAK,iBACb,EAAKx0B,SAAS,CAAE8J,UAAMwE,EAAW9F,aAAa,EAAOwB,eAAgB,KAAM6S,aAAc,QARrE,EAUxB3S,QAAU,SAACJ,GACK,MAARA,IAGJhK,QAAQ6E,MAAM,aAAcmF,EAAKzB,MACjC,EAAKrI,SAAS,CAAE8J,KAAMA,EAAM+S,aAAc,KAAMrU,YAAasB,EAAKtB,YAAawB,eAAgBF,EAAKzB,SAfhF,EAiBxBsU,gBAAkB,SAACvU,GAEf,EAAKpI,SAAS,CAAE6c,aAAczU,KAnBV,EA2BxBqsB,eAAiB,WACb,IAAMjB,ExE9BiB,SAACA,GAC5B,IAAMkB,EAAUlB,EAASvwB,MAAM,KAC/BnD,QAAQ6E,MAAM,aAAc6uB,GAC5B,IAAImB,EAAYD,EAAQ,GAIxB,MAHwB,IAApBC,EAAU3f,SACV2f,EAAYD,EAAQ,IAEjBC,EwEuBcC,CAAgB,EAAK71B,MAAM00B,SAASC,UAErD,GAAIF,GAAY,EAAKe,gBAArB,CAGA,EAAKA,gBAAkBf,EACvB,IAAM1pB,ExE3BmB,SAAC0pB,GAC9B,IACI,IAAK,IAAIhwB,EAAI,EAAGA,EAAI4E,EAAM9E,OAAQE,IAAK,CACnC,IAAMsG,EAAa1B,EAAM5E,GACzB,GAAIsG,EAAKpM,KAAO,IAAM81B,EAClB,OAAO1pB,EAGf,OAAO,KACT,MAAOhF,GACL,OAAO,MwEiBM+vB,CAAkBrB,GACnB,MAAR1pB,EACA,EAAKM,cAEL,EAAKF,QAAQJ,KAtCG,EAyCxBgrB,YAAc,WAAO,IAAD,EACiF,EAAjG,OAAI,EAAKv2B,MAAMuL,MAAoC,MAA5B,EAAKvL,MAAMuL,KAAKrB,WAAoB,YAAKlK,MAAMuL,KAAKrB,gBAAhB,eAA0BnF,QAAS,EAC1F,UAAO,EAAK/E,MAAMuL,YAAlB,aAAO,EAAiBrB,SAExB,EAAKlK,MAAMse,aACJ,EAAKte,MAAMse,aAEf,MA9CP,EAAKte,MAAL,eACO,EAAKA,OAHQ,E,gEAsBpB2B,KAAKu0B,mB,2CAGLv0B,KAAKu0B,mB,+BA0BL,IAAMjsB,EAAwC,GAA1BtI,KAAK3B,MAAMiK,YAC/B,OACI,yBAAKnH,GAAG,eACJ,kBAAC,EAAD,CAAQ+I,YAAalK,KAAKkK,YAAaJ,eAAgB9J,KAAK3B,MAAMyL,eAAgBE,QAAShK,KAAKgK,QAAS9L,IAAK8B,KAAKgG,YACnH,yBAAK7E,GAAG,eAAepC,UAAU,kBAAkBE,MAAO,CAAEiK,OAAQ,EAAGD,QAAS,EAAGsiB,UAAW,SAG1F,yBAAKxsB,UAAU,kBAAkBE,MAAO,CAACoB,OAAS,EAAI2I,SAAS,YAAa7H,GAAImH,EAAc,cAAgB,WAC1G,kBAAC,GAAD,CAAoBmU,gBAAiBzc,KAAKyc,gBAAiBve,IAAK8B,KAAKnB,MAAMX,OAE/D,GAAfoK,EACO,kBAAC,GAAD,CAASqU,aAAc3c,KAAK40B,cAAevB,WAAYrzB,KAAK3B,MAAMuL,KAAM1L,IAAK8B,KAAKnB,MAAMX,MACzF,W,GAvEF4H,IAqFV6E,eAAWC,YACtBxM,GANuB,SAACyM,GAAD,MAAyB,CAChD5M,cAAe,SAACC,GAAD,OAAc2M,EAAS5M,EAAcC,QAI9B0M,CAGxBwpB,KCpFIS,G,kDAmBJ,WAAYh2B,GAAa,IAAD,8BACtB,cAAMA,IAlBRi2B,SAAmB,EAiBK,EAhBxBC,WAAqB,OAgBG,EAfxBC,UAAiB,KAeO,EAdxBC,gBAA0B,EAcF,EAbxBC,cAAwB,EAaA,EAZxBC,mBAA+B,SAAU1zB,KAYjB,EAXxB2zB,sBAAkC,SAAU3zB,KAWpB,EAVxB4zB,UAAqC9zB,IAAMC,YAUnB,EARxB8zB,cAAgB,CACdl0B,MAAO,OACPmF,QAAS,OACTzF,SAAS,EACTy0B,KAAM,aACNv0B,KAAM,cAKN,EAAK3C,MAAL,2BACK,EAAKA,OADV,IAEE8b,SAAS,EACTqb,kBAAmB,EACnB92B,eAAW0P,EACXqnB,eAAgB,IAAInzB,KACpBwF,WAAW,EACXhJ,UAAU,IATU,E,sDActBkB,KAAKF,SAAS,CAAE21B,eAAgB,IAAInzB,S,qCAIpCtC,KAAKnB,MAAM62B,aAAa11B,Q,0CAIxBA,KAAK80B,a,0CAIL90B,KAAK80B,WACD90B,KAAK80B,SAAW,IAClB90B,KAAK80B,SAAW,K,mCAIPh2B,GACXkB,KAAK21B,oBACL31B,KAAKF,SAAS,CAAEqa,SAAS,EAAMrb,SAAUA,M,mCAIzC,IACEkB,KAAK41B,oBACgB,GAAjB51B,KAAK80B,UACP90B,KAAKF,SAAS,CAAEqa,SAAS,EAAOqb,kBAAmB,IAErD,MAAM/zB,GACN7B,QAAQgF,MAAMnD,M,oCAKJ6E,GAAmB,IAAD,EACxBuvB,EAAsB,UAAGvvB,EAAIslB,kBAAP,QAAmB,EAC3CA,EAAa3oB,KAAK6yB,MAAMD,IACxBA,EAAkB,GAAKA,EAAkB,MAC3C71B,KAAKgH,aAEPhH,KAAKF,SAAS,CAAE01B,kBAAmB5J,M,gCAG3BxqB,EAAeyG,EAAW/G,EAAkBi1B,EAAuBC,GAC3Eh2B,KAAK+0B,WAAa3zB,EAClBpB,KAAKg1B,UAAYntB,EACjB7H,KAAKi1B,eAAiBn0B,EACtB,IAAM5C,EAAM8B,KACZA,KAAKm1B,mBAAqB,SAAU1zB,GAClCvD,EAAI+3B,eACJF,EAAYt0B,IAETX,IACHd,KAAKo1B,sBAAwB,SAAU3zB,GACrCvD,EAAI+3B,eACc,MAAdD,GACFA,EAAWv0B,KAIjBzB,KAAKF,SAAS,CAAEgI,WAAW,M,qCAI3B9H,KAAKk1B,cAAe,EACpBl1B,KAAKF,SAAS,CAAEgI,WAAW,M,qCAEd1G,EAAeyG,EAAW/G,EAAkBi1B,EAAuBC,GAChFh2B,KAAKk1B,cAAe,EACpBl1B,KAAK8H,UAAU1G,EAAOyG,EAAM/G,EAASi1B,EAAaC,K,2CAK9Ch2B,KAAKnB,MAAMP,oBAgDnB,SAAuB4P,GACrB,GAAIA,EAAQ+jB,SAAU,CACpB,IAAIiE,EAAOp5B,SAASq5B,cAAc,8BAChCr5B,SAASq5B,cAAc,oBACpBD,KACHA,EAAOp5B,SAASyI,cAAc,SACzBpE,GAAK,UACV+0B,EAAKE,aAAa,MAAO,iBACzBt5B,SAASu5B,KAAKC,YAAYJ,IAE5BA,EAAKE,aAAa,OAAQ54B,EAAmB,QAAU0Q,EAAQ+jB,WAzD7DsE,CAAcv2B,KAAKnB,MAAMP,sB,0CAK3B0B,KAAK01B,eACL11B,KAAKF,SAAS,CAAE01B,kBAAmB,M,+BAG3B,IAAD,OACP,IAAKx1B,KAAKnB,MAAMH,UACd,OACE,yBAAKO,MAAO,CAACyc,WAAW,QACtB,kBAAC,GAAD,OAIN,IAAMne,EAAWC,IACjB,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CAASsB,SAAUkB,KAAK3B,MAAMS,SAAUqb,QAASna,KAAK3B,MAAM8b,QAASqb,kBAAmBx1B,KAAK3B,MAAMm3B,oBAClGx1B,KAAK3B,MAAMyJ,UACV,kBAAC,EAAD,CAAO1G,MAAOpB,KAAK+0B,WACjBrzB,QAAS1B,KAAKk1B,aACd7zB,QAAS,SAACI,GAAD,OAAO,EAAK3B,SAAS,CAAEgI,WAAW,KAC3ChH,QAASd,KAAKi1B,eACdp0B,MAAOb,KAAKm1B,mBAAoBn0B,KAAMhB,KAAKo1B,uBAC3Cp1B,KAAKg1B,WACP,KACF,kBAAC,GAAD,CAAY92B,IAAK8B,OACjB,kBAAC,IAAD,CAAcxC,IAAKD,EAAW,eAAgBi5B,OAAQ,CAAC,oBAAsBx2B,KAAKnB,MAAMH,WACtF+3B,UAAW,SAACnwB,GAAuB,EAAKowB,cAAcpwB,IACtD5F,IAAK,SAACi2B,GAAa,EAAKtB,UAAYsB,U,GA7I5Br2B,aAmJlB,SAASmb,GAAQ5c,GACf,OAAqB,GAAjBA,EAAMsb,QAEN,kBAAC,EAAD,CAAQrb,SAAUD,EAAMC,SAAUK,SAAUN,EAAM22B,kBAAmBp1B,KAAK,iBAAiBtC,KAAK,YAG7F,KAiBT,IAIe6M,eAAWC,YACxBxM,GALyB,SAACyM,GAAD,MAAyB,CAClD6qB,aAAc,SAACx3B,GAAD,OAAc2M,EjF1CF,SAAC3M,GAEzB,OADAA,EAAIC,eACG,CACHL,KC/IkB,SDgJlBC,QAAS,GACTC,KAAM,CACFE,IAAKA,EAAKJ,KClJI,SDmJdN,IAAKC,EAAWN,OAAO,eiFmCIy5B,CAAqB14B,QAGlC0M,CAGxBiqB,K,SCvMWgC,GAAY,CACrB/gB,SAAU,GACVxH,OAAQ,GACR5P,UAAW,KACXo4B,SAAU,KACVC,UAAW,cAAe,IAAIz0B,MAAOuK,UACrCjP,KAAM,IAIGo5B,GAAU,WAAgC,IAA/B34B,EAA8B,uDAAtBw4B,GAAWI,EAAW,uCAClD,OAAQA,EAAOn5B,MAGX,IjFZyB,qBiFarB,OAAO,2BAAKO,GAAZ,IAAmBiQ,OAAQ2oB,EAAOl5B,UAMtC,IjFTqB,gBiFWrB,IjFVmB,ciFWf,OAAO,2BAAKM,GAAZ,IAAmBy4B,SAAUG,EAAOl5B,QAAQ+X,WAChD,IjFXmB,ciFYf,OAAO,2BAAKzX,GAAZ,IAAmBT,KAAMq5B,EAAOl5B,QAAQH,OAG5C,QACI,OAAOS,IC5BNw4B,GAAY,CACrBK,SAAU,KACVz4B,aAAa,EACb04B,aAAa,EACbjvB,MAAOkvB,EACP54B,WAAY,KACZ64B,cAAc,EACd34B,UAAW,KACXJ,mBAAoB,IAGX04B,GAAU,WAAgC,IAA/B34B,EAA8B,uDAAtBw4B,GAAWI,EAAW,uCAE9C9zB,EAAS,GACb,OAAQ8zB,EAAOn5B,MACX,IlFNkB,SkFwBd,OAjBAqF,EAAM,2BACC9E,GADD,IACQK,UAAWu4B,EAAOl5B,QAAQW,UACpCJ,mBAAyD,MAArC24B,EAAOl5B,QAAQO,mBAA6B,GAAK24B,EAAOl5B,QAAQO,qBAEtD,GAA9B24B,EAAOl5B,QAAQU,aACf0E,EAAO3E,WAAay4B,EAAOl5B,QAAQ4J,KACnCxE,EAAO1E,aAAc,IAErB0E,EAAO1E,aAAc,EACrB0E,EAAO3E,WAAa,MAExB+N,GAAU,YAAapJ,EAAOzE,WAC9BrB,aAAai6B,QAAQ,aAAcn0B,EAAO7E,mBAAmBi5B,YAC7D33B,QAAQ6E,MAAM,+BAAgCwyB,EAAOl5B,QAAQU,aAC7DmB,QAAQ6E,MAAM,iCAAkCtB,EAAO1E,aAGhD0E,EACX,IlFhCgB,WkF8CZ,OAJ0B,IAT1BA,EAAM,2BACC9E,GADD,IAEFg5B,cAAc,EACd54B,YAAaw4B,EAAOl5B,QAAQU,YAC5By4B,SAAUD,EAAOl5B,QAAQm5B,SACzBC,YAA2C,GAA9BF,EAAOl5B,QAAQU,YAC5BD,WAAYy4B,EAAOl5B,QAAQS,cAGpBC,aACP8N,GAAU,WAAYpJ,EAAO+zB,UAG1B/zB,EACX,IlF9CiB,YkFqDb,OANAA,EAAM,2BACC9E,GADD,IAEFI,aAAa,EACbD,WAAY,OAEhB+N,GAAU,WAAY,MACfpJ,EACX,IlFrCqB,gBkF4CjB,OANAA,EAAM,2BACC9E,GADD,IAEFI,YAAaw4B,EAAOl5B,QAAQU,YAC5BD,WAAYy4B,EAAOl5B,QAAQS,WAC3BE,UAAWu4B,EAAOl5B,QAAQW,YAGlC,IlF5CuB,kBkFgDnB,OAHAyE,EAAM,2BACC9E,GADD,IACQG,WAAYy4B,EAAOl5B,QAAQ+G,OAG7C,IlFhDuB,kBkFoDnB,OAHA3B,EAAM,2BACC9E,GADD,IACQG,WAAYy4B,EAAOl5B,QAAQ4J,OAG7C,IlFpD+B,0BkFwD3B,OAHAxE,EAAM,2BACC9E,GADD,IACQC,mBAAoB24B,EAAOl5B,QAAQO,qBAGrD,QACI,OAAO,eAAKD,KCnFXw4B,GAAY,CACrBpU,iBAAkB,KAClB+U,aAAc,KACdC,gBAAiB,KACjBC,eAAgB,KAChBC,eAAgB,KAChBC,iBAAkB,KAClBC,oBAAqB,KACrBrO,iBAAkB,EAAC,IAAIlnB,MAAOynB,eAAe,IAAIznB,MAAOynB,gBAG/CiN,GAAU,WAAgC,IAA/B34B,EAA8B,uDAAtBw4B,GAAWI,EAAW,uCAGpC,MAAVA,GAAoC,MAAlBA,EAAOl5B,SAAsD,MAAnCk5B,EAAOl5B,QAAQyrB,mBAC3DnrB,EAAMmrB,iBAAmByN,EAAOl5B,QAAQyrB,kBAE5C,IAAIrmB,EAAS9E,EACb,OAAQ44B,EAAOn5B,MAGX,InFZsB,iBmFalB,OAAO,2BAAKO,GAAZ,IAAmBm5B,aAAc,OAErC,InFlByB,emF4BrB,OATAr0B,EAAS9E,EAE2B,OAAhC44B,EAAOl5B,QAAQuQ,OAAOwb,SACtB3mB,EAAOs0B,gBAAkBR,EAAOl5B,QAAQuQ,QAER,MAAhC2oB,EAAOl5B,QAAQuQ,OAAOwb,SACtB3mB,EAAOu0B,eAAiBT,EAAOl5B,QAAQuQ,QAGpCnL,EAEX,InF7B2B,sBmF8BvB,OAAO,2BAAK9E,GAAZ,IAAmBs5B,eAAgBV,EAAOl5B,UAC9C,InF9ByB,oBmF+BrB,IAAI+5B,EAA0Bb,EAAOl5B,QACrC,GAAuB,GAAnBk5B,EAAOc,SAAkB,CACzBD,EAA0Bz5B,EAAMu5B,iBAEhC,IADA,IAAII,EAAoBf,EAAOl5B,QAAQ+X,SAC9BxS,EAAI,EAAGA,EAAI00B,EAAkB50B,OAAQE,IAC1Cw0B,EAAwBhiB,SAAS7N,KAAK+vB,EAAkB10B,IAMhE,OAHA1D,QAAQC,IAAI,wCAAyCi4B,EAAwBhiB,SAAS1S,QACtFD,EAAM,2BAAQ9E,GAAR,IAAeu5B,iBAAkBE,IACvCb,EAAOgB,SAASvb,UACTvZ,EACX,InFzCgC,2BmF0C5B,OAAO,2BAAK9E,GAAZ,IAAmBw5B,oBAAqBZ,EAAOl5B,UACnD,QACI,OAAO,eAAKM,KClDX65B,GAAcC,aACvB,CACIx5B,UAAWy5B,GACX75B,UAAW85B,GACXC,iBAAkBC,KAIbC,GAAe,CACxB75B,UAAWy5B,GACX75B,UAAW85B,GACXC,iBAAkBC,ICfhBhrB,GAAQC,EAAQ,IACTirB,GAAyB,SAAAC,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACnD,IAAKA,EAAOj5B,MrFEQ,aqFFAi5B,EAAOj5B,KAAKF,KAC5B,OAAOgrB,EAAKmO,GAEhB,IAAM/4B,EAAM+4B,EAAOj5B,KAAKE,IACxBqP,GAAMK,KAAKqpB,EAAOj5B,KAAKR,IAAK,GAAI,CAC5B6O,QAAS,CAAE,eAAgB,uCAC5BhF,MAAK,SAAAC,GACJ,IAAMqxB,EAAerxB,EAASxC,KAC1BoyB,EAAmB,GACnB0B,GAAwB,EAEH,MAArBD,EAAaxwB,MAAqC,MAArBwwB,EAAaxwB,OAC1C+uB,EAAW5vB,EAAS+E,QAAQ,gBAC5BzM,QAAQC,IAAI,cAAeq3B,GAC3B0B,GAAe,GAEnB,IAAIC,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CACtCl5B,QAAS,CACLU,YAAam6B,EACb1B,SAAUA,EACV14B,WAAYm6B,EAAahxB,eAG1BkxB,EAAU76B,KACjB06B,EAAM7tB,SAASguB,MAEdtxB,MAAM3H,QAAQC,KACd4H,SAAQ,WAAQvJ,EAAI8I,mBAIhB8xB,GAAyB,SAAAJ,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACnD,IAAKA,EAAOj5B,MrFvBU,WqFuBFi5B,EAAOj5B,KAAKF,KAA6B,OAAOgrB,EAAKmO,GACzE1pB,GAAMK,KAAKqpB,EAAOj5B,KAAKR,IAAMy5B,EAAOl5B,QAAU,CAC1CsO,QAAS0sB,OACV1xB,MAAK,SAAAC,GACJ,IAAMxC,EAAOwC,EAASxC,KACtB,GAAiB,MAAbA,EAAKqD,KAAT,CAIA4wB,GAAyBzxB,GACzB1H,QAAQ6E,MAAM,mBAAoB6C,EAAS+E,QAAQ,iBACnD,IAAIwsB,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAQ,aAAGU,YAAaqG,EAAKk0B,UAAal0B,YAC/E+zB,EAAU76B,KACjB06B,EAAM7tB,SAASguB,QAPXrxB,MAAM,8BASTD,MAAM3H,QAAQC,KAAK4H,SAAQ,SAAAwxB,GAAK,OAAIhC,EAAOj5B,KAAKE,IAAI8I,mBAGhDkyB,GAA0B,SAAAR,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACpD,IAAKA,EAAOj5B,MrF9Be,oBqF8BPi5B,EAAOj5B,KAAKF,KAAkC,OAAOgrB,EAAKmO,GAE9E,IAAI5qB,EAAU0sB,KAEdxrB,GAAMK,KAAKqpB,EAAOj5B,KAAKR,IAAMy5B,EAAOl5B,QAAU,CAC1CsO,QAASA,IACVhF,MAAK,SAAAC,GACJ,IAAMxC,EAAOwC,EAASxC,KAEtB,GAAKA,EAAL,CAKA,IAAI+zB,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAS,CAAE+G,iBAChD+zB,EAAU76B,KACjB06B,EAAM7tB,SAASguB,QANXrxB,MAAM,+BAQTD,MAAM3H,QAAQC,KAAK4H,SAAQ,SAAAwxB,GACxBhC,EAAOj5B,KAAKE,IAAI8I,aAChBiwB,EAAOj5B,KAAKE,IAAIwe,gBAKfyc,GAA0B,SAAAT,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACpD,IAAKA,EAAOj5B,MrF1ES,cqF0EDi5B,EAAOj5B,KAAKF,KAC5B,OAAOgrB,EAAKmO,GAEhB,IAAM/4B,EAAM+4B,EAAOj5B,KAAKE,IAExBqP,GAAMK,KAAKqpB,EAAOj5B,KAAKR,IAAMy5B,EAAOl5B,QAAU,CAC1CsO,QAAS0sB,OAER1xB,MAAK,SAAAC,GACF,IACI8xB,GAAgB,EACK,MAFJ9xB,EAASxC,KAEbqD,KACbixB,GAAgB,EAEhB5xB,MAAM,iBAGV,IAAIqxB,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CACtCl5B,QAAS,CACLU,aAAc26B,YAGfP,EAAU76B,KACjB06B,EAAM7tB,SAASguB,MAElBtxB,MAAM3H,QAAQC,KAAK4H,SAAQ,SAAAwxB,GAAK,OAAI/6B,EAAI8I,mBAGpCqyB,GAA0B,SAAAX,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACpD,IAAKA,EAAOj5B,MrFpFe,oBqFoFPi5B,EAAOj5B,KAAKF,KAAkC,OAAOgrB,EAAKmO,GAC9E,IAAI4B,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAASk5B,EAAOl5B,iBACrD86B,EAAU76B,KACjB06B,EAAM7tB,SAASguB,MC5GNS,GAAwB,SAAAZ,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GAClD,IAAKA,EAAOj5B,MtFSW,gBsFTHi5B,EAAOj5B,KAAKF,KAA8B,OAAOgrB,EAAKmO,GAC1EsC,MAAMtC,EAAOj5B,KAAKR,IAAK,CACnByJ,OALY,OAKSY,KAAM2xB,KAAKC,UAAUxC,EAAOl5B,SACjDsO,QAAS0sB,OACV1xB,MAAK,SAAAC,GAAQ,OAAIA,EAASoyB,UACxBryB,MAAK,SAAAvC,GACFlF,QAAQ6E,MAAM,sCAAuCK,GACrD,IAAI+zB,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAS+G,WAC9C+zB,EAAU76B,KACjB06B,EAAM7tB,SAASguB,MAElBtxB,OAAM,SAAAoyB,GAAG,OAAI/5B,QAAQC,IAAI85B,MAAMlyB,SAAQ,SAAAwxB,GAAK,OAAIhC,EAAOj5B,KAAKE,IAAI8I,mBAG5D4yB,GAAoC,SAAAlB,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GAC9D,IAAKA,EAAOj5B,MtFPa,kBsFOLi5B,EAAOj5B,KAAKF,KAAgC,OAAOgrB,EAAKmO,GAC5E,IAAI4B,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAASk5B,EAAOl5B,iBACrD86B,EAAU76B,KACjB06B,EAAM7tB,SAASguB,MClBNgB,GAAyB,SAAAnB,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACnD,IAAKA,EAAOj5B,MvFHiB,uBuFGTi5B,EAAOj5B,KAAKF,KAAqC,OAAOgrB,EAAKmO,GACjF,IAAI4B,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAS,cAC9C86B,EAAU76B,KACjB06B,EAAM7tB,SAASguB,MAGNiB,GAAuB,SAAApB,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACjD,IAAKA,EAAOj5B,MvFEW,gBuFFHi5B,EAAOj5B,KAAKF,KAA8B,OAAOgrB,EAAKmO,GAC1E,IAAI4B,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAASk5B,EAAOl5B,iBACrD86B,EAAU76B,KACjB06B,EAAM7tB,SAASguB,GAEf,IADA,IAAMh7B,EAAao5B,EAAOl5B,QAAQF,KACzByF,EAAI,EAAGA,EAAIzF,EAAKuF,OAAQE,IAAK,CAClC,IAAMpF,EAAML,EAAKyF,GACbpF,EAAIwe,SACJxe,EAAIwe,cCsBVqd,GAAkC,SAAArB,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACrD,IAAKA,EAAOj5B,MxFjCwB,6BwFiChBi5B,EAAOj5B,KAAKF,KAA2C,OAAOgrB,EAAKmO,GACvFsC,MAAMtC,EAAOj5B,KAAKR,IAAK,CACnByJ,OAvCY,OAuCSY,KAAM2xB,KAAKC,UAAUxC,EAAOl5B,SACjDsO,QAASN,OAEZ1E,MAAK,SAAAC,GAAQ,OAAIA,EAASoyB,UAC1BryB,MAAK,SAAAvC,GAEF,GADAlF,QAAQ6E,MAAM,4CAA6CK,GAC1C,MAAbA,EAAKqD,KAAT,CAKA,IAAI0wB,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAS+G,WAC9C+zB,EAAU76B,KACjB06B,EAAM7tB,SAASguB,QANXrxB,MAAM,mBAQbD,OAAM,SAAAoyB,GAAG,OAAI/5B,QAAQC,IAAI85B,MAAMlyB,SAAQ,SAAAwxB,GAAK,OAAIhC,EAAOj5B,KAAKE,IAAI8I,mBAG/DgzB,GAA4B,SAAAtB,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GAC/C,IAAKA,EAAOj5B,MxFxDiB,sBwFwDTi5B,EAAOj5B,KAAKF,KAAoC,OAAOgrB,EAAKmO,GAChFsC,MAAMtC,EAAOj5B,KAAKR,IAAK,CACnByJ,OA5DY,OA4DSY,KAAM2xB,KAAKC,UAAUxC,EAAOl5B,SACjDsO,QAASN,OACV1E,MAAK,SAAAC,GAAQ,OAAIA,EAASoyB,UACxBryB,MAAK,SAAAvC,GAEF,GADAlF,QAAQ6E,MAAM,sCAAuCK,EAAM,aAAcmyB,EAAOj5B,KAAK+5B,UACpE,MAAbjzB,EAAKqD,KAAT,CAKA,IAAI0wB,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAS+G,EAAMizB,SAAUd,EAAOj5B,KAAK+5B,SAAUE,SAAUhB,EAAOj5B,KAAKi6B,kBAC1GY,EAAU76B,KACjB06B,EAAM7tB,SAASguB,QANXrxB,MAAM,mBAQbD,OAAM,SAAAoyB,GAAG,OAAI/5B,QAAQC,IAAI85B,MAAMlyB,SAAQ,SAAAwxB,GAAK,OAAIhC,EAAOj5B,KAAKi6B,SAASp5B,MAAMX,IAAI8I,mBAGlFizB,GAA8B,SAAAvB,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GACjD,IAAKA,EAAOj5B,MxF7EmB,wBwF6EXi5B,EAAOj5B,KAAKF,KAAsC,OAAOgrB,EAAKmO,GAClFsC,MAAMtC,EAAOj5B,KAAKR,IAAK,CACnByJ,OAhFY,OAgFSY,KAAM2xB,KAAKC,UAAUxC,EAAOl5B,SACjDsO,QAASN,OACV1E,MAAK,SAAAC,GAAQ,OAAIA,EAASoyB,UACxBryB,MAAK,SAAAvC,GAEF,GADAlF,QAAQ6E,MAAM,wCAAyCK,GACtC,MAAbA,EAAKqD,KAAT,CAKA,IAAI0wB,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAS+G,WAC9C+zB,EAAU76B,KACjB06B,EAAM7tB,SAASguB,QANXrxB,MAAM,mBAQbD,OAAM,SAAAoyB,GAAG,OAAI/5B,QAAQC,IAAI85B,MAAMlyB,SAAQ,SAAAwxB,GAAK,OAAIhC,EAAOj5B,KAAKE,IAAI8I,mBAGnEkzB,GAA4B,SAAAxB,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GAC/C,IAAKA,EAAOj5B,MxFlGiB,iBwFkGTi5B,EAAOj5B,KAAKF,KAAoC,OAAOgrB,EAAKmO,GAChFsC,MAAMtC,EAAOj5B,KAAKR,IAAK,CACnByJ,OApGY,OAoGSY,KAAM2xB,KAAKC,UAAUxC,EAAOl5B,SACjDsO,QAASN,OAEZ1E,MAAK,SAAAC,GAAQ,OAAIA,EAASoyB,UAC1BryB,MAAK,SAAAvC,GAEF,GADAlF,QAAQ6E,MAAM,sCAAuCK,GACpC,MAAbA,EAAKqD,KAKT,GAAmB,MAAfrD,EAAKwJ,OAAT,CAK0B,MAAtBxJ,EAAKwJ,OAAOub,SACZ/kB,EAAKwJ,OAAOub,OAAS,EACrB/kB,EAAKwJ,OAAOgR,MAAQ,EACpB1f,QAAQC,IAAI,QAASiF,IAEzB,IAAI+zB,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAS+G,WAC9C+zB,EAAU76B,KACjB06B,EAAM7tB,SAASguB,QAXXrxB,MAAM,sBAAwByvB,EAAOl5B,QAAQwQ,OAAOub,OAAS,OAASmN,EAAOl5B,QAAQwQ,OAAOkb,MAAQ,IAAMwN,EAAOl5B,QAAQwQ,OAAOgb,KAAO,2BALvI/hB,MAAM,mBAkBbD,OAAM,SAAAoyB,GAAG,OAAI/5B,QAAQC,IAAI85B,MAAMlyB,SAAQ,SAAAwxB,GAAK,OAAIhC,EAAOj5B,KAAKE,IAAI8I,mBAG/DmzB,GAA0B,SAAAzB,GAAK,OAAI,SAAA5P,GAAI,OAAI,SAAAmO,GAC7C,IAAKA,EAAOj5B,MxF9Hc,mBwF8HNi5B,EAAOj5B,KAAKF,KAAiC,OAAOgrB,EAAKmO,GAC7E,IAAI4B,EAAY5V,OAAOC,OAAO,GAAI+T,EAAQ,CAAEl5B,QAAS,cAC9C86B,EAAU76B,KACjB06B,EAAM7tB,SAASguB,MAGJuB,GArIe,WA6B1B,OA5BcC,aACVnC,GACAM,GACA8B,aACIC,GACAA,GAGAC,GACAA,GACAA,GACAA,GACAA,GAGAN,GACAD,GACAD,GACAG,GACAJ,GAGAU,GACAA,MCbGC,GAfF,SAAC77B,GAEV,IAAM65B,EAAQ0B,KAEd,OACI,kBAAC,IAAD,CAAU1B,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,GAAD,SCDIiC,QACW,cAA7BlH,OAAOF,SAASqH,UAEe,UAA7BnH,OAAOF,SAASqH,UAEhBnH,OAAOF,SAASqH,SAAS7d,MACvB,2DCZN8d,IAASjI,OAAO,kBAAC,GAAD,MAAU91B,SAASC,eAAe,SD6H5C,kBAAmB+9B,WACrBA,UAAUC,cAAcC,MAAM3zB,MAAK,SAAA4zB,GACjCA,EAAaC,iB","file":"static/js/main.9a23659f.chunk.js","sourcesContent":["\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    return contextPath;\r\n}\r\n\r\n// export const baseImageUrl = contextPath()+\"assets/images/\"; \r\n// export const baseImageUrl = \"https://developmentmode.000webhostapp.com/uploaded_storage/\"; \r\n// export const baseImageUrl = \"http://localhost/storage/images/\"; \r\nexport const baseImageUrl = localStorage.getItem(\"assetsPath\")+ \"images/\"; \r\n// export const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\"; \r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url';\r\nimport Product from './../models/Product';\r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/app/account/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"\r\nconst apiTransaction = usedHost + \"api/app/transaction/\";\r\n\r\nexport const updateCart = (cart: Product[], ...apps) => {\r\n    // console.debug(\"UPDATE CART: \", cart);\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, apps: apps }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl.concat(\"requestid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSales = (request) => {\r\n    request.referrer.props.app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES,\r\n        payload: {\r\n            product: { name: request.productName },\r\n            filter:\r\n                { page: request.page, limit: request.limit, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            referrer: request.referrer, type: types.GET_PRODUCT_SALES, loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsales\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_CASHFLOW_DETAIL,\r\n        payload: { filter: { month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_DETAIL, url: apiTransaction.concat(\"cashflowdetail\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowInfo = (month, year, type, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_CASHFLOW_INFO,\r\n        payload: { filter: { year: year, month: month, module: type } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_INFO, url: apiTransaction.concat(\"cashflowinfo\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, url: contextPath().concat(\"login?username=\" + username + \"&password=\" +\r\n                password + \"&transport_type=rest\"), app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: user },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId,\r\n        cart: state.shopState.cart\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {  \r\n            className = \"message-loading progress\";\r\n            messageText = <span className=\"loader\">{this.props.progress + \"%\"}</span>   \r\n            msgStyle.zIndex = 100;\r\n        }\r\n\r\n        return (\r\n            <div style={msgStyle} className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props){\r\n    if(props.realtime){\r\n        return (\r\n            <div className=\"progress-bar progress-bar-striped\" role=\"progressbar\" style={{ \r\n                width: props.progress + \"%\",\r\n                transitionDuration: '300ms'\r\n                }}>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react'\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n\r\n        this.onYes = (e) => {\r\n             \r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n            \r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger':'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop />\r\n                <div className=\"modal fade show\" style={{ display: 'block' }} id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\"> {this.props.children}</div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{backgroundColor: 'rgba(100,100,100,0.7)'}} ></div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \"+props.className}>\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\">Yes</button>\r\n            {props.yesOnly ? null : <button ref={props.noButtonRef} type=\"button\"\r\n                onClick={props.onNo} className=\"btn btn-outline-secondary\">No</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \"+props.className}>\r\n        <h5 className={\"modal-title \"+props.fontClassName }id=\"exampleModalCenterTitle\">{props.title}</h5>\r\n        <button onClick={props.onClose} type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\" className={props.fontClassName}><i className=\"fas fa-times\"/></span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\t\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const base64StringFileSize = (base64String:string) : number => {\r\n\tif (base64String.includes(\",\")) {\r\n\t\tbase64String = base64String.split(\",\")[1];\r\n\t}\r\n\tvar stringLength = base64String.length;\r\n\r\n\tvar sizeInBytes = 4 * Math.ceil((stringLength / 3))*0.5624896334383812;\r\n\tvar sizeInKb=sizeInBytes/1000;\r\n\treturn sizeInBytes;\r\n}\r\n\r\nexport const fileExtension = (fileName:string) :string => {\r\n\tif (fileName.includes(\".\") == false) {\r\n\t\treturn \"*\";\r\n\t}\r\n\r\n\tconst splitted = fileName.split(\".\");\r\n\treturn splitted[splitted.length - 1];\r\n}","import { base64StringFileSize } from './StringUtil';\r\nexport const byId = (id) => { return document.getElementById(id) }\r\n \r\nexport function toBase64(file, referer, callback) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n        alert(\"Error Loading File\");\r\n    }\r\n}\r\n \r\n\r\nexport function toBase64v2(fileInput) {\r\n    return new Promise<any>(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(fileInput.files[0]);\r\n            console.debug(\"fileInput.files[0]: \", fileInput.files[0]);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport const resizeImage = (data:string, ratio:number, extension:string) => {\r\n    const actualFilesize = base64StringFileSize(data);\r\n    console.debug(\"Actual filesize: \", actualFilesize);\r\n    return new Promise<string>(function(resolve, reject){\r\n        const img = new Image();\r\n        img.src = data;\r\n        img.onload = function () {\r\n            const width = img.width   * ratio;\r\n            const height = img.height   * ratio;\r\n            // create an off-screen canvas\r\n            var canvas:HTMLCanvasElement = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n            if (!ctx) return;\r\n            // set its dimension to target size\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            var mime_type = \"image/\"+extension;\r\n            // draw source image into the off-screen canvas:\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n            console.debug(\"Resize ratio: \", ratio, \"mime_type: \",mime_type);\r\n            // encode image to data-uri with base64 version of compressed image\r\n            const dataURL = (canvas.toDataURL());\r\n            console.debug(\"Resized filesize: \", base64StringFileSize(dataURL));\r\n            resolve(dataURL);\r\n        }\r\n    });\r\n}\r\n\r\nexport function toBase64FromFile(file) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options:any[] = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options:any[] = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","import { Component } from 'react';\r\nimport { byId } from '../utils/ComponentUtil';\r\nimport WebResponse from './../models/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated = authenticated\r\n        this.state = {\r\n            ...this.state\r\n        }\r\n\r\n    }\r\n    validateLoginStatus = () => {\r\n        if (this.authenticated == false) return;\r\n        if (this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile():ApplicationProfile\r\n    {\r\n        return this.props.applicationProfile == null ? {} : this.props.applicationProfile;\r\n    }\r\n\r\n    handleInputChange(event: any) {\r\n        const target = event.target;\r\n        const value = target.type == 'checkbox' ? target.checked : target.value;\r\n        this.setState({ [target.name]: value });\r\n        console.debug(\"input changed: \", target.name, value);\r\n    }\r\n\r\n    focusToActiveField() {\r\n        if (this.state.activeId != null && byId(this.state.activeId) != null) {\r\n            const element = byId(this.state.activeId);\r\n            if (element != null) {\r\n                element.focus();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method \r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax(method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any ) {\r\n        this.startLoading(withProgress);\r\n\r\n        method(...params).then(function (response:WebResponse) {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch(function (e) {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally((e:any) => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax(method: Function, successCallback: Function, errorCallback: Function, ...params:any) {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress(method: Function, successCallback: Function, errorCallback: Function, ...params:any) {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser():User|undefined {\r\n        const user:User|undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return user;\r\n    }\r\n    isLoggedUserNull(): boolean {\r\n        return false == this.props.loginStatus || null == this.props.loggedUser;\r\n    }\r\n    isUserLoggedIn(): boolean {\r\n        return true == this.props.loginStatus && null != this.props.loggedUser;\r\n    }\r\n    showConfirmation(body:any): Promise<boolean> {\r\n        const app = this;\r\n        return new Promise(function(resolve, reject){\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n  \r\n    }\r\n    showConfirmationDanger(body: any): Promise<any> {\r\n        const app = this;\r\n        return new Promise(function(resolve, reject){\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo(body: any) {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError(body: any) {\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n\r\n    showCommonErrorAlert = (e:any) => {\r\n        console.error(e);\r\n        const msg = e.message??e;\r\n        this.showError(\"Operation Failed: \"+msg);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isLoggedUserNull()) {\r\n            console.debug(typeof this , \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n}","\r\nimport Menu from './../models/Menu';\r\n\r\nexport const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const TRANSACTION_SELLING = \"selling\";\r\nexport const MENU_TRANSACTION = \"purchasing\";\r\nexport const MENU_SETTING = \"settings\";\r\nexport const SUPPLIERLIST = \"supplierlist\";\r\nexport const MENU_MASTER_DATA = \"management\";\r\nexport const CHATROOM = \"chatroom\";\r\nexport const CART = \"cart\";\r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < menus.length; i++) {\r\n        const element: Menu = menus[i];\r\n        menuSet.push(element);\r\n    }\r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n    console.debug(\"pathName: \", pathName);\r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const menus: Menu[] = [\r\n    {\r\n        code: HOME,\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false\r\n    },\r\n    {\r\n        code: CATALOG,\r\n        name: \"Catalog\",\r\n        url: \"/catalog\",\r\n        menuClass: \"fa fa-th-large\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: true,\r\n        subMenus: [{\r\n            code: 'catalog_product',\r\n            name: 'Product',\r\n            url: 'product',\r\n            menuClass: 'fas fa-cubes'\r\n        },\r\n        {\r\n            code: 'catalog_supplier',\r\n            name: 'Supplier',\r\n            url: 'supplier',\r\n        }]\r\n    },\r\n    {\r\n        code: CART,\r\n        name: \"Shopping Cart\",\r\n        url: \"/cart\",\r\n        menuClass: \"fa fa-shopping-cart\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'cart_list',\r\n                name: 'Shopping Cart List',\r\n                menuClass: 'fas fa-shopping-bag',\r\n                url: 'cartlist',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: DASHBOARD,\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'dashboard_stat',\r\n                name: 'Statistic',\r\n                url: 'statistic',\r\n                menuClass: 'fas fa-chart-bar'\r\n\r\n            },\r\n            {\r\n                code: 'dashboard_productsales',\r\n                name: 'Product Sales',\r\n                url: 'productsales',\r\n                menuClass: 'fas fa-chart-line'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: MENU_TRANSACTION,\r\n        name: \"Transaction\",\r\n        url: \"/transaction\",\r\n        menuClass: \"fas fa-suitcase\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'trx_selling',\r\n                name: 'Selling',\r\n                menuClass: 'fas fa-cash-register',\r\n                url: 'selling',\r\n            },\r\n            {\r\n                code: 'trx_purchasing',\r\n                name: 'Purchasing',\r\n                menuClass: 'fas fa-shopping-basket',\r\n                url: 'purchasing',\r\n            },\r\n            {\r\n                code: 'trx_detail',\r\n                name: 'Transaction Detail',\r\n                menuClass: 'fas fa-clipboard-list',\r\n                url: 'detail',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: MENU_MASTER_DATA,\r\n        name: \"Master Data\",\r\n        url: \"/management\",\r\n        menuClass: \"fa fa-database\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true\r\n    },\r\n    {\r\n        code: MENU_SETTING,\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'user_profile',\r\n                name: 'Profile',\r\n                menuClass: 'fas fa-user-cog',\r\n                url: 'user-profile',\r\n            },\r\n            {\r\n                code: 'app_profile',\r\n                name: 'Application Setting',\r\n                menuClass: 'fas fa-cog',\r\n                url: 'app-profile',\r\n            },\r\n            \r\n        ]\r\n    },\r\n];\r\n","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || menu.authenticated && this.isLoggedUserNull()) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.props.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull} authenticated={this.isUserLoggedIn()}\r\n                                onLogout={this.onLogout} user={this.getLoggedUser()} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: any) => {\r\n    if (props.authenticated) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'><i className=\"fas fa-user-circle\"></i>&nbsp;{props.user.displayName}\r\n                </Link>\r\n                <a style={{marginRight:'5px'}} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{marginRight:'5px'}} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nclass Login extends BaseComponent{\r\n    formRef: RefObject<HTMLFormElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        const form: EventTarget = e.target;\r\n        if (null == this.formRef.current) {\r\n            return;\r\n        }\r\n        const formData: FormData = new FormData(this.formRef.current);\r\n        console.debug(\"formData: \", formData);\r\n        this.props.performLogin(formData.get('username'), formData.get('password'), this.parentApp);\r\n    }\r\n    componentDidMount(){\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n    \r\n        console.debug(\"Login update\");\r\n        console.debug(\"logged in : \", this.props.loginStatus);\r\n        console.debug(\"logged user : \", this.getLoggedUser());\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\">\r\n                <form ref={this.formRef} name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <UsernameField />\r\n                    <PasswordField />\r\n                    <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = (props) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"password\" type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst UsernameField = (props) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input name=\"username\" type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder=\"Username\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\r\nimport BaseComponent from './../BaseComponent';\r\nimport Menu from './../../models/Menu';\r\nexport default class BaseMainMenus extends BaseComponent {\r\n\r\n    title:string = \"\";\r\n    constructor(props, title:string, authenticated:boolean = false) {\r\n        super(props, authenticated);\r\n        this.title = title;\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.authenticated) {\r\n            this.validateLoginStatus();\r\n        }\r\n        document.title = this.title;\r\n        \r\n    }\r\n\r\n}","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass DashboardMain extends BaseMainMenus\r\n{\r\n    constructor(props:any){\r\n        super(props, \"Dashboard\", true);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"DashboardMain\" className=\"container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.displayName}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(DashboardMain))","\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('loginKey');\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['access-token']) {\r\n        const accessToken = axiosResponse.headers['access-token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(\"loginKey\", accessToken);\r\n    }\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","\r\nimport Filter from './../models/Filter';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport BaseEntity from './../models/BaseEntity';\r\nimport ManagementProperty from '../models/ManagementProperty';\r\nimport EntityProperty from './../models/EntityProperty';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService {\r\n    managementProperties: ManagementProperty[] = [];\r\n    private entityPropertyMap: Map<string, EntityProperty> = new Map();\r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    setEntityProperty(code: string, data?: EntityProperty) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.entityPropertyMap.set(code, data);\r\n    }\r\n    getEntityProperty(code?: string): EntityProperty | undefined {\r\n        if (code == undefined) {\r\n            return undefined;\r\n        }\r\n        return this.entityPropertyMap.get(code);\r\n    }\r\n\r\n    loadManagementProperties(req?: any) {\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/managementpages\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n\r\n    }\r\n    loadEntityProperty(code: string) {\r\n        console.debug(\"Load entity prop: \", code);\r\n        const request: WebRequest = {\r\n            entity: code\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/configv2\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    loadEntities(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    loadAllEntities(code: string) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                limit: 0, page: 0\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    getById(code: string, id: number) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                exacts: true,\r\n                limit: 1,\r\n                page: 0,\r\n                fieldsFilter: { 'id': id }\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getBy(code: string, fieldsFilter: {}, limit = 1) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                exacts: true,\r\n                limit: limit,\r\n                page: 0,\r\n                fieldsFilter: fieldsFilter\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete(code: string, id: number) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                fieldsFilter: { 'id': id }\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    save(code: string, model: BaseEntity, editMode: boolean) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            [code]: model\r\n        }\r\n        let endpoint: string;\r\n        if (editMode) {\r\n            endpoint = contextPath().concat(\"api/app/entity/update\");\r\n        } else {\r\n            endpoint = contextPath().concat(\"api/app/entity/add\");\r\n        }\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    updateApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n        const request: WebRequest = {\r\n            profile: applicationProfile\r\n        }\r\n        const endpoint = contextPath().concat(\"api/app/setting/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request)\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\nexport default class Modal extends Component<any, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    render() {\r\n       if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport EntityElement from \"./EntityElement\";\r\nimport HeaderProps from './HeaderProps'; \r\n\r\nexport default class EntityProperty{\r\n\tgroupNames?:string;\r\n\tentityName?:string;\r\n\talias?:string;\r\n\tfieldNames?:string;\r\n\tidField?:string;\r\n\tdetailFieldName?:string;\r\n\timageElementsJson?:string;\r\n\tdateElementsJson?:string;\r\n\tmultipleSelectElementsJson?:string;\r\n\tcurrencyElementsJson?:string;\r\n\tformInputColumn?:number;\r\n\teditable?:boolean;\r\n\twithDetail?:boolean;\r\n\tdateElements?:any[];\r\n\timageElements?:any[];\r\n\tcurrencyElements?:any[];\r\n\tmultipleSelectElements?:any[];\r\n\telements:EntityElement[] = new Array();\r\n\tfieldNameList?:string[];\r\n\tignoreBaseField?:boolean;\r\n\tisQuestionare?:boolean;\r\n\r\n\tstatic getEntityElement = (prop: EntityProperty, id:string) :EntityElement|undefined => {\r\n\t\tfor (let i = 0; i < prop.elements.length; i++) {\r\n\t\t\tconst element = prop.elements[i];\r\n\t\t\tif (element.id == id) {\r\n\t\t\t\treturn element;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tstatic getHeaderLabels = (prop:EntityProperty) : HeaderProps[] => {\r\n\t\tconst result:HeaderProps[] = new Array();\r\n\t\tif (prop.elements == undefined) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tconst elements:EntityElement[] = prop.elements;\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\r\n\t\t\tconst element = elements[i];\r\n\t\t\tconst header:HeaderProps=  {\r\n\t\t\t\tlabel:element.lableName,\r\n\t\t\t\tvalue:element.id,\r\n\t\t\t\tisDate:element.type == 'date'\r\n\t\t\t};\r\n\t\t\tresult.push(header);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic getRecordId(record:any, prop:EntityProperty) {\r\n\t\tconst elements = prop.elements;\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tconst element = elements[i];\r\n\t\t\tif (element.idField) {\r\n\t\t\t\treturn record[element.id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n","\nexport enum FieldType {\n\n\tFIELD_TYPE_TEXT = \"FIELD_TYPE_TEXT\",\n\tFIELD_TYPE_IMAGE =\n\t'FIELD_TYPE_IMAGE',\n\tFIELD_TYPE_CURRENCY =\n\t'FIELD_TYPE_CURRENCY',\n\tFIELD_TYPE_NUMBER =\n\t'FIELD_TYPE_NUMBER',\n\tFIELD_TYPE_HIDDEN =\n\t'FIELD_TYPE_HIDDEN',\n\tFIELD_TYPE_COLOR =\n\t'FIELD_TYPE_COLOR',\n\tFIELD_TYPE_FIXED_LIST =\n\t'FIELD_TYPE_FIXED_LIST',\n\tFIELD_TYPE_DYNAMIC_LIST =\n\t'FIELD_TYPE_DYNAMIC_LIST',\n\tFIELD_TYPE_TEXTAREA =\n\t'FIELD_TYPE_TEXTAREA',\n\tFIELD_TYPE_PLAIN_LIST =\n\t'FIELD_TYPE_PLAIN_LIST',\n\tFIELD_TYPE_DATE =\n\t'FIELD_TYPE_DATE'\n}\n\n","import React from 'react';\r\nimport EntityProperty from '../models/EntityProperty';\r\nimport EntityElement from '../models/EntityElement';\r\nimport { baseImageUrl } from '../constant/Url';\r\nimport { FieldType } from '../models/FieldType';\r\nexport default class EntityValues {\r\n\tstatic parseValues(object:any, prop:EntityProperty) : Array<any> {\r\n\t\tconst result = new Array();\r\n\t\tconst elemnents:EntityElement[] =prop.elements;\r\n\t\tfor (let i = 0; i < elemnents.length; i++) {\r\n\t\t\tconst element = elemnents[i];\r\n\t\t\tconst elementid = element.id;\r\n\t\t\tlet value:any =  object[elementid];\r\n\t\t\tif (value == null) {\r\n\t\t\t\tresult.push(value);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tswitch(element.fieldType) {\r\n\t\t\t\tcase FieldType.FIELD_TYPE_FIXED_LIST:\r\n\t\t\t\tcase FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n\t\t\t\t\tconst valueAsObj = object[elementid];\r\n\t\t\t\t\tvalue = valueAsObj[element.optionItemName??\"id\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_DATE:\r\n\t\t\t\t\tvalue = new Date(value).toString();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_IMAGE:\r\n\t\t\t\t\tconst imgLink = new String(value).split(\"~\")[0];\r\n\t\t\t\t\tvalue = <img src ={baseImageUrl+imgLink} width=\"50\" height=\"50\"/>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_COLOR:\r\n\t\t\t\t\tvalue = <strong style={{color:value}} >{value}</strong>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue = object[elementid];\r\n\t\t\t}\r\n\t\t\tresult.push(value);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Fragment, Component } from 'react';\r\nimport { toBase64v2 } from '../../../../utils/ComponentUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport BaseComponent from '../../../BaseComponent';\r\ninterface IState {\r\n    singlePreviewData?: string,\r\n    showInputFile: boolean\r\n}\r\nexport default class FormInputImage extends BaseComponent {\r\n    state: IState = {\r\n        singlePreviewData: undefined,\r\n        showInputFile: false\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    changeSingleImageData = (e) => {\r\n        const app = this;\r\n        toBase64v2(e.target).then(function (data) {\r\n            app.setState({ singlePreviewData: data });\r\n        })\r\n    }\r\n    removeImage = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Remove image?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doRemoveImage();\r\n                }\r\n            })\r\n    }\r\n\r\n    doRemoveImage = () => {\r\n        if (this.ref.current) {\r\n            this.ref.current.value = null;\r\n        }\r\n        this.setState({ singlePreviewData: undefined, showInputFile: false });\r\n    }\r\n\r\n    getEntityElement(): EntityElement {\r\n        return this.props.element;\r\n    }\r\n    componentDidMount() {\r\n        this.prepopulateForm();\r\n    }\r\n    prepopulateForm() {\r\n        if (!this.props.recordToEdit){ \r\n            return;\r\n        }\r\n        let defaultValue = this.props.recordToEdit[this.getEntityElement().id];\r\n        if (!defaultValue){ \r\n            return;\r\n        }\r\n        const fullUrl = baseImageUrl + defaultValue;\r\n        this.setState({ singlePreviewData: fullUrl, showInputFile:true });\r\n    }\r\n    render() {\r\n        const element: EntityElement = this.getEntityElement();\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showInputFile ?\r\n                    <input ref={this.ref}\r\n                        onChange={this.changeSingleImageData} type=\"file\" accept=\"image/*\" name={element.id} className='form-control' />\r\n\r\n                    :\r\n                    <Fragment>\r\n                        <p></p>\r\n                        <AnchorButton onClick={(e)=> this.setState({showInputFile:true})} iconClassName=\"fas fa-plus\" className=\"btn btn-info btn-sm\">Add Image</AnchorButton>\r\n                        <input type=\"hidden\" name={element.id} value=\"NULLED\" />\r\n                    </Fragment>\r\n                }\r\n                <ImagePreview imageData={this.state.singlePreviewData} />\r\n                <AnchorButton show={this.state.singlePreviewData != undefined} onClick={this.removeImage} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\">remove</AnchorButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n","\r\nimport React, { Fragment, Component } from 'react';\r\nimport { toBase64v2 } from '../../../../utils/ComponentUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport BaseComponent from './../../../BaseComponent';\r\ninterface IState {\r\n    previewData: Map<number, string>,\r\n    inputElements: number[]\r\n}\r\nexport default class FormInputImageMultiple extends BaseComponent {\r\n    state: IState = {\r\n        previewData: new Map(),\r\n        inputElements: [1]\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setImageData = (e, index) => {\r\n        const app = this;\r\n        toBase64v2(e.target).then(function (data) {\r\n            const previewData = app.state.previewData;\r\n            previewData.set(index, data);\r\n            app.setState({ previewData: previewData });\r\n        })\r\n    }\r\n\r\n    addInputElement = (e) => {\r\n        const element = this.state.inputElements;\r\n        if (element.length == 0) {\r\n            element.push(1);\r\n        } else {\r\n            element.push(element[element.length - 1] + 1);\r\n        }\r\n        this.setState({ inputElements: element });\r\n    }\r\n    removeInputElement = (removedIndex: number) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Delete image?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doRemoveInputElement(removedIndex);\r\n                }\r\n            })\r\n    }\r\n\r\n    doRemoveInputElement = (removedIndex: number) => {\r\n        const previewData = this.state.previewData;\r\n        const element = this.state.inputElements;\r\n        for (let i = 0; i < element.length; i++) {\r\n            const index = element[i];\r\n            if (index == removedIndex) {\r\n                element.splice(i, 1);\r\n                previewData.delete(removedIndex);\r\n            }\r\n        }\r\n        this.setState({ inputElements: element, previewData: previewData });\r\n    }\r\n    getEntityElement(): EntityElement {\r\n        return this.props.element;\r\n    }\r\n    componentDidMount() {\r\n        this.prepopulateForm();\r\n    }\r\n    prepopulateForm() {\r\n        if (!this.props.recordToEdit) {\r\n            return;\r\n        }\r\n        let defaultValue = this.props.recordToEdit[this.getEntityElement().id];\r\n        if (!defaultValue || new String(defaultValue).trim() == \"\") {\r\n            return;\r\n        }\r\n        const previewData: Map<number, string> = this.state.previewData;\r\n        const imageNames: string[] = new String(defaultValue).split(\"~\");\r\n        const inputElements: number[] = new Array<number>();\r\n        for (let i = 0; i < imageNames.length; i++) {\r\n            const imageName: string = imageNames[i];\r\n            previewData.set(i, imageName);\r\n            inputElements.push(i);\r\n        }\r\n        this.setState({ previewData: previewData, inputElements: inputElements });\r\n    }\r\n    render() {\r\n        const element: EntityElement = this.getEntityElement();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.inputElements.map(index => {\r\n                    const previewData: string | undefined = this.state.previewData.get(index);\r\n                    const isNull = previewData == undefined || new String(previewData).trim() == \"\";\r\n                    const isBase64 = !isNull && isBase64Image(previewData);\r\n                    return (\r\n                        <Fragment>\r\n                            {isNull ?\r\n                                <input onChange={(e) => this.setImageData(e, index)} type=\"file\" accept=\"image/*\"\r\n                                    name={element.id} className='form-control' /> : null}\r\n                            {isBase64 ?\r\n                                <div>\r\n                                    <input value={previewData} type=\"hidden\" name={element.id} />\r\n                                    <ImagePreview imageData={previewData} />\r\n                                </div>\r\n                                :\r\n                                !isNull ?\r\n                                    <div>\r\n                                        <input value={previewData} type=\"hidden\" name={element.id} className='form-control' />\r\n                                        <ImagePreview imageData={baseImageUrl + previewData} />\r\n                                        <p className=\"badge badge-warning\">{previewData}</p>\r\n                                    </div> :\r\n                                    null\r\n                            }\r\n                            <AnchorButton show={this.state.previewData != undefined}\r\n                                onClick={(e: any) => this.removeInputElement(index)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\">\r\n                                remove {index}\r\n                            </AnchorButton>\r\n                        </Fragment>)\r\n                })}\r\n                <p></p>\r\n                <AnchorButton iconClassName=\"fas fa-plus\" onClick={this.addInputElement}>Add</AnchorButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst isBase64Image = (string?: string) => {\r\n    return string && string.startsWith(\"data:image\");\r\n}\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class FormGroup extends Component<any, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={\"form-group \"+ this.props.className+ \" \" + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport { FieldType } from '../../../../models/FieldType';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport FormInputImage from './FormInputImage';\r\nimport FormInputImageMultiple from './FormInputImageMultiple';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport FormGroup from './../../../form/FormGroup';\r\ninterface IState {\r\n    inputList: any[],\r\n    singlePreviewData?: string,\r\n    inputElements: number[]\r\n}\r\nclass FormInputField extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        inputList: [],\r\n        singlePreviewData: undefined,\r\n        inputElements: [1]\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    getEntityElement = (): EntityElement => {\r\n        return this.props.entityElement;\r\n    }\r\n    getRequiredAttr = () => {\r\n        const requiredAttr = { required: this.getEntityElement().required == true }\r\n        return (\r\n            // null\r\n            requiredAttr\r\n        )\r\n    }\r\n    inputListLoaded = (response: WebResponse) => {\r\n        if (!response.entities || response.entities.length == 0) {\r\n            throw new Error(\"Not found\");\r\n        }\r\n        this.setState({ inputList: response.entities });\r\n        this.prepopulateForm();\r\n    }\r\n    loadInputList = () => {\r\n        const element = this.getEntityElement();\r\n        const code = element.entityReferenceClass;\r\n        this.commonAjax(\r\n            this.masterDataService.loadAllEntities,\r\n            this.inputListLoaded,\r\n            this.showCommonErrorAlert,\r\n            code\r\n        )\r\n    }\r\n    hasInputList = () => {\r\n        if (this.getEntityElement().fieldType == FieldType.FIELD_TYPE_FIXED_LIST || this.getEntityElement().fieldType == FieldType.FIELD_TYPE_DYNAMIC_LIST) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    hasInputListAndNotReady = () => {\r\n        return this.hasInputList() && this.state.inputList.length == 0;\r\n    }\r\n    validateInputType = () => {\r\n        if (this.hasInputListAndNotReady()) {\r\n            this.loadInputList();\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateInputType();\r\n    }\r\n    componentDidMount() {\r\n        this.validateInputType();\r\n        this.prepopulateForm();\r\n    }\r\n\r\n    prepopulateForm = () => {\r\n        if (!this.props.recordToEdit || !this.ref.current) {\r\n            return;\r\n\r\n        }\r\n        const fieldName = this.getEntityElement().id;\r\n        let recordValue = this.props.recordToEdit[fieldName];\r\n        if (!recordValue) return;\r\n\r\n        const fieldType: FieldType = this.getEntityElement().fieldType;\r\n        let defaultInputValue = undefined;\r\n        switch (fieldType) {\r\n            case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n            case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                if (this.state.inputList.length == 0) {\r\n                    break;\r\n                }\r\n                const optionValueName = this.getEntityElement().optionValueName;\r\n                if (!optionValueName) break;\r\n                defaultInputValue = recordValue[optionValueName];\r\n                break;\r\n\r\n            default:\r\n                defaultInputValue = recordValue;\r\n                break;\r\n        }\r\n        if (defaultInputValue) {\r\n            this.ref.current.value = defaultInputValue;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const element = this.getEntityElement();\r\n        const requiredAttr = this.getRequiredAttr();\r\n        if (this.hasInputListAndNotReady()) {\r\n            return <div className=\"form-group\">Loading...</div>\r\n        }\r\n        if (element.idField == true) {\r\n            return (\r\n                <FormGroup orientation=\"vertical\" label={element.lableName}>\r\n                    <input {...requiredAttr} value=\"Generated\" ref={this.ref} className=\"form-control\" name={element.id} disabled />\r\n                </FormGroup>\r\n            )\r\n        }\r\n        let input = <Fragment />;\r\n        switch (element.fieldType) {\r\n            case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n            case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                const options = this.state.inputList;\r\n                input = <select ref={this.ref} className=\"form-control\" name={element.id} >\r\n                    {options.map(option => {\r\n                        const optionItemValue = element.optionValueName;\r\n                        const optionItemName = element.optionItemName;\r\n                        if (!optionItemName || !optionItemValue) { return null; }\r\n                        return (\r\n                            <option value={option[optionItemValue]} >{option[optionItemName]}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                break;\r\n            case FieldType.FIELD_TYPE_IMAGE:\r\n                input = element.multiple ?\r\n                    <FormInputImageMultiple app={this.parentApp} recordToEdit={this.props.recordToEdit} element={element} />\r\n                    :\r\n                    <FormInputImage app={this.parentApp} recordToEdit={this.props.recordToEdit} element={element} />\r\n                break;\r\n            case FieldType.FIELD_TYPE_TEXTAREA:\r\n                input = <textarea {...requiredAttr} ref={this.ref} className=\"form-control\" name={element.id} />\r\n                break;\r\n            default:\r\n                input = <input type={element.type} {...requiredAttr} ref={this.ref} className=\"form-control\" name={element.id} />\r\n\r\n        }\r\n        return (\r\n            <FormGroup orientation='vertical' label={element.lableName}>\r\n                { input}\r\n            </FormGroup>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(FormInputField))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport Modal from '../../../container/Modal';\r\nimport EntityProperty from '../../../../models/EntityProperty';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport WebResponse from '../../../../models/WebResponse'; \r\nimport { FieldType } from '../../../../models/FieldType';\r\nimport { toBase64FromFile } from '../../../../utils/ComponentUtil';\r\nimport FormInputField from './FormInputField';\r\n\r\nclass MasterDataForm extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    editMode:boolean = false;\r\n    recordToEdit?:{} = undefined;\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        if (props.recordToEdit) {\r\n            this.editMode = true;\r\n            this.recordToEdit = props.recordToEdit;\r\n        }\r\n    }\r\n    \r\n    getEntityProperty(): EntityProperty {\r\n        return this.props.entityProperty;\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.getEntityProperty().editable == false) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const form = e.target, app = this;\r\n        this.showConfirmation(\"Save data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.submit(form) }\r\n            });\r\n    }\r\n    getEntityElement(key:string) :EntityElement |undefined {\r\n        return EntityProperty.getEntityElement(this.getEntityProperty(), key);\r\n    }\r\n    submit = (form: HTMLFormElement) => {\r\n        const formData: FormData = new FormData(form);\r\n        const object: {} = {}, app = this;\r\n        const promises: Promise<any>[] = new Array();\r\n        const nulledFields:any[] = [];\r\n        formData.forEach((value, key) => {\r\n            console.debug(\"Form data \", key);\r\n            if (!object[key]) {\r\n                object[key] = new Array();\r\n            }\r\n            const element:EntityElement|undefined = this.getEntityElement(key);\r\n            if (!element) return false;\r\n            switch (element.fieldType) {\r\n                case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n                case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                    const valueAttr = element.optionValueName;\r\n                    if (valueAttr) {\r\n                        object[key].push({ [valueAttr]: value })\r\n                    }\r\n                    break;\r\n                case FieldType.FIELD_TYPE_IMAGE:\r\n                    console.debug(key, \" is image\");\r\n                    if (value == \"NULLED\") {\r\n                        console.debug(\"NULLED VALUE ADD: \", key);\r\n                        nulledFields.push(key);\r\n                   \r\n                    } else if(value.constructor.name == \"File\") {\r\n                        let promise = toBase64FromFile(value).then(data => {\r\n                            object[key].push(data);\r\n                        }).catch(console.error)\r\n                            .finally(function () { console.debug(\"finish\") });\r\n                        promises.push(promise);\r\n                    } else {\r\n                        object[key].push(value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    object[key].push(value);\r\n                    break;\r\n            }\r\n            return true;\r\n        }); \r\n        Promise.all(promises).then(function (val) {\r\n            const objectPayload = app.generateRequestPayload(object, nulledFields);\r\n            console.debug(\"Record object to save: \", objectPayload);\r\n            app.ajaxSubmit(objectPayload);\r\n        });\r\n    }\r\n\r\n    generateRequestPayload = (rawObject: {}, nulledFields:any[]): {} => { \r\n        const result:{nulledFields:Array<any>} = this.editMode && this.recordToEdit? \r\n        {...this.recordToEdit, nulledFields:nulledFields} : \r\n        {nulledFields:new Array() };\r\n        for (const key in rawObject) {\r\n            const element: any[] = rawObject[key];\r\n            console.debug(key, \" length: \", element.length);\r\n            if (element.length == 1) {\r\n                result[key] = element[0];\r\n            } else if (element.length > 1) {\r\n                result[key] = element.join(\"~\");\r\n            }\r\n        }\r\n        result.nulledFields = nulledFields;\r\n        return result;\r\n    }\r\n\r\n    ajaxSubmit = (object: any) => {\r\n        this.commonAjax(\r\n            this.masterDataService.save, this.recordSaved, this.showCommonErrorAlert,\r\n            this.getEntityProperty().entityName, object, this.editMode\r\n        )\r\n    }\r\n    recordSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Record saved\");\r\n    }\r\n    render() {\r\n        const entityProperty: EntityProperty = this.getEntityProperty();\r\n\r\n        const editModeStr = this.editMode ?  <span className=\"badge badge-warning\">Edit Mode</span>:\"\"\r\n        return ( \r\n            <div id=\"MasterDataForm\" >\r\n                <AnchorButton style={{ marginBottom: '5px' }} onClick={this.props.onClose} iconClassName=\"fas fa-angle-left\">Back</AnchorButton>\r\n                <form onSubmit={this.onSubmit} id=\"record-form\">\r\n                <Modal title={<span>{entityProperty.alias} Record Form {editModeStr}</span>} footerContent={<SubmitReset />}>\r\n                        <InputFields recordToEdit={this.recordToEdit} app={this.parentApp} entityProperty={entityProperty} />\r\n                    </Modal>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SubmitReset = (props) => {\r\n    return (\r\n        <div className=\"btn-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            <input type=\"reset\" className=\"btn btn-warning\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputFields = (props: { app: any, entityProperty: EntityProperty, recordToEdit:{}|undefined }) => {\r\n    const elements: EntityElement[] = props.entityProperty.elements;\r\n    const groupedElements: Array<Array<EntityElement>> = new Array();\r\n    let counter: number = 0;\r\n    groupedElements.push(new Array());\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        if (i > 0 && i % 5 == 0) {\r\n            counter++;\r\n            groupedElements.push(new Array());\r\n        }\r\n        groupedElements[counter].push(element);\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            {groupedElements.map(elements => {\r\n                return (\r\n                    <div className=\"col-lg-6\">\r\n                        {elements.map(element => {\r\n                            return <FormInputField recordToEdit={props.recordToEdit} app={props.app} entityElement={element} />\r\n                        })}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(connect(mapCommonUserStateToProps)(MasterDataForm))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport AnchorButton from './../../navigation/AnchorButton';\r\nimport EntityProperty from '../../../models/EntityProperty';\r\nimport WebResponse from './../../../models/WebResponse';\r\n\r\nclass EditDeleteAction extends BaseComponent {\r\n    masterDataService:MasterDataService = MasterDataService.getInstance();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n    }\r\n    delete = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(function(ok){\r\n            if (ok) {\r\n                app.doDelete();\r\n            }\r\n        });\r\n    }\r\n    doDelete = () => {\r\n        const record = this.props.record;\r\n        const entityProperty:EntityProperty = this.props.entityProperty;\r\n        const recordId = EntityProperty.getRecordId(record, entityProperty);\r\n        this.commonAjax(\r\n            this.masterDataService.delete,\r\n            this.recordDeleted,\r\n            this.showCommonErrorAlert,\r\n            entityProperty.entityName, recordId\r\n        )\r\n    }\r\n    getRecordById = () => {\r\n        const record = this.props.record;\r\n        const entityProperty:EntityProperty = this.props.entityProperty;\r\n        const recordId = EntityProperty.getRecordId(record, entityProperty);\r\n        this.commonAjax(\r\n            this.masterDataService.getById,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            entityProperty.entityName,\r\n            recordId\r\n        );\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (!response.entities || response.entities.length == 0){\r\n            throw new Error(\"Record not found\");\r\n        }\r\n        if(this.props.showEditForm) {\r\n            this.props.showEditForm(response);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record deleted\");\r\n        this.props.reload();\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton onClick={this.getRecordById} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"></AnchorButton>\r\n                <AnchorButton onClick={this.delete} className=\"btn btn-danger btn-sm\" iconClassName=\"fas fa-times\"></AnchorButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditDeleteAction))","\r\nimport React, { Component, Fragment } from 'react';\r\nimport HeaderProps from './../../../models/HeaderProps';\r\nexport default class DataTableHeader extends Component<any, any>\r\n{\r\n    render(){\r\n        const props = this.props;\r\n        const headerProps: HeaderProps[] = props.headerProps;\r\n        return (<thead>\r\n            <tr>\r\n                <th>No</th>\r\n                {headerProps.map(headerProp => {\r\n                    const isDate = headerProp.isDate;\r\n                    return (\r\n                        <th >\r\n                            <p>{headerProp.label}</p>\r\n                            <div>\r\n                                {isDate ?\r\n                                    <Fragment>\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-day\"}\r\n                                            className=\"input-filter\" placeholder={\"day\"} />\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-month\"}\r\n                                            className=\"input-filter\" placeholder={\"month\"} />\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-year\"}\r\n                                            className=\"input-filter\" placeholder={\"year\"} />\r\n                                    </Fragment>\r\n                                    :\r\n                                    <input onChange={props.filterOnChange} placeholder={headerProp.label}\r\n                                        className=\"input-filter\" name={headerProp.value} />\r\n                                }</div>\r\n                            <div className=\"btn-group\">\r\n                                <button data-orderType=\"asc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"btn btn-outline-secondary btn-sm\">\r\n                                    <i data-orderType=\"asc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"fas fa-angle-up\" /></button>\r\n                                <button data-orderType=\"desc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"btn btn-outline-secondary btn-sm\">\r\n                                    <i data-orderType=\"desc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"fas fa-angle-down\" /></button>\r\n                            </div>\r\n                        </th>\r\n                    )\r\n                })}\r\n                <th>Action</th>\r\n            </tr>\r\n        </thead>)\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Modal from '../../container/Modal';\r\nimport Filter from './../../../models/Filter';\r\nimport EntityProperty from './../../../models/EntityProperty';\r\nimport WebRequest from './../../../models/WebRequest';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport HeaderProps from './../../../models/HeaderProps';\r\nimport './DataTable.css'\r\nimport EntityValues from './../../../utils/EntityValues';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport MasterDataForm from './form/MasterDataForm';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport EditDeleteAction from './EditDeleteAction';\r\nimport DataTableHeader from './DataTableHeader';\r\nimport SimpleError from './../../alert/SimpleError';\r\nimport Spinner from './../../loader/Spinner';\r\ninterface IState { recordData?: WebResponse, showForm: boolean, filter: Filter, loading: boolean }\r\nclass MasterDataList extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        showForm: false, loading: false,\r\n        filter: { limit: 5, page: 0, fieldsFilter: {} }\r\n    }\r\n    recordToEdit?: {} = undefined;\r\n    entityProperty: EntityProperty;\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.entityProperty = this.props.entityProperty;\r\n    }\r\n    /**\r\n     * remove fieldsfilter empty values\";\r\n     */\r\n    adjustFilter = (filter: Filter): Filter => {\r\n        const fieldsFilter = filter.fieldsFilter;\r\n        for (const key in fieldsFilter) {\r\n            const element = fieldsFilter[key];\r\n            if (element == undefined || element == null || new String(element).length == 0) {\r\n                if (filter.fieldsFilter != undefined) {\r\n                    delete filter.fieldsFilter[key];\r\n                }\r\n            }\r\n        }\r\n        return filter;\r\n    }\r\n    loadEntities = (page: number | undefined) => {\r\n        const filter = this.state.filter;\r\n        const entityName = this.entityProperty.entityName;\r\n        filter.page = page ?? filter.page;\r\n        const request: WebRequest = {\r\n            entity: entityName,\r\n            filter: this.adjustFilter(filter)\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.loadEntities,\r\n            this.entitiesLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        );\r\n\r\n    }\r\n    entitiesLoaded = (response: WebResponse) => {\r\n        this.setState({ recordData: response, filter: response.filter });\r\n    }\r\n    checkDefaultData = () => {\r\n        if (this.state.loading) {\r\n            return;\r\n        }\r\n        if (this.entityProperty.entityName == this.props.entityProperty.entityName && this.state.recordData != undefined) {\r\n            return;\r\n        }\r\n        this.entityProperty = this.props.entityProperty;\r\n        this.loadEntities(0);\r\n    }\r\n    startLoading() { this.setState({ loading: true }) }\r\n    endLoading() { this.setState({ loading: false }) }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.checkDefaultData();\r\n    }\r\n    componentDidMount() {\r\n        this.checkDefaultData();\r\n    }\r\n    getRecordNumber = (i: number): number => {\r\n        let res = (this.state.filter.page ?? 0) * (this.state.filter.limit ?? 5) + i + 1;\r\n        return res;\r\n    }\r\n    filterFormSubmit = (e) => {\r\n        let page = this.state.filter.useExistingFilterPage ? this.state.filter.page : 0;\r\n        this.loadEntities(page);\r\n    }\r\n    filterOnChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter == undefined) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[name] = value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    filterReset = (e) => {\r\n        const filter = this.state.filter;\r\n        filter.fieldsFilter = {};\r\n        filter.limit = 5;\r\n        this.setState({ filter: filter });\r\n    }\r\n    orderButtonOnClick = (e) => {\r\n        const dataset: DOMStringMap = e.target.dataset;\r\n        const filter = this.state.filter;\r\n        filter.orderBy = dataset['orderby'];\r\n        filter.orderType = dataset['ordertype'];\r\n        this.setState({ filter: filter });\r\n        this.loadEntities(0);\r\n    }\r\n    showEditForm = (response: WebResponse) => {\r\n        if (!response.entities) {\r\n            return;\r\n        }\r\n        this.recordToEdit = response.entities[0];\r\n        this.setState({ showForm: true });\r\n    }\r\n    showCreateForm = (e) => {\r\n        this.recordToEdit = undefined;\r\n        this.setState({ showForm: true });\r\n    }\r\n    updateFilterPage = (page: any) => {\r\n        const filter = this.state.filter;\r\n        filter.useExistingFilterPage = true;\r\n        filter.page = parseInt(page) - 1;\r\n        this.setState({ filter: filter });\r\n    }\r\n    updateFilterLimit = (limit: any) => {\r\n        const filter = this.state.filter;\r\n        filter.limit = parseInt(limit);\r\n        this.setState({ filter: filter });\r\n    }\r\n    render() {\r\n        if (undefined == this.state.recordData) {\r\n            return <h2>Please Wait..</h2>\r\n        }\r\n        const headerProps: HeaderProps[] = EntityProperty.getHeaderLabels(this.props.entityProperty);\r\n        const resultList: any[] = this.state.recordData.entities ? this.state.recordData.entities : [];\r\n        if (headerProps == undefined || resultList == undefined) {\r\n            return <SimpleError />\r\n        }\r\n\r\n        if (this.state.showForm == true) {\r\n            return <MasterDataForm recordToEdit={this.recordToEdit} entityProperty={this.entityProperty} onClose={(e) => { this.setState({ showForm: false }) }} app={this.parentApp} />\r\n        }\r\n\r\n        return (\r\n            <div id=\"MasterDataList\">\r\n                <AnchorButton show={this.entityProperty.editable == true} style={{ marginBottom: '5px' }} onClick={this.showCreateForm} iconClassName=\"fas fa-plus\">Add Record</AnchorButton>\r\n                <form id=\"filter-form\" onSubmit={(e) => { e.preventDefault() }}>\r\n                    <Modal title=\"Filter\" toggleable={true}>\r\n                        <div>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-6\">\r\n                                    <input value={(this.state.filter.page ?? 0) + 1} onChange={(e) => { this.updateFilterPage(e.target.value) }} min=\"1\" className=\"form-control\" type=\"number\" placeholder=\"go to page\" />\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <input value={this.state.filter.limit} onChange={(e) => this.updateFilterLimit(e.target.value)} min=\"1\" className=\"form-control\" type=\"number\" placeholder=\"record per page\" />\r\n                                </div>\r\n                            </div>\r\n                            <SubmitResetButton onSubmit={this.filterFormSubmit} onReset={this.filterReset} />\r\n                        </div>\r\n                    </Modal>\r\n                    <NavigationButtons limit={this.state.filter.limit ?? 5} totalData={this.state.recordData.totalData ?? 0}\r\n                        activePage={this.state.filter.page ?? 0} onClick={this.loadEntities} />\r\n                    <Modal title=\"Data List\" >\r\n                        {this.state.loading ?\r\n                            <Loading loading={this.state.loading} /> : null}\r\n                        <div className=\"container-fluid\" style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\" >\r\n                                <DataTableHeader orderButtonOnClick={this.orderButtonOnClick} filterOnChange={this.filterOnChange} headerProps={headerProps} />\r\n                                <tbody>\r\n                                    {\r\n                                        resultList.map((result, i) => {\r\n                                            const number = this.getRecordNumber(i);\r\n                                            const values: Array<any> = EntityValues.parseValues(result, this.props.entityProperty);\r\n                                            return (<tr>\r\n                                                <td>{number}</td>\r\n                                                {values.map(value => {\r\n                                                    try {\r\n                                                        return (<td>{value}</td>)\r\n                                                    } catch (error) {\r\n                                                        return (<td>-</td>)\r\n                                                    }\r\n                                                })}\r\n                                                <td><EditDeleteAction show={this.entityProperty.editable == true} showEditForm={this.showEditForm} record={result} entityProperty={this.entityProperty} reload={() => this.loadEntities(undefined)} app={this.parentApp} /></td>\r\n                                            </tr>)\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </Modal>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst Loading = ({loading}) => {\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', paddingTop: '2rem', backgroundColor: 'rgb(240,240,240,0.5)', marginLeft: '-1rem', marginTop: '-1rem', position: 'absolute' }}>\r\n            <Spinner show={loading} />\r\n        </div>\r\n    )\r\n}\r\nconst SubmitResetButton = (props: any) => {\r\n    return (<div className=\"btn-group\">\r\n        <button onClick={props.onSubmit} className=\"btn btn-secondary btn-sm\"><span className=\"icon\"><i className=\"fas fa-play\" /></span>Apply Filter</button>\r\n        <button onClick={props.onReset} type=\"reset\" className=\"btn btn-warning btn-sm\"><span className=\"icon\"><i className=\"fas fa-sync-alt\" /></span>Reset</button>\r\n    </div>)\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(MasterDataList))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport EntityProperty from '../../../models/EntityProperty';\r\nimport MasterDataList from './MasterDataList';\r\ninterface IState {\r\n    entityProperty?: EntityProperty\r\n}\r\nclass MasterDataManagement extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    code: string = \"\";\r\n    loadingEntityProperty: boolean = false;\r\n    entityProperty: undefined\r\n    constructor(props: any) {\r\n        super(props, true);\r\n\r\n    }\r\n    entityPropertyLoaded = (response: WebResponse) => {\r\n        this.loadingEntityProperty = false;\r\n        if (response.entityProperty == undefined) {\r\n            return;\r\n        }\r\n        this.masterDataService.setEntityProperty(this.props.code, response.entityProperty);\r\n        this.setState({ entityProperty: response.entityProperty });\r\n        this.setTitle(response.entityProperty);\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.code != undefined && this.code != this.props.code) {\r\n            this.code = this.props.code;\r\n            this.loadEntityProperty();\r\n        }\r\n        console.debug(\"updated this.props.code: \", this.props.code);\r\n    }\r\n    setTitle = (entityProp: EntityProperty) => {\r\n        document.title = new String(entityProp?.alias).toString();\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.code != undefined && this.code != this.props.code) {\r\n            this.code = this.props.code;\r\n            this.loadEntityProperty();\r\n        }\r\n    }\r\n    startLoading() {\r\n        //\r\n    }\r\n    endLoading() {\r\n        //\r\n    }\r\n    loadEntityProperty() {\r\n\r\n        if (undefined == this.code && this.loadingEntityProperty == true) {\r\n            return;\r\n        }\r\n        const existingEntityProperty = this.masterDataService.getEntityProperty(this.code);\r\n        if (existingEntityProperty != undefined) {\r\n            this.loadingEntityProperty = false;\r\n            this.setState({ entityProperty: existingEntityProperty });\r\n            this.setTitle(existingEntityProperty);\r\n\r\n            return;\r\n        }\r\n        this.loadingEntityProperty = true;\r\n        this.setState({ entityProperty: undefined });\r\n        this.commonAjax(\r\n            this.masterDataService.loadEntityProperty,\r\n            this.entityPropertyLoaded,\r\n            (e: any) => { this.loadingEntityProperty = false; this.showCommonErrorAlert(e) },\r\n            this.code\r\n        )\r\n\r\n    }\r\n    render() {\r\n        if (this.state.entityProperty == undefined) {\r\n            return <div className=\"row\">\r\n                <div className=\"col-1\"><div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-10\"><h4>Loading configuration</h4></div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div id=\"MasterDataManagement\" className=\"container-fluid\">\r\n                <h2>{this.state.entityProperty.alias}</h2>\r\n                <MasterDataList app={this.parentApp} entityProperty={this.state.entityProperty} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MasterDataManagement))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport Menu from './../../../models/Menu';\r\nimport ManagementProperty from '../../../models/ManagementProperty';\r\nimport MasterDataManagement from './MasterDataManagement';\r\n\r\ninterface IState {\r\n    code?: string\r\n    // managementProperties:ManagementProperty[]\r\n}\r\nclass MasterDataMain extends BaseMainMenus {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        code: undefined\r\n    };\r\n    constructor(props: any) {\r\n        super(props, \"Master Data\", true);\r\n    }\r\n\r\n    managementPropertiesLoaded = (response: WebResponse) => {\r\n        this.masterDataService.managementProperties = response.generalList ? response.generalList : [];\r\n        this.setSidebarMenus();\r\n        this.refresh();\r\n    }\r\n    setSidebarMenus = () => {\r\n        const sidebarMenus: Menu[] = [];\r\n        const managementProperties: ManagementProperty[] = this.masterDataService.managementProperties;\r\n        for (let i = 0; i < managementProperties.length; i++) {\r\n            const element = managementProperties[i];\r\n            sidebarMenus.push({\r\n                name: element.label,\r\n                url: element.entityName,\r\n                code: element.entityName,\r\n                menuClass: element.iconClassName\r\n            });\r\n        }\r\n        if (this.props.setSidebarMenus) {\r\n            this.props.setSidebarMenus(sidebarMenus);\r\n        }\r\n    }\r\n    loadManagamenetPages = () => {\r\n        if (this.masterDataService.managementProperties.length > 0) {\r\n            this.setSidebarMenus();\r\n            this.refresh();\r\n            return;\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.loadManagementProperties,\r\n            this.managementPropertiesLoaded,\r\n            this.showCommonErrorAlert\r\n        );\r\n    }\r\n    getCode = (): string => {\r\n        return this.props.match.params.code;\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.loadManagamenetPages();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setSidebarMenus();\r\n        // console.debug(\"this.getCode(): \", this.getCode());\r\n        if (this.state.code != this.getCode()) {\r\n            this.setState({ code: this.getCode() });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.getCode() != undefined && this.getCode() != null && this.getCode() != \"\") {\r\n            return <MasterDataManagement app={this.parentApp} code={this.getCode()} />\r\n        }\r\n        if (this.masterDataService.managementProperties.length == 0) {\r\n            return <div className=\"container-fluid\"><h3>Loading</h3></div>\r\n        }\r\n        const properties: ManagementProperty[] = this.masterDataService.managementProperties;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Master Data Page</h2>\r\n                <div className=\"row\">\r\n                    {properties.map(property => {\r\n\r\n                        return (\r\n                            <div className=\"col-md-2 text-center\" style={{ marginBottom: '10px' }}>\r\n                                <h2 ><Link className=\"btn btn-warning btn-lg\" to={\"/management/\" + property.entityName} ><i className={property.iconClassName} /></Link></h2>\r\n                                <p>{property.label}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(MasterDataMain))","\r\n\r\nimport React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass TransactionMain extends BaseMainMenus {\r\n    constructor(props: any) {\r\n        super(props, \"Transaction\", true);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"TransactionMain\" className=\"container-fluid\">\r\n                <h2>Transaction Page</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 text-center\">\r\n                        <h1> <Link className=\"btn btn-info btn-lg\" to=\"/transaction/selling\"><i className=\"fas fa-cash-register\" /></Link></h1>\r\n                        <p>Selling</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 text-center\">\r\n                        <h1><Link className=\"btn btn-info btn-lg\" to=\"/transaction/purchasing\"><i className=\"fas fa-shopping-basket\" /></Link></h1>\r\n                        <p>Purchasing</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionMain))","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default class AnchorWithIcon extends Component<any, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={{marginRight:'5px'}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </Link>\r\n        )\r\n    }\r\n}","import * as url from '../constant/Url'\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport WebRequest from './../models/WebRequest';\r\nimport Filter from './../models/Filter';\r\nexport default class CatalogService {\r\n    private static instance?:CatalogService;\r\n    totalProduct:number = 0;\r\n\r\n    static getInstance(): CatalogService {\r\n        if (this.instance == null) {\r\n            this.instance = new CatalogService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    setTotalProduct = (value:number) => {\r\n        this.totalProduct = value;\r\n    }\r\n    getTotalProduct = () => {\r\n        const endpoint = url.contextPath().concat(\"api/public/totalproduct\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    /**\r\n     * \r\n     * @param {JSON} raw \r\n     */\r\n    getProductList = (raw:Filter) => {\r\n         \r\n        const fieldsFilter = {\r\n            // withStock: raw.withStock == true,\r\n            // withSupplier: raw.withSupplier == true,\r\n            // withCategories: raw.withCategories == true,\r\n            ... raw.fieldsFilter\r\n        }\r\n        \r\n        const request:WebRequest = {\r\n            entity: \"product\",\r\n            filter: {\r\n                exacts: raw.exacts == true,\r\n                limit: raw.limit ? raw.limit : 10,\r\n                page: raw.page ? raw.page : 0,\r\n                fieldsFilter: fieldsFilter,\r\n                orderBy: raw.orderBy,\r\n                orderType: raw.orderType\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n      \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} code \r\n     */\r\n    getProductDetail = (code:string) => this.getProductList({\r\n        limit: 1,\r\n        exacts: true,\r\n        fieldsFilter: {\r\n            'code' : code,\r\n            'withStock': true,\r\n            'withSupplier': true,\r\n        }\r\n    })\r\n\r\n  /**\r\n   * \r\n   * @param req \r\n   */\r\n    getMoreSupplier = (req:any) => { \r\n\r\n        const request:WebRequest = {\r\n            filter: {\r\n                page: req.page,\r\n                fieldsFilter: { productId: req.productId }\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/moresupplier\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n\r\n}","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Menu from './../../../models/Menu';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport Card from './../../container/Card';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport CatalogService from './../../../services/CatalogService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\ninterface IState { totalProduct: number }\r\nclass CatalogMain extends BaseMainMenus {\r\n    catalogService: CatalogService = CatalogService.getInstance();\r\n    state: IState = { totalProduct: 0 }\r\n    constructor(props: any) {\r\n        super(props, \"Catalog\");\r\n    }\r\n    totalProductLoaded = (response: WebResponse) => {\r\n        this.catalogService.setTotalProduct(response.totalData ?? 0);\r\n        this.setState({ totalProduct: response.totalData });\r\n    }\r\n    totalProductNotLoaded = (e: any) => {\r\n        console.error(e);\r\n    }\r\n    loadTotalProduct = () => {\r\n        this.commonAjax(\r\n            this.catalogService.getTotalProduct,\r\n            this.totalProductLoaded,\r\n            this.totalProductNotLoaded\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        if (this.catalogService.totalProduct <= 0) {\r\n            this.loadTotalProduct();\r\n        } else {\r\n            this.setState({ totalProduct: this.catalogService.totalProduct });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"CatalogMain\" className=\"container-fluid\">\r\n                <h2>Shop Catalog</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <Card title=\"Product Catalog\" className=\"bg-light\">\r\n                            <h4>Total Product: {this.state.totalProduct}</h4>\r\n                            <div className=\"btn-group\">\r\n                                <AnchorWithIcon className=\"btn btn-info\" to=\"/catalog/product\">View Catalog</AnchorWithIcon>\r\n                                <AnchorButton iconClassName=\"fas fa-sync-alt\" onClick={this.loadTotalProduct} />\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <Card title=\"Supplier Catalog\" className=\"bg-light\">\r\n                            <h4>Supplier catalog</h4>\r\n                            <AnchorWithIcon className=\"btn btn-info\" to=\"/catalog/supplier\">View Catalog</AnchorWithIcon>\r\n\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(CatalogMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'opx',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.shortDescription}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcomingMessage}</p>\r\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(HomeMain))","\nexport default class BaseEntity{\n\tid?:number;\n\tcreatedDate?:Date;\n\tmodifiedDate?:Date;\n\tdeletedDate?:Date;\n\tdeleted?:boolean;\n\n}\n","import BaseEntity from './BaseEntity';\nimport Unit from './Unit';\nimport Category from './Category';\nimport Supplier from './Supplier';\n\nexport default class Product extends BaseEntity{\n\tcode?:string;\n\tname?:string;\n\tdescription?:string;\n\tprice?:number;\n\ttype?:string;\n\timageUrl?:string;\n\tunit?:Unit;\n\tcategory?:Category;\n\tnewProduct?:boolean;\n\tcount?:number;\n\tsuppliers?:Supplier[];\n\n\tstatic getDefaultPicture(product:Product, baseImageUrl?:string) :string{\n\n\t\tif (product.imageUrl && product.imageUrl?.length >0) {\n\t\t\treturn (baseImageUrl?baseImageUrl:\"\") + product.imageUrl.split(\"~\")[0];\n\t\t}\n\t\treturn (baseImageUrl?baseImageUrl:\"\") + \"default.bmp\";\n\t}\n\tstatic getPictureNames(product:Product, baseImageUrl?:string): string[] {\n\t\tif (product.imageUrl && product.imageUrl?.length >0) {\n\t\t\tlet names:string[] = product.imageUrl.split(\"~\");\n\t\t\tif (baseImageUrl) {\n\t\t\t\treturn names.map(name=>{\n\t\t\t\t\treturn baseImageUrl+name;\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn names;\n\t\t}\n\t\treturn [Product.getDefaultPicture(product, baseImageUrl)]\n\t}\n\n\tstatic countSummary(products:Product[]) : number\n\t{\n\t\tlet count = 0;\n\t\tfor (let i = 0; i < products.length; i++) {\n\t\t\tconst element = products[i];\n\t\t\tcount += element.count??0;\n\t\t}\n\t\treturn count;\n\t}\n\n}\n","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport Product from './../../../models/Product';\r\n\r\nclass CartMain extends BaseMainMenus\r\n{\r\n    constructor(props:any){\r\n        super(props, \"Shopping Cart\");\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"CartMain\" className=\"container-fluid\">\r\n                <h2>Shopping Cart</h2>\r\n                <div className=\"alert alert-info\">\r\n                   <p>Plan your shopping list</p>\r\n                   <p>Current items: <strong>{Product.countSummary(this.props.cart)}</strong></p>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(CartMain))","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { emptyPromise, commonAjaxPostCalls } from './Promises'; \r\nimport Transaction from './../models/Transaction';\r\nimport WebRequest from './../models/WebRequest';\r\nimport WebResponse from './../models/WebResponse';\r\nconst axios = require('axios');\r\nexport default class BaseTransactionService {\r\n\r\n    getProductList = (raw) => {\r\n        if( raw.value == null || raw.value.toString().trim() == \"\"){\r\n            return emptyPromise({entities:[]});\r\n        }\r\n        const fieldsFilter = {};\r\n        fieldsFilter[raw.key] = raw.value;\r\n        const request = {\r\n            entity: \"product\", \r\n            filter: { \r\n                page: 0, \r\n                exacts: (raw.exacts == true), \r\n                limit: 15, \r\n                fieldsFilter: fieldsFilter \r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/entity/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    submitTransactionSelling = (transaction:Transaction) => this.submitTransaction({...transaction, type:'SELLING' })\r\n    submitTransactionPurchasing = (transaction:Transaction) => this.submitTransaction({...transaction, type:'PURCHASING' })\r\n\r\n    submitTransaction = (raw:Transaction) => {\r\n        console.debug(\"submitTransaction \", raw.type);\r\n        const type = raw.type;\r\n        const request:WebRequest = {\r\n            productFlows: raw.productFlows\r\n        }\r\n        return new Promise<WebResponse>(function (resolve, reject) {\r\n            let endpoint:string = \"\";\r\n            switch (type) {\r\n                case \"SELLING\":\r\n                    if(null == raw.customer){\r\n                        reject(\"Invalid Customer\");\r\n                        break;\r\n                    }\r\n                    request.customer = raw.customer;\r\n                    endpoint = url.contextPath().concat(\"api/app/transaction/selling\")\r\n                    break;\r\n                case \"PURCHASING\": \r\n                default:\r\n                    if(null == raw.supplier){\r\n                        reject(\"Invalid Supplier\");\r\n                        break;\r\n                    }\r\n                    request.supplier = raw.supplier;\r\n                    endpoint = url.contextPath().concat(\"api/app/transaction/purchasing\")\r\n                    break;\r\n            } \r\n            axios.post(endpoint, request,{\r\n                headers: commonAuthorizedHeader(),\r\n            })\r\n                .then(response => response.data).then(function (response:WebResponse) {\r\n                    if (response.code == \"00\") \r\n                    { resolve(response) } \r\n                    else \r\n                    { reject(response) }\r\n                }).\r\n                catch((e:any) =>{ console.error(e); reject(e)});\r\n        })\r\n    }\r\n\r\n    getStockInfo = (productCode:string) => {\r\n        const request:WebRequest = {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                fieldsFilter: { \"code\": productCode, withStock: true }\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport BaseTransactionService from './BaseTransactionService';\r\nimport Supplier from './../models/Supplier';\r\nimport ProductFlow from './../models/ProductFlow';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class TransactionPurchasingService extends BaseTransactionService {\r\n    private static instance?:TransactionPurchasingService;\r\n\r\n    static getInstance(): TransactionPurchasingService {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionPurchasingService();\r\n        }\r\n        return this.instance;\r\n    } \r\n\r\n    // submit = (productFlows:ProductFlow[], supplier: Supplier) => {\r\n    //     const request:WebRequest = {\r\n    //         supplier:supplier,\r\n    //         productFlows:productFlows\r\n    //     };\r\n    //     const endpoint = contextPath()+\"api/app/transaction/purchasing\";\r\n    //     return commonAjaxPostCalls(endpoint, request);\r\n    // }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport TransactionPurchasingService from './../../../../services/TransactionPurchasingService';\r\nimport Supplier from './../../../../models/Supplier';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from './../../../../services/MasterDataService';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\r\nimport Spinner from './../../../loader/Spinner';\r\ninterface IState {\r\n    supplier?: Supplier;\r\n    supplierNotFound: boolean;\r\n    loading: boolean;    \r\n}\r\nclass SupplierForm extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        supplierNotFound: false, loading: false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchSupplier = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('id');\r\n        if (!id) return;\r\n        this.loadSupplier(parseInt(id.toString()));\r\n    }\r\n    supplierLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Supplier not found\");\r\n        }\r\n        this.props.setSupplier(response.entities[0]);\r\n        this.setState({ supplier: response.entities[0], supplierNotFound: false });\r\n    }\r\n    supplierNotFound = (e: any) => {\r\n        this.setState({ supplierNotFound: true });\r\n    }\r\n    loadSupplier = (id: number) => {\r\n        this.commonAjax(this.masterDataService.getById,\r\n            this.supplierLoaded, this.supplierNotFound, 'supplier', id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchSupplier} >\r\n                <Modal toggleable={true} title=\"Supplier form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/supplier\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Supplier code\" required type=\"number\" className=\"form-control\" name=\"id\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <SupplierDetail loading={this.state.loading} supplier={this.state.supplier} notFound={this.state.supplierNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst SupplierDetail = (props: {loading:boolean, supplier?: Supplier, notFound: boolean }) => {\r\n    const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Supplier not found</div></div>\r\n    }\r\n    if (!props.supplier) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select supplier</div></div>\r\n    }\r\n    const supplier: Supplier = props.supplier;\r\n    return (\r\n        <div style={style}>\r\n            <h2>{supplier.name}</h2>\r\n            <address>\r\n                {supplier.address}<br />\r\n                <abbr title=\"Contact\">Contact: </abbr>{supplier.contact}\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SupplierForm))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport TransactionPurchasingService from '../../../services/TransactionPurchasingService';\r\nimport Product from '../../../models/Product';\r\nimport ProductFlow from '../../../models/ProductFlow';\r\nimport Modal from '../../container/Modal';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport Spinner from '../../loader/Spinner';\r\ninterface IState {\r\n    product?: Product;\r\n    productFlows: ProductFlow[];\r\n    selectedProductFlow?: ProductFlow;\r\n    productNotFound: boolean;\r\n    loading:boolean;\r\n}\r\nexport default class ProductForm extends BaseComponent {\r\n\r\n    transactionService = TransactionPurchasingService.getInstance();\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        productFlows: [],\r\n        productNotFound: false,\r\n        loading:false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { ...this.state };\r\n\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchProduct = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('code');\r\n        if (!id) return;\r\n        this.loadProduct((id.toString()));\r\n    }\r\n    productLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Product not found\");\r\n        }\r\n        this.props.setProduct(response.entities[0]);\r\n        this.setState({ product: response.entities[0], productNotFound: false });\r\n    }\r\n    setProduct = (product: Product) => {\r\n        this.setState({ product: product, productNotFound: false });\r\n    }\r\n    productNotFound = (e: any) => {\r\n        this.setState({ productNotFound: true });\r\n    }\r\n    loadProduct = (code: string) => {\r\n        // this.commonAjax(this.masterDataService.getBy,\r\n        //     this.productLoaded, this.productNotFound, 'product', { code: code });\r\n\r\n        this.commonAjaxWithProgress(this.transactionService.getStockInfo,\r\n            this.productLoaded, this.productNotFound, code);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchProduct} >\r\n               \r\n                <Modal toggleable={true}  title=\"Product form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/product\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Product code\" required type=\"text\" className=\"form-control\" name=\"code\" />\r\n                        </FormGroup>\r\n                    </div> \r\n                    \r\n                    <ProductDetail loading={this.state.loading} product={this.state.product} notFound={this.state.productNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst ProductDetail = (props: { loading:boolean, product?: Product, notFound: boolean }) => {\r\n   const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Product not found</div></div>\r\n    }\r\n    if (!props.product) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select product</div></div>\r\n    }\r\n    const product: Product = props.product;\r\n    return (\r\n        <div style={style}>\r\n            <h4>{product.name}</h4>\r\n            <table className=\"table\">\r\n                <thead><tr>\r\n                    <th>Unit</th>\r\n                    <th>Category</th>\r\n                    <th>Price@Unit</th>\r\n                    <th>Current Amount</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{product.unit ? product.unit.name : '-'}</td>\r\n                        <td>{product.category ? product.category.name : '-'}</td>\r\n                        <td style={{ fontFamily: 'monospace' }}>{product.price}</td>\r\n                        <td>{product.count}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n","import BaseEntity from './BaseEntity';\nimport Customer from './Customer';\nimport ProductFlow from './ProductFlow';\nimport Supplier from './Supplier';\nimport User from './User';\n\nexport default class Transaction extends BaseEntity{\n\tcustomer?:Customer;\n\tsupplier?:Supplier;\n\tcode?:string;\n\ttype?:string;\n\tmode?:string;\n\ttransactionDate?:Date;\n\tuser?:User;\n\tproductFlows?:ProductFlow[];\n\tproductFlow?:any;\n\n}\n","import BaseEntity from './BaseEntity';\nimport Transaction from './Transaction';\nimport Product from './Product';\nimport ProductFlowStock from './ProductFlowStock';\n\nexport default class ProductFlow extends BaseEntity{\n\n\ttransaction?:Transaction;\n\texpiryDate?:Date;\n\tprice?:number;\n\tcount?:number;\n\tflowReferenceId?:number;\n\tproduct?:Product;\n\ttransactionId?:number;\n\tproductFlowStock?:ProductFlowStock;\n\ttotalPrice?:number; \n\tstatic create(product:Product) :Product{\n\t\tconst obj = new ProductFlow();\n\t\tobj.product = product;\n\t\treturn obj;\n\n\t}\n}\n","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport ProductFlow from './../../../models/ProductFlow';\r\nimport Supplier from './../../../models/Supplier';\r\nimport Product from '../../../models/Product';\r\nimport React from 'react';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Customer from './../../../models/Customer';\r\ninterface IState {\r\n    supplier?: Supplier;\r\n    productFlows: ProductFlow[];\r\n    selectedProductFlow?: ProductFlow;\r\n    customer?:Customer\r\n}\r\nexport default class BaseTransactionComponent extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        productFlows: []\r\n    }\r\n    productFormRef: React.RefObject<any> = React.createRef();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    setProduct = (product: Product) => {\r\n        const productFlow = ProductFlow.create(product);\r\n        this.setState({ selectedProductFlow: productFlow });\r\n    }\r\n    addToCart = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.selectedProductFlow) {\r\n            this.showError(\"Please select product!\");\r\n            return;\r\n        }\r\n        const productFlow: ProductFlow = Object.assign(new ProductFlow(), this.state.selectedProductFlow);\r\n        const existInCart: boolean = this.existInCart(productFlow);\r\n\r\n        if (existInCart) {\r\n            const app = this;\r\n            this.showConfirmation(\"Override \" + productFlow.product?.name + \" data?\")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.addProductFlowState(productFlow);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            this.addProductFlowState(productFlow);\r\n        }\r\n        e.target.reset();\r\n\r\n    }\r\n    addProductFlowState = (productFlow: ProductFlow) => {\r\n        const productFlows: ProductFlow[] = this.state.productFlows;\r\n        const existInCart: boolean = this.existInCart(productFlow);\r\n        if (existInCart) {\r\n            for (let i = 0; i < productFlows.length; i++) {\r\n                const element = productFlows[i];\r\n                if (element.product?.code == productFlow.product?.code) {\r\n                    productFlows[i] = productFlow;\r\n                }\r\n            }\r\n        } else {\r\n            productFlows.push(productFlow);\r\n        }\r\n\r\n        this.setState({ productFlows: productFlows });\r\n        this.clearSelectedProductFlow();\r\n    }\r\n\r\n    existInCart = (productFlow: ProductFlow) => {\r\n        for (let i = 0; i < this.state.productFlows.length; i++) {\r\n            const element = this.state.productFlows[i];\r\n            if (element.product?.code == productFlow.product?.code) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearSelectedProductFlow = () => {\r\n        if (!this.state.selectedProductFlow) {\r\n            return;\r\n        }\r\n        this.setState({ selectedProductFlow: undefined });\r\n        if (this.productFormRef.current)\r\n            this.productFormRef.current.setProduct(undefined);\r\n    }\r\n    editProduct = (code:any) => {\r\n        const productFlows =  this.state.productFlows;\r\n        const app= this;\r\n        \r\n        this.showConfirmation(\"Edit data \"+code+\"?\")\r\n        .then(function(ok){\r\n            let productFlow:ProductFlow|undefined = undefined;\r\n            for (let i = 0; i < productFlows.length; i++) {\r\n                const element = productFlows[i];\r\n                if (element.product?.code ==  code) {\r\n                    productFlow = Object.assign(new ProductFlow(), element);\r\n                }\r\n            }\r\n           \r\n            if (productFlow && ok && app.productFormRef.current) {\r\n                app.setState({selectedProductFlow:productFlow});\r\n                app.productFormRef.current.setProduct(productFlow.product);\r\n            }\r\n        })\r\n    }\r\n    removeProduct = (code:any) => {\r\n        const productFlows =  this.state.productFlows;\r\n        const app= this;\r\n        for (let i = 0; i < productFlows.length; i++) {\r\n            const element = productFlows[i];\r\n            if (element.product?.code ==  code) {\r\n                productFlows.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n        this.showConfirmationDanger(\"Remove data?\")\r\n        .then(function(ok){\r\n            if (ok) {\r\n                if (app.state.selectedProductFlow && code == app.state.selectedProductFlow.product?.code) {\r\n                    app.clearSelectedProductFlow();\r\n                }\r\n                app.setState({productFlows:productFlows});\r\n            }\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const totalUnitAndPrice = (productFlows:ProductFlow[]):{unit:number, productFlowPrice:number, productPrice:number} => {\r\n    let totalUnit:number = 0, totalPrice:number = 0, totalProductPrice:number = 0;\r\n    for (let i = 0; i < productFlows.length; i++) {\r\n        const element = productFlows[i];\r\n        totalUnit+=(element.count?element.count:0);\r\n        totalPrice+=((element.count??0)*(element.price??0));\r\n        totalProductPrice+=((element.count??0)*(element.product?.price??0));\r\n    }\r\n    return {\r\n        unit:totalUnit,\r\n        productFlowPrice:totalPrice,\r\n        productPrice:totalProductPrice    \r\n    }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport TransactionPurchasingService from './../../../../services/TransactionPurchasingService';\r\nimport Supplier from './../../../../models/Supplier';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from './../../../../services/MasterDataService';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport SupplierForm from './SupplierForm';\r\nimport ProductForm from '../ProductForm';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Product from '../../../../models/Product';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Transaction from './../../../../models/Transaction';\r\nimport BaseTransactionComponent, { totalUnitAndPrice } from './../BaseTransactionComponent';\r\n \r\nclass TransactionPurchasing extends BaseTransactionComponent {\r\n    transactionPurchasingService = TransactionPurchasingService.getInstance();\r\n    constructor(props: any) {\r\n        super(props); \r\n    }\r\n    setSupplier = (supplier: Supplier) => {\r\n        this.setState({ supplier: supplier });\r\n    } \r\n    \r\n    \r\n    updateSelectedProductFlowProp = (e) => {\r\n        const productFlow: ProductFlow | undefined = this.state.selectedProductFlow;\r\n        if (!productFlow) {\r\n            this.showError(\"Please select product!\");\r\n            e.target.value = null;\r\n            return;\r\n        }\r\n        const propName = e.target.name;\r\n        const value = e.target.type=='number'?parseInt(e.target.value) : e.target.value;\r\n        productFlow[propName] = value;\r\n        this.setState({ selectedProductFlow: productFlow });\r\n\r\n    }\r\n   \r\n    \r\n    submitTransaction = (e) => {\r\n        e.preventDefault();\r\n        const app = this;\r\n        const formData = new FormData(e.target);\r\n        this.showConfirmation(\"Submit Transactio?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.doSubmit(formData);\r\n            }\r\n        });\r\n    }\r\n\r\n    doSubmit = (formData:FormData) => {\r\n        const transaction:Transaction = new Transaction();\r\n        transaction.productFlows = this.state.productFlows;\r\n        transaction.supplier = this.state.supplier;\r\n        const date = formData.get('date');\r\n        transaction.transactionDate =date ? new Date(date.toString()) : new Date();\r\n        this.commonAjaxWithProgress(\r\n            this.transactionPurchasingService.submitTransactionPurchasing,\r\n            this.transactionSucess,\r\n            this.showCommonErrorAlert,\r\n            transaction\r\n        )\r\n    }\r\n\r\n    transactionSucess = (response:WebResponse) => {\r\n        const code = response.transaction?.code;\r\n        this.showInfo(\"Transaction success: \"+code);\r\n    }\r\n    \r\n    render() {\r\n        const productFlowsPopulated = this.state.productFlows.length > 0;\r\n        const supplierExist = this.state.supplier != undefined;\r\n        const showSubmitTrxButton = productFlowsPopulated == true && supplierExist == true;\r\n        return (\r\n            <div id=\"TransactionPurchasing\" className=\"container-fluid\">\r\n                <h2>Purchasing</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\" >\r\n                        <ProductForm ref={this.productFormRef} setProduct={this.setProduct} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <SupplierForm setSupplier={this.setSupplier} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.addToCart} >\r\n                            <Modal title={\"Product Data\"} footerContent={<Fragment>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Add\" />\r\n                                <input type=\"reset\" className=\"btn btn-warning\" value=\"Reset\" />\r\n                            </Fragment>}>\r\n                                <FormGroup label=\"Quantity\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.count} type=\"number\" onChange={this.updateSelectedProductFlowProp} name=\"count\" required min=\"1\" className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Price @Unit\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.price} type=\"number\" onChange={this.updateSelectedProductFlowProp} name=\"price\" min=\"0\" required className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Expired Date\">\r\n                                    <input defaultValue={new String(this.state.selectedProductFlow?.expiryDate).toString()} type=\"date\" onChange={this.updateSelectedProductFlowProp} name=\"expiryDate\" required className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        {showSubmitTrxButton?\r\n                        <form onSubmit={this.submitTransaction}>\r\n                            <Modal title=\"Action\">\r\n                                <FormGroup label=\"Date\">\r\n                                    <input required type=\"date\" name=\"date\" className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Action\">\r\n                                    <div>\r\n                                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Transaction\"/>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>:null}\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <Modal title=\"Products\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit</th>\r\n                                        <th>Exp Date</th>\r\n                                        <th>Price</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productFlows.map((productFlow, i) => {\r\n                                        return (\r\n                                            <tr key={\"pf_\"+i}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{productFlow.product?.name}</td>\r\n                                                <td>{productFlow.count}</td>\r\n                                                <td>{productFlow.product?.unit?.name}</td>\r\n                                                <td>{productFlow.expiryDate}</td>\r\n                                                <td>{productFlow.price}</td>\r\n                                                <td>{(productFlow.count ?? 0) * (productFlow.price ?? 0)}</td>\r\n                                                <td>\r\n                                                    <AnchorButton onClick={(e)=>this.editProduct(productFlow.product?.code)} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" >edit</AnchorButton>\r\n                                                    <AnchorButton onClick={(e)=>this.removeProduct(productFlow.product?.code)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" >remove</AnchorButton>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <td colSpan={2}><strong>Total</strong></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).unit}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).productFlowPrice}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    } \r\n} \r\n\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(TransactionPurchasing))","import * as url from '../constant/Url'\r\nimport BaseTransactionService from './BaseTransactionService';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport WebRequest from './../models/WebRequest';\r\nexport default class TransactionSellingService extends BaseTransactionService{\r\n    private static instance?:TransactionSellingService;\r\n\r\n    static getInstance(): TransactionSellingService {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionSellingService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    getCustomerList = (raw:any) => {\r\n        const fieldsFilter = {};\r\n        fieldsFilter[raw.key] = raw.value;\r\n        const request:WebRequest = {\r\n            entity: \"customer\",\r\n            filter: {\r\n                page: (raw.page > 0 ? raw.page : 0),\r\n                limit: (raw.limit > 0 ? raw.limit : 10),\r\n                exacts: (raw.exacts == true),\r\n                fieldsFilter: fieldsFilter\r\n            }\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/app/entity/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport Customer from '../../../../models/Customer';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\r\nimport Spinner from './../../../loader/Spinner';\r\ninterface IState {\r\n    customer?: Customer;\r\n    customerNotFound: boolean;\r\n    loading:boolean;\r\n}\r\nclass CustomerForm extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        customerNotFound: false, loading:false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchCustomer = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('id');\r\n        if (!id) return;\r\n        this.loadCustomer(parseInt(id.toString()));\r\n    }\r\n    customerLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Customer not found\");\r\n        }\r\n        this.props.setCustomer(response.entities[0]);\r\n        this.setState({ customer: response.entities[0], customerNotFound: false });\r\n    }\r\n    customerNotFound = (e: any) => {\r\n        this.setState({ customerNotFound: true });\r\n    }\r\n    loadCustomer = (id: number) => {\r\n        this.commonAjax(this.masterDataService.getById,\r\n            this.customerLoaded, this.customerNotFound, 'customer', id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchCustomer} >\r\n                <Modal toggleable={true}  title=\"Customer form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/customer\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Customer code\" required type=\"number\" className=\"form-control\" name=\"id\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <CustomerDetail loading={this.state.loading} customer={this.state.customer} notFound={this.state.customerNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst CustomerDetail = (props: { loading:boolean, customer?: Customer, notFound: boolean }) => {\r\n    const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Customer not found</div></div>\r\n    }\r\n    if (!props.customer) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select customer</div></div>\r\n    }\r\n    const customer: Customer = props.customer;\r\n    return (\r\n        <div style={style}>\r\n            <h2>{customer.name}</h2>\r\n            <address>\r\n                {customer.address}<br />\r\n                <abbr title=\"Contact\">Contact: </abbr>{customer.phone}\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(CustomerForm))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionSellingService from '../../../../services/TransactionSellingService';\r\nimport Customer from '../../../../models/Customer';\r\nimport ProductFlow from '../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport WebResponse from '../../../../models/WebResponse'; \r\nimport ProductForm from '../ProductForm';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Transaction from '../../../../models/Transaction';\r\nimport BaseTransactionComponent, { totalUnitAndPrice } from '../BaseTransactionComponent';\r\nimport CustomerForm from './CustomerForm';\r\n\r\nclass TransactionSelling extends BaseTransactionComponent {\r\n    transactionSellingService = TransactionSellingService.getInstance();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    setCustomer = (customer: Customer) => {\r\n        this.setState({ customer: customer });\r\n    }\r\n\r\n    updateSaleQty = (e) => {\r\n        const productFlow: ProductFlow | undefined = this.state.selectedProductFlow;\r\n        if (!productFlow) {\r\n            this.showError(\"Please select product!\");\r\n            e.target.value = null;\r\n            return;\r\n        }\r\n        const value = parseInt(e.target.value);\r\n        productFlow.count = value;\r\n        this.setState({ selectedProductFlow: productFlow });\r\n    }\r\n\r\n    submitTransaction = (e) => {\r\n        e.preventDefault();\r\n        const app = this;\r\n        const formData = new FormData(e.target);\r\n        this.showConfirmation(\"Submit Transactio?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doSubmit(formData);\r\n                }\r\n            });\r\n    }\r\n\r\n    doSubmit = (formData: FormData) => {\r\n        const transaction: Transaction = new Transaction();\r\n        transaction.productFlows = this.state.productFlows;\r\n        transaction.customer = this.state.customer;\r\n        const date = formData.get('date');\r\n        transaction.transactionDate = date ? new Date(date.toString()) : new Date();\r\n        this.commonAjaxWithProgress(\r\n            this.transactionSellingService.submitTransactionSelling,\r\n            this.transactionSucess,\r\n            this.showCommonErrorAlert,\r\n            transaction\r\n        )\r\n    }\r\n\r\n    transactionSucess = (response: WebResponse) => {\r\n        const code = response.transaction?.code;\r\n        this.showInfo(\"Transaction success: \" + code);\r\n    }\r\n\r\n    render() {\r\n        const productFlowsPopulated = this.state.productFlows.length > 0;\r\n        const customerExist = this.state.customer != undefined;\r\n        const showSubmitTrxButton = productFlowsPopulated == true && customerExist == true;\r\n        const selectedProductFlow = this.state.selectedProductFlow;\r\n        return (\r\n            <div id=\"TransactionSelling\"  className=\"container-fluid\">\r\n                <h2>Selling</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\" >\r\n                        <ProductForm ref={this.productFormRef} setProduct={this.setProduct} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <CustomerForm setCustomer={this.setCustomer} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.addToCart} >\r\n                            <Modal title={\"Product Data\"} footerContent={<Fragment>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Add\" />\r\n                                <input type=\"reset\" className=\"btn btn-warning\" value=\"Reset\" />\r\n                            </Fragment>}>\r\n                                <FormGroup label=\"Quantity\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.count}\r\n                                         type=\"number\" onChange={this.updateSaleQty} name=\"count\" required \r\n                                         min={1} max={\r\n                                            selectedProductFlow?selectedProductFlow.product?.count:0\r\n                                         } className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        {showSubmitTrxButton ?\r\n                            <form onSubmit={this.submitTransaction}>\r\n                                <Modal title=\"Action\">\r\n                                    <FormGroup label=\"Date\">\r\n                                        <input required type=\"date\" name=\"date\" className=\"form-control\" />\r\n                                    </FormGroup>\r\n                                    <FormGroup label=\"Action\">\r\n                                        <div>\r\n                                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Transaction\" />\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </Modal>\r\n                            </form> : null}\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <Modal title=\"Products\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit</th>\r\n                                        {/* <th>Exp Date</th> */}\r\n                                        <th>Price</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productFlows.map((productFlow, i) => {\r\n                                        return (\r\n                                            <tr key={\"pf_\" + i}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{productFlow.product?.name}</td>\r\n                                                <td>{productFlow.count}</td>\r\n                                                <td>{productFlow.product?.unit?.name}</td>\r\n                                                {/* <td>{productFlow.expiryDate}</td> */}\r\n                                                <td>{productFlow.product?.price}</td>\r\n                                                <td>{(productFlow.count ?? 0) * (productFlow.product?.price ?? 0)}</td>\r\n                                                <td>\r\n                                                    <AnchorButton onClick={(e) => this.editProduct(productFlow.product?.code)} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" >edit</AnchorButton>\r\n                                                    <AnchorButton onClick={(e) => this.removeProduct(productFlow.product?.code)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" >remove</AnchorButton>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <td colSpan={2}><strong>Total</strong></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).unit}</td>\r\n                                        {/* <td></td> */}\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).productPrice}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(TransactionSelling))","import * as url from '../constant/Url'\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport Filter from './../models/Filter';\r\nimport WebRequest from './../models/WebRequest';\r\nexport default class TransactionHistoryService {\r\n    private static instance?:TransactionHistoryService;\r\n    \r\n    static getInstance() :TransactionHistoryService\r\n    {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionHistoryService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    getProductSales = (filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/productsales\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getProductSalesDetail = (id:number, filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/productsalesdetail/\"+id);\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getCashflowDetail = (filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/cashflowdetail\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getTransactionData = function (transactionCode:string) {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/transactiondata/\" + transactionCode)\r\n        return commonAjaxPostCalls(endpoint, {});\r\n\r\n    }\r\n\r\n    getInventoriesQuantity = function (request = {}) {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/inventoriesquantity\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    getBalanceInfo = (request:any) => {\r\n        const endpoint = url.contextPath().concat(\"api/app/admin/balance\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from './../../../../services/TransactionHistoryService';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport Transaction from './../../../../models/Transaction';\r\nimport Modal from './../../../container/Modal';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Product from '../../../../models/Product';\r\nimport { totalUnitAndPrice } from '../BaseTransactionComponent';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\ninterface IState {\r\n    transactionData?: Transaction;\r\n    transactionCode?: string;\r\n    dataNotFound: boolean\r\n}\r\nclass TransactionDetail extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state: IState = { dataNotFound: false };\r\n    constructor(props: any) {\r\n        super(props, true);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Transaction Detail\";\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    recordLoaded = (response: WebResponse) => {\r\n        if (!response.transaction) {\r\n            throw new Error(\"Not found\");\r\n        }\r\n        response.transaction.productFlows = response.entities;\r\n        this.setState({ transactionData: response.transaction, dataNotFound: false });\r\n    }\r\n\r\n    recordNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.setState({ dataNotFound: true, transactionData: undefined });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.commonAjax(\r\n            this.transactionHistoryService.getTransactionData,\r\n            this.recordLoaded,\r\n            this.recordNotLoaded,\r\n            this.state.transactionCode\r\n        )\r\n    }\r\n    setTransactionCode = (e) => {\r\n        this.setState({ transactionCode: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"TransactionDetail\" className=\"container-fluid\">\r\n                <h2>Transaction Detail Page</h2>\r\n                <div className=\"row\">\r\n                    <form className=\"col-md-6\" onSubmit={this.onSubmit}>\r\n                        <Modal title=\"Transaction Info\"\r\n                            footerContent={\r\n                                <Fragment>\r\n                                    <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/transaction\" className=\"btn btn-secondary\" >Transactions Record</AnchorWithIcon>\r\n                                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Search\" />\r\n                                </Fragment>\r\n                            }\r\n                        >\r\n                            <FormGroup label=\"Code\">\r\n                                <input required onChange={this.setTransactionCode} type=\"text\" placeholder=\"Transaction code\" className=\"form-control\" />\r\n                            </FormGroup>\r\n                        </Modal>\r\n                    </form>\r\n                    <div className=\"col-md-6\"></div>\r\n                    <div className=\"col-md-12\">\r\n                        <SimpleError show={this.state.dataNotFound == true} >Data not found</SimpleError>\r\n                        <TransactionData show={this.state.transactionData != undefined} transaction={this.state.transactionData} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst TransactionData = (props) => {\r\n    if (props.show == false) return null;\r\n    const transaction: Transaction = props.transaction;\r\n    const productFlows: ProductFlow[] = transaction.productFlows ? transaction.productFlows: [];\r\n    const isSelling = transaction.type == 'SELLING';\r\n    \r\n    return (\r\n        <Modal title=\"Transaction Data\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <FormGroup label=\"Code\" orientation='horizontal'>\r\n                        {transaction.code}\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Type\" orientation='horizontal'>\r\n                        {transaction.type}-{transaction.mode}\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Date\" orientation='horizontal'>\r\n                        {new Date(transaction.transactionDate ?? new Date()).toString()}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {isSelling ?\r\n                        <FormGroup label=\"Customer\" orientation='horizontal'>\r\n                            {transaction.customer?.name}\r\n                        </FormGroup> :\r\n                        <FormGroup label=\"Supplier\" orientation='horizontal'>\r\n                            {transaction.supplier?.name}\r\n                        </FormGroup>\r\n                    }\r\n\r\n                    <FormGroup label=\"User\" orientation='horizontal'>\r\n                        {transaction.user?.displayName}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <h3>Products</h3>\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>Name</th>\r\n                                <th>Quantity</th>\r\n                                <th>Unit</th>\r\n                                <th>@Price</th>\r\n                                <th>Total Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {productFlows.map((productFlow, i)=>{\r\n                                const product:Product = productFlow.product?? new Product();\r\n                                const price = productFlow.price;\r\n                                return (\r\n                                    <tr key={\"pf-tr-\"+i}>\r\n                                        <td>{i+1}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{beautifyNominal(productFlow.count)}</td>\r\n                                        <td>{product.unit?.name}</td>\r\n                                        <td>{beautifyNominal(price)}</td>\r\n                                        <td>{beautifyNominal((price??0) * (productFlow.count??0))}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"alert alert-info text-left\">\r\n                        <FormGroup label=\"Total unit\">\r\n                        <p>{beautifyNominal(totalUnitAndPrice(productFlows).unit)}</p>\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Total price\">\r\n                        <p>{beautifyNominal(totalUnitAndPrice(productFlows).productFlowPrice)}</p>\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n} \r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionDetail))","\r\nimport React, { Component, Fragment } from 'react';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport Product from './../../../../models/Product';\r\nimport Modal from './../../../container/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport { updateCart } from './../../../../redux/actionCreators';\r\nimport { withRouter, Link } from 'react-router-dom'; \r\nimport AnchorButton from './../../../navigation/AnchorButton'; \r\nimport BaseComponent from './../../../BaseComponent'; \r\nclass IState {\r\n    showCart: boolean = false\r\n}\r\nclass ProductCatalogList extends BaseComponent\r\n{\r\n    state:IState = new IState();\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    showShoppingCart = (e) => {\r\n        this.setState({ showCart: true });\r\n    }\r\n    hideShoppingCart = (e) => {\r\n        this.setState({ showCart: false });\r\n    }\r\n    getProductInCart = (id: any): Product | undefined => {\r\n        const cart = this.props.cart;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == id) {\r\n                return element;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    addOneToCart = (product: Product) => {\r\n\r\n        let productInCart = this.getProductInCart(product.id);\r\n        if (!productInCart) {\r\n            productInCart = Object.assign(new Product(), product);\r\n            productInCart.count = 0;\r\n        }\r\n        if (productInCart.count) {\r\n            productInCart.count++;\r\n        } else {\r\n            productInCart.count = 1;\r\n        }\r\n        if ((product.count??0) < productInCart.count) {\r\n            this.showError(\"Quantity insufficient! \"+product.count+ \" vs \"+productInCart.count);\r\n            return;\r\n        }\r\n        this.setProductToCart(productInCart);\r\n       \r\n    }\r\n    reduceOneFromCart = (product: Product) => {\r\n        let productInCart = this.getProductInCart(product.id);\r\n        if (!productInCart) {\r\n           return;\r\n        }\r\n        if (productInCart.count && productInCart.count > 0) {\r\n            productInCart.count--;\r\n        } else {\r\n            productInCart.count = 0;\r\n        }\r\n        this.setProductToCart(productInCart);\r\n    }\r\n    resetProductCart = (product:Product) => {\r\n        const productCloned = Object.assign(new Product(), product);\r\n        productCloned.count = 0;\r\n        this.setProductToCart(productCloned);\r\n    }\r\n    resetAllShoppingCart = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Reset Shopping Cart?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.props.updateCart([], app, app.parentApp ); \r\n            }\r\n        })\r\n        \r\n    }\r\n    getShoppingCartCounts = () => {\r\n       return Product.countSummary(this.props.cart);\r\n\r\n    }\r\n    setProductToCart = (product: Product) => {\r\n        // console.debug(\"SET PRODUCT TO CART: \", product);\r\n        const cart = this.props.cart\r\n        let found = false;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == product.id) {\r\n                cart[i] = product;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            cart.push(product);\r\n        }\r\n        this.props.updateCart(cart, this, this.parentApp ); \r\n    } \r\n    render() {\r\n        const props = this.props;\r\n        const showCart: boolean = this.state.showCart;\r\n        return (\r\n            <Modal title=\"Product List\">\r\n                <div className=\"btn-group\" style={{ marginBottom: '5px' }}>\r\n                    <AnchorButton onClick={this.showShoppingCart} show={showCart == false} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-angle-down\">Show Shopping Cart</AnchorButton>\r\n                    <AnchorButton onClick={this.hideShoppingCart} show={showCart == true} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-angle-up\">Hide Shopping Cart</AnchorButton>\r\n                    <AnchorButton onClick={this.resetAllShoppingCart} show={showCart == true} className=\"btn btn-danger btn-sm\" iconClassName=\"fas fa-cart-arrow-down\">Reset Cart</AnchorButton>\r\n                    <AnchorButton show={showCart == true} className=\"btn btn-warning btn-sm\" >{this.getShoppingCartCounts()}</AnchorButton>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {props.products.map((product:Product) => {\r\n                        const imgName = product.imageUrl ? product.imageUrl.split(\"~\")[0] ?? 'Default.bmp' : 'Default.bmp';\r\n                        const productInCart = this.getProductInCart(product.id);\r\n                        return (\r\n                            <div key={\"product_catalog_\"+product.id} className=\"col-md-2 catalog-item rounded border\">\r\n                                <img className=\"rounded img-fluid\" src={baseImageUrl + imgName} /> \r\n                                <Link to={\"/catalog/product/\"+product.code}\r\n                                //  target=\"_blank\" \r\n                                 ><h6>{product.name}</h6></Link>\r\n                                <span className=\"text-info\"><strong>{beautifyNominal(product.price)}</strong></span>\r\n                                {props.withStock ? <span style={{ marginLeft: '5px' }} className={(product.count??0)>0?'badge badge-warning text-dark':'badge badge-dark'}>{product.count}</span> : null}\r\n                                {showCart ?\r\n                                    <div><div className=\"btn-group\">\r\n                                            <AnchorButton onClick={(e)=>this.addOneToCart(product)} iconClassName=\"fas fa-plus\" className=\"btn btn-primary btn-sm\" />\r\n                                            <AnchorButton className=\"btn btn-outline-info btn-sm\"><strong>{productInCart?.count??0}</strong></AnchorButton>\r\n                                            <AnchorButton onClick={(e)=>this.reduceOneFromCart(product)} iconClassName=\"fas fa-minus\" className=\"btn btn-primary btn-sm\" />\r\n                                            <AnchorButton onClick={(e)=>this.resetProductCart(product)} iconClassName=\"fas fa-sync-alt\" className=\"btn btn-warning btn-sm\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    : null}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    updateCart: (cart: Product[], ...apps:any[] ) => dispatch(updateCart(cart, ...apps)),\r\n})\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ProductCatalogList))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport '../Catalog.css';\r\nimport CatalogService from './../../../../services/CatalogService';\r\nimport Product from './../../../../models/Product';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Modal from '../../../container/Modal';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Category from './../../../../models/Category';\r\nimport NavigationButtons from '../../../navigation/NavigationButtons';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport ProductCatalogList from './ProductCatalogList';\r\nclass IState {\r\n    products: Product[] = []; \r\n    filter: Filter = {\r\n        limit: 20,\r\n        page: 0,\r\n        useExistingFilterPage: false,\r\n        orderBy: 'name',\r\n        orderType: 'asc'\r\n    };\r\n    fieldsFilter: {} = {\r\n        withStock: true,\r\n        withCategories: true,\r\n    };\r\n    categories: Category[] = [];\r\n    totalData: number = 0;\r\n    dataNotFound: boolean = false;\r\n}\r\nclass ProductCatalog extends BaseComponent {\r\n    catalogService: CatalogService = CatalogService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    productNotLoaded = (e: any) => {\r\n        this.setState({ totalData: 0, products: [], dataNotFound: true });\r\n    }\r\n    productsLoaded = (response: WebResponse) => {\r\n        if (response.entities == undefined) {\r\n            this.productNotLoaded(response);\r\n            return;\r\n        }\r\n        if (this.state.fieldsFilter['withCategories'] == true) {\r\n            this.setState({ totalData: response.totalData, dataNotFound: false, products: response.entities, categories: response.generalList });\r\n        } else {\r\n            this.setState({ totalData: response.totalData, dataNotFound: false, products: response.entities });\r\n        }\r\n    }\r\n    loadProducts(page: number | undefined = 0) {\r\n        const filter = this.state.filter;\r\n        if (page != undefined && this.state.filter.useExistingFilterPage == false) {\r\n            filter.page = page;\r\n        }\r\n        filter.fieldsFilter = this.state.fieldsFilter;\r\n        const withProgess = filter.fieldsFilter['withStock'] == true;\r\n\r\n        this.doAjax(\r\n            this.catalogService.getProductList, withProgess,\r\n            this.productsLoaded, this.productNotLoaded,\r\n            filter,\r\n        )\r\n        filter.useExistingFilterPage = false;\r\n        this.setState({ filter: filter });\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Product Catalog\";\r\n        this.loadProducts(0);\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        this.loadProducts(0);\r\n    }\r\n    setFieldsFilterValue = (e) => {\r\n        const input: HTMLInputElement = e.target;\r\n        let name: string = input.name;\r\n        let value: any;\r\n\r\n        if (input.type == 'checkbox') {\r\n            value = input.checked == true;\r\n        } else {\r\n            value = input.value;\r\n        }\r\n        const fieldsFilter = this.state.fieldsFilter;\r\n        if (value == undefined || new String(value).trim() == \"\") {\r\n            if (fieldsFilter[name])\r\n                delete fieldsFilter[name];\r\n        } else {\r\n            fieldsFilter[name] = value;\r\n        }\r\n        this.setState({ fieldsFilter: fieldsFilter });\r\n    }\r\n    setFilterPage = (value: any) => {\r\n        const page = parseInt(value);\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.useExistingFilterPage = true;\r\n        this.setState({ filter: filter });\r\n    }\r\n    setLimit = (limit: number) => {\r\n        const filter = this.state.filter;\r\n        filter.limit = limit;\r\n        this.setState({ filter: filter });\r\n    }\r\n    setOrder = (e) => {\r\n        const value = e.target.value;\r\n        const filter = this.state.filter;\r\n        if (value != '') {\r\n            const rawOrder: string[] = new String(value).split(\"-\");\r\n            filter.orderBy = rawOrder[0];\r\n            filter.orderType = rawOrder[1];\r\n        } else {\r\n            delete filter.orderBy;\r\n            delete filter.orderType;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    render() {\r\n        const products: Product[] = this.state.products;\r\n        return (\r\n            <div id=\"ProductCatalog\" className=\"container-fluid\">\r\n                <h2>Product Catalog</h2>\r\n                <form onSubmit={this.filter} >\r\n                    \r\n                    <Modal toggleable={true} title=\"Filter\" footerContent={\r\n                        <input type=\"submit\" className=\"btn btn-primary\" />\r\n                    }  >\r\n                        <div className=\"row\">\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-6\" label=\"Name\">\r\n                                <input onChange={this.setFieldsFilterValue} defaultValue={this.state.fieldsFilter['name']} name=\"name\" placeholder=\"Product Name\" className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Order By\">\r\n                                <select onChange={this.setOrder} className=\"form-control\">\r\n                                    <option value=\"name-asc\">Name [A-Z]</option>\r\n                                    <option value=\"name-desc\">Name [Z-A]</option>\r\n                                    <option value=\"price-asc\">Price [Cheap]</option>\r\n                                    <option value=\"price-desc\">Price [Expensive]</option>\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Category\">\r\n                                <select onChange={this.setFieldsFilterValue} defaultValue={this.state.fieldsFilter['category,id[EXACTS]']} className=\"form-control\" name=\"category,id[EXACTS]\">\r\n                                    <option value=\"\">All</option>\r\n                                    {this.state.categories.map(category => {\r\n                                        return <option key={\"category-opt-\"+category.id} value={category.id}>{category.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"With Stock\">\r\n                                <input onChange={this.setFieldsFilterValue} defaultChecked={this.state.fieldsFilter['withStock'] == true} type=\"checkbox\" name=\"withStock\" />\r\n                                <label style={{ paddingLeft: '5px' }}>{this.state.fieldsFilter['withStock'] == true ? \"Yes\" : \"No\"}</label>\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Go To Page\">\r\n                                <input name=\"page\" min=\"1\" type=\"number\" onChange={\r\n                                    (e) => this.setFilterPage(parseInt(e.target.value) - 1)\r\n                                } defaultValue={(this.state.filter.page ?? 0) + 1} className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Displayed Item\">\r\n                                <input name=\"limit\" min=\"1\" type=\"number\" onChange={\r\n                                    (e) => this.setLimit(parseInt(e.target.value))\r\n                                } defaultValue={this.state.filter.limit} className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Total Data\">\r\n                                <label>{this.state.totalData}</label>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Modal>\r\n                </form>\r\n                <SimpleError show={this.state.dataNotFound}>Data not found</SimpleError>\r\n                <NavigationButtons limit={this.state.filter.limit ?? 20} activePage={this.state.filter.page ?? 0}\r\n                    totalData={this.state.totalData} onClick={(page: number) => this.loadProducts(page)} />\r\n                <ProductCatalogList app={this.parentApp} products={products} withStock={this.state.fieldsFilter['withStock']} />\r\n            </div>\r\n        )\r\n    }\r\n} \r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(ProductCatalog))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Product from './../../../models/Product';\r\nimport SimpleError from '../../alert/SimpleError';\r\nimport Modal from '../../container/Modal';\r\nimport { beautifyNominal } from '../../../utils/StringUtil';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport { updateCart } from './../../../redux/actionCreators';\r\n\r\nclass CartList extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Shopping Cart List\";\r\n    }\r\n    removeFromCart = (product:Product) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Remove \"+product.name+\" from shopping list?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.doRemoveFromCart(product);\r\n            }\r\n        })\r\n    }\r\n    doRemoveFromCart = (product:Product) => {\r\n        const cart:Product[] = this.props.cart\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == product.id) {\r\n                cart.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.props.updateCart(cart, this, this.parentApp );\r\n    }\r\n    render() {\r\n        const cartList: Product[] = this.props.cart;\r\n        let totalUnit: number = 0, totalPrice: number = 0;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Shopping Cart List</h2>\r\n                <SimpleError show={cartList.length == 0}>No shopping item</SimpleError>\r\n\r\n                <table className=\"table table-fluid table-striped\" style={{display: cartList.length>0?'block':'none'}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th colSpan={2}>Product</th>\r\n                            <th>Qty</th>\r\n                            <th>Unit</th>\r\n                            <th>Price</th>\r\n                            <th>Total Price</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {cartList.map((product, i) => {\r\n                            totalUnit += (product.count ?? 0);\r\n                            totalPrice += ((product.count ?? 0) * (product.price ?? 0));\r\n                            let imgName = Product.getDefaultPicture(product);\r\n                            const imgUrl = baseImageUrl + imgName;\r\n                            return (\r\n                                <tr key={\"cart-\" + i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td><img height=\"150\" src={imgUrl} /></td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{beautifyNominal(product.count)}</td>\r\n                                    <td>{product.unit?.name}</td>\r\n                                    <td>{beautifyNominal(product.price)}</td>\r\n                                    <td>{beautifyNominal((product.count ?? 0) * (product.price ?? 0))}</td>\r\n                                    <td>\r\n                                        <AnchorButton onClick={(e)=>this.removeFromCart(product)} iconClassName=\"fas fa-times\" className=\"btn btn-outline-danger\"/>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        <tr>\r\n                            <td colSpan={3}>Total</td>\r\n                            <td>{beautifyNominal(totalUnit)}</td>\r\n                            <td colSpan={2}></td>\r\n                            <td>{beautifyNominal(totalPrice)}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    updateCart: (cart: Product[], ...apps:any[] ) => dispatch(updateCart(cart, ...apps)),\r\n})\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(CartList))","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nimport Card from './Card';\r\nclass IProps {\r\n    imageUrls: string[] = [];\r\n}\r\nclass IState {\r\n    active: number = 0\r\n}\r\nexport default class Carousel extends Component<IProps, IState>\r\n{\r\n    state: IState = new IState();\r\n    imageLength: number = 0;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.imageLength = props.imageUrls.length;\r\n    }\r\n\r\n    getCurrentImage = (): string => {\r\n        return this.props.imageUrls[this.state.active];\r\n    }\r\n    prev = (e) => {\r\n        let currentActive = this.state.active;\r\n        if (currentActive == 0){\r\n            currentActive = this.imageLength-1;\r\n        } else {\r\n            currentActive--;\r\n        }\r\n        this.setState({active:currentActive});\r\n\r\n    }\r\n    next = (e) => {\r\n        let currentActive = this.state.active;\r\n        if (currentActive == this.imageLength-1){\r\n            currentActive = 0;\r\n        } else {\r\n            currentActive++;\r\n        }\r\n        this.setState({active:currentActive});\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Card className=\"container-fluid bg-secondary text-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <AnchorButton className=\"btn btn-light\" iconClassName=\"fas fa-arrow-left\" onClick={this.prev} />\r\n                    </div>\r\n                    <div className=\"col-md-8\" style={{overflowX:'scroll'}}>\r\n                        <img height=\"200\" src={this.getCurrentImage()} />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <AnchorButton className=\"btn btn-light\" iconClassName=\"fas fa-arrow-right\" onClick={this.next} />\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CatalogService from './../../../../services/CatalogService';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport Product from './../../../../models/Product';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Modal from './../../../container/Modal';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nimport Carousel from './../../../container/Carousel';\r\ninterface IState { product?:Product, notFound:boolean }\r\nclass ProductCatalogDetail extends BaseComponent {\r\n    catalogService:CatalogService = CatalogService.getInstance();\r\n    state:IState = {notFound:false}\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    getCode():string {\r\n        return this.props.match.params.code;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (response.entities == undefined || response.entities.length  == 0){\r\n            throw new Error(\"not found\");\r\n        }\r\n        this.setState({\r\n            product:response.entities[0], notFound:true\r\n        })\r\n        document.title = this.state.product?.name??\"Detail\";\r\n    }\r\n    recordNotLoaded = (e:any) => {\r\n        console.error(e);\r\n        this.setState({notFound:true});\r\n    }\r\n    loadProductDetail = () => {\r\n        this.commonAjax(\r\n            this.catalogService.getProductDetail,\r\n            this.recordLoaded,\r\n            this.recordNotLoaded,\r\n            this.getCode()\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.loadProductDetail();\r\n    }\r\n    render() {\r\n        if (!this.getCode() || this.getCode() == \"\") {\r\n            return <SimpleError>Not Found</SimpleError>\r\n        }\r\n        return (<div className=\"container-fluid\">\r\n            <h2>Product Detail</h2>\r\n            {this.state.product?\r\n            <Modal title={this.state.product.name}>\r\n                <Carousel imageUrls={Product.getPictureNames(this.state.product, baseImageUrl)} />\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Unit</th>\r\n                            <th>Category</th>\r\n                            <th>Current Stock</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{this.state.product.name}</td>\r\n                            <td>{this.state.product.description}</td>\r\n                            <td>{this.state.product.unit?.name}</td>\r\n                            <td>{this.state.product.category?.name}</td>\r\n                            <td>{this.state.product.count}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Modal>\r\n            : <SimpleError  >Not Found</SimpleError>}\r\n            <AnchorWithIcon iconClassName=\"fas fa-angle-left\" to=\"/catalog/product\">Back</AnchorWithIcon>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductCatalogDetail);","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Filter from '../../../models/Filter';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport Loader from '../../loader/Loader';\r\nimport SimpleError from '../../alert/SimpleError';\r\ninterface IProps {\r\n    filter: Filter,\r\n    onChange: Function,\r\n    onSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\r\n    transactionYears:number[]\r\n}\r\nclass IState {\r\n    error:boolean = false;\r\n}\r\nexport default class DashboardFilter extends Component<IProps, IState> {\r\n    state = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        this.props.onChange(e);\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.filter.yearTo == undefined || this.props.filter.year == undefined) {\r\n            return;\r\n        }\r\n        if (this.props.filter.year > this.props.filter.yearTo) {\r\n            this.setState({error:true});\r\n            return;\r\n        }\r\n        this.setState({error:false});\r\n        this.props.onSubmit(e);\r\n    }\r\n    render() {\r\n        const transactionYears: number[]  = this.props.transactionYears;\r\n        return (\r\n            <form onSubmit={this.submit}>\r\n                <Modal toggleable={true} title=\"Filter\" footerContent={\r\n                    <input type=\"submit\" className=\"btn btn-primary\" />\r\n                }>\r\n                    <div className=\"row  \">\r\n                        <div className=\"col-md-5\">\r\n                            <FormGroup label=\"Month\">\r\n                                <select className=\"form-control\" name=\"month\" onChange={this.updatePeriodFilter} value={this.props.filter.month} >\r\n                                    {MONTHS.map((monthName, i) => {\r\n                                        return <option value={i + 1}>{monthName} ({i + 1})</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Year\">\r\n                                <select className=\"form-control\" name=\"year\" onChange={this.updatePeriodFilter} value={this.props.filter.year} >\r\n                                    {transactionYears.map(year => {\r\n                                        return <option value={year}>{year}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center\">\r\n                            <div style={{ width: '75px', height: '75px', display: 'flex' }} className=\"bg-secondary text-light rounded-circle\">\r\n                                <h1 style={{ margin: 'auto' }}><i className=\"fas fa-angle-right\"></i></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                            <FormGroup label=\"Month\">\r\n                                <select className=\"form-control\" name=\"monthTo\" onChange={this.updatePeriodFilter} value={this.props.filter.monthTo} >\r\n                                    {MONTHS.map((monthName, i) => {\r\n                                        return <option value={i + 1}>{monthName} ({i + 1})</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Year\">\r\n                                <select className=\"form-control\" name=\"yearTo\" onChange={this.updatePeriodFilter} value={this.props.filter.yearTo}>\r\n                                    {transactionYears.map(year => {\r\n                                        return <option value={year}>{year}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <SimpleError show={this.state.error} >Invalid Year</SimpleError>\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n}","import DataSet from './DataSet';\r\nexport default class Cashflow implements DataSet {\r\n\r\n    amount: number = 0;\r\n    count: number = 0;\r\n    module: string = 'SELLING';\r\n    year: number = new Date().getFullYear();\r\n    month: number = 1;\r\n    getAmount: () => number;\r\n    getLabel: () => string;\r\n    constructor() {\r\n        this.getAmount = () => {\r\n            return this.amount;\r\n        }\r\n       this.getLabel = () => {\r\n            return this.month+\"-\"+this.year;\r\n        }\r\n    }\r\n    \r\n   \r\n    static toDataSet = (cashflow:Cashflow) : DataSet => {\r\n        return Object.assign(new Cashflow(), cashflow);\r\n    }\r\n    static toDataSets = (cashflows:Cashflow[]) : DataSet[] => {\r\n        const dataSets:DataSet[]  = new Array<DataSet>();\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            dataSets.push(Cashflow.toDataSet(element));\r\n        }\r\n        return dataSets;\r\n    }\r\n    static maxAmount = (cashflows: Cashflow[]): number => {\r\n        let max = 0;\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            if (element.amount > max) {\r\n                max = element.amount;\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Cashflow from '../../../models/Cashflow';\r\nimport { beautifyNominal, uniqueId } from '../../../utils/StringUtil';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport './ChartSvg.css';\r\nimport FormGroup from '../../form/FormGroup'; \r\nimport DataSet from '../../../models/DataSet';\r\ninterface IProps {\r\n    dataSet: DataSet[],\r\n    updated: Date,\r\n    onClick?:(index:number)=>void\r\n    onUnHover?:()=>void\r\n}\r\nclass IState {\r\n    hoveredIndex: number = -1;\r\n    updated: Date = new Date();\r\n}\r\nexport default class DashboardBarChart extends Component<IProps, IState>\r\n{\r\n    middleYAxisValue: number = 0;\r\n    bottomYAxisValue: number = 0;\r\n    offsetX: number = 100;\r\n    offsetY: number = 50;\r\n    baseYIndex: number = 200;\r\n    baseHeight: number = 150;\r\n    lineWidth: number = 0;\r\n    maxValue: number = 0;\r\n    state: IState = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.updateSizes();\r\n\r\n    }\r\n    maxAmount:(cashflows: DataSet[])=>number = (cashflows: DataSet[]): number => {\r\n        let max = 0;\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            \r\n            if (element.getAmount() > max) {\r\n                max = element.getAmount();\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n    updateSizes = () => {\r\n        this.maxValue = this.maxAmount(this.props.dataSet);\r\n        this.middleYAxisValue = Math.round(this.maxValue * 2 / 3);\r\n        this.bottomYAxisValue = Math.round(this.maxValue * 1 / 3);\r\n        this.lineWidth = (23) * (this.props.dataSet.length) + 100;\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateSizes();\r\n        if (this.props.updated != this.state.updated) {\r\n            this.setState({ updated: this.props.updated });\r\n        }\r\n    }\r\n    hover = (index: number) => {\r\n        this.setState({ hoveredIndex: index });\r\n        \r\n    }\r\n    onClick = (index:number) => {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(index);\r\n        }\r\n    }\r\n    unHover = () => {\r\n        this.setState({ hoveredIndex: -1 });\r\n        // if (this.props.onUnHover) {\r\n        //     this.props.onUnHover();\r\n        // }\r\n    }\r\n  \r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"border border-secondary\" style={{ minHeight: '300px', overflowX: 'scroll' }}>\r\n                    <svg onMouseOut={this.unHover} className=\"bg-light border\" version=\"1.1\" baseProfile=\"full\" width={this.offsetX * 2 + (23) * (props.dataSet.length)+ 100} height={300} xmlns=\"http://www.w3.org/2000/svg\">\r\n\r\n                        {props.dataSet.map((data, i) => {\r\n                            const percentage = (data.getAmount() / this.maxValue) * this.baseHeight;\r\n                            const labelY = this.baseYIndex + 15, labelX = this.offsetX + 10 + (23) * (i);\r\n                            const xTranslated = 0, yTranslated = 0;\r\n                            const transform = \"translate(\" + xTranslated + \",\" + yTranslated + \") rotate(-30,\" + labelX + \",\" + labelY + \")\";\r\n                            const hovered = i == this.state.hoveredIndex;\r\n                            return (\r\n                                <g style={hovered ? { cursor: 'pointer' } : {}} className=\"chart-group\"\r\n                                 onMouseOver={(e) => this.hover(i)} onClick={(e) => this.onClick(i)} onMouseOut={this.unHover} key={uniqueId() + \"-\" + i}>\r\n                                    <rect fill={hovered ? \"red\" : \"green\"} x={this.offsetX + (23) * (i)} y={this.baseYIndex - percentage} height={percentage} width={20} ></rect>\r\n                                    <text fill={hovered ? \"red\" : \"black\"} textAnchor=\"end\" fontSize={10} x={labelX} y={labelY} transform={transform}>{data.getLabel()}</text>\r\n                                    <circle cx={this.offsetX + (23) * (i + 1)} cy={this.baseYIndex} r=\"3\" fill=\"red\" />\r\n                                </g>\r\n                            )\r\n                        })}\r\n                        <rect name=\"base_axis_x\" x={this.offsetX} y={this.baseYIndex} height={2} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_top\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY} height={1} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_middle\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY + this.baseHeight * 1 / 3} height={1} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_bottom\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY + this.baseHeight * 2 / 3} height={1} width={this.lineWidth} />\r\n                        <rect name=\"base_axis_y\" x={this.offsetX} y={this.offsetY} height={this.baseHeight} width={2} />\r\n\r\n                        <text textAnchor=\"end\" name=\"top_val\" fontSize={10} x={this.offsetX} y={this.offsetY}>{beautifyNominal(this.maxValue)}</text>\r\n                        <text textAnchor=\"end\" name=\"middle_val\" fontSize={10} x={this.offsetX} y={this.offsetY + this.baseHeight * 1 / 3}>{beautifyNominal(this.middleYAxisValue)}</text>\r\n                        <text textAnchor=\"end\" name=\"bottom_val\" fontSize={10} x={this.offsetX} y={this.offsetY + this.baseHeight * 2 / 3}>{beautifyNominal(this.bottomYAxisValue)}</text>\r\n                    </svg>\r\n                </div>\r\n                <p><i className=\"fas fa-history\" /> {new Date(this.state.updated).toString()}</p> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component, Fragment, RefObject } from 'react';\r\nimport Card from '../../../container/Card';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Filter from './../../../../models/Filter';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Cashflow from './../../../../models/Cashflow';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport { uniqueId } from './../../../../utils/StringUtil';\r\nimport { transform } from 'typescript';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport { MONTHS } from './../../../../utils/DateUtil';\r\ninterface IProps {\r\n    cashflowData: WebResponse\r\n}\r\nclass IState {\r\n    activeSellingIndex: number = -1;\r\n    activePurchasingIndex: number = -1;\r\n}\r\nexport default class CashflowChart extends Component<IProps, IState>\r\n{\r\n    state: IState = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    getCashflowData = (): WebResponse => {\r\n        return this.props.cashflowData;\r\n    }\r\n    getPeriodString = () => {\r\n        const cashflowData = this.getCashflowData();\r\n        if (!cashflowData.filter) return \"\";\r\n        let filter: Filter = cashflowData.filter;\r\n        return MONTHS[(filter.month ?? 1) - 1] + \" \" + filter.year + \" - \" + MONTHS[(filter.monthTo ?? 1) - 1] + \" \" + filter.yearTo;\r\n    }\r\n    getSellingData = (): Cashflow | undefined => {\r\n        if (this.state.activeSellingIndex < 0) return undefined;\r\n        const list: Cashflow[] = this.props.cashflowData.sellings ?? [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (i == this.state.activeSellingIndex) return list[i];\r\n        }\r\n        return undefined;\r\n    }\r\n    getPurchasingData = (): Cashflow | undefined => {\r\n        if (this.state.activePurchasingIndex < 0) return undefined;\r\n        const list: Cashflow[] = this.props.cashflowData.purchasings ?? [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (i == this.state.activePurchasingIndex) return list[i];\r\n        }\r\n        return undefined;\r\n    }\r\n    setActiveSellingData = (i: number) => {\r\n        this.setState({ activeSellingIndex: i });\r\n    }\r\n    unSelectSellingData = () => {\r\n        this.setState({ activeSellingIndex: -1 });\r\n    }\r\n    setActivePurchasingData = (i: number) => {\r\n        this.setState({ activePurchasingIndex: i });\r\n    }\r\n    unSelectPurchasingData = () => {\r\n        this.setState({ activePurchasingIndex: -1 });\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n        const cashflowData = this.getCashflowData()\r\n        return (\r\n            <Card title=\"Cashflow\">\r\n                <FormGroup label=\"Period\" >{this.getPeriodString()}</FormGroup>\r\n                <div className=\"container-fluid\" >\r\n                    <h4>Selling</h4>\r\n                    <DashboardBarChart\r\n                        onClick={this.setActiveSellingData} onUnHover={this.unSelectSellingData}\r\n                        updated={cashflowData.date ?? new Date()} dataSet={Cashflow.toDataSets(cashflowData.sellings ?? [])} />\r\n                    <CashflowDetail cashflow={this.getSellingData()} />\r\n                    <h4>Purchasing</h4>\r\n                    <DashboardBarChart\r\n                        onClick={this.setActivePurchasingData} onUnHover={this.unSelectPurchasingData}\r\n                        updated={cashflowData.date ?? new Date()} dataSet={Cashflow.toDataSets(cashflowData.purchasings ?? [])} />\r\n                    <CashflowDetail cashflow={this.getPurchasingData()} />\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst CashflowDetail = (props: { cashflow?: Cashflow }) => {\r\n    const cashflow: Cashflow | undefined = props.cashflow;\r\n    if (!cashflow) return <div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n        <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\"/> Click the chart to see detail</div>\r\n    </div>;\r\n\r\n    return (<div className=\"row\" style={{ minHeight: '120px' }}>\r\n        <div className=\"col-md-6\"><FormGroup label=\"Module\"> {cashflow.module}</FormGroup></div>\r\n        <div className=\"col-md-6\"><FormGroup label=\"Period\">{MONTHS[cashflow.month - 1]} {cashflow.year}</FormGroup></div>\r\n        <div className=\"col-md-6\"> <FormGroup label=\"Count\">{beautifyNominal(cashflow.count)}</FormGroup></div>\r\n        <div className=\"col-md-6\"> <FormGroup label=\"Amount\">{beautifyNominal(cashflow.amount)}</FormGroup> </div>\r\n    </div >)\r\n}\r\n","import React from 'react'\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport TransactionHistoryService from './../../../../services/TransactionHistoryService';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport DashboardFilter from '../DashboardFilter';\r\nimport CashflowChart from './CashflowChart'; \r\nimport Spinner from '../../../loader/Spinner';\r\nconst date = new Date();\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year:  date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear()\r\n    };\r\n    cashflowData?: WebResponse = undefined\r\n}\r\nclass DashboardStatistic extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        this.loadStatistic();\r\n    }\r\n    cashflowDataLoaded = (response: WebResponse) => {\r\n        this.setState({ cashflowData: response });\r\n    }\r\n    cashflowDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n    }\r\n    loadStatistic = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getCashflowDetail,\r\n            this.cashflowDataLoaded,\r\n            this.cashflowDataNotLoaded,\r\n            this.state.filter\r\n        )\r\n    }\r\n\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadStatistic();\r\n    }\r\n\r\n    render() {\r\n        const cashflowData = this.state.cashflowData;\r\n        if (!cashflowData) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Statistics</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Statistics</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={cashflowData && cashflowData.transactionYears ? cashflowData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n                <CashflowChart cashflowData={cashflowData} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(DashboardStatistic))","import BaseEntity from './BaseEntity';\nimport Product from './Product';\nimport DataSet from './DataSet';\n\nexport default class ProductSales extends BaseEntity implements DataSet{\n\tproduct?:Product;\n\tsales?:number;\n\tmonth?:number;\n\tyear?:number;\n\tpercentage?:number;\n\tmaxValue?:number;\n\tmonthName?:string;\n\tgetAmount: () => number;\n    getLabel: () => string;\n    constructor() {\n\t\tsuper();\n        this.getAmount = () => {\n\t\t\treturn this.sales??0;\n        }\n       this.getLabel = () => {\n            return this.product?this.product.name??\"\":this.month+\"-\"+this.year;\n        }\n    }\n\tstatic toDataSet = (object:ProductSales) : DataSet => {\n        return Object.assign(new ProductSales(), object);\n    }\n    static toDataSets = (objects:ProductSales[]) : DataSet[] => {\n        const dataSets:DataSet[]  = new Array<DataSet>();\n        for (let i = 0; i < objects.length; i++) {\n            const element = objects[i];\n            dataSets.push(ProductSales.toDataSet(element));\n        }\n        return dataSets;\n    }\n    static sortBySales = (objects:ProductSales[]) : ProductSales[] => {\n        return objects.sort((p1, p2)=>{\n            return (p1.sales??0) - (p2.sales??0);\n        })\n    }\n    static sortBySalesDesc = (objects:ProductSales[]) : ProductSales[] => {\n        return objects.sort((p1, p2)=>{\n            return (p2.sales??0) - (p1.sales??0);\n        })\n    }\n}\n","import React, { Fragment } from 'react';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from '../../../../services/TransactionHistoryService';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport DashboardFilter from './../DashboardFilter';\r\nimport ProductSales from './../../../../models/ProductSales';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Modal from './../../../container/Modal';\r\nimport Carousel from '../../../container/Carousel';\r\nimport Product from '../../../../models/Product';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport Spinner from './../../../loader/Spinner';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nconst date: Date = new Date();\r\nconst DEFAULT_LIMIT: number = 50;\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year: date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear(),\r\n        page: 0,\r\n        limit: DEFAULT_LIMIT\r\n    };\r\n    sortType: string = \"asc\";\r\n    activeSalesDataIndex: number = -1;\r\n    salesData?: WebResponse = undefined\r\n}\r\nclass ProductSalesPage extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        const filter = this.state.filter;\r\n        filter.limit = DEFAULT_LIMIT;\r\n        this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    reload = (e) => {\r\n        e.preventDefault();\r\n        // const filter = this.state.filter;\r\n        // filter.limit = (filter.limit ?? 0) + 50;\r\n        // this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    salesDataLoaded = (response: WebResponse) => {\r\n        response.entities = ProductSales.sortBySalesDesc(response.entities ?? []);\r\n        this.setState({ salesData: response });\r\n    }\r\n    salesDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.validateLoginStatus();\r\n    }\r\n    loadSales = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getProductSales,\r\n            this.salesDataLoaded,\r\n            this.salesDataNotLoaded,\r\n            this.state.filter\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadSales();\r\n    }\r\n    setActiveSalesData = (i: number) => {\r\n        this.setState({ activeSalesDataIndex: i });\r\n    }\r\n    unSelectSalesData = () => {\r\n        this.setState({ activeSalesDataIndex: -1 });\r\n    }\r\n    getActiveSalesData = () => {\r\n        const salesList = this.state.salesData ? this.state.salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < salesList.length; i++) {\r\n            const element = salesList[i];\r\n            if (this.state.activeSalesDataIndex == i) return element;\r\n        }\r\n        return undefined;\r\n    }\r\n    sort = (e) => {\r\n        const salesData = this.state.salesData;\r\n        if (!salesData) {\r\n            return;\r\n        }\r\n        const salesList = salesData ? salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return;\r\n        }\r\n        let sortType: string;\r\n        if (this.state.sortType == \"asc\") {\r\n            salesData.entities = ProductSales.sortBySales(salesList);\r\n            sortType = \"desc\";\r\n        } else {\r\n            salesData.entities = ProductSales.sortBySalesDesc(salesList);\r\n            sortType = \"asc\";\r\n        }\r\n        this.setState({ salesData: salesData, sortType: sortType, activeSalesDataIndex: -1 });\r\n    }\r\n    render() {\r\n        const salesData = this.state.salesData;\r\n        if (!salesData) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Product Sales</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        const showBtnLoadMore = (this.state.filter?.limit ?? 0) < (this.state.salesData?.totalData ?? 0) + 1;\r\n        const btnSortIconClass = this.state.sortType == \"asc\" ? \"fas fa-sort-amount-down-alt\" : \"fas fa-sort-amount-up\";\r\n        return (\r\n            <div className=\"container-fluid\" style={{ paddingBottom: '10px' }}>\r\n                <h2>Product Sales</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={salesData && salesData.transactionYears ? salesData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n                <Modal title=\"Options\">\r\n                    <div className=\"inline-buttons-parent\">\r\n                        <AnchorButton className=\"btn btn-secondary btn-sm\">Loaded Product <span className=\"badge badge-light\">{salesData.entities?.length}</span></AnchorButton>\r\n                        <AnchorButton className=\"btn btn-secondary btn-sm\">Total Product <span className=\"badge badge-light\">{salesData.totalData}</span></AnchorButton>\r\n                        <AnchorButton className=\"btn btn-dark btn-sm\" iconClassName={btnSortIconClass} onClick={this.sort} >Sort</AnchorButton>\r\n                        <form style={{ marginTop: '10px' }} className=\"input-group\" onSubmit={this.reload} >\r\n                            <input placeholder=\"Product Count\" disabled className=\"form-control\" />\r\n                            <input placeholder=\"record count\" name=\"limit\" onChange={this.updatePeriodFilter} value={this.state.filter.limit} type=\"number\" min={1} max={this.state.salesData?.totalData} className=\"form-control\" />\r\n                            {showBtnLoadMore ? <button type=\"submit\" className=\"btn btn-dark btn-sm\" ><i className=\"fas fa-sync-alt\" /> Reload</button>\r\n                                : null}\r\n                        </form>\r\n                    </div>\r\n                </Modal>\r\n                <DashboardBarChart\r\n                    onClick={this.setActiveSalesData} onUnHover={this.unSelectSalesData}\r\n                    updated={salesData.date ?? new Date()} dataSet={ProductSales.toDataSets(salesData?.entities ?? [])} />\r\n                <ProductSalesDetail productSales={this.getActiveSalesData()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductSalesDetail = (props: { productSales?: ProductSales }) => {\r\n    const productSales: ProductSales | undefined = props.productSales;\r\n    if (!productSales || !productSales.product)\r\n        return (<div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n            <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\" /> Click the chart to see detail</div>\r\n        </div>);\r\n\r\n    return (<div className=\"row\" style={{ minHeight: '120px' }}>\r\n        <div className=\"col-md-6\">\r\n            <Carousel imageUrls={Product.getPictureNames(productSales.product, baseImageUrl)} />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n            <FormGroup label=\"Name\">{productSales.product ? productSales.product.name : \"\"}</FormGroup>\r\n            <FormGroup label=\"Sales\">{beautifyNominal(productSales.sales)}</FormGroup>\r\n            <FormGroup label=\"Option\">\r\n                <AnchorWithIcon attributes={{target:\"_blank\"}} to={\"/dashboard/productsales/\"+productSales.product.id} >Detail</AnchorWithIcon>\r\n            </FormGroup>\r\n        </div>\r\n    </div >);\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(ProductSalesPage))","import React, { Fragment } from 'react';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from '../../../../services/TransactionHistoryService';\r\nimport Filter from '../../../../models/Filter';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport DashboardFilter from '../DashboardFilter';\r\nimport ProductSales from '../../../../models/ProductSales';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Modal from '../../../container/Modal';\r\nimport Carousel from '../../../container/Carousel';\r\nimport Product from '../../../../models/Product';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport Spinner from '../../../loader/Spinner';\r\nimport SimpleError from '../../../alert/SimpleError';\r\nconst date: Date = new Date();\r\nconst DEFAULT_LIMIT: number = 50;\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year: date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear(),\r\n        page: 0,\r\n        limit: DEFAULT_LIMIT\r\n    };\r\n    sortType: string = \"asc\";\r\n    activeSalesDataIndex: number = -1;\r\n    salesData?: WebResponse = undefined;\r\n    notFound:boolean = false;\r\n}\r\nclass ProductSalesDetailPage extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        const filter = this.state.filter;\r\n        filter.limit = DEFAULT_LIMIT;\r\n        this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    salesDataLoaded = (response: WebResponse) => {\r\n        this.setState({ salesData: response, notFound: false });\r\n    }\r\n    salesDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.setState({ salesData:undefined, notFound: true});\r\n        this.validateLoginStatus();\r\n    }\r\n    getProductId = (): number => {\r\n        return this.props.match.params.id;\r\n    }\r\n    getProduct = (): Product | undefined => {\r\n        if (!this.state.salesData || !this.state.salesData.entity) {\r\n            return undefined;\r\n        }\r\n        const product = this.state.salesData?.entity;\r\n        return Object.assign(new Product(), product);\r\n    }\r\n    loadSales = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getProductSalesDetail,\r\n            this.salesDataLoaded,\r\n            this.salesDataNotLoaded,\r\n            this.getProductId(),\r\n            this.state.filter\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadSales();\r\n    }\r\n    setActiveSalesData = (i: number) => {\r\n        this.setState({ activeSalesDataIndex: i });\r\n    }\r\n    unSelectSalesData = () => {\r\n        this.setState({ activeSalesDataIndex: -1 });\r\n    }\r\n    getActiveSalesData = () => {\r\n        const salesList = this.state.salesData ? this.state.salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < salesList.length; i++) {\r\n            const element = salesList[i];\r\n            if (this.state.activeSalesDataIndex == i) return element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.notFound) {\r\n            return <SimpleError>Not Found</SimpleError>\r\n        }\r\n        const salesData = this.state.salesData;\r\n        const product: Product | undefined = this.getProduct();\r\n        if (!salesData || !product) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Product Sales : Loading</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\" style={{ paddingBottom: '10px' }}>\r\n                <h2>Product Sales : {product.name}</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={salesData && salesData.transactionYears ? salesData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n\r\n                <DashboardBarChart\r\n                    onClick={this.setActiveSalesData} onUnHover={this.unSelectSalesData}\r\n                    updated={salesData.date ?? new Date()} dataSet={ProductSales.toDataSets(salesData?.entities ?? [])} />\r\n                <ProductSalesDetail productSales={this.getActiveSalesData()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductSalesDetail = (props: { productSales?: ProductSales }) => {\r\n    const productSales: ProductSales | undefined = props.productSales;\r\n    if (!productSales)\r\n        return (<div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n            <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\" /> Click the chart to see detail</div>\r\n        </div>);\r\n\r\n    return (<div  style={{ minHeight: '120px' }}>\r\n        <FormGroup label=\"Period\">{productSales.monthName} {productSales.year}</FormGroup>\r\n        <FormGroup label=\"Sales\">{beautifyNominal(productSales.sales)}</FormGroup>\r\n\r\n    </div>)\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(ProductSalesDetailPage))","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'; \r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass SettingsMain extends BaseMainMenus \r\n{\r\n    constructor(props:any){\r\n        super(props, \"Settings\", true);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"SettingsMain\" className=\"container-fluid\">\r\n                <h2>Settings</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.displayName}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(SettingsMain))","import BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tusername?:string;\n\tdisplayName?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\tauthorities?:any[];\n\trequestId?:string;\n\tprocessingDate?:Date;\n\n}\n","\r\nimport User from './../models/User';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nexport default class UserService\r\n{\r\n    private static instance?:UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user:User) => {\r\n        \r\n        const request:WebRequest = {\r\n           user:user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/app/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","import React from 'react'\r\nimport AnchorButton from './../../navigation/AnchorButton';\r\nexport const EditField = ({ edit, name, toggleInput, value, updateProperty, ...props }) => {\r\n    return (edit == true ?\r\n        <PropertyInput updateProperty={updateProperty} name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n        :\r\n        <PropertyLabel name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n    )\r\n}\r\nconst PropertyInput = ({ name, toggleInput, value, updateProperty, type }) => {\r\n    return (<div className=\"row\">\r\n        <p className=\"col-md-10\"><input type={type ?? 'text'} name={name} onChange={updateProperty} value={value} className=\"form-control\" /></p>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }}\r\n                onClick={toggleInput} className=\"btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst PropertyLabel = ({ name, toggleInput, value, type }) => {\r\n\r\n    return (<div className=\"row\" >\r\n        <div className=\"col-md-10\">\r\n            <p style={{ backgroundColor: type == 'color' ? value : '#fff' }} >{type == 'color' ? 'Sample Color' : value}</p>\r\n            {type == 'color' ? <p>{value}</p> : null}\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport User from './../../../models/User';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setLoggedUser } from './../../../redux/actionCreators';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport UserService from './../../../services/UserService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport { resizeImage, toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField } from './helper';\r\nimport { base64StringFileSize, fileExtension } from './../../../utils/StringUtil';\r\ninterface EditField { username: boolean, displayName: boolean, password: boolean, profileImage: boolean }\r\nclass IState {\r\n    user?: User = undefined;\r\n    editFields: EditField = {\r\n        username: false,\r\n        displayName: false,\r\n        password: false,\r\n        profileImage: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        return this.editFields.profileImage || this.editFields.username || this.editFields.displayName || this.editFields.password;\r\n    }\r\n}\r\nclass UserProfile extends BaseComponent {\r\n\r\n    userService: UserService = UserService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.state.user = Object.assign(new User(), this.getLoggedUser());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"User Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return;\r\n\r\n        user[target.name] = target.value;\r\n        this.setState({ user: user });\r\n    }\r\n    updateProfleImage = (e:ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        const fileName:string|undefined = target.files ? target.files[0].name : undefined;\r\n        if (!fileName) return;\r\n        toBase64v2(target).then(function(imageData) {\r\n            const fileSize = base64StringFileSize(imageData);\r\n            let ratio:number = 1.0;\r\n            if (fileSize > 10000) {\r\n                ratio = 10000 / fileSize;\r\n            }\r\n            resizeImage(imageData, ratio, fileExtension(fileName))\r\n                .then(function (resizedData) {\r\n                    app.setProfileImage(resizedData);\r\n                });\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData:string) => {\r\n        const user:User|undefined = this.state.user;\r\n        if (!user) return;\r\n        user.profileImage = imageData;\r\n        this.setState({user:user});\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const user: User | undefined = this.state.user;\r\n        const actualLoggedUser: User | undefined = this.getLoggedUser();\r\n        if (null == target || !user || !actualLoggedUser) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            user[propertyName] = actualLoggedUser[propertyName];\r\n        }\r\n        this.setState({ user: user, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const user: User | undefined = this.getUserEditedData();\r\n        if (!user) return;\r\n        this.commonAjax(\r\n            this.userService.updateProfile,\r\n            this.profileSaved, this.showCommonErrorAlert,\r\n            user\r\n        )\r\n    }\r\n    getUserEditedData = (): User | undefined => {\r\n        const user: User | undefined = this.state.user;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!user) return undefined;\r\n        const editedUser: User = new User();\r\n        for (const key in editFields) {\r\n            const element:boolean = editFields[key];\r\n            if (element && key != 'profileImage') {\r\n                editedUser[key] = user[key];\r\n            }\r\n        }\r\n        if (editFields.profileImage && user.profileImage?.startsWith(\"data:image\")) {\r\n            editedUser.profileImage = user.profileImage;\r\n        }\r\n        return editedUser;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setLoggedUser(response.user);\r\n    }\r\n\r\n    render() {\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        return (\r\n            <div id=\"UserProfile\" className=\"container-fluid\">\r\n                <h2>User Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{marginBottom:'10px'}}>\r\n                            <img style={{marginBottom:'10px'}} width=\"100\" height=\"100\" className=\"rounded-circle border border-primary\" src={user.profileImage?.startsWith(\"data:image\")?user.profileImage:baseImageUrl + user.profileImage} />\r\n                            <EditImage edit={editFields.profileImage} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"User Name\">\r\n                            <EditField edit={editFields.username} updateProperty={this.updateProfileProperty} name=\"username\" toggleInput={this.toggleInput} value={user.username} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.displayName} updateProperty={this.updateProfileProperty} name=\"displayName\" toggleInput={this.toggleInput} value={user.displayName} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Password\">\r\n                            <EditField edit={editFields.password} updateProperty={this.updateProfileProperty} name=\"password\" toggleInput={this.toggleInput} value={user.password} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                           {this.state.fieldChanged()? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />:null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EditImage = ({ edit, toggleInput, updateProperty }) => {\r\n    return (edit == true ? <>\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': 'profileImage', 'data-enabled': 'false'\r\n            }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n        <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name=\"profileImage\" />\r\n    </>\r\n        :\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': 'profileImage', 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image</AnchorButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setLoggedUser: (user: User) => dispatch(setLoggedUser(user)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(UserProfile))","import BaseEntity from './BaseEntity';\n\nexport default class ApplicationProfile extends BaseEntity{\n\tname?:string;\n\tappCode?:string;\n\tshortDescription?:string;\n\tabout?:string;\n\twelcomingMessage?:string;\n\taddress?:string;\n\tcontact?:string;\n\twebsite?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tfooterIconClass?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\n}\n","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setApplicationProfile } from '../../../redux/actionCreators';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport { resizeImage, toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField } from './helper';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport { base64StringFileSize, fileExtension } from './../../../utils/StringUtil';\r\ninterface EditField { name: boolean, welcomingMessage: boolean, shortDescription: boolean, backgroundUrl: boolean, address: boolean, about: boolean, color: boolean, fontColor: boolean }\r\nclass IState {\r\n    applicationProfile?: ApplicationProfile = undefined;\r\n    editFields: EditField = {\r\n        name: false,\r\n        welcomingMessage: false,\r\n        shortDescription: false,\r\n        backgroundUrl: false,\r\n        address: false,\r\n        about: false,\r\n        color: false,\r\n        fontColor: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        for (const key in this.editFields) {\r\n            const element = this.editFields[key];\r\n            if (element == true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass EditApplicationProfile extends BaseComponent {\r\n\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.state.applicationProfile = Object.assign(new ApplicationProfile(), this.getApplicationProfile());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"ApplicationProfile Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n\r\n        applicationProfile[target.name] = target.value;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    updateProfleImage = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        const fileName:string|undefined = target.files ? target.files[0].name : undefined;\r\n        if (!fileName) return;\r\n        toBase64v2(target).then(function (imageData) {\r\n            const fileSize = base64StringFileSize(imageData);\r\n           \r\n            let ratio:number = 1.0;\r\n            if (fileSize > 10000) {\r\n                ratio = 10000 / fileSize;\r\n            }\r\n            resizeImage(imageData, ratio, fileExtension(fileName))\r\n                .then(function (resizedData) {\r\n                    app.setProfileImage(resizedData);\r\n                });\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData: string) => {\r\n        const fileSize = base64StringFileSize(imageData);\r\n        \r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n        applicationProfile.backgroundUrl = imageData;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const appProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const actualAppProfile: ApplicationProfile | undefined = this.getApplicationProfile();\r\n        if (null == target || !appProfile || !actualAppProfile) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            appProfile[propertyName] = actualAppProfile[propertyName];\r\n        }\r\n        this.setState({ applicationProfile: appProfile, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.getApplicationEditedData();\r\n        if (!applicationProfile) return;\r\n        this.commonAjax(\r\n            this.masterDataService.updateApplicationProfile,\r\n            this.profileSaved, this.showCommonErrorAlert,\r\n            applicationProfile\r\n        )\r\n    }\r\n    getApplicationEditedData = (): ApplicationProfile | undefined => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!applicationProfile) return undefined;\r\n        const editedApplication: ApplicationProfile = new ApplicationProfile();\r\n        for (const key in editFields) {\r\n            const element: boolean = editFields[key];\r\n            if (element && key != 'backgroundUrl') {\r\n                editedApplication[key] = applicationProfile[key];\r\n            }\r\n        }\r\n        if (editFields.backgroundUrl && applicationProfile.backgroundUrl?.startsWith(\"data:image\")) {\r\n            editedApplication.backgroundUrl = applicationProfile.backgroundUrl;\r\n        }\r\n        return editedApplication;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setApplicationProfile(response.applicationProfile);\r\n    }\r\n\r\n    render() {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        const bgUrl: string = applicationProfile.backgroundUrl ?? \"\";\r\n        return (\r\n            <div id=\"ApplicationProfile\" className=\"container-fluid\">\r\n                <h2>Application Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{ marginBottom: '10px' }}>\r\n                            <img style={{ marginBottom: '10px' }} height=\"100\" className=\"border border-primary\" src={bgUrl.startsWith(\"data:image\") ? bgUrl : baseImageUrl + bgUrl} />\r\n                            <EditImage edit={editFields.backgroundUrl} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.name} updateProperty={this.updateProfileProperty} name=\"name\" toggleInput={this.toggleInput} value={applicationProfile.name} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Welcoming Message\">\r\n                            <EditField edit={editFields.welcomingMessage} updateProperty={this.updateProfileProperty} name=\"welcomingMessage\" toggleInput={this.toggleInput} value={applicationProfile.welcomingMessage} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Short Description\">\r\n                            <EditField edit={editFields.shortDescription} updateProperty={this.updateProfileProperty} name=\"shortDescription\" toggleInput={this.toggleInput} value={applicationProfile.shortDescription} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Address\">\r\n                            <EditField edit={editFields.address} updateProperty={this.updateProfileProperty} name=\"address\" toggleInput={this.toggleInput} value={applicationProfile.address} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"About\">\r\n                            <EditField edit={editFields.about} updateProperty={this.updateProfileProperty} name=\"about\" toggleInput={this.toggleInput} value={applicationProfile.about} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Background Color\">\r\n                            <EditField type=\"color\" edit={editFields.color} updateProperty={this.updateProfileProperty} name=\"color\" toggleInput={this.toggleInput} value={applicationProfile.color} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Font Color\">\r\n                            <EditField type=\"color\" edit={editFields.fontColor} updateProperty={this.updateProfileProperty} name=\"fontColor\" toggleInput={this.toggleInput} value={applicationProfile.fontColor} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                            {this.state.fieldChanged() ? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" /> : null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EditImage = ({ edit, toggleInput, updateProperty }) => {\r\n    const name: string = \"backgroundUrl\";\r\n    return (edit == true ? <>\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n        <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name={name} />\r\n    </>\r\n        :\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image (max 10KB)</AnchorButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setApplicationProfile: (applicationProfile: ApplicationProfile) => dispatch(setApplicationProfile(applicationProfile)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditApplicationProfile))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/DashboardMain';\r\nimport MasterDataMain from '../pages/masterdata/MasterDataMain';\r\nimport TransactionMain from '../pages/transaction/TransactionMain';\r\nimport CatalogMain from '../pages/catalog/CatalogMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport CartMain from '../pages/cart/CartMain';\r\nimport BaseMainMenus from './BaseMainMenus';\r\nimport Menu from './../../models/Menu';\r\nimport TransactionPurchasing from '../pages/transaction/purchasing/TransactionPurchasing';\r\nimport TransactionSelling from '../pages/transaction/selling/TransactionSelling';\r\nimport TransactionDetail from '../pages/transaction/detail/TransactionDetail';\r\nimport ProductCatalog from '../pages/catalog/product/ProductCatalog';\r\nimport CartList from '../pages/cart/CartList';\r\nimport ProductCatalogDetail from '../pages/catalog/productdetail/ProductCatalogDetail';\r\nimport DashboardStatistic from '../pages/dashboard/statistic/DashboardStatistic';\r\nimport ProductSales from './../../models/ProductSales';\r\nimport ProductSalesPage from '../pages/dashboard/sales/ProductSalesPage';\r\nimport ProductSalesDetailPage from '../pages/dashboard/sales/ProductSalesDetailPage';\r\nimport SettingsMain from '../pages/settings/SettingsMain';\r\nimport UserProfile from '../pages/settings/UserProfile';\r\nimport EditApplicationProfile from '../pages/settings/EditApplicationProfile';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n\r\n    ref: React.RefObject<BaseMainMenus> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus=(menus:Menu[])=>{\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ paddingTop: '65px' }}>\r\n                <Switch>\r\n                    <Route path=\"/login\" render={\r\n                        (props: any) =>\r\n                            <Login app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- home -------- */}\r\n                    <Route path=\"/home\" render={\r\n                        (props: any) =>\r\n                            <HomeMain app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- dashboard -------- */}\r\n                    <Route exact path=\"/dashboard\" render={\r\n                        (props: any) =>\r\n                            <DashboardMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/dashboard/statistic\" render={\r\n                        (props: any) =>\r\n                            <DashboardStatistic  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/dashboard/productsales\" render={\r\n                        (props: any) =>\r\n                            <ProductSalesPage  app={this.parentApp} />\r\n                    } />\r\n                     <Route exact path=\"/dashboard/productsales/:id\" render={\r\n                        (props: any) =>\r\n                            <ProductSalesDetailPage  app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- masterdata -------- */}\r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- transaction -------- */}\r\n                    <Route exact path=\"/transaction\" render={\r\n                        (props: any) =>\r\n                            <TransactionMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/purchasing\" render={\r\n                        (props: any) =>\r\n                            <TransactionPurchasing app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/selling\" render={\r\n                        (props: any) =>\r\n                            <TransactionSelling app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/detail\" render={\r\n                        (props: any) =>\r\n                            <TransactionDetail app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- settings --------- */}\r\n                    <Route exact path=\"/settings\" render={\r\n                        (props: any) =>\r\n                            <SettingsMain app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/settings/user-profile\" render={\r\n                        (props: any) =>\r\n                            <UserProfile app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/settings/app-profile\" render={\r\n                        (props: any) =>\r\n                            <EditApplicationProfile app={this.parentApp} />\r\n                    } />\r\n                    {/* ///////// PUBLIC ///////// */}\r\n                    {/* -------- catalog -------- */}\r\n                    <Route exact path=\"/catalog\" render={\r\n                        (props: any) => { \r\n                            return <CatalogMain  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/catalog/product\" render={\r\n                        (props: any) => { \r\n                            return <ProductCatalog  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/catalog/product/:code\" render={\r\n                        (props: any) => { \r\n                            return <ProductCatalogDetail  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/cart\" render={\r\n                        (props: any) =>\r\n                            <CartMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/cart/cartlist\" render={\r\n                        (props: any) =>\r\n                            <CartList  app={this.parentApp} />\r\n                    } />\r\n                </Switch>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","import BaseEntity from './BaseEntity';\nimport Page from './Page';\nimport { uniqueId } from './../utils/StringUtil';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:String = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string;\n\tmenuPage?:Page;\n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n}\n","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from './../../models/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { brand: any, sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n      \r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n                {menus.map(menu => {\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li  className={\"sidebar-item \"+menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}><div\r\n            style={{\r\n                textAlign: 'center', paddingTop: '10px',\r\n                paddingBottom: '10px'\r\n            }}>\r\n            <h3 className=\"text-dark\">\r\n                <i className={Menu.getIconClassName(props.brand)}></i>\r\n            </h3>\r\n            <Link to={props.brand.url} style={{textDecoration:'none'}}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n        </div></li>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","\r\n\r\nimport React from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from './../../models/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\ninterface IState {\r\n    showSidebar: boolean;\r\n    activeMenuCode: any;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = {\r\n        showSidebar: false,\r\n        activeMenuCode: null,\r\n        menu: undefined,\r\n        sidebarMenus: []\r\n    };\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        console.warn(\"SET MENU NULL\");\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        console.debug(\"SET MENU: \", menu.code);\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n       \r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () => {\r\n        if (this.state.menu && this.state.menu.subMenus != null && this.state.menu.subMenus?.length > 0) {\r\n            return this.state.menu?.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar = this.state.showSidebar == true;\r\n        return (\r\n            <div id=\"main-layout\">\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} app={this.parentApp} />\r\n                <div id=\"page-content\" className=\"container-fluid\" style={{ margin: 0, padding: 0, minHeight: '80vh' }}>\r\n                    {/* <div className=\"?\"> */}\r\n                    \r\n                    <div className=\"container-fluid\" style={{zIndex:  1 , position:'absolute'}} id={showSidebar ? \"app-content\" : \"content\"}>\r\n                        <ApplicationContent setSidebarMenus={this.setSidebarMenus} app={this.props.app} />\r\n                    </div>\r\n                    {showSidebar == true ?  \r\n                            <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} app={this.props.app} />\r\n                         : null}\r\n                    {/* </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport * as menus from './constant/Menus'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/WebResponse';\nimport Spinner from './component/loader/Spinner';\n\ninterface IState {\n  loading: boolean;\n  loadingPercentage: number;\n  requestId?: undefined;\n  mainAppUpdated: Date;\n  showAlert: boolean;\n  realtime: boolean;\n}\nclass App extends Component<any, IState> {\n\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\",\n    message: \"Info\",\n    yesOnly: false,\n    onOk: () => { },\n    onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ...this.state,\n      loading: false,\n      loadingPercentage: 0,\n      requestId: undefined,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n      realtime: false,\n    };\n\n  }\n  refresh() {\n    this.setState({ mainAppUpdated: new Date() });\n  }\n\n  requestAppId() {\n    this.props.requestAppId(this);\n  }\n\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    try{\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    } catch(e) {\n      console.error(e);\n    }\n\n  }\n\n  handleMessage(msg: WebResponse) {\n    const percentageFloat:number = msg.percentage??0; \n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div style={{paddingTop:'10%'}}>\n          <Spinner/>\n        </div>\n      )\n    }\n    const usedHost = url.contextPath();\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout app={this} />\n        <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\nfunction updateFavicon(profile: any) {\n  if (profile.pageIcon) {\n    let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\n      document.querySelector('link[rel=\"icon\"]');\n    if (!link) {\n      link = document.createElement('link');\n      link.id = 'favicon';\n      link.setAttribute(\"rel\", 'shortcut icon');\n      document.head.appendChild(link);\n    }\n    link.setAttribute(\"href\", url.baseImageUrl + 'ICON/' + profile.pageIcon);\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  requestAppId: (app: App) => dispatch(actions.requestAppId(app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    entities: [],\r\n    entity: {},  \r\n    requestId: null,\r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: [], \r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n         \r\n      \r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ }; \r\n        // case types.REQUEST_ID:\r\n\r\n        //     return { ...state, requestId: action.payload.message };\r\n        // case types.SEND_MESSAGE:\r\n        //     return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            return { ...state, cart: action.payload.cart };\r\n\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n            result = {\r\n                ...state, requestId: action.payload.requestId,\r\n                applicationProfile: action.payload.applicationProfile == null ? {} : action.payload.applicationProfile\r\n            };\r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n            setCookie(\"requestId\", result.requestId);\r\n            localStorage.setItem(\"assetsPath\", result.applicationProfile.assetsPath);\r\n            console.debug(\"action.payload.loginStatus: \", action.payload.loginStatus);\r\n            console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                setCookie(\"loginKey\", result.loginKey);\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setCookie(\"loginKey\", null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    productFlowStock: null, \r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n    let result = state;\r\n    switch (action.type) {\r\n       \r\n \r\n        case types.RESET_PRODUCTS:\r\n            return { ...state, productsData: null };\r\n\r\n        case types.GET_CASHFLOW_INFO:\r\n            result = state;\r\n\r\n            if (action.payload.entity.module == \"OUT\") {\r\n                result.cashflowInfoOut = action.payload.entity;\r\n            }\r\n            if (action.payload.entity.module == \"IN\") {\r\n                result.cashflowInfoIn = action.payload.entity;\r\n            }\r\n\r\n            return result;\r\n\r\n        case types.GET_CASHFLOW_DETAIL:\r\n            return { ...state, cashflowDetail: action.payload };\r\n        case types.GET_PRODUCT_SALES:\r\n            let currentProductSalesData = action.payload;\r\n            if (action.loadMore == true) {\r\n                currentProductSalesData = state.productSalesData;\r\n                let loadedProductList = action.payload.entities;\r\n                for (let i = 0; i < loadedProductList.length; i++) {\r\n                    currentProductSalesData.entities.push(loadedProductList[i]);\r\n                }\r\n            }\r\n            console.log(\"will update currentProductSalesData: \", currentProductSalesData.entities.length);\r\n            result = { ...state, productSalesData: currentProductSalesData };\r\n            action.referrer.refresh();\r\n            return result; \r\n        case types.GET_PRODUCT_SALES_DETAIL:\r\n            return { ...state, productSalesDetails: action.payload };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\" \r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer, \r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState, \r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, {}, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(response => {\r\n        const responseJson = response.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n\r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = response.headers['access-token'];\r\n            console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => {\r\n        const data = response.data;\r\n        if (data.code != \"00\") {\r\n            alert(\"Error requesting app ID\");\r\n            return;\r\n        }\r\n        common.updateAccessToken(response);\r\n        console.debug(\"response header:\", response.headers['access-token']);\r\n        let newAction = Object.assign({}, action, { payload: { loginStatus: data.loggedIn, ...data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n    const apps:any[] = action.payload.apps;\r\n    for (let i = 0; i < apps.length; i++) {\r\n        const app = apps[i];\r\n        if (app.refresh){ \r\n            app.refresh();\r\n        }\r\n    }\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware' \r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware, \r\n            userMiddleware.requestAppIdMiddleware, \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n\r\n            //transaction   \r\n            getCashflowInfoMiddleware,\r\n            getCashflowDetailMiddleware,\r\n            getProductSalesMiddleware,\r\n            resetProductsMiddleware,   \r\n            getProductSalesDetailMiddleware,\r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n  \r\n  \r\n\r\nconst getProductSalesDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.debug(\"getProductSalesDetailMiddleware Response:\", data);\r\n        if (data.code != \"00\") {\r\n            alert(\"Server error\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: data });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n    .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data, loadMore: action.meta.loadMore, referrer: action.meta.referrer });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.referrer.props.app.endLoading());\r\n}\r\n\r\nconst getCashflowDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getCashflowDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCashflowInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_INFO) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.debug(\"getCashflowInfoMiddleware Response:\", data);\r\n        if (data.code != \"00\") {\r\n            alert(\"Server error\");\r\n            return;\r\n        }\r\n\r\n        if (data.entity == null) {\r\n            alert(\"Data for cashflow: \" + action.payload.filter.module + \" in \" + action.payload.filter.month + \"/\" + action.payload.filter.year + \" period not found!\");\r\n            return;\r\n        }\r\n\r\n        if (data.entity.amount == null) {\r\n            data.entity.amount = 0;\r\n            data.entity.count = 0;\r\n            console.log(\"DATA:\", data);\r\n        }\r\n        let newAction = Object.assign({}, action, { payload: data });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n    .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n   \r\nconst resetProductsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCTS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["constant/Url.js","redux/actionCreators.ts","redux/types.js","constant/stores.js","component/loader/Loader.js","component/alert/Alert.js","utils/StringUtil.ts","utils/ComponentUtil.ts","component/BaseComponent.tsx","constant/Menus.ts","component/navigation/Header.tsx","component/pages/login/Login.tsx","component/layout/BaseMainMenus.tsx","component/pages/dashboard/DashboardMain.tsx","middlewares/Common.js","services/Promises.ts","services/MasterDataService.ts","component/navigation/AnchorButton.tsx","component/container/Modal.tsx","models/EntityProperty.ts","models/FieldType.ts","utils/EntityValues.tsx","component/navigation/NavigationButtons.tsx","component/pages/masterdata/form/FormInputImage.tsx","component/pages/masterdata/form/FormInputImageMultiple.tsx","component/form/FormGroup.tsx","component/pages/masterdata/form/FormInputField.tsx","component/pages/masterdata/form/MasterDataForm.tsx","component/pages/masterdata/EditDeleteAction.tsx","component/pages/masterdata/DataTableHeader.tsx","component/alert/SimpleError.tsx","component/loader/Spinner.tsx","component/pages/masterdata/MasterDataList.tsx","component/pages/masterdata/MasterDataManagement.tsx","component/pages/masterdata/MasterDataMain.tsx","component/pages/transaction/TransactionMain.tsx","component/container/Card.tsx","component/navigation/AnchorWithIcon.tsx","services/CatalogService.ts","component/pages/catalog/CatalogMain.tsx","component/pages/home/HomeMain.tsx","models/BaseEntity.ts","models/Product.ts","component/pages/cart/CartMain.tsx","services/BaseTransactionService.ts","services/TransactionPurchasingService.ts","component/pages/transaction/purchasing/SupplierForm.tsx","component/pages/transaction/ProductForm.tsx","models/Transaction.ts","models/ProductFlow.ts","component/pages/transaction/BaseTransactionComponent.tsx","component/pages/transaction/purchasing/TransactionPurchasing.tsx","services/TransactionSellingService.ts","component/pages/transaction/selling/CustomerForm.tsx","component/pages/transaction/selling/TransactionSelling.tsx","services/TransactionHistoryService.ts","component/pages/transaction/detail/TransactionDetail.tsx","component/pages/catalog/product/ProductCatalogList.tsx","component/pages/catalog/product/ProductCatalog.tsx","component/pages/cart/CartList.tsx","component/container/Carousel.tsx","component/pages/catalog/productdetail/ProductCatalogDetail.tsx","utils/DateUtil.js","component/pages/dashboard/DashboardFilter.tsx","models/Cashflow.ts","component/pages/dashboard/DashboardBarChart.tsx","component/pages/dashboard/statistic/CashflowChart.tsx","component/pages/dashboard/statistic/DashboardStatistic.tsx","models/ProductSales.ts","component/pages/dashboard/sales/ProductSalesPage.tsx","component/pages/dashboard/sales/ProductSalesDetailPage.tsx","component/pages/settings/SettingsMain.tsx","models/User.ts","services/UserService.ts","component/pages/settings/helper.tsx","component/pages/settings/UserProfile.tsx","models/ApplicationProfile.ts","component/pages/settings/EditApplicationProfile.tsx","component/layout/ApplicationContent.tsx","models/Menu.ts","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","redux/shopReducer.js","redux/userReducer.js","redux/transactionReducer.js","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","middlewares/CatalogMiddleware.ts","redux/configureStore.js","Root.tsx","serviceWorker.js","index.js"],"names":["devMode","document","getElementById","value","rootValue","contextPath","concat","baseImageUrl","localStorage","getItem","usedHost","url","apiBaseUrl","apiAccount","updateCart","cart","apps","type","payload","meta","performLogout","app","startLoading","mapCommonUserStateToProps","state","applicationProfile","userState","loggedUser","loginStatus","requestId","shopState","LoaderContent","props","realtime","className","role","style","width","progress","transitionDuration","disabled","aria-hidden","Loader","timer","intervalId","update","clearInterval","console","log","setState","endMessage","this","withTimer","setInterval","msgStyle","text","zIndex","Component","Backdrop","backgroundColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","id","title","onClose","Alert","React","createRef","e","isError","current","focus","headerClassName","display","tabIndex","aria-labelledby","children","index","uniqueId","string","String","Date","getUTCMilliseconds","toString","beautifyNominal","val","isDecimal","includes","rawVal","parseInt","split","nominal","Math","abs","result","length","zeroIndex","i","base64StringFileSize","base64String","stringLength","sizeInBytes","ceil","byId","toBase64v2","fileInput","Promise","resolve","reject","reader","FileReader","readAsDataURL","files","debug","onload","onerror","error","BaseComponent","authenticated","parentApp","updated","validateLoginStatus","isLoggedUserNull","backToLogin","showCommonErrorAlert","msg","message","showError","event","target","checked","name","activeId","element","withProgress","endLoading","method","successCallback","errorCallback","params","then","response","catch","alert","finally","doAjax","user","password","body","showAlert","showAlertError","history","push","menus","code","menuClass","active","showSidebar","subMenus","IState","showNavLinks","toggleNavLinks","onLogout","showConfirmation","ok","menuSet","getMenus","position","padding","margin","label","getApplicationProfile","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","menu","isActive","activeMenuCode","key","setMenu","to","setMenuNull","isUserLoggedIn","getLoggedUser","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","displayName","withRouter","connect","dispatch","Login","formRef","preventDefault","formData","FormData","performLogin","get","onSubmit","login","PasswordField","placeholder","required","UsernameField","autoFocus","username","BaseMainMenus","DashboardMain","commonAuthorizedHeader","getRequestId","getLoginKey","getCookie","updateAccessToken","axiosResponse","headers","accessToken","setCookie","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","request","post","data","MasterDataService","managementProperties","entityPropertyMap","Map","updateApplicationProfile","profile","set","undefined","req","entity","filter","limit","page","exacts","fieldsFilter","model","editMode","instance","AnchorButton","show","btnClassName","attributes","iconClassName","Modal","hideModal","showModal","toggleable","marginBottom","footerContent","showFooter","EntityProperty","groupNames","entityName","alias","fieldNames","idField","detailFieldName","imageElementsJson","dateElementsJson","multipleSelectElementsJson","currencyElementsJson","formInputColumn","editable","withDetail","dateElements","imageElements","currencyElements","multipleSelectElements","elements","Array","fieldNameList","ignoreBaseField","isQuestionare","record","prop","getEntityElement","getHeaderLabels","header","lableName","isDate","FieldType","EntityValues","object","elemnents","elementid","fieldType","FIELD_TYPE_FIXED_LIST","FIELD_TYPE_DYNAMIC_LIST","optionItemName","FIELD_TYPE_DATE","FIELD_TYPE_IMAGE","imgLink","src","height","FIELD_TYPE_COLOR","color","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","min","max","FormInputImage","singlePreviewData","showInputFile","changeSingleImageData","removeImage","showConfirmationDanger","doRemoveImage","prepopulateForm","recordToEdit","defaultValue","fullUrl","Fragment","onChange","accept","imageData","ImagePreview","FormInputImageMultiple","previewData","inputElements","setImageData","addInputElement","removeInputElement","removedIndex","doRemoveInputElement","splice","delete","trim","imageNames","imageName","isNull","isBase64","isBase64Image","startsWith","FormGroup","orientation","FormInputField","masterDataService","getInstance","inputList","entityElement","getRequiredAttr","inputListLoaded","entities","Error","loadInputList","entityReferenceClass","commonAjax","loadAllEntities","hasInputList","hasInputListAndNotReady","validateInputType","fieldName","recordValue","defaultInputValue","optionValueName","requiredAttr","input","options","option","optionItemValue","multiple","FIELD_TYPE_TEXTAREA","MasterDataForm","form","submit","promises","nulledFields","forEach","file","valueAttr","constructor","promise","all","objectPayload","generateRequestPayload","ajaxSubmit","rawObject","join","save","recordSaved","getEntityProperty","showInfo","entityProperty","editModeStr","SubmitReset","InputFields","groupedElements","counter","EditDeleteAction","doDelete","recordId","getRecordId","recordDeleted","getRecordById","getById","recordLoaded","showEditForm","reload","DataTableHeader","headerProps","headerProp","filterOnChange","data-orderType","orderButtonOnClick","data-orderby","SimpleError","Spinner","innerDivs","visibility","MasterDataList","showForm","loading","adjustFilter","loadEntities","entitiesLoaded","recordData","checkDefaultData","getRecordNumber","filterFormSubmit","useExistingFilterPage","filterReset","dataset","orderBy","orderType","showCreateForm","updateFilterPage","updateFilterLimit","resultList","onReset","overflow","number","values","parseValues","Loading","paddingTop","marginLeft","marginTop","SubmitResetButton","MasterDataManagement","loadingEntityProperty","entityPropertyLoaded","setEntityProperty","setTitle","entityProp","loadEntityProperty","existingEntityProperty","MasterDataMain","managementPropertiesLoaded","generalList","setSidebarMenus","refresh","sidebarMenus","loadManagamenetPages","loadManagementProperties","getCode","match","properties","property","TransactionMain","Card","AnchorWithIcon","CatalogService","totalProduct","setTotalProduct","getTotalProduct","getProductList","raw","getProductDetail","getMoreSupplier","productId","CatalogMain","catalogService","totalProductLoaded","totalProductNotLoaded","loadTotalProduct","HomeMain","imageUrl","backgroundUrl","backgroundImage","backgroundSize","fontColor","shortDescription","welcomingMessage","BaseEntity","createdDate","modifiedDate","deletedDate","deleted","Product","description","price","unit","category","newProduct","count","suppliers","product","names","getDefaultPicture","products","CartMain","countSummary","BaseTransactionService","defaultResponse","res","rej","submitTransactionSelling","transaction","submitTransaction","submitTransactionPurchasing","productFlows","customer","supplier","getStockInfo","productCode","withStock","TransactionPurchasingService","SupplierForm","supplierNotFound","searchSupplier","loadSupplier","supplierLoaded","setSupplier","notFound","SupplierDetail","address","contact","ProductForm","transactionService","productNotFound","searchProduct","loadProduct","productLoaded","setProduct","commonAjaxWithProgress","ProductDetail","fontFamily","Transaction","mode","transactionDate","productFlow","ProductFlow","expiryDate","flowReferenceId","transactionId","productFlowStock","totalPrice","obj","BaseTransactionComponent","productFormRef","create","selectedProductFlow","addToCart","Object","assign","existInCart","addProductFlowState","reset","clearSelectedProductFlow","editProduct","removeProduct","totalUnitAndPrice","totalUnit","totalProductPrice","productFlowPrice","productPrice","TransactionPurchasing","transactionPurchasingService","updateSelectedProductFlowProp","propName","doSubmit","date","transactionSucess","productFlowsPopulated","supplierExist","showSubmitTrxButton","colSpan","TransactionSellingService","getCustomerList","CustomerForm","customerNotFound","searchCustomer","loadCustomer","customerLoaded","setCustomer","CustomerDetail","phone","TransactionSelling","transactionSellingService","updateSaleQty","customerExist","TransactionHistoryService","getProductSales","getProductSalesDetail","getCashflowDetail","getTransactionData","transactionCode","getInventoriesQuantity","getBalanceInfo","TransactionDetail","transactionHistoryService","dataNotFound","transactionData","recordNotLoaded","setTransactionCode","TransactionData","isSelling","showCart","ProductCatalogList","showShoppingCart","hideShoppingCart","getProductInCart","addOneToCart","productInCart","setProductToCart","reduceOneFromCart","resetProductCart","productCloned","resetAllShoppingCart","getShoppingCartCounts","found","imgName","withCategories","categories","ProductCatalog","productNotLoaded","productsLoaded","loadProducts","setFieldsFilterValue","setFilterPage","setLimit","setOrder","rawOrder","withProgess","defaultChecked","CartList","removeFromCart","doRemoveFromCart","cartList","imgUrl","Carousel","imageLength","getCurrentImage","imageUrls","prev","currentActive","next","overflowX","ProductCatalogDetail","loadProductDetail","getPictureNames","MONTHS","DashboardFilter","updatePeriodFilter","yearTo","year","transactionYears","month","monthName","monthTo","Cashflow","amount","module","getFullYear","getAmount","getLabel","toDataSet","cashflow","toDataSets","cashflows","dataSets","maxAmount","hoveredIndex","DashboardBarChart","middleYAxisValue","bottomYAxisValue","offsetX","offsetY","baseYIndex","baseHeight","lineWidth","maxValue","updateSizes","dataSet","round","hover","unHover","minHeight","onMouseOut","version","baseProfile","xmlns","percentage","labelY","labelX","transform","hovered","cursor","onMouseOver","fill","x","y","textAnchor","cx","cy","r","activeSellingIndex","activePurchasingIndex","CashflowChart","getCashflowData","cashflowData","getPeriodString","getSellingData","list","sellings","getPurchasingData","purchasings","setActiveSellingData","unSelectSellingData","setActivePurchasingData","unSelectPurchasingData","onUnHover","CashflowDetail","getMonth","DashboardStatistic","loadStatistic","cashflowDataLoaded","cashflowDataNotLoaded","ProductSales","sales","objects","sortBySales","sort","p1","p2","sortBySalesDesc","sortType","activeSalesDataIndex","salesData","ProductSalesPage","loadSales","salesDataLoaded","salesDataNotLoaded","setActiveSalesData","unSelectSalesData","getActiveSalesData","salesList","showBtnLoadMore","btnSortIconClass","paddingBottom","productSales","ProductSalesDetail","ProductSalesDetailPage","getProductId","getProduct","SettingsMain","User","profileImage","authorities","processingDate","UserService","updateProfile","EditField","edit","toggleInput","updateProperty","PropertyInput","PropertyLabel","editFields","fieldChanged","UserProfile","userService","updateProfileProperty","updateProfleImage","setProfileImage","actualLoggedUser","propertyName","getAttribute","enabled","saveRecord","doSaveRecord","getUserEditedData","profileSaved","editedUser","setLoggedUser","EditImage","ApplicationProfile","appCode","about","website","iconUrl","pageIcon","footerIconClass","EditApplicationProfile","appProfile","actualAppProfile","getApplicationEditedData","editedApplication","setApplicationProfile","bgUrl","ApplicationContent","path","render","exact","Menu","pathVariables","menuPage","defaultMenuIconClassName","getIconClassName","SideBar","isSidebarActive","parentMenu","pathName","location","pathname","window","addEventListener","handleScroll","removeEventListener","scrollTop","srcElement","brand","menuClassName","Brand","textAlign","textDecoration","MainLayout","currentPathName","warn","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","clientRef","alertCallback","onOk","loadingPercentage","mainAppUpdated","requestAppId","incrementLoadings","decrementLoadings","percentageFloat","floor","yesCallback","noCallback","dismissAlert","link","querySelector","createElement","setAttribute","head","appendChild","updateFavicon","topics","onMessage","handleMessage","client","actions","initState","messages","userAlias","reducer","action","loginKey","loginFailed","menuData","loginAttempt","setItem","assetsPath","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","currentProductSalesData","loadMore","loadedProductList","referrer","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","initialState","performLoginMiddleware","store","responseJson","loginSuccess","newAction","requestAppIdMiddleware","common","loggedIn","param","getLoggedUserMiddleware","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","JSON","stringify","json","err","storeChatMessageLocallyMiddleware","removeEntityMiddleware","updateCartMiddleware","getProductSalesDetailMiddleware","getProductSalesMiddleware","getCashflowDetailMiddleware","getCashflowInfoMiddleware","resetProductsMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","realtimeChatMiddleware","Root","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c329a9e4.chunk.js","sourcesContent":["\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    return contextPath;\r\n}\r\n\r\n// export const baseImageUrl = contextPath()+\"assets/images/\"; \r\n// export const baseImageUrl = \"https://developmentmode.000webhostapp.com/uploaded_storage/\"; \r\n// export const baseImageUrl = \"http://localhost/storage/images/\"; \r\nexport const baseImageUrl = localStorage.getItem(\"assetsPath\")+ \"images/\"; \r\n// export const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\"; \r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url';\r\nimport Product from './../models/Product';\r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/app/account/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"\r\nconst apiTransaction = usedHost + \"api/app/transaction/\";\r\n\r\nexport const updateCart = (cart: Product[], ...apps) => {\r\n    // console.debug(\"UPDATE CART: \", cart);\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, apps: apps }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl.concat(\"requestid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSales = (request) => {\r\n    request.referrer.props.app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES,\r\n        payload: {\r\n            product: { name: request.productName },\r\n            filter:\r\n                { page: request.page, limit: request.limit, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            referrer: request.referrer, type: types.GET_PRODUCT_SALES, loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsales\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_CASHFLOW_DETAIL,\r\n        payload: { filter: { month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_DETAIL, url: apiTransaction.concat(\"cashflowdetail\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowInfo = (month, year, type, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_CASHFLOW_INFO,\r\n        payload: { filter: { year: year, month: month, module: type } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_INFO, url: apiTransaction.concat(\"cashflowinfo\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, url: contextPath().concat(\"login?username=\" + username + \"&password=\" +\r\n                password + \"&transport_type=rest\"), app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: user },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId,\r\n        cart: state.shopState.cart\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {  \r\n            className = \"message-loading progress\";\r\n            messageText = <span className=\"loader\">{this.props.progress + \"%\"}</span>   \r\n            msgStyle.zIndex = 100;\r\n        }\r\n\r\n        return (\r\n            <div style={msgStyle} className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props){\r\n    if(props.realtime){\r\n        return (\r\n            <div className=\"progress-bar progress-bar-striped\" role=\"progressbar\" style={{ \r\n                width: props.progress + \"%\",\r\n                transitionDuration: '300ms'\r\n                }}>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react'\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n\r\n        this.onYes = (e) => {\r\n             \r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n            \r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger':'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop />\r\n                <div className=\"modal fade show\" style={{ display: 'block' }} id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\"> {this.props.children}</div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{backgroundColor: 'rgba(100,100,100,0.7)'}} ></div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \"+props.className}>\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\">Yes</button>\r\n            {props.yesOnly ? null : <button ref={props.noButtonRef} type=\"button\"\r\n                onClick={props.onNo} className=\"btn btn-outline-secondary\">No</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \"+props.className}>\r\n        <h5 className={\"modal-title \"+props.fontClassName }id=\"exampleModalCenterTitle\">{props.title}</h5>\r\n        <button onClick={props.onClose} type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\" className={props.fontClassName}><i className=\"fas fa-times\"/></span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\t\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}\r\n\r\nexport const base64StringFileSize = (base64String:string) : number => {\r\n\tif (base64String.includes(\",\")) {\r\n\t\tbase64String = base64String.split(\",\")[1];\r\n\t}\r\n\tvar stringLength = base64String.length;\r\n\r\n\tvar sizeInBytes = 4 * Math.ceil((stringLength / 3))*0.5624896334383812;\r\n\tvar sizeInKb=sizeInBytes/1000;\r\n\treturn sizeInBytes;\r\n}\r\n\r\nexport const fileExtension = (fileName:string) :string => {\r\n\tif (fileName.includes(\".\") == false) {\r\n\t\treturn \"*\";\r\n\t}\r\n\r\n\tconst splitted = fileName.split(\".\");\r\n\treturn splitted[splitted.length - 1];\r\n}","import { base64StringFileSize } from './StringUtil';\r\nexport const byId = (id) => { return document.getElementById(id) }\r\n \r\nexport function toBase64(file, referer, callback) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n        alert(\"Error Loading File\");\r\n    }\r\n}\r\n \r\n\r\nexport function toBase64v2(fileInput) {\r\n    return new Promise<any>(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(fileInput.files[0]);\r\n            console.debug(\"fileInput.files[0]: \", fileInput.files[0]);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport const resizeImage = (data:string, ratio:number, extension:string) => {\r\n    const actualFilesize = base64StringFileSize(data);\r\n    console.debug(\"Actual filesize: \", actualFilesize);\r\n    return new Promise<string>(function(resolve, reject){\r\n        const img = new Image();\r\n        img.src = data;\r\n        img.onload = function () {\r\n            const width = img.width   * ratio;\r\n            const height = img.height   * ratio;\r\n            // create an off-screen canvas\r\n            var canvas:HTMLCanvasElement = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n            if (!ctx) return;\r\n            // set its dimension to target size\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n            var mime_type = \"image/\"+extension;\r\n            // draw source image into the off-screen canvas:\r\n            ctx.drawImage(img, 0, 0, width, height);\r\n            console.debug(\"Resize ratio: \", ratio, \"mime_type: \",mime_type);\r\n            // encode image to data-uri with base64 version of compressed image\r\n            const dataURL = (canvas.toDataURL());\r\n            console.debug(\"Resized filesize: \", base64StringFileSize(dataURL));\r\n            resolve(dataURL);\r\n        }\r\n    });\r\n}\r\n\r\nexport function toBase64FromFile(file) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options:any[] = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options:any[] = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","import { Component } from 'react';\r\nimport { byId } from '../utils/ComponentUtil';\r\nimport WebResponse from './../models/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated = authenticated\r\n        this.state = {\r\n            ...this.state\r\n        }\r\n\r\n    }\r\n    validateLoginStatus = () => {\r\n        if (this.authenticated == false) return;\r\n        if (this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile():ApplicationProfile\r\n    {\r\n        return this.props.applicationProfile == null ? {} : this.props.applicationProfile;\r\n    }\r\n\r\n    handleInputChange(event: any) {\r\n        const target = event.target;\r\n        const value = target.type == 'checkbox' ? target.checked : target.value;\r\n        this.setState({ [target.name]: value });\r\n        console.debug(\"input changed: \", target.name, value);\r\n    }\r\n\r\n    focusToActiveField() {\r\n        if (this.state.activeId != null && byId(this.state.activeId) != null) {\r\n            const element = byId(this.state.activeId);\r\n            if (element != null) {\r\n                element.focus();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method \r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax(method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any ) {\r\n        this.startLoading(withProgress);\r\n\r\n        method(...params).then(function (response:WebResponse) {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch(function (e) {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally((e:any) => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax(method: Function, successCallback: Function, errorCallback: Function, ...params:any) {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress(method: Function, successCallback: Function, errorCallback: Function, ...params:any) {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser():User|undefined {\r\n        const user:User|undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return user;\r\n    }\r\n    isLoggedUserNull(): boolean {\r\n        return false == this.props.loginStatus || null == this.props.loggedUser;\r\n    }\r\n    isUserLoggedIn(): boolean {\r\n        return true == this.props.loginStatus && null != this.props.loggedUser;\r\n    }\r\n    showConfirmation(body:any): Promise<boolean> {\r\n        const app = this;\r\n        return new Promise(function(resolve, reject){\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n  \r\n    }\r\n    showConfirmationDanger(body: any): Promise<any> {\r\n        const app = this;\r\n        return new Promise(function(resolve, reject){\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo(body: any) {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError(body: any) {\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n\r\n    showCommonErrorAlert = (e:any) => {\r\n        console.error(e);\r\n        const msg = e.message??e;\r\n        this.showError(\"Operation Failed: \"+msg);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isLoggedUserNull()) {\r\n            console.debug(typeof this , \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n}","\r\nimport Menu from './../models/Menu';\r\n\r\nexport const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const TRANSACTION_SELLING = \"selling\";\r\nexport const MENU_TRANSACTION = \"purchasing\";\r\nexport const MENU_SETTING = \"settings\";\r\nexport const SUPPLIERLIST = \"supplierlist\";\r\nexport const MENU_MASTER_DATA = \"management\";\r\nexport const CHATROOM = \"chatroom\";\r\nexport const CART = \"cart\";\r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < menus.length; i++) {\r\n        const element: Menu = menus[i];\r\n        menuSet.push(element);\r\n    }\r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n    console.debug(\"pathName: \", pathName);\r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const menus: Menu[] = [\r\n    {\r\n        code: HOME,\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false\r\n    },\r\n    {\r\n        code: CATALOG,\r\n        name: \"Catalog\",\r\n        url: \"/catalog\",\r\n        menuClass: \"fa fa-th-large\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: true,\r\n        subMenus: [{\r\n            code: 'catalog_product',\r\n            name: 'Product',\r\n            url: 'product',\r\n            menuClass: 'fas fa-cubes'\r\n        },\r\n        {\r\n            code: 'catalog_supplier',\r\n            name: 'Supplier',\r\n            url: 'supplier',\r\n        }]\r\n    },\r\n    {\r\n        code: CART,\r\n        name: \"Shopping Cart\",\r\n        url: \"/cart\",\r\n        menuClass: \"fa fa-shopping-cart\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'cart_list',\r\n                name: 'Shopping Cart List',\r\n                menuClass: 'fas fa-shopping-bag',\r\n                url: 'cartlist',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: DASHBOARD,\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'dashboard_stat',\r\n                name: 'Statistic',\r\n                url: 'statistic',\r\n                menuClass: 'fas fa-chart-bar'\r\n\r\n            },\r\n            {\r\n                code: 'dashboard_productsales',\r\n                name: 'Product Sales',\r\n                url: 'productsales',\r\n                menuClass: 'fas fa-chart-line'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: MENU_TRANSACTION,\r\n        name: \"Transaction\",\r\n        url: \"/transaction\",\r\n        menuClass: \"fas fa-suitcase\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'trx_selling',\r\n                name: 'Selling',\r\n                menuClass: 'fas fa-cash-register',\r\n                url: 'selling',\r\n            },\r\n            {\r\n                code: 'trx_purchasing',\r\n                name: 'Purchasing',\r\n                menuClass: 'fas fa-shopping-basket',\r\n                url: 'purchasing',\r\n            },\r\n            {\r\n                code: 'trx_detail',\r\n                name: 'Transaction Detail',\r\n                menuClass: 'fas fa-clipboard-list',\r\n                url: 'detail',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: MENU_MASTER_DATA,\r\n        name: \"Master Data\",\r\n        url: \"/management\",\r\n        menuClass: \"fa fa-database\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true\r\n    },\r\n    {\r\n        code: MENU_SETTING,\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'user_profile',\r\n                name: 'Profile',\r\n                menuClass: 'fas fa-user-cog',\r\n                url: 'user-profile',\r\n            },\r\n            {\r\n                code: 'app_profile',\r\n                name: 'Application Setting',\r\n                menuClass: 'fas fa-cog',\r\n                url: 'app-profile',\r\n            },\r\n            \r\n        ]\r\n    },\r\n];\r\n","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || menu.authenticated && this.isLoggedUserNull()) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.props.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull} authenticated={this.isUserLoggedIn()}\r\n                                onLogout={this.onLogout} user={this.getLoggedUser()} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: any) => {\r\n    if (props.authenticated) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'><i className=\"fas fa-user-circle\"></i>&nbsp;{props.user.displayName}\r\n                </Link>\r\n                <a style={{marginRight:'5px'}} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{marginRight:'5px'}} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nclass Login extends BaseComponent{\r\n    formRef: RefObject<HTMLFormElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        const form: EventTarget = e.target;\r\n        if (null == this.formRef.current) {\r\n            return;\r\n        }\r\n        const formData: FormData = new FormData(this.formRef.current);\r\n        console.debug(\"formData: \", formData);\r\n        this.props.performLogin(formData.get('username'), formData.get('password'), this.parentApp);\r\n    }\r\n    componentDidMount(){\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n    \r\n        console.debug(\"Login update\");\r\n        console.debug(\"logged in : \", this.props.loginStatus);\r\n        console.debug(\"logged user : \", this.getLoggedUser());\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\">\r\n                <form ref={this.formRef} name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <UsernameField />\r\n                    <PasswordField />\r\n                    <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = (props) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"password\" type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst UsernameField = (props) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input name=\"username\" type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder=\"Username\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\r\nimport BaseComponent from './../BaseComponent';\r\nimport Menu from './../../models/Menu';\r\nexport default class BaseMainMenus extends BaseComponent {\r\n\r\n    title:string = \"\";\r\n    constructor(props, title:string, authenticated:boolean = false) {\r\n        super(props, authenticated);\r\n        this.title = title;\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.authenticated) {\r\n            this.validateLoginStatus();\r\n        }\r\n        document.title = this.title;\r\n        \r\n    }\r\n\r\n}","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass DashboardMain extends BaseMainMenus\r\n{\r\n    constructor(props:any){\r\n        super(props, \"Dashboard\", true);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"DashboardMain\" className=\"container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.displayName}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(DashboardMain))","\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('loginKey');\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['access-token']) {\r\n        const accessToken = axiosResponse.headers['access-token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(\"loginKey\", accessToken);\r\n    }\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","\r\nimport Filter from './../models/Filter';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport BaseEntity from './../models/BaseEntity';\r\nimport ManagementProperty from '../models/ManagementProperty';\r\nimport EntityProperty from './../models/EntityProperty';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService {\r\n    managementProperties: ManagementProperty[] = [];\r\n    private entityPropertyMap: Map<string, EntityProperty> = new Map();\r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    setEntityProperty(code: string, data?: EntityProperty) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.entityPropertyMap.set(code, data);\r\n    }\r\n    getEntityProperty(code?: string): EntityProperty | undefined {\r\n        if (code == undefined) {\r\n            return undefined;\r\n        }\r\n        return this.entityPropertyMap.get(code);\r\n    }\r\n\r\n    loadManagementProperties(req?: any) {\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/managementpages\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n\r\n    }\r\n    loadEntityProperty(code: string) {\r\n        console.debug(\"Load entity prop: \", code);\r\n        const request: WebRequest = {\r\n            entity: code\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/configv2\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    loadEntities(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    loadAllEntities(code: string) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                limit: 0, page: 0\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    getById(code: string, id: number) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                exacts: true,\r\n                limit: 1,\r\n                page: 0,\r\n                fieldsFilter: { 'id': id }\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getBy(code: string, fieldsFilter: {}, limit = 1) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                exacts: true,\r\n                limit: limit,\r\n                page: 0,\r\n                fieldsFilter: fieldsFilter\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete(code: string, id: number) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                fieldsFilter: { 'id': id }\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    save(code: string, model: BaseEntity, editMode: boolean) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            [code]: model\r\n        }\r\n        let endpoint: string;\r\n        if (editMode) {\r\n            endpoint = contextPath().concat(\"api/app/entity/update\");\r\n        } else {\r\n            endpoint = contextPath().concat(\"api/app/entity/add\");\r\n        }\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    updateApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n        const request: WebRequest = {\r\n            profile: applicationProfile\r\n        }\r\n        const endpoint = contextPath().concat(\"api/app/setting/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request)\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\nexport default class Modal extends Component<any, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    render() {\r\n       if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport EntityElement from \"./EntityElement\";\r\nimport HeaderProps from './HeaderProps'; \r\n\r\nexport default class EntityProperty{\r\n\tgroupNames?:string;\r\n\tentityName?:string;\r\n\talias?:string;\r\n\tfieldNames?:string;\r\n\tidField?:string;\r\n\tdetailFieldName?:string;\r\n\timageElementsJson?:string;\r\n\tdateElementsJson?:string;\r\n\tmultipleSelectElementsJson?:string;\r\n\tcurrencyElementsJson?:string;\r\n\tformInputColumn?:number;\r\n\teditable?:boolean;\r\n\twithDetail?:boolean;\r\n\tdateElements?:any[];\r\n\timageElements?:any[];\r\n\tcurrencyElements?:any[];\r\n\tmultipleSelectElements?:any[];\r\n\telements:EntityElement[] = new Array();\r\n\tfieldNameList?:string[];\r\n\tignoreBaseField?:boolean;\r\n\tisQuestionare?:boolean;\r\n\r\n\tstatic getEntityElement = (prop: EntityProperty, id:string) :EntityElement|undefined => {\r\n\t\tfor (let i = 0; i < prop.elements.length; i++) {\r\n\t\t\tconst element = prop.elements[i];\r\n\t\t\tif (element.id == id) {\r\n\t\t\t\treturn element;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tstatic getHeaderLabels = (prop:EntityProperty) : HeaderProps[] => {\r\n\t\tconst result:HeaderProps[] = new Array();\r\n\t\tif (prop.elements == undefined) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tconst elements:EntityElement[] = prop.elements;\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\r\n\t\t\tconst element = elements[i];\r\n\t\t\tconst header:HeaderProps=  {\r\n\t\t\t\tlabel:element.lableName,\r\n\t\t\t\tvalue:element.id,\r\n\t\t\t\tisDate:element.type == 'date'\r\n\t\t\t};\r\n\t\t\tresult.push(header);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic getRecordId(record:any, prop:EntityProperty) {\r\n\t\tconst elements = prop.elements;\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tconst element = elements[i];\r\n\t\t\tif (element.idField) {\r\n\t\t\t\treturn record[element.id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n","\nexport enum FieldType {\n\n\tFIELD_TYPE_TEXT = \"FIELD_TYPE_TEXT\",\n\tFIELD_TYPE_IMAGE =\n\t'FIELD_TYPE_IMAGE',\n\tFIELD_TYPE_CURRENCY =\n\t'FIELD_TYPE_CURRENCY',\n\tFIELD_TYPE_NUMBER =\n\t'FIELD_TYPE_NUMBER',\n\tFIELD_TYPE_HIDDEN =\n\t'FIELD_TYPE_HIDDEN',\n\tFIELD_TYPE_COLOR =\n\t'FIELD_TYPE_COLOR',\n\tFIELD_TYPE_FIXED_LIST =\n\t'FIELD_TYPE_FIXED_LIST',\n\tFIELD_TYPE_DYNAMIC_LIST =\n\t'FIELD_TYPE_DYNAMIC_LIST',\n\tFIELD_TYPE_TEXTAREA =\n\t'FIELD_TYPE_TEXTAREA',\n\tFIELD_TYPE_PLAIN_LIST =\n\t'FIELD_TYPE_PLAIN_LIST',\n\tFIELD_TYPE_DATE =\n\t'FIELD_TYPE_DATE'\n}\n\n","import React from 'react';\r\nimport EntityProperty from '../models/EntityProperty';\r\nimport EntityElement from '../models/EntityElement';\r\nimport { baseImageUrl } from '../constant/Url';\r\nimport { FieldType } from '../models/FieldType';\r\nexport default class EntityValues {\r\n\tstatic parseValues(object:any, prop:EntityProperty) : Array<any> {\r\n\t\tconst result = new Array();\r\n\t\tconst elemnents:EntityElement[] =prop.elements;\r\n\t\tfor (let i = 0; i < elemnents.length; i++) {\r\n\t\t\tconst element = elemnents[i];\r\n\t\t\tconst elementid = element.id;\r\n\t\t\tlet value:any =  object[elementid];\r\n\t\t\tif (value == null) {\r\n\t\t\t\tresult.push(value);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tswitch(element.fieldType) {\r\n\t\t\t\tcase FieldType.FIELD_TYPE_FIXED_LIST:\r\n\t\t\t\tcase FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n\t\t\t\t\tconst valueAsObj = object[elementid];\r\n\t\t\t\t\tvalue = valueAsObj[element.optionItemName??\"id\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_DATE:\r\n\t\t\t\t\tvalue = new Date(value).toString();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_IMAGE:\r\n\t\t\t\t\tconst imgLink = new String(value).split(\"~\")[0];\r\n\t\t\t\t\tvalue = <img src ={baseImageUrl+imgLink} width=\"50\" height=\"50\"/>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_COLOR:\r\n\t\t\t\t\tvalue = <strong style={{color:value}} >{value}</strong>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue = object[elementid];\r\n\t\t\t}\r\n\t\t\tresult.push(value);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Fragment, Component } from 'react';\r\nimport { toBase64v2 } from '../../../../utils/ComponentUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport BaseComponent from '../../../BaseComponent';\r\ninterface IState {\r\n    singlePreviewData?: string,\r\n    showInputFile: boolean\r\n}\r\nexport default class FormInputImage extends BaseComponent {\r\n    state: IState = {\r\n        singlePreviewData: undefined,\r\n        showInputFile: false\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    changeSingleImageData = (e) => {\r\n        const app = this;\r\n        toBase64v2(e.target).then(function (data) {\r\n            app.setState({ singlePreviewData: data });\r\n        })\r\n    }\r\n    removeImage = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Remove image?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doRemoveImage();\r\n                }\r\n            })\r\n    }\r\n\r\n    doRemoveImage = () => {\r\n        if (this.ref.current) {\r\n            this.ref.current.value = null;\r\n        }\r\n        this.setState({ singlePreviewData: undefined, showInputFile: false });\r\n    }\r\n\r\n    getEntityElement(): EntityElement {\r\n        return this.props.element;\r\n    }\r\n    componentDidMount() {\r\n        this.prepopulateForm();\r\n    }\r\n    prepopulateForm() {\r\n        if (!this.props.recordToEdit){ \r\n            return;\r\n        }\r\n        let defaultValue = this.props.recordToEdit[this.getEntityElement().id];\r\n        if (!defaultValue){ \r\n            return;\r\n        }\r\n        const fullUrl = baseImageUrl + defaultValue;\r\n        this.setState({ singlePreviewData: fullUrl, showInputFile:true });\r\n    }\r\n    render() {\r\n        const element: EntityElement = this.getEntityElement();\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showInputFile ?\r\n                    <input ref={this.ref}\r\n                        onChange={this.changeSingleImageData} type=\"file\" accept=\"image/*\" name={element.id} className='form-control' />\r\n\r\n                    :\r\n                    <Fragment>\r\n                        <p></p>\r\n                        <AnchorButton onClick={(e)=> this.setState({showInputFile:true})} iconClassName=\"fas fa-plus\" className=\"btn btn-info btn-sm\">Add Image</AnchorButton>\r\n                        <input type=\"hidden\" name={element.id} value=\"NULLED\" />\r\n                    </Fragment>\r\n                }\r\n                <ImagePreview imageData={this.state.singlePreviewData} />\r\n                <AnchorButton show={this.state.singlePreviewData != undefined} onClick={this.removeImage} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\">remove</AnchorButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n","\r\nimport React, { Fragment, Component } from 'react';\r\nimport { toBase64v2 } from '../../../../utils/ComponentUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport BaseComponent from './../../../BaseComponent';\r\ninterface IState {\r\n    previewData: Map<number, string>,\r\n    inputElements: number[]\r\n}\r\nexport default class FormInputImageMultiple extends BaseComponent {\r\n    state: IState = {\r\n        previewData: new Map(),\r\n        inputElements: [1]\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setImageData = (e, index) => {\r\n        const app = this;\r\n        toBase64v2(e.target).then(function (data) {\r\n            const previewData = app.state.previewData;\r\n            previewData.set(index, data);\r\n            app.setState({ previewData: previewData });\r\n        })\r\n    }\r\n\r\n    addInputElement = (e) => {\r\n        const element = this.state.inputElements;\r\n        if (element.length == 0) {\r\n            element.push(1);\r\n        } else {\r\n            element.push(element[element.length - 1] + 1);\r\n        }\r\n        this.setState({ inputElements: element });\r\n    }\r\n    removeInputElement = (removedIndex: number) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Delete image?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doRemoveInputElement(removedIndex);\r\n                }\r\n            })\r\n    }\r\n\r\n    doRemoveInputElement = (removedIndex: number) => {\r\n        const previewData = this.state.previewData;\r\n        const element = this.state.inputElements;\r\n        for (let i = 0; i < element.length; i++) {\r\n            const index = element[i];\r\n            if (index == removedIndex) {\r\n                element.splice(i, 1);\r\n                previewData.delete(removedIndex);\r\n            }\r\n        }\r\n        this.setState({ inputElements: element, previewData: previewData });\r\n    }\r\n    getEntityElement(): EntityElement {\r\n        return this.props.element;\r\n    }\r\n    componentDidMount() {\r\n        this.prepopulateForm();\r\n    }\r\n    prepopulateForm() {\r\n        if (!this.props.recordToEdit) {\r\n            return;\r\n        }\r\n        let defaultValue = this.props.recordToEdit[this.getEntityElement().id];\r\n        if (!defaultValue || new String(defaultValue).trim() == \"\") {\r\n            return;\r\n        }\r\n        const previewData: Map<number, string> = this.state.previewData;\r\n        const imageNames: string[] = new String(defaultValue).split(\"~\");\r\n        const inputElements: number[] = new Array<number>();\r\n        for (let i = 0; i < imageNames.length; i++) {\r\n            const imageName: string = imageNames[i];\r\n            previewData.set(i, imageName);\r\n            inputElements.push(i);\r\n        }\r\n        this.setState({ previewData: previewData, inputElements: inputElements });\r\n    }\r\n    render() {\r\n        const element: EntityElement = this.getEntityElement();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.inputElements.map(index => {\r\n                    const previewData: string | undefined = this.state.previewData.get(index);\r\n                    const isNull = previewData == undefined || new String(previewData).trim() == \"\";\r\n                    const isBase64 = !isNull && isBase64Image(previewData);\r\n                    return (\r\n                        <Fragment>\r\n                            {isNull ?\r\n                                <input onChange={(e) => this.setImageData(e, index)} type=\"file\" accept=\"image/*\"\r\n                                    name={element.id} className='form-control' /> : null}\r\n                            {isBase64 ?\r\n                                <div>\r\n                                    <input value={previewData} type=\"hidden\" name={element.id} />\r\n                                    <ImagePreview imageData={previewData} />\r\n                                </div>\r\n                                :\r\n                                !isNull ?\r\n                                    <div>\r\n                                        <input value={previewData} type=\"hidden\" name={element.id} className='form-control' />\r\n                                        <ImagePreview imageData={baseImageUrl + previewData} />\r\n                                        <p className=\"badge badge-warning\">{previewData}</p>\r\n                                    </div> :\r\n                                    null\r\n                            }\r\n                            <AnchorButton show={this.state.previewData != undefined}\r\n                                onClick={(e: any) => this.removeInputElement(index)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\">\r\n                                remove {index}\r\n                            </AnchorButton>\r\n                        </Fragment>)\r\n                })}\r\n                <p></p>\r\n                <AnchorButton iconClassName=\"fas fa-plus\" onClick={this.addInputElement}>Add</AnchorButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst isBase64Image = (string?: string) => {\r\n    return string && string.startsWith(\"data:image\");\r\n}\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class FormGroup extends Component<any, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={\"form-group \"+ this.props.className+ \" \" + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport { FieldType } from '../../../../models/FieldType';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport FormInputImage from './FormInputImage';\r\nimport FormInputImageMultiple from './FormInputImageMultiple';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport FormGroup from './../../../form/FormGroup';\r\ninterface IState {\r\n    inputList: any[],\r\n    singlePreviewData?: string,\r\n    inputElements: number[]\r\n}\r\nclass FormInputField extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        inputList: [],\r\n        singlePreviewData: undefined,\r\n        inputElements: [1]\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    getEntityElement = (): EntityElement => {\r\n        return this.props.entityElement;\r\n    }\r\n    getRequiredAttr = () => {\r\n        const requiredAttr = { required: this.getEntityElement().required == true }\r\n        return (\r\n            // null\r\n            requiredAttr\r\n        )\r\n    }\r\n    inputListLoaded = (response: WebResponse) => {\r\n        if (!response.entities || response.entities.length == 0) {\r\n            throw new Error(\"Not found\");\r\n        }\r\n        this.setState({ inputList: response.entities });\r\n        this.prepopulateForm();\r\n    }\r\n    loadInputList = () => {\r\n        const element = this.getEntityElement();\r\n        const code = element.entityReferenceClass;\r\n        this.commonAjax(\r\n            this.masterDataService.loadAllEntities,\r\n            this.inputListLoaded,\r\n            this.showCommonErrorAlert,\r\n            code\r\n        )\r\n    }\r\n    hasInputList = () => {\r\n        if (this.getEntityElement().fieldType == FieldType.FIELD_TYPE_FIXED_LIST || this.getEntityElement().fieldType == FieldType.FIELD_TYPE_DYNAMIC_LIST) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    hasInputListAndNotReady = () => {\r\n        return this.hasInputList() && this.state.inputList.length == 0;\r\n    }\r\n    validateInputType = () => {\r\n        if (this.hasInputListAndNotReady()) {\r\n            this.loadInputList();\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateInputType();\r\n    }\r\n    componentDidMount() {\r\n        this.validateInputType();\r\n        this.prepopulateForm();\r\n    }\r\n\r\n    prepopulateForm = () => {\r\n        if (!this.props.recordToEdit || !this.ref.current) {\r\n            return;\r\n\r\n        }\r\n        const fieldName = this.getEntityElement().id;\r\n        let recordValue = this.props.recordToEdit[fieldName];\r\n        if (!recordValue) return;\r\n\r\n        const fieldType: FieldType = this.getEntityElement().fieldType;\r\n        let defaultInputValue = undefined;\r\n        switch (fieldType) {\r\n            case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n            case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                if (this.state.inputList.length == 0) {\r\n                    break;\r\n                }\r\n                const optionValueName = this.getEntityElement().optionValueName;\r\n                if (!optionValueName) break;\r\n                defaultInputValue = recordValue[optionValueName];\r\n                break;\r\n\r\n            default:\r\n                defaultInputValue = recordValue;\r\n                break;\r\n        }\r\n        if (defaultInputValue) {\r\n            this.ref.current.value = defaultInputValue;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const element = this.getEntityElement();\r\n        const requiredAttr = this.getRequiredAttr();\r\n        if (this.hasInputListAndNotReady()) {\r\n            return <div className=\"form-group\">Loading...</div>\r\n        }\r\n        if (element.idField == true) {\r\n            return (\r\n                <FormGroup orientation=\"vertical\" label={element.lableName}>\r\n                    <input {...requiredAttr} value=\"Generated\" ref={this.ref} className=\"form-control\" name={element.id} disabled />\r\n                </FormGroup>\r\n            )\r\n        }\r\n        let input = <Fragment />;\r\n        switch (element.fieldType) {\r\n            case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n            case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                const options = this.state.inputList;\r\n                input = <select ref={this.ref} className=\"form-control\" name={element.id} >\r\n                    {options.map(option => {\r\n                        const optionItemValue = element.optionValueName;\r\n                        const optionItemName = element.optionItemName;\r\n                        if (!optionItemName || !optionItemValue) { return null; }\r\n                        return (\r\n                            <option value={option[optionItemValue]} >{option[optionItemName]}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                break;\r\n            case FieldType.FIELD_TYPE_IMAGE:\r\n                input = element.multiple ?\r\n                    <FormInputImageMultiple app={this.parentApp} recordToEdit={this.props.recordToEdit} element={element} />\r\n                    :\r\n                    <FormInputImage app={this.parentApp} recordToEdit={this.props.recordToEdit} element={element} />\r\n                break;\r\n            case FieldType.FIELD_TYPE_TEXTAREA:\r\n                input = <textarea {...requiredAttr} ref={this.ref} className=\"form-control\" name={element.id} />\r\n                break;\r\n            default:\r\n                input = <input type={element.type} {...requiredAttr} ref={this.ref} className=\"form-control\" name={element.id} />\r\n\r\n        }\r\n        return (\r\n            <FormGroup orientation='vertical' label={element.lableName}>\r\n                { input}\r\n            </FormGroup>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(FormInputField))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport Modal from '../../../container/Modal';\r\nimport EntityProperty from '../../../../models/EntityProperty';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport WebResponse from '../../../../models/WebResponse'; \r\nimport { FieldType } from '../../../../models/FieldType';\r\nimport { toBase64FromFile } from '../../../../utils/ComponentUtil';\r\nimport FormInputField from './FormInputField';\r\n\r\nclass MasterDataForm extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    editMode:boolean = false;\r\n    recordToEdit?:{} = undefined;\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        if (props.recordToEdit) {\r\n            this.editMode = true;\r\n            this.recordToEdit = props.recordToEdit;\r\n        }\r\n    }\r\n    \r\n    getEntityProperty(): EntityProperty {\r\n        return this.props.entityProperty;\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.getEntityProperty().editable == false) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const form = e.target, app = this;\r\n        this.showConfirmation(\"Save data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.submit(form) }\r\n            });\r\n    }\r\n    getEntityElement(key:string) :EntityElement |undefined {\r\n        return EntityProperty.getEntityElement(this.getEntityProperty(), key);\r\n    }\r\n    submit = (form: HTMLFormElement) => {\r\n        const formData: FormData = new FormData(form);\r\n        const object: {} = {}, app = this;\r\n        const promises: Promise<any>[] = new Array();\r\n        const nulledFields:any[] = [];\r\n        formData.forEach((value, key) => {\r\n            console.debug(\"Form data \", key);\r\n            if (!object[key]) {\r\n                object[key] = new Array();\r\n            }\r\n            const element:EntityElement|undefined = this.getEntityElement(key);\r\n            if (!element) return false;\r\n            switch (element.fieldType) {\r\n                case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n                case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                    const valueAttr = element.optionValueName;\r\n                    if (valueAttr) {\r\n                        object[key].push({ [valueAttr]: value })\r\n                    }\r\n                    break;\r\n                case FieldType.FIELD_TYPE_IMAGE:\r\n                    console.debug(key, \" is image\");\r\n                    if (value == \"NULLED\") {\r\n                        console.debug(\"NULLED VALUE ADD: \", key);\r\n                        nulledFields.push(key);\r\n                   \r\n                    } else if(value.constructor.name == \"File\") {\r\n                        let promise = toBase64FromFile(value).then(data => {\r\n                            object[key].push(data);\r\n                        }).catch(console.error)\r\n                            .finally(function () { console.debug(\"finish\") });\r\n                        promises.push(promise);\r\n                    } else {\r\n                        object[key].push(value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    object[key].push(value);\r\n                    break;\r\n            }\r\n            return true;\r\n        }); \r\n        Promise.all(promises).then(function (val) {\r\n            const objectPayload = app.generateRequestPayload(object, nulledFields);\r\n            console.debug(\"Record object to save: \", objectPayload);\r\n            app.ajaxSubmit(objectPayload);\r\n        });\r\n    }\r\n\r\n    generateRequestPayload = (rawObject: {}, nulledFields:any[]): {} => { \r\n        const result:{nulledFields:Array<any>} = this.editMode && this.recordToEdit? \r\n        {...this.recordToEdit, nulledFields:nulledFields} : \r\n        {nulledFields:new Array() };\r\n        for (const key in rawObject) {\r\n            const element: any[] = rawObject[key];\r\n            console.debug(key, \" length: \", element.length);\r\n            if (element.length == 1) {\r\n                result[key] = element[0];\r\n            } else if (element.length > 1) {\r\n                result[key] = element.join(\"~\");\r\n            }\r\n        }\r\n        result.nulledFields = nulledFields;\r\n        return result;\r\n    }\r\n\r\n    ajaxSubmit = (object: any) => {\r\n        this.commonAjax(\r\n            this.masterDataService.save, this.recordSaved, this.showCommonErrorAlert,\r\n            this.getEntityProperty().entityName, object, this.editMode\r\n        )\r\n    }\r\n    recordSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Record saved\");\r\n    }\r\n    render() {\r\n        const entityProperty: EntityProperty = this.getEntityProperty();\r\n\r\n        const editModeStr = this.editMode ?  <span className=\"badge badge-warning\">Edit Mode</span>:\"\"\r\n        return ( \r\n            <div id=\"MasterDataForm\" >\r\n                <AnchorButton style={{ marginBottom: '5px' }} onClick={this.props.onClose} iconClassName=\"fas fa-angle-left\">Back</AnchorButton>\r\n                <form onSubmit={this.onSubmit} id=\"record-form\">\r\n                <Modal title={<span>{entityProperty.alias} Record Form {editModeStr}</span>} footerContent={<SubmitReset />}>\r\n                        <InputFields recordToEdit={this.recordToEdit} app={this.parentApp} entityProperty={entityProperty} />\r\n                    </Modal>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SubmitReset = (props) => {\r\n    return (\r\n        <div className=\"btn-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            <input type=\"reset\" className=\"btn btn-warning\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputFields = (props: { app: any, entityProperty: EntityProperty, recordToEdit:{}|undefined }) => {\r\n    const elements: EntityElement[] = props.entityProperty.elements;\r\n    const groupedElements: Array<Array<EntityElement>> = new Array();\r\n    let counter: number = 0;\r\n    groupedElements.push(new Array());\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        if (i > 0 && i % 5 == 0) {\r\n            counter++;\r\n            groupedElements.push(new Array());\r\n        }\r\n        groupedElements[counter].push(element);\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            {groupedElements.map(elements => {\r\n                return (\r\n                    <div className=\"col-lg-6\">\r\n                        {elements.map(element => {\r\n                            return <FormInputField recordToEdit={props.recordToEdit} app={props.app} entityElement={element} />\r\n                        })}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(connect(mapCommonUserStateToProps)(MasterDataForm))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport AnchorButton from './../../navigation/AnchorButton';\r\nimport EntityProperty from '../../../models/EntityProperty';\r\nimport WebResponse from './../../../models/WebResponse';\r\n\r\nclass EditDeleteAction extends BaseComponent {\r\n    masterDataService:MasterDataService = MasterDataService.getInstance();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n    }\r\n    delete = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(function(ok){\r\n            if (ok) {\r\n                app.doDelete();\r\n            }\r\n        });\r\n    }\r\n    doDelete = () => {\r\n        const record = this.props.record;\r\n        const entityProperty:EntityProperty = this.props.entityProperty;\r\n        const recordId = EntityProperty.getRecordId(record, entityProperty);\r\n        this.commonAjax(\r\n            this.masterDataService.delete,\r\n            this.recordDeleted,\r\n            this.showCommonErrorAlert,\r\n            entityProperty.entityName, recordId\r\n        )\r\n    }\r\n    getRecordById = () => {\r\n        const record = this.props.record;\r\n        const entityProperty:EntityProperty = this.props.entityProperty;\r\n        const recordId = EntityProperty.getRecordId(record, entityProperty);\r\n        this.commonAjax(\r\n            this.masterDataService.getById,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            entityProperty.entityName,\r\n            recordId\r\n        );\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (!response.entities || response.entities.length == 0){\r\n            throw new Error(\"Record not found\");\r\n        }\r\n        if(this.props.showEditForm) {\r\n            this.props.showEditForm(response);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record deleted\");\r\n        this.props.reload();\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton onClick={this.getRecordById} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"></AnchorButton>\r\n                <AnchorButton onClick={this.delete} className=\"btn btn-danger btn-sm\" iconClassName=\"fas fa-times\"></AnchorButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditDeleteAction))","\r\nimport React, { Component, Fragment } from 'react';\r\nimport HeaderProps from './../../../models/HeaderProps';\r\nexport default class DataTableHeader extends Component<any, any>\r\n{\r\n    render(){\r\n        const props = this.props;\r\n        const headerProps: HeaderProps[] = props.headerProps;\r\n        return (<thead>\r\n            <tr>\r\n                <th>No</th>\r\n                {headerProps.map(headerProp => {\r\n                    const isDate = headerProp.isDate;\r\n                    return (\r\n                        <th >\r\n                            <p>{headerProp.label}</p>\r\n                            <div>\r\n                                {isDate ?\r\n                                    <Fragment>\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-day\"}\r\n                                            className=\"input-filter\" placeholder={\"day\"} />\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-month\"}\r\n                                            className=\"input-filter\" placeholder={\"month\"} />\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-year\"}\r\n                                            className=\"input-filter\" placeholder={\"year\"} />\r\n                                    </Fragment>\r\n                                    :\r\n                                    <input onChange={props.filterOnChange} placeholder={headerProp.label}\r\n                                        className=\"input-filter\" name={headerProp.value} />\r\n                                }</div>\r\n                            <div className=\"btn-group\">\r\n                                <button data-orderType=\"asc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"btn btn-outline-secondary btn-sm\">\r\n                                    <i data-orderType=\"asc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"fas fa-angle-up\" /></button>\r\n                                <button data-orderType=\"desc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"btn btn-outline-secondary btn-sm\">\r\n                                    <i data-orderType=\"desc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"fas fa-angle-down\" /></button>\r\n                            </div>\r\n                        </th>\r\n                    )\r\n                })}\r\n                <th>Action</th>\r\n            </tr>\r\n        </thead>)\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div key={\"spinner-item-\"+i}></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Modal from '../../container/Modal';\r\nimport Filter from './../../../models/Filter';\r\nimport EntityProperty from './../../../models/EntityProperty';\r\nimport WebRequest from './../../../models/WebRequest';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport HeaderProps from './../../../models/HeaderProps';\r\nimport './DataTable.css'\r\nimport EntityValues from './../../../utils/EntityValues';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport MasterDataForm from './form/MasterDataForm';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport EditDeleteAction from './EditDeleteAction';\r\nimport DataTableHeader from './DataTableHeader';\r\nimport SimpleError from './../../alert/SimpleError';\r\nimport Spinner from './../../loader/Spinner';\r\ninterface IState { recordData?: WebResponse, showForm: boolean, filter: Filter, loading: boolean }\r\nclass MasterDataList extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        showForm: false, loading: false,\r\n        filter: { limit: 5, page: 0, fieldsFilter: {} }\r\n    }\r\n    recordToEdit?: {} = undefined;\r\n    entityProperty: EntityProperty;\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.entityProperty = this.props.entityProperty;\r\n    }\r\n    /**\r\n     * remove fieldsfilter empty values\";\r\n     */\r\n    adjustFilter = (filter: Filter): Filter => {\r\n        const fieldsFilter = filter.fieldsFilter;\r\n        for (const key in fieldsFilter) {\r\n            const element = fieldsFilter[key];\r\n            if (element == undefined || element == null || new String(element).length == 0) {\r\n                if (filter.fieldsFilter != undefined) {\r\n                    delete filter.fieldsFilter[key];\r\n                }\r\n            }\r\n        }\r\n        return filter;\r\n    }\r\n    loadEntities = (page: number | undefined) => {\r\n        const filter = this.state.filter;\r\n        const entityName = this.entityProperty.entityName;\r\n        filter.page = page ?? filter.page;\r\n        const request: WebRequest = {\r\n            entity: entityName,\r\n            filter: this.adjustFilter(filter)\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.loadEntities,\r\n            this.entitiesLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        );\r\n\r\n    }\r\n    entitiesLoaded = (response: WebResponse) => {\r\n        this.setState({ recordData: response, filter: response.filter });\r\n    }\r\n    checkDefaultData = () => {\r\n        if (this.state.loading) {\r\n            return;\r\n        }\r\n        if (this.entityProperty.entityName == this.props.entityProperty.entityName && this.state.recordData != undefined) {\r\n            return;\r\n        }\r\n        this.entityProperty = this.props.entityProperty;\r\n        this.loadEntities(0);\r\n    }\r\n    startLoading() { this.setState({ loading: true }) }\r\n    endLoading() { this.setState({ loading: false }) }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.checkDefaultData();\r\n    }\r\n    componentDidMount() {\r\n        this.checkDefaultData();\r\n    }\r\n    getRecordNumber = (i: number): number => {\r\n        let res = (this.state.filter.page ?? 0) * (this.state.filter.limit ?? 5) + i + 1;\r\n        return res;\r\n    }\r\n    filterFormSubmit = (e) => {\r\n        let page = this.state.filter.useExistingFilterPage ? this.state.filter.page : 0;\r\n        this.loadEntities(page);\r\n    }\r\n    filterOnChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter == undefined) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[name] = value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    filterReset = (e) => {\r\n        const filter = this.state.filter;\r\n        filter.fieldsFilter = {};\r\n        filter.limit = 5;\r\n        this.setState({ filter: filter });\r\n    }\r\n    orderButtonOnClick = (e) => {\r\n        const dataset: DOMStringMap = e.target.dataset;\r\n        const filter = this.state.filter;\r\n        filter.orderBy = dataset['orderby'];\r\n        filter.orderType = dataset['ordertype'];\r\n        this.setState({ filter: filter });\r\n        this.loadEntities(0);\r\n    }\r\n    showEditForm = (response: WebResponse) => {\r\n        if (!response.entities) {\r\n            return;\r\n        }\r\n        this.recordToEdit = response.entities[0];\r\n        this.setState({ showForm: true });\r\n    }\r\n    showCreateForm = (e) => {\r\n        this.recordToEdit = undefined;\r\n        this.setState({ showForm: true });\r\n    }\r\n    updateFilterPage = (page: any) => {\r\n        const filter = this.state.filter;\r\n        filter.useExistingFilterPage = true;\r\n        filter.page = parseInt(page) - 1;\r\n        this.setState({ filter: filter });\r\n    }\r\n    updateFilterLimit = (limit: any) => {\r\n        const filter = this.state.filter;\r\n        filter.limit = parseInt(limit);\r\n        this.setState({ filter: filter });\r\n    }\r\n    render() {\r\n        if (undefined == this.state.recordData) {\r\n            return <h2>Please Wait..</h2>\r\n        }\r\n        const headerProps: HeaderProps[] = EntityProperty.getHeaderLabels(this.props.entityProperty);\r\n        const resultList: any[] = this.state.recordData.entities ? this.state.recordData.entities : [];\r\n        if (headerProps == undefined || resultList == undefined) {\r\n            return <SimpleError />\r\n        }\r\n\r\n        if (this.state.showForm == true) {\r\n            return <MasterDataForm recordToEdit={this.recordToEdit} entityProperty={this.entityProperty} onClose={(e) => { this.setState({ showForm: false }) }} app={this.parentApp} />\r\n        }\r\n\r\n        return (\r\n            <div id=\"MasterDataList\">\r\n                <AnchorButton show={this.entityProperty.editable == true} style={{ marginBottom: '5px' }} onClick={this.showCreateForm} iconClassName=\"fas fa-plus\">Add Record</AnchorButton>\r\n                <form id=\"filter-form\" onSubmit={(e) => { e.preventDefault() }}>\r\n                    <Modal title=\"Filter\" toggleable={true}>\r\n                        <div>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-6\">\r\n                                    <input value={(this.state.filter.page ?? 0) + 1} onChange={(e) => { this.updateFilterPage(e.target.value) }} min=\"1\" className=\"form-control\" type=\"number\" placeholder=\"go to page\" />\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <input value={this.state.filter.limit} onChange={(e) => this.updateFilterLimit(e.target.value)} min=\"1\" className=\"form-control\" type=\"number\" placeholder=\"record per page\" />\r\n                                </div>\r\n                            </div>\r\n                            <SubmitResetButton onSubmit={this.filterFormSubmit} onReset={this.filterReset} />\r\n                        </div>\r\n                    </Modal>\r\n                    <NavigationButtons limit={this.state.filter.limit ?? 5} totalData={this.state.recordData.totalData ?? 0}\r\n                        activePage={this.state.filter.page ?? 0} onClick={this.loadEntities} />\r\n                    <Modal title=\"Data List\" >\r\n                        {this.state.loading ?\r\n                            <Loading loading={this.state.loading} /> : null}\r\n                        <div className=\"container-fluid\" style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\" >\r\n                                <DataTableHeader orderButtonOnClick={this.orderButtonOnClick} filterOnChange={this.filterOnChange} headerProps={headerProps} />\r\n                                <tbody>\r\n                                    {\r\n                                        resultList.map((result, i) => {\r\n                                            const number = this.getRecordNumber(i);\r\n                                            const values: Array<any> = EntityValues.parseValues(result, this.props.entityProperty);\r\n                                            return (<tr>\r\n                                                <td>{number}</td>\r\n                                                {values.map(value => {\r\n                                                    try {\r\n                                                        return (<td>{value}</td>)\r\n                                                    } catch (error) {\r\n                                                        return (<td>-</td>)\r\n                                                    }\r\n                                                })}\r\n                                                <td><EditDeleteAction show={this.entityProperty.editable == true} showEditForm={this.showEditForm} record={result} entityProperty={this.entityProperty} reload={() => this.loadEntities(undefined)} app={this.parentApp} /></td>\r\n                                            </tr>)\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </Modal>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst Loading = ({loading}) => {\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', paddingTop: '2rem', backgroundColor: 'rgb(240,240,240,0.5)', marginLeft: '-1rem', marginTop: '-1rem', position: 'absolute' }}>\r\n            <Spinner show={loading} />\r\n        </div>\r\n    )\r\n}\r\nconst SubmitResetButton = (props: any) => {\r\n    return (<div className=\"btn-group\">\r\n        <button onClick={props.onSubmit} className=\"btn btn-secondary btn-sm\"><span className=\"icon\"><i className=\"fas fa-play\" /></span>Apply Filter</button>\r\n        <button onClick={props.onReset} type=\"reset\" className=\"btn btn-warning btn-sm\"><span className=\"icon\"><i className=\"fas fa-sync-alt\" /></span>Reset</button>\r\n    </div>)\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(MasterDataList))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport EntityProperty from '../../../models/EntityProperty';\r\nimport MasterDataList from './MasterDataList';\r\ninterface IState {\r\n    entityProperty?: EntityProperty\r\n}\r\nclass MasterDataManagement extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    code: string = \"\";\r\n    loadingEntityProperty: boolean = false;\r\n    entityProperty: undefined\r\n    constructor(props: any) {\r\n        super(props, true);\r\n\r\n    }\r\n    entityPropertyLoaded = (response: WebResponse) => {\r\n        this.loadingEntityProperty = false;\r\n        if (response.entityProperty == undefined) {\r\n            return;\r\n        }\r\n        this.masterDataService.setEntityProperty(this.props.code, response.entityProperty);\r\n        this.setState({ entityProperty: response.entityProperty });\r\n        this.setTitle(response.entityProperty);\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.code != undefined && this.code != this.props.code) {\r\n            this.code = this.props.code;\r\n            this.loadEntityProperty();\r\n        }\r\n        console.debug(\"updated this.props.code: \", this.props.code);\r\n    }\r\n    setTitle = (entityProp: EntityProperty) => {\r\n        document.title = new String(entityProp?.alias).toString();\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.code != undefined && this.code != this.props.code) {\r\n            this.code = this.props.code;\r\n            this.loadEntityProperty();\r\n        }\r\n    }\r\n    startLoading() {\r\n        //\r\n    }\r\n    endLoading() {\r\n        //\r\n    }\r\n    loadEntityProperty() {\r\n\r\n        if (undefined == this.code && this.loadingEntityProperty == true) {\r\n            return;\r\n        }\r\n        const existingEntityProperty = this.masterDataService.getEntityProperty(this.code);\r\n        if (existingEntityProperty != undefined) {\r\n            this.loadingEntityProperty = false;\r\n            this.setState({ entityProperty: existingEntityProperty });\r\n            this.setTitle(existingEntityProperty);\r\n\r\n            return;\r\n        }\r\n        this.loadingEntityProperty = true;\r\n        this.setState({ entityProperty: undefined });\r\n        this.commonAjax(\r\n            this.masterDataService.loadEntityProperty,\r\n            this.entityPropertyLoaded,\r\n            (e: any) => { this.loadingEntityProperty = false; this.showCommonErrorAlert(e) },\r\n            this.code\r\n        )\r\n\r\n    }\r\n    render() {\r\n        if (this.state.entityProperty == undefined) {\r\n            return <div className=\"row\">\r\n                <div className=\"col-1\"><div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-10\"><h4>Loading configuration</h4></div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div id=\"MasterDataManagement\" className=\"container-fluid\">\r\n                <h2>{this.state.entityProperty.alias}</h2>\r\n                <MasterDataList app={this.parentApp} entityProperty={this.state.entityProperty} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MasterDataManagement))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport Menu from './../../../models/Menu';\r\nimport ManagementProperty from '../../../models/ManagementProperty';\r\nimport MasterDataManagement from './MasterDataManagement';\r\n\r\ninterface IState {\r\n    code?: string\r\n    // managementProperties:ManagementProperty[]\r\n}\r\nclass MasterDataMain extends BaseMainMenus {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        code: undefined\r\n    };\r\n    constructor(props: any) {\r\n        super(props, \"Master Data\", true);\r\n    }\r\n\r\n    managementPropertiesLoaded = (response: WebResponse) => {\r\n        this.masterDataService.managementProperties = response.generalList ? response.generalList : [];\r\n        this.setSidebarMenus();\r\n        this.refresh();\r\n    }\r\n    setSidebarMenus = () => {\r\n        const sidebarMenus: Menu[] = [];\r\n        const managementProperties: ManagementProperty[] = this.masterDataService.managementProperties;\r\n        for (let i = 0; i < managementProperties.length; i++) {\r\n            const element = managementProperties[i];\r\n            sidebarMenus.push({\r\n                name: element.label,\r\n                url: element.entityName,\r\n                code: element.entityName,\r\n                menuClass: element.iconClassName\r\n            });\r\n        }\r\n        if (this.props.setSidebarMenus) {\r\n            this.props.setSidebarMenus(sidebarMenus);\r\n        }\r\n    }\r\n    loadManagamenetPages = () => {\r\n        if (this.masterDataService.managementProperties.length > 0) {\r\n            this.setSidebarMenus();\r\n            this.refresh();\r\n            return;\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.loadManagementProperties,\r\n            this.managementPropertiesLoaded,\r\n            this.showCommonErrorAlert\r\n        );\r\n    }\r\n    getCode = (): string => {\r\n        return this.props.match.params.code;\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.loadManagamenetPages();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setSidebarMenus();\r\n        // console.debug(\"this.getCode(): \", this.getCode());\r\n        if (this.state.code != this.getCode()) {\r\n            this.setState({ code: this.getCode() });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.getCode() != undefined && this.getCode() != null && this.getCode() != \"\") {\r\n            return <MasterDataManagement app={this.parentApp} code={this.getCode()} />\r\n        }\r\n        if (this.masterDataService.managementProperties.length == 0) {\r\n            return <div className=\"container-fluid\"><h3>Loading</h3></div>\r\n        }\r\n        const properties: ManagementProperty[] = this.masterDataService.managementProperties;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Master Data Page</h2>\r\n                <div className=\"row\">\r\n                    {properties.map(property => {\r\n\r\n                        return (\r\n                            <div className=\"col-md-2 text-center\" style={{ marginBottom: '10px' }}>\r\n                                <h2 ><Link className=\"btn btn-warning btn-lg\" to={\"/management/\" + property.entityName} ><i className={property.iconClassName} /></Link></h2>\r\n                                <p>{property.label}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(MasterDataMain))","\r\n\r\nimport React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass TransactionMain extends BaseMainMenus {\r\n    constructor(props: any) {\r\n        super(props, \"Transaction\", true);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"TransactionMain\" className=\"container-fluid\">\r\n                <h2>Transaction Page</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 text-center\">\r\n                        <h1> <Link className=\"btn btn-info btn-lg\" to=\"/transaction/selling\"><i className=\"fas fa-cash-register\" /></Link></h1>\r\n                        <p>Selling</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 text-center\">\r\n                        <h1><Link className=\"btn btn-info btn-lg\" to=\"/transaction/purchasing\"><i className=\"fas fa-shopping-basket\" /></Link></h1>\r\n                        <p>Purchasing</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionMain))","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default class AnchorWithIcon extends Component<any, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={{marginRight:'5px'}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </Link>\r\n        )\r\n    }\r\n}","import * as url from '../constant/Url'\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport WebRequest from './../models/WebRequest';\r\nimport Filter from './../models/Filter';\r\nexport default class CatalogService {\r\n    private static instance?:CatalogService;\r\n    totalProduct:number = 0;\r\n\r\n    static getInstance(): CatalogService {\r\n        if (this.instance == null) {\r\n            this.instance = new CatalogService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    setTotalProduct = (value:number) => {\r\n        this.totalProduct = value;\r\n    }\r\n    getTotalProduct = () => {\r\n        const endpoint = url.contextPath().concat(\"api/public/totalproduct\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    /**\r\n     * \r\n     * @param {JSON} raw \r\n     */\r\n    getProductList = (raw:Filter) => {\r\n         \r\n        const fieldsFilter = {\r\n            // withStock: raw.withStock == true,\r\n            // withSupplier: raw.withSupplier == true,\r\n            // withCategories: raw.withCategories == true,\r\n            ... raw.fieldsFilter\r\n        }\r\n        \r\n        const request:WebRequest = {\r\n            entity: \"product\",\r\n            filter: {\r\n                exacts: raw.exacts == true,\r\n                limit: raw.limit ? raw.limit : 10,\r\n                page: raw.page ? raw.page : 0,\r\n                fieldsFilter: fieldsFilter,\r\n                orderBy: raw.orderBy,\r\n                orderType: raw.orderType\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n      \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} code \r\n     */\r\n    getProductDetail = (code:string) => this.getProductList({\r\n        limit: 1,\r\n        exacts: true,\r\n        fieldsFilter: {\r\n            'code' : code,\r\n            'withStock': true,\r\n            'withSupplier': true,\r\n        }\r\n    })\r\n\r\n  /**\r\n   * \r\n   * @param req \r\n   */\r\n    getMoreSupplier = (req:any) => { \r\n\r\n        const request:WebRequest = {\r\n            filter: {\r\n                page: req.page,\r\n                fieldsFilter: { productId: req.productId }\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/moresupplier\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n\r\n}","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Menu from './../../../models/Menu';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport Card from './../../container/Card';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport CatalogService from './../../../services/CatalogService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\ninterface IState { totalProduct: number }\r\nclass CatalogMain extends BaseMainMenus {\r\n    catalogService: CatalogService = CatalogService.getInstance();\r\n    state: IState = { totalProduct: 0 }\r\n    constructor(props: any) {\r\n        super(props, \"Catalog\");\r\n    }\r\n    totalProductLoaded = (response: WebResponse) => {\r\n        this.catalogService.setTotalProduct(response.totalData ?? 0);\r\n        this.setState({ totalProduct: response.totalData });\r\n    }\r\n    totalProductNotLoaded = (e: any) => {\r\n        console.error(e);\r\n    }\r\n    loadTotalProduct = () => {\r\n        this.commonAjax(\r\n            this.catalogService.getTotalProduct,\r\n            this.totalProductLoaded,\r\n            this.totalProductNotLoaded\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        if (this.catalogService.totalProduct <= 0) {\r\n            this.loadTotalProduct();\r\n        } else {\r\n            this.setState({ totalProduct: this.catalogService.totalProduct });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"CatalogMain\" className=\"container-fluid\">\r\n                <h2>Shop Catalog</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <Card title=\"Product Catalog\" className=\"bg-light\">\r\n                            <h4>Total Product: {this.state.totalProduct}</h4>\r\n                            <div className=\"btn-group\">\r\n                                <AnchorWithIcon className=\"btn btn-info\" to=\"/catalog/product\">View Catalog</AnchorWithIcon>\r\n                                <AnchorButton iconClassName=\"fas fa-sync-alt\" onClick={this.loadTotalProduct} />\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <Card title=\"Supplier Catalog\" className=\"bg-light\">\r\n                            <h4>Supplier catalog</h4>\r\n                            <AnchorWithIcon className=\"btn btn-info\" to=\"/catalog/supplier\">View Catalog</AnchorWithIcon>\r\n\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(CatalogMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'opx',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.shortDescription}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcomingMessage}</p>\r\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(HomeMain))","\nexport default class BaseEntity{\n\tid?:number;\n\tcreatedDate?:Date;\n\tmodifiedDate?:Date;\n\tdeletedDate?:Date;\n\tdeleted?:boolean;\n\n}\n","import BaseEntity from './BaseEntity';\nimport Unit from './Unit';\nimport Category from './Category';\nimport Supplier from './Supplier';\n\nexport default class Product extends BaseEntity{\n\tcode?:string;\n\tname?:string;\n\tdescription?:string;\n\tprice?:number;\n\ttype?:string;\n\timageUrl?:string;\n\tunit?:Unit;\n\tcategory?:Category;\n\tnewProduct?:boolean;\n\tcount?:number;\n\tsuppliers?:Supplier[];\n\n\tstatic getDefaultPicture(product:Product, baseImageUrl?:string) :string{\n\n\t\tif (product.imageUrl && product.imageUrl?.length >0) {\n\t\t\treturn (baseImageUrl?baseImageUrl:\"\") + product.imageUrl.split(\"~\")[0];\n\t\t}\n\t\treturn (baseImageUrl?baseImageUrl:\"\") + \"default.bmp\";\n\t}\n\tstatic getPictureNames(product:Product, baseImageUrl?:string): string[] {\n\t\tif (product.imageUrl && product.imageUrl?.length >0) {\n\t\t\tlet names:string[] = product.imageUrl.split(\"~\");\n\t\t\tif (baseImageUrl) {\n\t\t\t\treturn names.map(name=>{\n\t\t\t\t\treturn baseImageUrl+name;\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn names;\n\t\t}\n\t\treturn [Product.getDefaultPicture(product, baseImageUrl)]\n\t}\n\n\tstatic countSummary(products:Product[]) : number\n\t{\n\t\tlet count = 0;\n\t\tfor (let i = 0; i < products.length; i++) {\n\t\t\tconst element = products[i];\n\t\t\tcount += element.count??0;\n\t\t}\n\t\treturn count;\n\t}\n\n}\n","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport Product from './../../../models/Product';\r\n\r\nclass CartMain extends BaseMainMenus\r\n{\r\n    constructor(props:any){\r\n        super(props, \"Shopping Cart\");\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"CartMain\" className=\"container-fluid\">\r\n                <h2>Shopping Cart</h2>\r\n                <div className=\"alert alert-info\">\r\n                   <p>Plan your shopping list</p>\r\n                   <p>Current items: <strong>{Product.countSummary(this.props.cart)}</strong></p>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(CartMain))","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { emptyPromise, commonAjaxPostCalls } from './Promises'; \r\nimport Transaction from './../models/Transaction';\r\nimport WebRequest from './../models/WebRequest';\r\nimport WebResponse from './../models/WebResponse';\r\nconst axios = require('axios');\r\nexport default class BaseTransactionService {\r\n\r\n    getProductList = (raw) => {\r\n        if( raw.value == null || raw.value.toString().trim() == \"\"){\r\n            return emptyPromise({entities:[]});\r\n        }\r\n        const fieldsFilter = {};\r\n        fieldsFilter[raw.key] = raw.value;\r\n        const request = {\r\n            entity: \"product\", \r\n            filter: { \r\n                page: 0, \r\n                exacts: (raw.exacts == true), \r\n                limit: 15, \r\n                fieldsFilter: fieldsFilter \r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/entity/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    submitTransactionSelling = (transaction:Transaction) => this.submitTransaction({...transaction, type:'SELLING' })\r\n    submitTransactionPurchasing = (transaction:Transaction) => this.submitTransaction({...transaction, type:'PURCHASING' })\r\n\r\n    submitTransaction = (raw:Transaction) => {\r\n        console.debug(\"submitTransaction \", raw.type);\r\n        const type = raw.type;\r\n        const request:WebRequest = {\r\n            productFlows: raw.productFlows\r\n        }\r\n        return new Promise<WebResponse>(function (resolve, reject) {\r\n            let endpoint:string = \"\";\r\n            switch (type) {\r\n                case \"SELLING\":\r\n                    if(null == raw.customer){\r\n                        reject(\"Invalid Customer\");\r\n                        break;\r\n                    }\r\n                    request.customer = raw.customer;\r\n                    endpoint = url.contextPath().concat(\"api/app/transaction/selling\")\r\n                    break;\r\n                case \"PURCHASING\": \r\n                default:\r\n                    if(null == raw.supplier){\r\n                        reject(\"Invalid Supplier\");\r\n                        break;\r\n                    }\r\n                    request.supplier = raw.supplier;\r\n                    endpoint = url.contextPath().concat(\"api/app/transaction/purchasing\")\r\n                    break;\r\n            } \r\n            axios.post(endpoint, request,{\r\n                headers: commonAuthorizedHeader(),\r\n            })\r\n                .then(response => response.data).then(function (response:WebResponse) {\r\n                    if (response.code == \"00\") \r\n                    { resolve(response) } \r\n                    else \r\n                    { reject(response) }\r\n                }).\r\n                catch((e:any) =>{ console.error(e); reject(e)});\r\n        })\r\n    }\r\n\r\n    getStockInfo = (productCode:string) => {\r\n        const request:WebRequest = {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                fieldsFilter: { \"code\": productCode, withStock: true }\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport BaseTransactionService from './BaseTransactionService';\r\nimport Supplier from './../models/Supplier';\r\nimport ProductFlow from './../models/ProductFlow';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class TransactionPurchasingService extends BaseTransactionService {\r\n    private static instance?:TransactionPurchasingService;\r\n\r\n    static getInstance(): TransactionPurchasingService {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionPurchasingService();\r\n        }\r\n        return this.instance;\r\n    } \r\n\r\n    // submit = (productFlows:ProductFlow[], supplier: Supplier) => {\r\n    //     const request:WebRequest = {\r\n    //         supplier:supplier,\r\n    //         productFlows:productFlows\r\n    //     };\r\n    //     const endpoint = contextPath()+\"api/app/transaction/purchasing\";\r\n    //     return commonAjaxPostCalls(endpoint, request);\r\n    // }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport TransactionPurchasingService from './../../../../services/TransactionPurchasingService';\r\nimport Supplier from './../../../../models/Supplier';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from './../../../../services/MasterDataService';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\r\nimport Spinner from './../../../loader/Spinner';\r\ninterface IState {\r\n    supplier?: Supplier;\r\n    supplierNotFound: boolean;\r\n    loading: boolean;    \r\n}\r\nclass SupplierForm extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        supplierNotFound: false, loading: false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchSupplier = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('id');\r\n        if (!id) return;\r\n        this.loadSupplier(parseInt(id.toString()));\r\n    }\r\n    supplierLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Supplier not found\");\r\n        }\r\n        this.props.setSupplier(response.entities[0]);\r\n        this.setState({ supplier: response.entities[0], supplierNotFound: false });\r\n    }\r\n    supplierNotFound = (e: any) => {\r\n        this.setState({ supplierNotFound: true });\r\n    }\r\n    loadSupplier = (id: number) => {\r\n        this.commonAjax(this.masterDataService.getById,\r\n            this.supplierLoaded, this.supplierNotFound, 'supplier', id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchSupplier} >\r\n                <Modal toggleable={true} title=\"Supplier form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/supplier\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Supplier code\" required type=\"number\" className=\"form-control\" name=\"id\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <SupplierDetail loading={this.state.loading} supplier={this.state.supplier} notFound={this.state.supplierNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst SupplierDetail = (props: {loading:boolean, supplier?: Supplier, notFound: boolean }) => {\r\n    const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Supplier not found</div></div>\r\n    }\r\n    if (!props.supplier) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select supplier</div></div>\r\n    }\r\n    const supplier: Supplier = props.supplier;\r\n    return (\r\n        <div style={style}>\r\n            <h2>{supplier.name}</h2>\r\n            <address>\r\n                {supplier.address}<br />\r\n                <abbr title=\"Contact\">Contact: </abbr>{supplier.contact}\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SupplierForm))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport TransactionPurchasingService from '../../../services/TransactionPurchasingService';\r\nimport Product from '../../../models/Product';\r\nimport ProductFlow from '../../../models/ProductFlow';\r\nimport Modal from '../../container/Modal';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\nimport Spinner from '../../loader/Spinner';\r\ninterface IState {\r\n    product?: Product;\r\n    productFlows: ProductFlow[];\r\n    selectedProductFlow?: ProductFlow;\r\n    productNotFound: boolean;\r\n    loading:boolean;\r\n}\r\nexport default class ProductForm extends BaseComponent {\r\n\r\n    transactionService = TransactionPurchasingService.getInstance();\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        productFlows: [],\r\n        productNotFound: false,\r\n        loading:false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { ...this.state };\r\n\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchProduct = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('code');\r\n        if (!id) return;\r\n        this.loadProduct((id.toString()));\r\n    }\r\n    productLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Product not found\");\r\n        }\r\n        this.props.setProduct(response.entities[0]);\r\n        this.setState({ product: response.entities[0], productNotFound: false });\r\n    }\r\n    setProduct = (product: Product) => {\r\n        this.setState({ product: product, productNotFound: false });\r\n    }\r\n    productNotFound = (e: any) => {\r\n        this.setState({ productNotFound: true });\r\n    }\r\n    loadProduct = (code: string) => {\r\n        // this.commonAjax(this.masterDataService.getBy,\r\n        //     this.productLoaded, this.productNotFound, 'product', { code: code });\r\n\r\n        this.commonAjaxWithProgress(this.transactionService.getStockInfo,\r\n            this.productLoaded, this.productNotFound, code);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchProduct} >\r\n               \r\n                <Modal toggleable={true}  title=\"Product form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/product\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Product code\" required type=\"text\" className=\"form-control\" name=\"code\" />\r\n                        </FormGroup>\r\n                    </div> \r\n                    \r\n                    <ProductDetail loading={this.state.loading} product={this.state.product} notFound={this.state.productNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst ProductDetail = (props: { loading:boolean, product?: Product, notFound: boolean }) => {\r\n   const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Product not found</div></div>\r\n    }\r\n    if (!props.product) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select product</div></div>\r\n    }\r\n    const product: Product = props.product;\r\n    return (\r\n        <div style={style}>\r\n            <h4>{product.name}</h4>\r\n            <table className=\"table\">\r\n                <thead><tr>\r\n                    <th>Unit</th>\r\n                    <th>Category</th>\r\n                    <th>Price@Unit</th>\r\n                    <th>Current Amount</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{product.unit ? product.unit.name : '-'}</td>\r\n                        <td>{product.category ? product.category.name : '-'}</td>\r\n                        <td style={{ fontFamily: 'monospace' }}>{product.price}</td>\r\n                        <td>{product.count}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n","import BaseEntity from './BaseEntity';\nimport Customer from './Customer';\nimport ProductFlow from './ProductFlow';\nimport Supplier from './Supplier';\nimport User from './User';\n\nexport default class Transaction extends BaseEntity{\n\tcustomer?:Customer;\n\tsupplier?:Supplier;\n\tcode?:string;\n\ttype?:string;\n\tmode?:string;\n\ttransactionDate?:Date;\n\tuser?:User;\n\tproductFlows?:ProductFlow[];\n\tproductFlow?:any;\n\n}\n","import BaseEntity from './BaseEntity';\nimport Transaction from './Transaction';\nimport Product from './Product';\nimport ProductFlowStock from './ProductFlowStock';\n\nexport default class ProductFlow extends BaseEntity{\n\n\ttransaction?:Transaction;\n\texpiryDate?:Date;\n\tprice?:number;\n\tcount?:number;\n\tflowReferenceId?:number;\n\tproduct?:Product;\n\ttransactionId?:number;\n\tproductFlowStock?:ProductFlowStock;\n\ttotalPrice?:number; \n\tstatic create(product:Product) :Product{\n\t\tconst obj = new ProductFlow();\n\t\tobj.product = product;\n\t\treturn obj;\n\n\t}\n}\n","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport ProductFlow from './../../../models/ProductFlow';\r\nimport Supplier from './../../../models/Supplier';\r\nimport Product from '../../../models/Product';\r\nimport React from 'react';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Customer from './../../../models/Customer';\r\ninterface IState {\r\n    supplier?: Supplier;\r\n    productFlows: ProductFlow[];\r\n    selectedProductFlow?: ProductFlow;\r\n    customer?:Customer\r\n}\r\nexport default class BaseTransactionComponent extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        productFlows: []\r\n    }\r\n    productFormRef: React.RefObject<any> = React.createRef();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    setProduct = (product: Product) => {\r\n        const productFlow = ProductFlow.create(product);\r\n        this.setState({ selectedProductFlow: productFlow });\r\n    }\r\n    addToCart = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.selectedProductFlow) {\r\n            this.showError(\"Please select product!\");\r\n            return;\r\n        }\r\n        const productFlow: ProductFlow = Object.assign(new ProductFlow(), this.state.selectedProductFlow);\r\n        const existInCart: boolean = this.existInCart(productFlow);\r\n\r\n        if (existInCart) {\r\n            const app = this;\r\n            this.showConfirmation(\"Override \" + productFlow.product?.name + \" data?\")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.addProductFlowState(productFlow);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            this.addProductFlowState(productFlow);\r\n        }\r\n        e.target.reset();\r\n\r\n    }\r\n    addProductFlowState = (productFlow: ProductFlow) => {\r\n        const productFlows: ProductFlow[] = this.state.productFlows;\r\n        const existInCart: boolean = this.existInCart(productFlow);\r\n        if (existInCart) {\r\n            for (let i = 0; i < productFlows.length; i++) {\r\n                const element = productFlows[i];\r\n                if (element.product?.code == productFlow.product?.code) {\r\n                    productFlows[i] = productFlow;\r\n                }\r\n            }\r\n        } else {\r\n            productFlows.push(productFlow);\r\n        }\r\n\r\n        this.setState({ productFlows: productFlows });\r\n        this.clearSelectedProductFlow();\r\n    }\r\n\r\n    existInCart = (productFlow: ProductFlow) => {\r\n        for (let i = 0; i < this.state.productFlows.length; i++) {\r\n            const element = this.state.productFlows[i];\r\n            if (element.product?.code == productFlow.product?.code) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearSelectedProductFlow = () => {\r\n        if (!this.state.selectedProductFlow) {\r\n            return;\r\n        }\r\n        this.setState({ selectedProductFlow: undefined });\r\n        if (this.productFormRef.current)\r\n            this.productFormRef.current.setProduct(undefined);\r\n    }\r\n    editProduct = (code:any) => {\r\n        const productFlows =  this.state.productFlows;\r\n        const app= this;\r\n        \r\n        this.showConfirmation(\"Edit data \"+code+\"?\")\r\n        .then(function(ok){\r\n            let productFlow:ProductFlow|undefined = undefined;\r\n            for (let i = 0; i < productFlows.length; i++) {\r\n                const element = productFlows[i];\r\n                if (element.product?.code ==  code) {\r\n                    productFlow = Object.assign(new ProductFlow(), element);\r\n                }\r\n            }\r\n           \r\n            if (productFlow && ok && app.productFormRef.current) {\r\n                app.setState({selectedProductFlow:productFlow});\r\n                app.productFormRef.current.setProduct(productFlow.product);\r\n            }\r\n        })\r\n    }\r\n    removeProduct = (code:any) => {\r\n        const productFlows =  this.state.productFlows;\r\n        const app= this;\r\n        for (let i = 0; i < productFlows.length; i++) {\r\n            const element = productFlows[i];\r\n            if (element.product?.code ==  code) {\r\n                productFlows.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n        this.showConfirmationDanger(\"Remove data?\")\r\n        .then(function(ok){\r\n            if (ok) {\r\n                if (app.state.selectedProductFlow && code == app.state.selectedProductFlow.product?.code) {\r\n                    app.clearSelectedProductFlow();\r\n                }\r\n                app.setState({productFlows:productFlows});\r\n            }\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const totalUnitAndPrice = (productFlows:ProductFlow[]):{unit:number, productFlowPrice:number, productPrice:number} => {\r\n    let totalUnit:number = 0, totalPrice:number = 0, totalProductPrice:number = 0;\r\n    for (let i = 0; i < productFlows.length; i++) {\r\n        const element = productFlows[i];\r\n        totalUnit+=(element.count?element.count:0);\r\n        totalPrice+=((element.count??0)*(element.price??0));\r\n        totalProductPrice+=((element.count??0)*(element.product?.price??0));\r\n    }\r\n    return {\r\n        unit:totalUnit,\r\n        productFlowPrice:totalPrice,\r\n        productPrice:totalProductPrice    \r\n    }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport TransactionPurchasingService from './../../../../services/TransactionPurchasingService';\r\nimport Supplier from './../../../../models/Supplier';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from './../../../../services/MasterDataService';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport SupplierForm from './SupplierForm';\r\nimport ProductForm from '../ProductForm';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Product from '../../../../models/Product';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Transaction from './../../../../models/Transaction';\r\nimport BaseTransactionComponent, { totalUnitAndPrice } from './../BaseTransactionComponent';\r\n \r\nclass TransactionPurchasing extends BaseTransactionComponent {\r\n    transactionPurchasingService = TransactionPurchasingService.getInstance();\r\n    constructor(props: any) {\r\n        super(props); \r\n    }\r\n    setSupplier = (supplier: Supplier) => {\r\n        this.setState({ supplier: supplier });\r\n    } \r\n    \r\n    \r\n    updateSelectedProductFlowProp = (e) => {\r\n        const productFlow: ProductFlow | undefined = this.state.selectedProductFlow;\r\n        if (!productFlow) {\r\n            this.showError(\"Please select product!\");\r\n            e.target.value = null;\r\n            return;\r\n        }\r\n        const propName = e.target.name;\r\n        const value = e.target.type=='number'?parseInt(e.target.value) : e.target.value;\r\n        productFlow[propName] = value;\r\n        this.setState({ selectedProductFlow: productFlow });\r\n\r\n    }\r\n   \r\n    \r\n    submitTransaction = (e) => {\r\n        e.preventDefault();\r\n        const app = this;\r\n        const formData = new FormData(e.target);\r\n        this.showConfirmation(\"Submit Transactio?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.doSubmit(formData);\r\n            }\r\n        });\r\n    }\r\n\r\n    doSubmit = (formData:FormData) => {\r\n        const transaction:Transaction = new Transaction();\r\n        transaction.productFlows = this.state.productFlows;\r\n        transaction.supplier = this.state.supplier;\r\n        const date = formData.get('date');\r\n        transaction.transactionDate =date ? new Date(date.toString()) : new Date();\r\n        this.commonAjaxWithProgress(\r\n            this.transactionPurchasingService.submitTransactionPurchasing,\r\n            this.transactionSucess,\r\n            this.showCommonErrorAlert,\r\n            transaction\r\n        )\r\n    }\r\n\r\n    transactionSucess = (response:WebResponse) => {\r\n        const code = response.transaction?.code;\r\n        this.showInfo(\"Transaction success: \"+code);\r\n    }\r\n    \r\n    render() {\r\n        const productFlowsPopulated = this.state.productFlows.length > 0;\r\n        const supplierExist = this.state.supplier != undefined;\r\n        const showSubmitTrxButton = productFlowsPopulated == true && supplierExist == true;\r\n        return (\r\n            <div id=\"TransactionPurchasing\" className=\"container-fluid\">\r\n                <h2>Purchasing</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\" >\r\n                        <ProductForm ref={this.productFormRef} setProduct={this.setProduct} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <SupplierForm setSupplier={this.setSupplier} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.addToCart} >\r\n                            <Modal title={\"Product Data\"} footerContent={<Fragment>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Add\" />\r\n                                <input type=\"reset\" className=\"btn btn-warning\" value=\"Reset\" />\r\n                            </Fragment>}>\r\n                                <FormGroup label=\"Quantity\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.count} type=\"number\" onChange={this.updateSelectedProductFlowProp} name=\"count\" required min=\"1\" className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Price @Unit\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.price} type=\"number\" onChange={this.updateSelectedProductFlowProp} name=\"price\" min=\"0\" required className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Expired Date\">\r\n                                    <input defaultValue={new String(this.state.selectedProductFlow?.expiryDate).toString()} type=\"date\" onChange={this.updateSelectedProductFlowProp} name=\"expiryDate\" required className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        {showSubmitTrxButton?\r\n                        <form onSubmit={this.submitTransaction}>\r\n                            <Modal title=\"Action\">\r\n                                <FormGroup label=\"Date\">\r\n                                    <input required type=\"date\" name=\"date\" className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Action\">\r\n                                    <div>\r\n                                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Transaction\"/>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>:null}\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <Modal title=\"Products\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit</th>\r\n                                        <th>Exp Date</th>\r\n                                        <th>Price</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productFlows.map((productFlow, i) => {\r\n                                        return (\r\n                                            <tr key={\"pf_\"+i}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{productFlow.product?.name}</td>\r\n                                                <td>{productFlow.count}</td>\r\n                                                <td>{productFlow.product?.unit?.name}</td>\r\n                                                <td>{productFlow.expiryDate}</td>\r\n                                                <td>{productFlow.price}</td>\r\n                                                <td>{(productFlow.count ?? 0) * (productFlow.price ?? 0)}</td>\r\n                                                <td>\r\n                                                    <AnchorButton onClick={(e)=>this.editProduct(productFlow.product?.code)} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" >edit</AnchorButton>\r\n                                                    <AnchorButton onClick={(e)=>this.removeProduct(productFlow.product?.code)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" >remove</AnchorButton>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <td colSpan={2}><strong>Total</strong></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).unit}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).productFlowPrice}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    } \r\n} \r\n\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(TransactionPurchasing))","import * as url from '../constant/Url'\r\nimport BaseTransactionService from './BaseTransactionService';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport WebRequest from './../models/WebRequest';\r\nexport default class TransactionSellingService extends BaseTransactionService{\r\n    private static instance?:TransactionSellingService;\r\n\r\n    static getInstance(): TransactionSellingService {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionSellingService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    getCustomerList = (raw:any) => {\r\n        const fieldsFilter = {};\r\n        fieldsFilter[raw.key] = raw.value;\r\n        const request:WebRequest = {\r\n            entity: \"customer\",\r\n            filter: {\r\n                page: (raw.page > 0 ? raw.page : 0),\r\n                limit: (raw.limit > 0 ? raw.limit : 10),\r\n                exacts: (raw.exacts == true),\r\n                fieldsFilter: fieldsFilter\r\n            }\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/app/entity/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport Customer from '../../../../models/Customer';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\r\nimport Spinner from './../../../loader/Spinner';\r\ninterface IState {\r\n    customer?: Customer;\r\n    customerNotFound: boolean;\r\n    loading:boolean;\r\n}\r\nclass CustomerForm extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        customerNotFound: false, loading:false\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n    startLoading = () => this.setState({loading:true});\r\n    endLoading = () => this.setState({loading:false});\r\n    searchCustomer = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('id');\r\n        if (!id) return;\r\n        this.loadCustomer(parseInt(id.toString()));\r\n    }\r\n    customerLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Customer not found\");\r\n        }\r\n        this.props.setCustomer(response.entities[0]);\r\n        this.setState({ customer: response.entities[0], customerNotFound: false });\r\n    }\r\n    customerNotFound = (e: any) => {\r\n        this.setState({ customerNotFound: true });\r\n    }\r\n    loadCustomer = (id: number) => {\r\n        this.commonAjax(this.masterDataService.getById,\r\n            this.customerLoaded, this.customerNotFound, 'customer', id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchCustomer} >\r\n                <Modal toggleable={true}  title=\"Customer form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/customer\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Customer code\" required type=\"number\" className=\"form-control\" name=\"id\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <CustomerDetail loading={this.state.loading} customer={this.state.customer} notFound={this.state.customerNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst CustomerDetail = (props: { loading:boolean, customer?: Customer, notFound: boolean }) => {\r\n    const style = { height: '120px' };\r\n    if (props.loading) {\r\n        return <div style={style}><Spinner/></div>\r\n    }\r\n    if (true == props.notFound) {\r\n        return <div style={style}><div className=\"alert alert-warning\">Customer not found</div></div>\r\n    }\r\n    if (!props.customer) {\r\n        return <div style={style}><div className=\"alert alert-secondary\">Please select customer</div></div>\r\n    }\r\n    const customer: Customer = props.customer;\r\n    return (\r\n        <div style={style}>\r\n            <h2>{customer.name}</h2>\r\n            <address>\r\n                {customer.address}<br />\r\n                <abbr title=\"Contact\">Contact: </abbr>{customer.phone}\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(CustomerForm))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionSellingService from '../../../../services/TransactionSellingService';\r\nimport Customer from '../../../../models/Customer';\r\nimport ProductFlow from '../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport WebResponse from '../../../../models/WebResponse'; \r\nimport ProductForm from '../ProductForm';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Transaction from '../../../../models/Transaction';\r\nimport BaseTransactionComponent, { totalUnitAndPrice } from '../BaseTransactionComponent';\r\nimport CustomerForm from './CustomerForm';\r\n\r\nclass TransactionSelling extends BaseTransactionComponent {\r\n    transactionSellingService = TransactionSellingService.getInstance();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    setCustomer = (customer: Customer) => {\r\n        this.setState({ customer: customer });\r\n    }\r\n\r\n    updateSaleQty = (e) => {\r\n        const productFlow: ProductFlow | undefined = this.state.selectedProductFlow;\r\n        if (!productFlow) {\r\n            this.showError(\"Please select product!\");\r\n            e.target.value = null;\r\n            return;\r\n        }\r\n        const value = parseInt(e.target.value);\r\n        productFlow.count = value;\r\n        this.setState({ selectedProductFlow: productFlow });\r\n    }\r\n\r\n    submitTransaction = (e) => {\r\n        e.preventDefault();\r\n        const app = this;\r\n        const formData = new FormData(e.target);\r\n        this.showConfirmation(\"Submit Transactio?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doSubmit(formData);\r\n                }\r\n            });\r\n    }\r\n\r\n    doSubmit = (formData: FormData) => {\r\n        const transaction: Transaction = new Transaction();\r\n        transaction.productFlows = this.state.productFlows;\r\n        transaction.customer = this.state.customer;\r\n        const date = formData.get('date');\r\n        transaction.transactionDate = date ? new Date(date.toString()) : new Date();\r\n        this.commonAjaxWithProgress(\r\n            this.transactionSellingService.submitTransactionSelling,\r\n            this.transactionSucess,\r\n            this.showCommonErrorAlert,\r\n            transaction\r\n        )\r\n    }\r\n\r\n    transactionSucess = (response: WebResponse) => {\r\n        const code = response.transaction?.code;\r\n        this.showInfo(\"Transaction success: \" + code);\r\n    }\r\n\r\n    render() {\r\n        const productFlowsPopulated = this.state.productFlows.length > 0;\r\n        const customerExist = this.state.customer != undefined;\r\n        const showSubmitTrxButton = productFlowsPopulated == true && customerExist == true;\r\n        const selectedProductFlow = this.state.selectedProductFlow;\r\n        return (\r\n            <div id=\"TransactionSelling\"  className=\"container-fluid\">\r\n                <h2>Selling</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\" >\r\n                        <ProductForm ref={this.productFormRef} setProduct={this.setProduct} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <CustomerForm setCustomer={this.setCustomer} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.addToCart} >\r\n                            <Modal title={\"Product Data\"} footerContent={<Fragment>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Add\" />\r\n                                <input type=\"reset\" className=\"btn btn-warning\" value=\"Reset\" />\r\n                            </Fragment>}>\r\n                                <FormGroup label=\"Quantity\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.count}\r\n                                         type=\"number\" onChange={this.updateSaleQty} name=\"count\" required \r\n                                         min={1} max={\r\n                                            selectedProductFlow?selectedProductFlow.product?.count:0\r\n                                         } className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        {showSubmitTrxButton ?\r\n                            <form onSubmit={this.submitTransaction}>\r\n                                <Modal title=\"Action\">\r\n                                    <FormGroup label=\"Date\">\r\n                                        <input required type=\"date\" name=\"date\" className=\"form-control\" />\r\n                                    </FormGroup>\r\n                                    <FormGroup label=\"Action\">\r\n                                        <div>\r\n                                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Transaction\" />\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </Modal>\r\n                            </form> : null}\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <Modal title=\"Products\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit</th>\r\n                                        {/* <th>Exp Date</th> */}\r\n                                        <th>Price</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productFlows.map((productFlow, i) => {\r\n                                        return (\r\n                                            <tr key={\"pf_\" + i}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{productFlow.product?.name}</td>\r\n                                                <td>{productFlow.count}</td>\r\n                                                <td>{productFlow.product?.unit?.name}</td>\r\n                                                {/* <td>{productFlow.expiryDate}</td> */}\r\n                                                <td>{productFlow.product?.price}</td>\r\n                                                <td>{(productFlow.count ?? 0) * (productFlow.product?.price ?? 0)}</td>\r\n                                                <td>\r\n                                                    <AnchorButton onClick={(e) => this.editProduct(productFlow.product?.code)} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" >edit</AnchorButton>\r\n                                                    <AnchorButton onClick={(e) => this.removeProduct(productFlow.product?.code)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" >remove</AnchorButton>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <td colSpan={2}><strong>Total</strong></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).unit}</td>\r\n                                        {/* <td></td> */}\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).productPrice}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(TransactionSelling))","import * as url from '../constant/Url'\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport Filter from './../models/Filter';\r\nimport WebRequest from './../models/WebRequest';\r\nexport default class TransactionHistoryService {\r\n    private static instance?:TransactionHistoryService;\r\n    \r\n    static getInstance() :TransactionHistoryService\r\n    {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionHistoryService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    getProductSales = (filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/productsales\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getProductSalesDetail = (id:number, filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/productsalesdetail/\"+id);\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getCashflowDetail = (filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/cashflowdetail\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getTransactionData = function (transactionCode:string) {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/transactiondata/\" + transactionCode)\r\n        return commonAjaxPostCalls(endpoint, {});\r\n\r\n    }\r\n\r\n    getInventoriesQuantity = function (request = {}) {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/inventoriesquantity\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    getBalanceInfo = (request:any) => {\r\n        const endpoint = url.contextPath().concat(\"api/app/admin/balance\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from './../../../../services/TransactionHistoryService';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport Transaction from './../../../../models/Transaction';\r\nimport Modal from './../../../container/Modal';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Product from '../../../../models/Product';\r\nimport { totalUnitAndPrice } from '../BaseTransactionComponent';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\ninterface IState {\r\n    transactionData?: Transaction;\r\n    transactionCode?: string;\r\n    dataNotFound: boolean\r\n}\r\nclass TransactionDetail extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state: IState = { dataNotFound: false };\r\n    constructor(props: any) {\r\n        super(props, true);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Transaction Detail\";\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    recordLoaded = (response: WebResponse) => {\r\n        if (!response.transaction) {\r\n            throw new Error(\"Not found\");\r\n        }\r\n        response.transaction.productFlows = response.entities;\r\n        this.setState({ transactionData: response.transaction, dataNotFound: false });\r\n    }\r\n\r\n    recordNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.setState({ dataNotFound: true, transactionData: undefined });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.commonAjax(\r\n            this.transactionHistoryService.getTransactionData,\r\n            this.recordLoaded,\r\n            this.recordNotLoaded,\r\n            this.state.transactionCode\r\n        )\r\n    }\r\n    setTransactionCode = (e) => {\r\n        this.setState({ transactionCode: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"TransactionDetail\" className=\"container-fluid\">\r\n                <h2>Transaction Detail Page</h2>\r\n                <div className=\"row\">\r\n                    <form className=\"col-md-6\" onSubmit={this.onSubmit}>\r\n                        <Modal title=\"Transaction Info\"\r\n                            footerContent={\r\n                                <Fragment>\r\n                                    <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/transaction\" className=\"btn btn-secondary\" >Transactions Record</AnchorWithIcon>\r\n                                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Search\" />\r\n                                </Fragment>\r\n                            }\r\n                        >\r\n                            <FormGroup label=\"Code\">\r\n                                <input required onChange={this.setTransactionCode} type=\"text\" placeholder=\"Transaction code\" className=\"form-control\" />\r\n                            </FormGroup>\r\n                        </Modal>\r\n                    </form>\r\n                    <div className=\"col-md-6\"></div>\r\n                    <div className=\"col-md-12\">\r\n                        <SimpleError show={this.state.dataNotFound == true} >Data not found</SimpleError>\r\n                        <TransactionData show={this.state.transactionData != undefined} transaction={this.state.transactionData} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst TransactionData = (props) => {\r\n    if (props.show == false) return null;\r\n    const transaction: Transaction = props.transaction;\r\n    const productFlows: ProductFlow[] = transaction.productFlows ? transaction.productFlows: [];\r\n    const isSelling = transaction.type == 'SELLING';\r\n    \r\n    return (\r\n        <Modal title=\"Transaction Data\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <FormGroup label=\"Code\" orientation='horizontal'>\r\n                        {transaction.code}\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Type\" orientation='horizontal'>\r\n                        {transaction.type}-{transaction.mode}\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Date\" orientation='horizontal'>\r\n                        {new Date(transaction.transactionDate ?? new Date()).toString()}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {isSelling ?\r\n                        <FormGroup label=\"Customer\" orientation='horizontal'>\r\n                            {transaction.customer?.name}\r\n                        </FormGroup> :\r\n                        <FormGroup label=\"Supplier\" orientation='horizontal'>\r\n                            {transaction.supplier?.name}\r\n                        </FormGroup>\r\n                    }\r\n\r\n                    <FormGroup label=\"User\" orientation='horizontal'>\r\n                        {transaction.user?.displayName}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <h3>Products</h3>\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>Name</th>\r\n                                <th>Quantity</th>\r\n                                <th>Unit</th>\r\n                                <th>@Price</th>\r\n                                <th>Total Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {productFlows.map((productFlow, i)=>{\r\n                                const product:Product = productFlow.product?? new Product();\r\n                                const price = productFlow.price;\r\n                                return (\r\n                                    <tr key={\"pf-tr-\"+i}>\r\n                                        <td>{i+1}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{beautifyNominal(productFlow.count)}</td>\r\n                                        <td>{product.unit?.name}</td>\r\n                                        <td>{beautifyNominal(price)}</td>\r\n                                        <td>{beautifyNominal((price??0) * (productFlow.count??0))}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"alert alert-info text-left\">\r\n                        <FormGroup label=\"Total unit\">\r\n                        <p>{beautifyNominal(totalUnitAndPrice(productFlows).unit)}</p>\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Total price\">\r\n                        <p>{beautifyNominal(totalUnitAndPrice(productFlows).productFlowPrice)}</p>\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n} \r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionDetail))","\r\nimport React, { Component, Fragment } from 'react';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport Product from './../../../../models/Product';\r\nimport Modal from './../../../container/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport { updateCart } from './../../../../redux/actionCreators';\r\nimport { withRouter, Link } from 'react-router-dom'; \r\nimport AnchorButton from './../../../navigation/AnchorButton'; \r\nimport BaseComponent from './../../../BaseComponent'; \r\nclass IState {\r\n    showCart: boolean = false\r\n}\r\nclass ProductCatalogList extends BaseComponent\r\n{\r\n    state:IState = new IState();\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    showShoppingCart = (e) => {\r\n        this.setState({ showCart: true });\r\n    }\r\n    hideShoppingCart = (e) => {\r\n        this.setState({ showCart: false });\r\n    }\r\n    getProductInCart = (id: any): Product | undefined => {\r\n        const cart = this.props.cart;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == id) {\r\n                return element;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    addOneToCart = (product: Product) => {\r\n\r\n        let productInCart = this.getProductInCart(product.id);\r\n        if (!productInCart) {\r\n            productInCart = Object.assign(new Product(), product);\r\n            productInCart.count = 0;\r\n        }\r\n        if (productInCart.count) {\r\n            productInCart.count++;\r\n        } else {\r\n            productInCart.count = 1;\r\n        }\r\n        if ((product.count??0) < productInCart.count) {\r\n            this.showError(\"Quantity insufficient! \"+product.count+ \" vs \"+productInCart.count);\r\n            return;\r\n        }\r\n        this.setProductToCart(productInCart);\r\n       \r\n    }\r\n    reduceOneFromCart = (product: Product) => {\r\n        let productInCart = this.getProductInCart(product.id);\r\n        if (!productInCart) {\r\n           return;\r\n        }\r\n        if (productInCart.count && productInCart.count > 0) {\r\n            productInCart.count--;\r\n        } else {\r\n            productInCart.count = 0;\r\n        }\r\n        this.setProductToCart(productInCart);\r\n    }\r\n    resetProductCart = (product:Product) => {\r\n        const productCloned = Object.assign(new Product(), product);\r\n        productCloned.count = 0;\r\n        this.setProductToCart(productCloned);\r\n    }\r\n    resetAllShoppingCart = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Reset Shopping Cart?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.props.updateCart([], app, app.parentApp ); \r\n            }\r\n        })\r\n        \r\n    }\r\n    getShoppingCartCounts = () => {\r\n       return Product.countSummary(this.props.cart);\r\n\r\n    }\r\n    setProductToCart = (product: Product) => {\r\n        // console.debug(\"SET PRODUCT TO CART: \", product);\r\n        const cart = this.props.cart\r\n        let found = false;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == product.id) {\r\n                cart[i] = product;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            cart.push(product);\r\n        }\r\n        this.props.updateCart(cart, this, this.parentApp ); \r\n    } \r\n    render() {\r\n        const props = this.props;\r\n        const showCart: boolean = this.state.showCart;\r\n        return (\r\n            <Modal title=\"Product List\">\r\n                <div className=\"btn-group\" style={{ marginBottom: '5px' }}>\r\n                    <AnchorButton onClick={this.showShoppingCart} show={showCart == false} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-angle-down\">Show Shopping Cart</AnchorButton>\r\n                    <AnchorButton onClick={this.hideShoppingCart} show={showCart == true} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-angle-up\">Hide Shopping Cart</AnchorButton>\r\n                    <AnchorButton onClick={this.resetAllShoppingCart} show={showCart == true} className=\"btn btn-danger btn-sm\" iconClassName=\"fas fa-cart-arrow-down\">Reset Cart</AnchorButton>\r\n                    <AnchorButton show={showCart == true} className=\"btn btn-warning btn-sm\" >{this.getShoppingCartCounts()}</AnchorButton>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {props.products.map((product:Product) => {\r\n                        const imgName = product.imageUrl ? product.imageUrl.split(\"~\")[0] ?? 'Default.bmp' : 'Default.bmp';\r\n                        const productInCart = this.getProductInCart(product.id);\r\n                        return (\r\n                            <div key={\"product_catalog_\"+product.id} className=\"col-md-2 catalog-item rounded border\">\r\n                                <img className=\"rounded img-fluid\" src={baseImageUrl + imgName} /> \r\n                                <Link to={\"/catalog/product/\"+product.code}\r\n                                //  target=\"_blank\" \r\n                                 ><h6>{product.name}</h6></Link>\r\n                                <span className=\"text-info\"><strong>{beautifyNominal(product.price)}</strong></span>\r\n                                {props.withStock ? <span style={{ marginLeft: '5px' }} className={(product.count??0)>0?'badge badge-warning text-dark':'badge badge-dark'}>{product.count}</span> : null}\r\n                                {showCart ?\r\n                                    <div><div className=\"btn-group\">\r\n                                            <AnchorButton onClick={(e)=>this.addOneToCart(product)} iconClassName=\"fas fa-plus\" className=\"btn btn-primary btn-sm\" />\r\n                                            <AnchorButton className=\"btn btn-outline-info btn-sm\"><strong>{productInCart?.count??0}</strong></AnchorButton>\r\n                                            <AnchorButton onClick={(e)=>this.reduceOneFromCart(product)} iconClassName=\"fas fa-minus\" className=\"btn btn-primary btn-sm\" />\r\n                                            <AnchorButton onClick={(e)=>this.resetProductCart(product)} iconClassName=\"fas fa-sync-alt\" className=\"btn btn-warning btn-sm\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    : null}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    updateCart: (cart: Product[], ...apps:any[] ) => dispatch(updateCart(cart, ...apps)),\r\n})\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ProductCatalogList))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport '../Catalog.css';\r\nimport CatalogService from './../../../../services/CatalogService';\r\nimport Product from './../../../../models/Product';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Modal from '../../../container/Modal';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Category from './../../../../models/Category';\r\nimport NavigationButtons from '../../../navigation/NavigationButtons';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport ProductCatalogList from './ProductCatalogList';\r\nclass IState {\r\n    products: Product[] = []; \r\n    filter: Filter = {\r\n        limit: 20,\r\n        page: 0,\r\n        useExistingFilterPage: false,\r\n        orderBy: 'name',\r\n        orderType: 'asc'\r\n    };\r\n    fieldsFilter: {} = {\r\n        withStock: true,\r\n        withCategories: true,\r\n    };\r\n    categories: Category[] = [];\r\n    totalData: number = 0;\r\n    dataNotFound: boolean = false;\r\n}\r\nclass ProductCatalog extends BaseComponent {\r\n    catalogService: CatalogService = CatalogService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    productNotLoaded = (e: any) => {\r\n        this.setState({ totalData: 0, products: [], dataNotFound: true });\r\n    }\r\n    productsLoaded = (response: WebResponse) => {\r\n        if (response.entities == undefined) {\r\n            this.productNotLoaded(response);\r\n            return;\r\n        }\r\n        if (this.state.fieldsFilter['withCategories'] == true) {\r\n            this.setState({ totalData: response.totalData, dataNotFound: false, products: response.entities, categories: response.generalList });\r\n        } else {\r\n            this.setState({ totalData: response.totalData, dataNotFound: false, products: response.entities });\r\n        }\r\n    }\r\n    loadProducts(page: number | undefined = 0) {\r\n        const filter = this.state.filter;\r\n        if (page != undefined && this.state.filter.useExistingFilterPage == false) {\r\n            filter.page = page;\r\n        }\r\n        filter.fieldsFilter = this.state.fieldsFilter;\r\n        const withProgess = filter.fieldsFilter['withStock'] == true;\r\n\r\n        this.doAjax(\r\n            this.catalogService.getProductList, withProgess,\r\n            this.productsLoaded, this.productNotLoaded,\r\n            filter,\r\n        )\r\n        filter.useExistingFilterPage = false;\r\n        this.setState({ filter: filter });\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Product Catalog\";\r\n        this.loadProducts(0);\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        this.loadProducts(0);\r\n    }\r\n    setFieldsFilterValue = (e) => {\r\n        const input: HTMLInputElement = e.target;\r\n        let name: string = input.name;\r\n        let value: any;\r\n\r\n        if (input.type == 'checkbox') {\r\n            value = input.checked == true;\r\n        } else {\r\n            value = input.value;\r\n        }\r\n        const fieldsFilter = this.state.fieldsFilter;\r\n        if (value == undefined || new String(value).trim() == \"\") {\r\n            if (fieldsFilter[name])\r\n                delete fieldsFilter[name];\r\n        } else {\r\n            fieldsFilter[name] = value;\r\n        }\r\n        this.setState({ fieldsFilter: fieldsFilter });\r\n    }\r\n    setFilterPage = (value: any) => {\r\n        const page = parseInt(value);\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.useExistingFilterPage = true;\r\n        this.setState({ filter: filter });\r\n    }\r\n    setLimit = (limit: number) => {\r\n        const filter = this.state.filter;\r\n        filter.limit = limit;\r\n        this.setState({ filter: filter });\r\n    }\r\n    setOrder = (e) => {\r\n        const value = e.target.value;\r\n        const filter = this.state.filter;\r\n        if (value != '') {\r\n            const rawOrder: string[] = new String(value).split(\"-\");\r\n            filter.orderBy = rawOrder[0];\r\n            filter.orderType = rawOrder[1];\r\n        } else {\r\n            delete filter.orderBy;\r\n            delete filter.orderType;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    render() {\r\n        const products: Product[] = this.state.products;\r\n        return (\r\n            <div id=\"ProductCatalog\" className=\"container-fluid\">\r\n                <h2>Product Catalog</h2>\r\n                <form onSubmit={this.filter} >\r\n                    \r\n                    <Modal toggleable={true} title=\"Filter\" footerContent={\r\n                        <input type=\"submit\" className=\"btn btn-primary\" />\r\n                    }  >\r\n                        <div className=\"row\">\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-6\" label=\"Name\">\r\n                                <input onChange={this.setFieldsFilterValue} defaultValue={this.state.fieldsFilter['name']} name=\"name\" placeholder=\"Product Name\" className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Order By\">\r\n                                <select onChange={this.setOrder} className=\"form-control\">\r\n                                    <option value=\"name-asc\">Name [A-Z]</option>\r\n                                    <option value=\"name-desc\">Name [Z-A]</option>\r\n                                    <option value=\"price-asc\">Price [Cheap]</option>\r\n                                    <option value=\"price-desc\">Price [Expensive]</option>\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Category\">\r\n                                <select onChange={this.setFieldsFilterValue} defaultValue={this.state.fieldsFilter['category,id[EXACTS]']} className=\"form-control\" name=\"category,id[EXACTS]\">\r\n                                    <option value=\"\">All</option>\r\n                                    {this.state.categories.map(category => {\r\n                                        return <option key={\"category-opt-\"+category.id} value={category.id}>{category.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"With Stock\">\r\n                                <input onChange={this.setFieldsFilterValue} defaultChecked={this.state.fieldsFilter['withStock'] == true} type=\"checkbox\" name=\"withStock\" />\r\n                                <label style={{ paddingLeft: '5px' }}>{this.state.fieldsFilter['withStock'] == true ? \"Yes\" : \"No\"}</label>\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Go To Page\">\r\n                                <input name=\"page\" min=\"1\" type=\"number\" onChange={\r\n                                    (e) => this.setFilterPage(parseInt(e.target.value) - 1)\r\n                                } defaultValue={(this.state.filter.page ?? 0) + 1} className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Displayed Item\">\r\n                                <input name=\"limit\" min=\"1\" type=\"number\" onChange={\r\n                                    (e) => this.setLimit(parseInt(e.target.value))\r\n                                } defaultValue={this.state.filter.limit} className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Total Data\">\r\n                                <label>{this.state.totalData}</label>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Modal>\r\n                </form>\r\n                <SimpleError show={this.state.dataNotFound}>Data not found</SimpleError>\r\n                <NavigationButtons limit={this.state.filter.limit ?? 20} activePage={this.state.filter.page ?? 0}\r\n                    totalData={this.state.totalData} onClick={(page: number) => this.loadProducts(page)} />\r\n                <ProductCatalogList app={this.parentApp} products={products} withStock={this.state.fieldsFilter['withStock']} />\r\n            </div>\r\n        )\r\n    }\r\n} \r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(ProductCatalog))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Product from './../../../models/Product';\r\nimport SimpleError from '../../alert/SimpleError';\r\nimport Modal from '../../container/Modal';\r\nimport { beautifyNominal } from '../../../utils/StringUtil';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport { updateCart } from './../../../redux/actionCreators';\r\n\r\nclass CartList extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Shopping Cart List\";\r\n    }\r\n    removeFromCart = (product:Product) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Remove \"+product.name+\" from shopping list?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.doRemoveFromCart(product);\r\n            }\r\n        })\r\n    }\r\n    doRemoveFromCart = (product:Product) => {\r\n        const cart:Product[] = this.props.cart\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == product.id) {\r\n                cart.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.props.updateCart(cart, this, this.parentApp );\r\n    }\r\n    render() {\r\n        const cartList: Product[] = this.props.cart;\r\n        let totalUnit: number = 0, totalPrice: number = 0;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Shopping Cart List</h2>\r\n                <SimpleError show={cartList.length == 0}>No shopping item</SimpleError>\r\n\r\n                <table className=\"table table-fluid table-striped\" style={{display: cartList.length>0?'block':'none'}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th colSpan={2}>Product</th>\r\n                            <th>Qty</th>\r\n                            <th>Unit</th>\r\n                            <th>Price</th>\r\n                            <th>Total Price</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {cartList.map((product, i) => {\r\n                            totalUnit += (product.count ?? 0);\r\n                            totalPrice += ((product.count ?? 0) * (product.price ?? 0));\r\n                            let imgName = Product.getDefaultPicture(product);\r\n                            const imgUrl = baseImageUrl + imgName;\r\n                            return (\r\n                                <tr key={\"cart-\" + i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td><img height=\"150\" src={imgUrl} /></td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{beautifyNominal(product.count)}</td>\r\n                                    <td>{product.unit?.name}</td>\r\n                                    <td>{beautifyNominal(product.price)}</td>\r\n                                    <td>{beautifyNominal((product.count ?? 0) * (product.price ?? 0))}</td>\r\n                                    <td>\r\n                                        <AnchorButton onClick={(e)=>this.removeFromCart(product)} iconClassName=\"fas fa-times\" className=\"btn btn-outline-danger\"/>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        <tr>\r\n                            <td colSpan={3}>Total</td>\r\n                            <td>{beautifyNominal(totalUnit)}</td>\r\n                            <td colSpan={2}></td>\r\n                            <td>{beautifyNominal(totalPrice)}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    updateCart: (cart: Product[], ...apps:any[] ) => dispatch(updateCart(cart, ...apps)),\r\n})\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(CartList))","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nimport Card from './Card';\r\nclass IProps {\r\n    imageUrls: string[] = [];\r\n}\r\nclass IState {\r\n    active: number = 0\r\n}\r\nexport default class Carousel extends Component<IProps, IState>\r\n{\r\n    state: IState = new IState();\r\n    imageLength: number = 0;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.imageLength = props.imageUrls.length;\r\n    }\r\n\r\n    getCurrentImage = (): string => {\r\n        return this.props.imageUrls[this.state.active];\r\n    }\r\n    prev = (e) => {\r\n        let currentActive = this.state.active;\r\n        if (currentActive == 0){\r\n            currentActive = this.imageLength-1;\r\n        } else {\r\n            currentActive--;\r\n        }\r\n        this.setState({active:currentActive});\r\n\r\n    }\r\n    next = (e) => {\r\n        let currentActive = this.state.active;\r\n        if (currentActive == this.imageLength-1){\r\n            currentActive = 0;\r\n        } else {\r\n            currentActive++;\r\n        }\r\n        this.setState({active:currentActive});\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Card className=\"container-fluid bg-secondary text-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <AnchorButton className=\"btn btn-light\" iconClassName=\"fas fa-arrow-left\" onClick={this.prev} />\r\n                    </div>\r\n                    <div className=\"col-md-8\" style={{overflowX:'scroll'}}>\r\n                        <img height=\"200\" src={this.getCurrentImage()} />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <AnchorButton className=\"btn btn-light\" iconClassName=\"fas fa-arrow-right\" onClick={this.next} />\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CatalogService from './../../../../services/CatalogService';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport Product from './../../../../models/Product';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Modal from './../../../container/Modal';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nimport Carousel from './../../../container/Carousel';\r\ninterface IState { product?:Product, notFound:boolean }\r\nclass ProductCatalogDetail extends BaseComponent {\r\n    catalogService:CatalogService = CatalogService.getInstance();\r\n    state:IState = {notFound:false}\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    getCode():string {\r\n        return this.props.match.params.code;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (response.entities == undefined || response.entities.length  == 0){\r\n            throw new Error(\"not found\");\r\n        }\r\n        this.setState({\r\n            product:response.entities[0], notFound:true\r\n        })\r\n        document.title = this.state.product?.name??\"Detail\";\r\n    }\r\n    recordNotLoaded = (e:any) => {\r\n        console.error(e);\r\n        this.setState({notFound:true});\r\n    }\r\n    loadProductDetail = () => {\r\n        this.commonAjax(\r\n            this.catalogService.getProductDetail,\r\n            this.recordLoaded,\r\n            this.recordNotLoaded,\r\n            this.getCode()\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.loadProductDetail();\r\n    }\r\n    render() {\r\n        if (!this.getCode() || this.getCode() == \"\") {\r\n            return <SimpleError>Not Found</SimpleError>\r\n        }\r\n        return (<div className=\"container-fluid\">\r\n            <h2>Product Detail</h2>\r\n            {this.state.product?\r\n            <Modal title={this.state.product.name}>\r\n                <Carousel imageUrls={Product.getPictureNames(this.state.product, baseImageUrl)} />\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Unit</th>\r\n                            <th>Category</th>\r\n                            <th>Current Stock</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{this.state.product.name}</td>\r\n                            <td>{this.state.product.description}</td>\r\n                            <td>{this.state.product.unit?.name}</td>\r\n                            <td>{this.state.product.category?.name}</td>\r\n                            <td>{this.state.product.count}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Modal>\r\n            : <SimpleError  >Not Found</SimpleError>}\r\n            <AnchorWithIcon iconClassName=\"fas fa-angle-left\" to=\"/catalog/product\">Back</AnchorWithIcon>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductCatalogDetail);","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Filter from '../../../models/Filter';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport Loader from '../../loader/Loader';\r\nimport SimpleError from '../../alert/SimpleError';\r\ninterface IProps {\r\n    filter: Filter,\r\n    onChange: Function,\r\n    onSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\r\n    transactionYears:number[]\r\n}\r\nclass IState {\r\n    error:boolean = false;\r\n}\r\nexport default class DashboardFilter extends Component<IProps, IState> {\r\n    state = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        this.props.onChange(e);\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.filter.yearTo == undefined || this.props.filter.year == undefined) {\r\n            return;\r\n        }\r\n        if (this.props.filter.year > this.props.filter.yearTo) {\r\n            this.setState({error:true});\r\n            return;\r\n        }\r\n        this.setState({error:false});\r\n        this.props.onSubmit(e);\r\n    }\r\n    render() {\r\n        const transactionYears: number[]  = this.props.transactionYears;\r\n        return (\r\n            <form onSubmit={this.submit}>\r\n                <Modal toggleable={true} title=\"Filter\" footerContent={\r\n                    <input type=\"submit\" className=\"btn btn-primary\" />\r\n                }>\r\n                    <div className=\"row  \">\r\n                        <div className=\"col-md-5\">\r\n                            <FormGroup label=\"Month\">\r\n                                <select className=\"form-control\" name=\"month\" onChange={this.updatePeriodFilter} value={this.props.filter.month} >\r\n                                    {MONTHS.map((monthName, i) => {\r\n                                        return <option value={i + 1}>{monthName} ({i + 1})</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Year\">\r\n                                <select className=\"form-control\" name=\"year\" onChange={this.updatePeriodFilter} value={this.props.filter.year} >\r\n                                    {transactionYears.map(year => {\r\n                                        return <option value={year}>{year}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center\">\r\n                            <div style={{ width: '75px', height: '75px', display: 'flex' }} className=\"bg-secondary text-light rounded-circle\">\r\n                                <h1 style={{ margin: 'auto' }}><i className=\"fas fa-angle-right\"></i></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                            <FormGroup label=\"Month\">\r\n                                <select className=\"form-control\" name=\"monthTo\" onChange={this.updatePeriodFilter} value={this.props.filter.monthTo} >\r\n                                    {MONTHS.map((monthName, i) => {\r\n                                        return <option value={i + 1}>{monthName} ({i + 1})</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Year\">\r\n                                <select className=\"form-control\" name=\"yearTo\" onChange={this.updatePeriodFilter} value={this.props.filter.yearTo}>\r\n                                    {transactionYears.map(year => {\r\n                                        return <option value={year}>{year}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <SimpleError show={this.state.error} >Invalid Year</SimpleError>\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n}","import DataSet from './DataSet';\r\nexport default class Cashflow implements DataSet {\r\n\r\n    amount: number = 0;\r\n    count: number = 0;\r\n    module: string = 'SELLING';\r\n    year: number = new Date().getFullYear();\r\n    month: number = 1;\r\n    getAmount: () => number;\r\n    getLabel: () => string;\r\n    constructor() {\r\n        this.getAmount = () => {\r\n            return this.amount;\r\n        }\r\n       this.getLabel = () => {\r\n            return this.month+\"-\"+this.year;\r\n        }\r\n    }\r\n    \r\n   \r\n    static toDataSet = (cashflow:Cashflow) : DataSet => {\r\n        return Object.assign(new Cashflow(), cashflow);\r\n    }\r\n    static toDataSets = (cashflows:Cashflow[]) : DataSet[] => {\r\n        const dataSets:DataSet[]  = new Array<DataSet>();\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            dataSets.push(Cashflow.toDataSet(element));\r\n        }\r\n        return dataSets;\r\n    }\r\n    static maxAmount = (cashflows: Cashflow[]): number => {\r\n        let max = 0;\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            if (element.amount > max) {\r\n                max = element.amount;\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Cashflow from '../../../models/Cashflow';\r\nimport { beautifyNominal, uniqueId } from '../../../utils/StringUtil';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport './ChartSvg.css';\r\nimport FormGroup from '../../form/FormGroup'; \r\nimport DataSet from '../../../models/DataSet';\r\ninterface IProps {\r\n    dataSet: DataSet[],\r\n    updated: Date,\r\n    onClick?:(index:number)=>void\r\n    onUnHover?:()=>void\r\n}\r\nclass IState {\r\n    hoveredIndex: number = -1;\r\n    updated: Date = new Date();\r\n}\r\nexport default class DashboardBarChart extends Component<IProps, IState>\r\n{\r\n    middleYAxisValue: number = 0;\r\n    bottomYAxisValue: number = 0;\r\n    offsetX: number = 100;\r\n    offsetY: number = 50;\r\n    baseYIndex: number = 200;\r\n    baseHeight: number = 150;\r\n    lineWidth: number = 0;\r\n    maxValue: number = 0;\r\n    state: IState = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.updateSizes();\r\n\r\n    }\r\n    maxAmount:(cashflows: DataSet[])=>number = (cashflows: DataSet[]): number => {\r\n        let max = 0;\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            \r\n            if (element.getAmount() > max) {\r\n                max = element.getAmount();\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n    updateSizes = () => {\r\n        this.maxValue = this.maxAmount(this.props.dataSet);\r\n        this.middleYAxisValue = Math.round(this.maxValue * 2 / 3);\r\n        this.bottomYAxisValue = Math.round(this.maxValue * 1 / 3);\r\n        this.lineWidth = (23) * (this.props.dataSet.length) + 100;\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateSizes();\r\n        if (this.props.updated != this.state.updated) {\r\n            this.setState({ updated: this.props.updated });\r\n        }\r\n    }\r\n    hover = (index: number) => {\r\n        this.setState({ hoveredIndex: index });\r\n        \r\n    }\r\n    onClick = (index:number) => {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(index);\r\n        }\r\n    }\r\n    unHover = () => {\r\n        this.setState({ hoveredIndex: -1 });\r\n        // if (this.props.onUnHover) {\r\n        //     this.props.onUnHover();\r\n        // }\r\n    }\r\n  \r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"border border-secondary\" style={{ minHeight: '300px', overflowX: 'scroll' }}>\r\n                    <svg onMouseOut={this.unHover} className=\"bg-light border\" version=\"1.1\" baseProfile=\"full\" width={this.offsetX * 2 + (23) * (props.dataSet.length)+ 100} height={300} xmlns=\"http://www.w3.org/2000/svg\">\r\n\r\n                        {props.dataSet.map((data, i) => {\r\n                            const percentage = (data.getAmount() / this.maxValue) * this.baseHeight;\r\n                            const labelY = this.baseYIndex + 15, labelX = this.offsetX + 10 + (23) * (i);\r\n                            const xTranslated = 0, yTranslated = 0;\r\n                            const transform = \"translate(\" + xTranslated + \",\" + yTranslated + \") rotate(-30,\" + labelX + \",\" + labelY + \")\";\r\n                            const hovered = i == this.state.hoveredIndex;\r\n                            return (\r\n                                <g style={hovered ? { cursor: 'pointer' } : {}} className=\"chart-group\"\r\n                                 onMouseOver={(e) => this.hover(i)} onClick={(e) => this.onClick(i)} onMouseOut={this.unHover} key={uniqueId() + \"-\" + i}>\r\n                                    <rect fill={hovered ? \"red\" : \"green\"} x={this.offsetX + (23) * (i)} y={this.baseYIndex - percentage} height={percentage} width={20} ></rect>\r\n                                    <text fill={hovered ? \"red\" : \"black\"} textAnchor=\"end\" fontSize={10} x={labelX} y={labelY} transform={transform}>{data.getLabel()}</text>\r\n                                    <circle cx={this.offsetX + (23) * (i + 1)} cy={this.baseYIndex} r=\"3\" fill=\"red\" />\r\n                                </g>\r\n                            )\r\n                        })}\r\n                        <rect name=\"base_axis_x\" x={this.offsetX} y={this.baseYIndex} height={2} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_top\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY} height={1} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_middle\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY + this.baseHeight * 1 / 3} height={1} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_bottom\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY + this.baseHeight * 2 / 3} height={1} width={this.lineWidth} />\r\n                        <rect name=\"base_axis_y\" x={this.offsetX} y={this.offsetY} height={this.baseHeight} width={2} />\r\n\r\n                        <text textAnchor=\"end\" name=\"top_val\" fontSize={10} x={this.offsetX} y={this.offsetY}>{beautifyNominal(this.maxValue)}</text>\r\n                        <text textAnchor=\"end\" name=\"middle_val\" fontSize={10} x={this.offsetX} y={this.offsetY + this.baseHeight * 1 / 3}>{beautifyNominal(this.middleYAxisValue)}</text>\r\n                        <text textAnchor=\"end\" name=\"bottom_val\" fontSize={10} x={this.offsetX} y={this.offsetY + this.baseHeight * 2 / 3}>{beautifyNominal(this.bottomYAxisValue)}</text>\r\n                    </svg>\r\n                </div>\r\n                <p><i className=\"fas fa-history\" /> {new Date(this.state.updated).toString()}</p> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component, Fragment, RefObject } from 'react';\r\nimport Card from '../../../container/Card';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Filter from './../../../../models/Filter';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Cashflow from './../../../../models/Cashflow';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport { uniqueId } from './../../../../utils/StringUtil';\r\nimport { transform } from 'typescript';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport { MONTHS } from './../../../../utils/DateUtil';\r\ninterface IProps {\r\n    cashflowData: WebResponse\r\n}\r\nclass IState {\r\n    activeSellingIndex: number = -1;\r\n    activePurchasingIndex: number = -1;\r\n}\r\nexport default class CashflowChart extends Component<IProps, IState>\r\n{\r\n    state: IState = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    getCashflowData = (): WebResponse => {\r\n        return this.props.cashflowData;\r\n    }\r\n    getPeriodString = () => {\r\n        const cashflowData = this.getCashflowData();\r\n        if (!cashflowData.filter) return \"\";\r\n        let filter: Filter = cashflowData.filter;\r\n        return MONTHS[(filter.month ?? 1) - 1] + \" \" + filter.year + \" - \" + MONTHS[(filter.monthTo ?? 1) - 1] + \" \" + filter.yearTo;\r\n    }\r\n    getSellingData = (): Cashflow | undefined => {\r\n        if (this.state.activeSellingIndex < 0) return undefined;\r\n        const list: Cashflow[] = this.props.cashflowData.sellings ?? [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (i == this.state.activeSellingIndex) return list[i];\r\n        }\r\n        return undefined;\r\n    }\r\n    getPurchasingData = (): Cashflow | undefined => {\r\n        if (this.state.activePurchasingIndex < 0) return undefined;\r\n        const list: Cashflow[] = this.props.cashflowData.purchasings ?? [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (i == this.state.activePurchasingIndex) return list[i];\r\n        }\r\n        return undefined;\r\n    }\r\n    setActiveSellingData = (i: number) => {\r\n        this.setState({ activeSellingIndex: i });\r\n    }\r\n    unSelectSellingData = () => {\r\n        this.setState({ activeSellingIndex: -1 });\r\n    }\r\n    setActivePurchasingData = (i: number) => {\r\n        this.setState({ activePurchasingIndex: i });\r\n    }\r\n    unSelectPurchasingData = () => {\r\n        this.setState({ activePurchasingIndex: -1 });\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n        const cashflowData = this.getCashflowData()\r\n        return (\r\n            <Card title=\"Cashflow\">\r\n                <FormGroup label=\"Period\" >{this.getPeriodString()}</FormGroup>\r\n                <div className=\"container-fluid\" >\r\n                    <h4>Selling</h4>\r\n                    <DashboardBarChart\r\n                        onClick={this.setActiveSellingData} onUnHover={this.unSelectSellingData}\r\n                        updated={cashflowData.date ?? new Date()} dataSet={Cashflow.toDataSets(cashflowData.sellings ?? [])} />\r\n                    <CashflowDetail cashflow={this.getSellingData()} />\r\n                    <h4>Purchasing</h4>\r\n                    <DashboardBarChart\r\n                        onClick={this.setActivePurchasingData} onUnHover={this.unSelectPurchasingData}\r\n                        updated={cashflowData.date ?? new Date()} dataSet={Cashflow.toDataSets(cashflowData.purchasings ?? [])} />\r\n                    <CashflowDetail cashflow={this.getPurchasingData()} />\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst CashflowDetail = (props: { cashflow?: Cashflow }) => {\r\n    const cashflow: Cashflow | undefined = props.cashflow;\r\n    if (!cashflow) return <div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n        <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\"/> Click the chart to see detail</div>\r\n    </div>;\r\n\r\n    return (<div className=\"row\" style={{ minHeight: '120px' }}>\r\n        <div className=\"col-md-6\"><FormGroup label=\"Module\"> {cashflow.module}</FormGroup></div>\r\n        <div className=\"col-md-6\"><FormGroup label=\"Period\">{MONTHS[cashflow.month - 1]} {cashflow.year}</FormGroup></div>\r\n        <div className=\"col-md-6\"> <FormGroup label=\"Count\">{beautifyNominal(cashflow.count)}</FormGroup></div>\r\n        <div className=\"col-md-6\"> <FormGroup label=\"Amount\">{beautifyNominal(cashflow.amount)}</FormGroup> </div>\r\n    </div >)\r\n}\r\n","import React from 'react'\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport TransactionHistoryService from './../../../../services/TransactionHistoryService';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport DashboardFilter from '../DashboardFilter';\r\nimport CashflowChart from './CashflowChart'; \r\nimport Spinner from '../../../loader/Spinner';\r\nconst date = new Date();\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year:  date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear()\r\n    };\r\n    cashflowData?: WebResponse = undefined\r\n}\r\nclass DashboardStatistic extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        this.loadStatistic();\r\n    }\r\n    cashflowDataLoaded = (response: WebResponse) => {\r\n        this.setState({ cashflowData: response });\r\n    }\r\n    cashflowDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n    }\r\n    loadStatistic = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getCashflowDetail,\r\n            this.cashflowDataLoaded,\r\n            this.cashflowDataNotLoaded,\r\n            this.state.filter\r\n        )\r\n    }\r\n\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadStatistic();\r\n    }\r\n\r\n    render() {\r\n        const cashflowData = this.state.cashflowData;\r\n        if (!cashflowData) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Statistics</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Statistics</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={cashflowData && cashflowData.transactionYears ? cashflowData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n                <CashflowChart cashflowData={cashflowData} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(DashboardStatistic))","import BaseEntity from './BaseEntity';\nimport Product from './Product';\nimport DataSet from './DataSet';\n\nexport default class ProductSales extends BaseEntity implements DataSet{\n\tproduct?:Product;\n\tsales?:number;\n\tmonth?:number;\n\tyear?:number;\n\tpercentage?:number;\n\tmaxValue?:number;\n\tmonthName?:string;\n\tgetAmount: () => number;\n    getLabel: () => string;\n    constructor() {\n\t\tsuper();\n        this.getAmount = () => {\n\t\t\treturn this.sales??0;\n        }\n       this.getLabel = () => {\n            return this.product?this.product.name??\"\":this.month+\"-\"+this.year;\n        }\n    }\n\tstatic toDataSet = (object:ProductSales) : DataSet => {\n        return Object.assign(new ProductSales(), object);\n    }\n    static toDataSets = (objects:ProductSales[]) : DataSet[] => {\n        const dataSets:DataSet[]  = new Array<DataSet>();\n        for (let i = 0; i < objects.length; i++) {\n            const element = objects[i];\n            dataSets.push(ProductSales.toDataSet(element));\n        }\n        return dataSets;\n    }\n    static sortBySales = (objects:ProductSales[]) : ProductSales[] => {\n        return objects.sort((p1, p2)=>{\n            return (p1.sales??0) - (p2.sales??0);\n        })\n    }\n    static sortBySalesDesc = (objects:ProductSales[]) : ProductSales[] => {\n        return objects.sort((p1, p2)=>{\n            return (p2.sales??0) - (p1.sales??0);\n        })\n    }\n}\n","import React, { Fragment } from 'react';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from '../../../../services/TransactionHistoryService';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport DashboardFilter from './../DashboardFilter';\r\nimport ProductSales from './../../../../models/ProductSales';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Modal from './../../../container/Modal';\r\nimport Carousel from '../../../container/Carousel';\r\nimport Product from '../../../../models/Product';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport Spinner from './../../../loader/Spinner';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nconst date: Date = new Date();\r\nconst DEFAULT_LIMIT: number = 50;\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year: date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear(),\r\n        page: 0,\r\n        limit: DEFAULT_LIMIT\r\n    };\r\n    sortType: string = \"asc\";\r\n    activeSalesDataIndex: number = -1;\r\n    salesData?: WebResponse = undefined\r\n}\r\nclass ProductSalesPage extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        const filter = this.state.filter;\r\n        filter.limit = DEFAULT_LIMIT;\r\n        this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    reload = (e) => {\r\n        e.preventDefault();\r\n        // const filter = this.state.filter;\r\n        // filter.limit = (filter.limit ?? 0) + 50;\r\n        // this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    salesDataLoaded = (response: WebResponse) => {\r\n        response.entities = ProductSales.sortBySalesDesc(response.entities ?? []);\r\n        this.setState({ salesData: response });\r\n    }\r\n    salesDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.validateLoginStatus();\r\n    }\r\n    loadSales = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getProductSales,\r\n            this.salesDataLoaded,\r\n            this.salesDataNotLoaded,\r\n            this.state.filter\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadSales();\r\n    }\r\n    setActiveSalesData = (i: number) => {\r\n        this.setState({ activeSalesDataIndex: i });\r\n    }\r\n    unSelectSalesData = () => {\r\n        this.setState({ activeSalesDataIndex: -1 });\r\n    }\r\n    getActiveSalesData = () => {\r\n        const salesList = this.state.salesData ? this.state.salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < salesList.length; i++) {\r\n            const element = salesList[i];\r\n            if (this.state.activeSalesDataIndex == i) return element;\r\n        }\r\n        return undefined;\r\n    }\r\n    sort = (e) => {\r\n        const salesData = this.state.salesData;\r\n        if (!salesData) {\r\n            return;\r\n        }\r\n        const salesList = salesData ? salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return;\r\n        }\r\n        let sortType: string;\r\n        if (this.state.sortType == \"asc\") {\r\n            salesData.entities = ProductSales.sortBySales(salesList);\r\n            sortType = \"desc\";\r\n        } else {\r\n            salesData.entities = ProductSales.sortBySalesDesc(salesList);\r\n            sortType = \"asc\";\r\n        }\r\n        this.setState({ salesData: salesData, sortType: sortType, activeSalesDataIndex: -1 });\r\n    }\r\n    render() {\r\n        const salesData = this.state.salesData;\r\n        if (!salesData) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Product Sales</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        const showBtnLoadMore = (this.state.filter?.limit ?? 0) < (this.state.salesData?.totalData ?? 0) + 1;\r\n        const btnSortIconClass = this.state.sortType == \"asc\" ? \"fas fa-sort-amount-down-alt\" : \"fas fa-sort-amount-up\";\r\n        return (\r\n            <div className=\"container-fluid\" style={{ paddingBottom: '10px' }}>\r\n                <h2>Product Sales</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={salesData && salesData.transactionYears ? salesData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n                <Modal title=\"Options\">\r\n                    <div className=\"inline-buttons-parent\">\r\n                        <AnchorButton className=\"btn btn-secondary btn-sm\">Loaded Product <span className=\"badge badge-light\">{salesData.entities?.length}</span></AnchorButton>\r\n                        <AnchorButton className=\"btn btn-secondary btn-sm\">Total Product <span className=\"badge badge-light\">{salesData.totalData}</span></AnchorButton>\r\n                        <AnchorButton className=\"btn btn-dark btn-sm\" iconClassName={btnSortIconClass} onClick={this.sort} >Sort</AnchorButton>\r\n                        <form style={{ marginTop: '10px' }} className=\"input-group\" onSubmit={this.reload} >\r\n                            <input placeholder=\"Product Count\" disabled className=\"form-control\" />\r\n                            <input placeholder=\"record count\" name=\"limit\" onChange={this.updatePeriodFilter} value={this.state.filter.limit} type=\"number\" min={1} max={this.state.salesData?.totalData} className=\"form-control\" />\r\n                            {showBtnLoadMore ? <button type=\"submit\" className=\"btn btn-dark btn-sm\" ><i className=\"fas fa-sync-alt\" /> Reload</button>\r\n                                : null}\r\n                        </form>\r\n                    </div>\r\n                </Modal>\r\n                <DashboardBarChart\r\n                    onClick={this.setActiveSalesData} onUnHover={this.unSelectSalesData}\r\n                    updated={salesData.date ?? new Date()} dataSet={ProductSales.toDataSets(salesData?.entities ?? [])} />\r\n                <ProductSalesDetail productSales={this.getActiveSalesData()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductSalesDetail = (props: { productSales?: ProductSales }) => {\r\n    const productSales: ProductSales | undefined = props.productSales;\r\n    if (!productSales || !productSales.product)\r\n        return (<div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n            <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\" /> Click the chart to see detail</div>\r\n        </div>);\r\n\r\n    return (<div className=\"row\" style={{ minHeight: '120px' }}>\r\n        <div className=\"col-md-6\">\r\n            <Carousel imageUrls={Product.getPictureNames(productSales.product, baseImageUrl)} />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n            <FormGroup label=\"Name\">{productSales.product ? productSales.product.name : \"\"}</FormGroup>\r\n            <FormGroup label=\"Sales\">{beautifyNominal(productSales.sales)}</FormGroup>\r\n            <FormGroup label=\"Option\">\r\n                <AnchorWithIcon attributes={{target:\"_blank\"}} to={\"/dashboard/productsales/\"+productSales.product.id} >Detail</AnchorWithIcon>\r\n            </FormGroup>\r\n        </div>\r\n    </div >);\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(ProductSalesPage))","import React, { Fragment } from 'react';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from '../../../../services/TransactionHistoryService';\r\nimport Filter from '../../../../models/Filter';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport DashboardFilter from '../DashboardFilter';\r\nimport ProductSales from '../../../../models/ProductSales';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Modal from '../../../container/Modal';\r\nimport Carousel from '../../../container/Carousel';\r\nimport Product from '../../../../models/Product';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport Spinner from '../../../loader/Spinner';\r\nimport SimpleError from '../../../alert/SimpleError';\r\nconst date: Date = new Date();\r\nconst DEFAULT_LIMIT: number = 50;\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year: date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear(),\r\n        page: 0,\r\n        limit: DEFAULT_LIMIT\r\n    };\r\n    sortType: string = \"asc\";\r\n    activeSalesDataIndex: number = -1;\r\n    salesData?: WebResponse = undefined;\r\n    notFound:boolean = false;\r\n}\r\nclass ProductSalesDetailPage extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        const filter = this.state.filter;\r\n        filter.limit = DEFAULT_LIMIT;\r\n        this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    salesDataLoaded = (response: WebResponse) => {\r\n        this.setState({ salesData: response, notFound: false });\r\n    }\r\n    salesDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.setState({ salesData:undefined, notFound: true});\r\n        this.validateLoginStatus();\r\n    }\r\n    getProductId = (): number => {\r\n        return this.props.match.params.id;\r\n    }\r\n    getProduct = (): Product | undefined => {\r\n        if (!this.state.salesData || !this.state.salesData.entity) {\r\n            return undefined;\r\n        }\r\n        const product = this.state.salesData?.entity;\r\n        return Object.assign(new Product(), product);\r\n    }\r\n    loadSales = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getProductSalesDetail,\r\n            this.salesDataLoaded,\r\n            this.salesDataNotLoaded,\r\n            this.getProductId(),\r\n            this.state.filter\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadSales();\r\n    }\r\n    setActiveSalesData = (i: number) => {\r\n        this.setState({ activeSalesDataIndex: i });\r\n    }\r\n    unSelectSalesData = () => {\r\n        this.setState({ activeSalesDataIndex: -1 });\r\n    }\r\n    getActiveSalesData = () => {\r\n        const salesList = this.state.salesData ? this.state.salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < salesList.length; i++) {\r\n            const element = salesList[i];\r\n            if (this.state.activeSalesDataIndex == i) return element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.notFound) {\r\n            return <SimpleError>Not Found</SimpleError>\r\n        }\r\n        const salesData = this.state.salesData;\r\n        const product: Product | undefined = this.getProduct();\r\n        if (!salesData || !product) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Product Sales : Loading</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\" style={{ paddingBottom: '10px' }}>\r\n                <h2>Product Sales : {product.name}</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={salesData && salesData.transactionYears ? salesData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n\r\n                <DashboardBarChart\r\n                    onClick={this.setActiveSalesData} onUnHover={this.unSelectSalesData}\r\n                    updated={salesData.date ?? new Date()} dataSet={ProductSales.toDataSets(salesData?.entities ?? [])} />\r\n                <ProductSalesDetail productSales={this.getActiveSalesData()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductSalesDetail = (props: { productSales?: ProductSales }) => {\r\n    const productSales: ProductSales | undefined = props.productSales;\r\n    if (!productSales)\r\n        return (<div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n            <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\" /> Click the chart to see detail</div>\r\n        </div>);\r\n\r\n    return (<div  style={{ minHeight: '120px' }}>\r\n        <FormGroup label=\"Period\">{productSales.monthName} {productSales.year}</FormGroup>\r\n        <FormGroup label=\"Sales\">{beautifyNominal(productSales.sales)}</FormGroup>\r\n\r\n    </div>)\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(ProductSalesDetailPage))","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'; \r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass SettingsMain extends BaseMainMenus \r\n{\r\n    constructor(props:any){\r\n        super(props, \"Settings\", true);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"SettingsMain\" className=\"container-fluid\">\r\n                <h2>Settings</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.displayName}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(SettingsMain))","import BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tusername?:string;\n\tdisplayName?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\tauthorities?:any[];\n\trequestId?:string;\n\tprocessingDate?:Date;\n\n}\n","\r\nimport User from './../models/User';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nexport default class UserService\r\n{\r\n    private static instance?:UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user:User) => {\r\n        \r\n        const request:WebRequest = {\r\n           user:user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/app/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","import React from 'react'\r\nimport AnchorButton from './../../navigation/AnchorButton';\r\nexport const EditField = ({ edit, name, toggleInput, value, updateProperty, ...props }) => {\r\n    return (edit == true ?\r\n        <PropertyInput updateProperty={updateProperty} name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n        :\r\n        <PropertyLabel name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n    )\r\n}\r\nconst PropertyInput = ({ name, toggleInput, value, updateProperty, type }) => {\r\n    return (<div className=\"row\">\r\n        <p className=\"col-md-10\"><input type={type ?? 'text'} name={name} onChange={updateProperty} value={value} className=\"form-control\" /></p>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }}\r\n                onClick={toggleInput} className=\"btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst PropertyLabel = ({ name, toggleInput, value, type }) => {\r\n\r\n    return (<div className=\"row\" >\r\n        <div className=\"col-md-10\">\r\n            <p style={{ backgroundColor: type == 'color' ? value : '#fff' }} >{type == 'color' ? 'Sample Color' : value}</p>\r\n            {type == 'color' ? <p>{value}</p> : null}\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport User from './../../../models/User';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setLoggedUser } from './../../../redux/actionCreators';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport UserService from './../../../services/UserService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport { resizeImage, toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField } from './helper';\r\nimport { base64StringFileSize, fileExtension } from './../../../utils/StringUtil';\r\ninterface EditField { username: boolean, displayName: boolean, password: boolean, profileImage: boolean }\r\nclass IState {\r\n    user?: User = undefined;\r\n    editFields: EditField = {\r\n        username: false,\r\n        displayName: false,\r\n        password: false,\r\n        profileImage: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        for (const key in this.editFields) {\r\n            if (this.editFields[key] == true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass UserProfile extends BaseComponent {\r\n\r\n    userService: UserService = UserService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.state.user = Object.assign(new User(), this.getLoggedUser());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"User Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return;\r\n\r\n        user[target.name] = target.value;\r\n        this.setState({ user: user });\r\n    }\r\n    updateProfleImage = (e:ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        const fileName:string|undefined = target.files ? target.files[0].name : undefined;\r\n        if (!fileName) return;\r\n        toBase64v2(target).then(function(imageData) {\r\n           app.setProfileImage(imageData);\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData:string) => {\r\n        const user:User|undefined = this.state.user;\r\n        if (!user) return;\r\n        user.profileImage = imageData;\r\n        this.setState({user:user});\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const user: User | undefined = this.state.user;\r\n        const actualLoggedUser: User | undefined = this.getLoggedUser();\r\n        if (null == target || !user || !actualLoggedUser) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            user[propertyName] = actualLoggedUser[propertyName];\r\n        }\r\n        this.setState({ user: user, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const user: User | undefined = this.getUserEditedData();\r\n        if (!user) return;\r\n        if (user.profileImage) {\r\n            this.commonAjaxWithProgress(\r\n                this.userService.updateProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                user\r\n            )\r\n        } else {\r\n            this.commonAjax(\r\n                this.userService.updateProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                user\r\n            )\r\n        }\r\n    }\r\n    getUserEditedData = (): User | undefined => {\r\n        const user: User | undefined = this.state.user;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!user) return undefined;\r\n        const editedUser: User = new User();\r\n        for (const key in editFields) {\r\n            const element:boolean = editFields[key];\r\n            if (element && key != 'profileImage') {\r\n                editedUser[key] = user[key];\r\n            }\r\n        }\r\n        if (editFields.profileImage && user.profileImage?.startsWith(\"data:image\")) {\r\n            editedUser.profileImage = user.profileImage;\r\n        }\r\n        return editedUser;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setLoggedUser(response.user);\r\n        const editFields = this.state.editFields;\r\n        for (const key in editFields) {\r\n            editFields[key] = false;\r\n        }\r\n        this.setState({editFields:editFields});\r\n    }\r\n\r\n    render() {\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        return (\r\n            <div id=\"UserProfile\" className=\"container-fluid\">\r\n                <h2>User Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{marginBottom:'10px'}}>\r\n                            <img style={{marginBottom:'10px'}} width=\"100\" height=\"100\" className=\"rounded-circle border border-primary\" src={user.profileImage?.startsWith(\"data:image\")?user.profileImage:baseImageUrl + user.profileImage} />\r\n                            <EditImage edit={editFields.profileImage} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"User Name\">\r\n                            <EditField edit={editFields.username} updateProperty={this.updateProfileProperty} name=\"username\" toggleInput={this.toggleInput} value={user.username} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.displayName} updateProperty={this.updateProfileProperty} name=\"displayName\" toggleInput={this.toggleInput} value={user.displayName} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Password\">\r\n                            <EditField edit={editFields.password} updateProperty={this.updateProfileProperty} name=\"password\" toggleInput={this.toggleInput} value={user.password} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                           {this.state.fieldChanged()? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />:null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EditImage = ({ edit, toggleInput, updateProperty }) => {\r\n    return (edit == true ? <>\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': 'profileImage', 'data-enabled': 'false'\r\n            }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n        <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name=\"profileImage\" />\r\n    </>\r\n        :\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': 'profileImage', 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image</AnchorButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setLoggedUser: (user: User) => dispatch(setLoggedUser(user)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(UserProfile))","import BaseEntity from './BaseEntity';\n\nexport default class ApplicationProfile extends BaseEntity{\n\tname?:string;\n\tappCode?:string;\n\tshortDescription?:string;\n\tabout?:string;\n\twelcomingMessage?:string;\n\taddress?:string;\n\tcontact?:string;\n\twebsite?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tfooterIconClass?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\n}\n","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setApplicationProfile } from '../../../redux/actionCreators';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport { resizeImage, toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField } from './helper';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport { base64StringFileSize, fileExtension } from './../../../utils/StringUtil';\r\ninterface EditField { name: boolean, welcomingMessage: boolean, shortDescription: boolean, backgroundUrl: boolean, address: boolean, about: boolean, color: boolean, fontColor: boolean }\r\nclass IState {\r\n    applicationProfile?: ApplicationProfile = undefined;\r\n    editFields: EditField = {\r\n        name: false,\r\n        welcomingMessage: false,\r\n        shortDescription: false,\r\n        backgroundUrl: false,\r\n        address: false,\r\n        about: false,\r\n        color: false,\r\n        fontColor: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        for (const key in this.editFields) {\r\n            if (this.editFields[key] == true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass EditApplicationProfile extends BaseComponent {\r\n\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.state.applicationProfile = Object.assign(new ApplicationProfile(), this.getApplicationProfile());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"ApplicationProfile Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n\r\n        applicationProfile[target.name] = target.value;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    updateProfleImage = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        const fileName:string|undefined = target.files ? target.files[0].name : undefined;\r\n        if (!fileName) return;\r\n        toBase64v2(target).then(function (imageData) {\r\n            app.setProfileImage(imageData);\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData: string) => {\r\n        const fileSize = base64StringFileSize(imageData);\r\n        \r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n        applicationProfile.backgroundUrl = imageData;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const appProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const actualAppProfile: ApplicationProfile | undefined = this.getApplicationProfile();\r\n        if (null == target || !appProfile || !actualAppProfile) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            appProfile[propertyName] = actualAppProfile[propertyName];\r\n        }\r\n        this.setState({ applicationProfile: appProfile, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.getApplicationEditedData();\r\n        if (!applicationProfile) return;\r\n        if (applicationProfile.backgroundUrl) {\r\n            this.commonAjaxWithProgress(\r\n                this.masterDataService.updateApplicationProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                applicationProfile\r\n            )\r\n        } else {\r\n            this.commonAjax(\r\n                this.masterDataService.updateApplicationProfile,\r\n                this.profileSaved, this.showCommonErrorAlert,\r\n                applicationProfile\r\n            )\r\n        }\r\n    }\r\n    getApplicationEditedData = (): ApplicationProfile | undefined => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!applicationProfile) return undefined;\r\n        const editedApplication: ApplicationProfile = new ApplicationProfile();\r\n        for (const key in editFields) {\r\n            const element: boolean = editFields[key];\r\n            if (element && key != 'backgroundUrl') {\r\n                editedApplication[key] = applicationProfile[key];\r\n            }\r\n        }\r\n        if (editFields.backgroundUrl && applicationProfile.backgroundUrl?.startsWith(\"data:image\")) {\r\n            editedApplication.backgroundUrl = applicationProfile.backgroundUrl;\r\n        }\r\n        return editedApplication;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setApplicationProfile(response.applicationProfile);\r\n        const editFields = this.state.editFields;\r\n        for (const key in editFields) {\r\n            editFields[key] = false;\r\n        }\r\n        this.setState({editFields:editFields});\r\n    }\r\n\r\n    render() {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        const bgUrl: string = applicationProfile.backgroundUrl ?? \"\";\r\n        return (\r\n            <div id=\"ApplicationProfile\" className=\"container-fluid\">\r\n                <h2>Application Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{ marginBottom: '10px' }}>\r\n                            <img style={{ marginBottom: '10px' }} height=\"100\" className=\"border border-primary\" src={bgUrl.startsWith(\"data:image\") ? bgUrl : baseImageUrl + bgUrl} />\r\n                            <EditImage edit={editFields.backgroundUrl} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.name} updateProperty={this.updateProfileProperty} name=\"name\" toggleInput={this.toggleInput} value={applicationProfile.name} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Welcoming Message\">\r\n                            <EditField edit={editFields.welcomingMessage} updateProperty={this.updateProfileProperty} name=\"welcomingMessage\" toggleInput={this.toggleInput} value={applicationProfile.welcomingMessage} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Short Description\">\r\n                            <EditField edit={editFields.shortDescription} updateProperty={this.updateProfileProperty} name=\"shortDescription\" toggleInput={this.toggleInput} value={applicationProfile.shortDescription} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Address\">\r\n                            <EditField edit={editFields.address} updateProperty={this.updateProfileProperty} name=\"address\" toggleInput={this.toggleInput} value={applicationProfile.address} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"About\">\r\n                            <EditField edit={editFields.about} updateProperty={this.updateProfileProperty} name=\"about\" toggleInput={this.toggleInput} value={applicationProfile.about} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Background Color\">\r\n                            <EditField type=\"color\" edit={editFields.color} updateProperty={this.updateProfileProperty} name=\"color\" toggleInput={this.toggleInput} value={applicationProfile.color} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Font Color\">\r\n                            <EditField type=\"color\" edit={editFields.fontColor} updateProperty={this.updateProfileProperty} name=\"fontColor\" toggleInput={this.toggleInput} value={applicationProfile.fontColor} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                            {this.state.fieldChanged() ? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" /> : null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EditImage = ({ edit, toggleInput, updateProperty }) => {\r\n    const name: string = \"backgroundUrl\";\r\n    return (edit == true ? <>\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n        <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name={name} />\r\n    </>\r\n        :\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image</AnchorButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setApplicationProfile: (applicationProfile: ApplicationProfile) => dispatch(setApplicationProfile(applicationProfile)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditApplicationProfile))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/DashboardMain';\r\nimport MasterDataMain from '../pages/masterdata/MasterDataMain';\r\nimport TransactionMain from '../pages/transaction/TransactionMain';\r\nimport CatalogMain from '../pages/catalog/CatalogMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport CartMain from '../pages/cart/CartMain';\r\nimport BaseMainMenus from './BaseMainMenus';\r\nimport Menu from './../../models/Menu';\r\nimport TransactionPurchasing from '../pages/transaction/purchasing/TransactionPurchasing';\r\nimport TransactionSelling from '../pages/transaction/selling/TransactionSelling';\r\nimport TransactionDetail from '../pages/transaction/detail/TransactionDetail';\r\nimport ProductCatalog from '../pages/catalog/product/ProductCatalog';\r\nimport CartList from '../pages/cart/CartList';\r\nimport ProductCatalogDetail from '../pages/catalog/productdetail/ProductCatalogDetail';\r\nimport DashboardStatistic from '../pages/dashboard/statistic/DashboardStatistic';\r\nimport ProductSales from './../../models/ProductSales';\r\nimport ProductSalesPage from '../pages/dashboard/sales/ProductSalesPage';\r\nimport ProductSalesDetailPage from '../pages/dashboard/sales/ProductSalesDetailPage';\r\nimport SettingsMain from '../pages/settings/SettingsMain';\r\nimport UserProfile from '../pages/settings/UserProfile';\r\nimport EditApplicationProfile from '../pages/settings/EditApplicationProfile';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n\r\n    ref: React.RefObject<BaseMainMenus> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus=(menus:Menu[])=>{\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ paddingTop: '65px' }}>\r\n                <Switch>\r\n                    <Route path=\"/login\" render={\r\n                        (props: any) =>\r\n                            <Login app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- home -------- */}\r\n                    <Route path=\"/home\" render={\r\n                        (props: any) =>\r\n                            <HomeMain app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- dashboard -------- */}\r\n                    <Route exact path=\"/dashboard\" render={\r\n                        (props: any) =>\r\n                            <DashboardMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/dashboard/statistic\" render={\r\n                        (props: any) =>\r\n                            <DashboardStatistic  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/dashboard/productsales\" render={\r\n                        (props: any) =>\r\n                            <ProductSalesPage  app={this.parentApp} />\r\n                    } />\r\n                     <Route exact path=\"/dashboard/productsales/:id\" render={\r\n                        (props: any) =>\r\n                            <ProductSalesDetailPage  app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- masterdata -------- */}\r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- transaction -------- */}\r\n                    <Route exact path=\"/transaction\" render={\r\n                        (props: any) =>\r\n                            <TransactionMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/purchasing\" render={\r\n                        (props: any) =>\r\n                            <TransactionPurchasing app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/selling\" render={\r\n                        (props: any) =>\r\n                            <TransactionSelling app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/detail\" render={\r\n                        (props: any) =>\r\n                            <TransactionDetail app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- settings --------- */}\r\n                    <Route exact path=\"/settings\" render={\r\n                        (props: any) =>\r\n                            <SettingsMain app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/settings/user-profile\" render={\r\n                        (props: any) =>\r\n                            <UserProfile app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/settings/app-profile\" render={\r\n                        (props: any) =>\r\n                            <EditApplicationProfile app={this.parentApp} />\r\n                    } />\r\n                    {/* ///////// PUBLIC ///////// */}\r\n                    {/* -------- catalog -------- */}\r\n                    <Route exact path=\"/catalog\" render={\r\n                        (props: any) => { \r\n                            return <CatalogMain  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/catalog/product\" render={\r\n                        (props: any) => { \r\n                            return <ProductCatalog  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/catalog/product/:code\" render={\r\n                        (props: any) => { \r\n                            return <ProductCatalogDetail  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/cart\" render={\r\n                        (props: any) =>\r\n                            <CartMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/cart/cartlist\" render={\r\n                        (props: any) =>\r\n                            <CartList  app={this.parentApp} />\r\n                    } />\r\n                </Switch>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","import BaseEntity from './BaseEntity';\nimport Page from './Page';\nimport { uniqueId } from './../utils/StringUtil';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:String = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string;\n\tmenuPage?:Page;\n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n}\n","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from './../../models/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { brand: any, sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n      \r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n                {menus.map(menu => {\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li  className={\"sidebar-item \"+menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}><div\r\n            style={{\r\n                textAlign: 'center', paddingTop: '10px',\r\n                paddingBottom: '10px'\r\n            }}>\r\n            <h3 className=\"text-dark\">\r\n                <i className={Menu.getIconClassName(props.brand)}></i>\r\n            </h3>\r\n            <Link to={props.brand.url} style={{textDecoration:'none'}}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n        </div></li>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","\r\n\r\nimport React from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from './../../models/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\ninterface IState {\r\n    showSidebar: boolean;\r\n    activeMenuCode: any;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = {\r\n        showSidebar: false,\r\n        activeMenuCode: null,\r\n        menu: undefined,\r\n        sidebarMenus: []\r\n    };\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        console.warn(\"SET MENU NULL\");\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        console.debug(\"SET MENU: \", menu.code);\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n       \r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () => {\r\n        if (this.state.menu && this.state.menu.subMenus != null && this.state.menu.subMenus?.length > 0) {\r\n            return this.state.menu?.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar = this.state.showSidebar == true;\r\n        return (\r\n            <div id=\"main-layout\">\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} app={this.parentApp} />\r\n                <div id=\"page-content\" className=\"container-fluid\" style={{ margin: 0, padding: 0, minHeight: '80vh' }}>\r\n                    {/* <div className=\"?\"> */}\r\n                    \r\n                    <div className=\"container-fluid\" style={{zIndex:  1 , position:'absolute'}} id={showSidebar ? \"app-content\" : \"content\"}>\r\n                        <ApplicationContent setSidebarMenus={this.setSidebarMenus} app={this.props.app} />\r\n                    </div>\r\n                    {showSidebar == true ?  \r\n                            <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} app={this.props.app} />\r\n                         : null}\r\n                    {/* </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport * as menus from './constant/Menus'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/WebResponse';\nimport Spinner from './component/loader/Spinner';\n\ninterface IState {\n  loading: boolean;\n  loadingPercentage: number;\n  requestId?: undefined;\n  mainAppUpdated: Date;\n  showAlert: boolean;\n  realtime: boolean;\n}\nclass App extends Component<any, IState> {\n\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\",\n    message: \"Info\",\n    yesOnly: false,\n    onOk: () => { },\n    onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ...this.state,\n      loading: false,\n      loadingPercentage: 0,\n      requestId: undefined,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n      realtime: false,\n    };\n\n  }\n  refresh() {\n    this.setState({ mainAppUpdated: new Date() });\n  }\n\n  requestAppId() {\n    this.props.requestAppId(this);\n  }\n\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    try{\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    } catch(e) {\n      console.error(e);\n    }\n\n  }\n\n  handleMessage(msg: WebResponse) {\n    const percentageFloat:number = msg.percentage??0; \n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div style={{paddingTop:'10%'}}>\n          <Spinner/>\n        </div>\n      )\n    }\n    const usedHost = url.contextPath();\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout app={this} />\n        <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\nfunction updateFavicon(profile: any) {\n  if (profile.pageIcon) {\n    let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\n      document.querySelector('link[rel=\"icon\"]');\n    if (!link) {\n      link = document.createElement('link');\n      link.id = 'favicon';\n      link.setAttribute(\"rel\", 'shortcut icon');\n      document.head.appendChild(link);\n    }\n    link.setAttribute(\"href\", url.baseImageUrl + 'ICON/' + profile.pageIcon);\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  requestAppId: (app: App) => dispatch(actions.requestAppId(app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    entities: [],\r\n    entity: {},  \r\n    requestId: null,\r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: [], \r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n         \r\n      \r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ }; \r\n        // case types.REQUEST_ID:\r\n\r\n        //     return { ...state, requestId: action.payload.message };\r\n        // case types.SEND_MESSAGE:\r\n        //     return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            return { ...state, cart: action.payload.cart };\r\n\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n            result = {\r\n                ...state, requestId: action.payload.requestId,\r\n                applicationProfile: action.payload.applicationProfile == null ? {} : action.payload.applicationProfile\r\n            };\r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n            setCookie(\"requestId\", result.requestId);\r\n            localStorage.setItem(\"assetsPath\", result.applicationProfile.assetsPath);\r\n            console.debug(\"action.payload.loginStatus: \", action.payload.loginStatus);\r\n            console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                setCookie(\"loginKey\", result.loginKey);\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setCookie(\"loginKey\", null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    productFlowStock: null, \r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n    let result = state;\r\n    switch (action.type) {\r\n       \r\n \r\n        case types.RESET_PRODUCTS:\r\n            return { ...state, productsData: null };\r\n\r\n        case types.GET_CASHFLOW_INFO:\r\n            result = state;\r\n\r\n            if (action.payload.entity.module == \"OUT\") {\r\n                result.cashflowInfoOut = action.payload.entity;\r\n            }\r\n            if (action.payload.entity.module == \"IN\") {\r\n                result.cashflowInfoIn = action.payload.entity;\r\n            }\r\n\r\n            return result;\r\n\r\n        case types.GET_CASHFLOW_DETAIL:\r\n            return { ...state, cashflowDetail: action.payload };\r\n        case types.GET_PRODUCT_SALES:\r\n            let currentProductSalesData = action.payload;\r\n            if (action.loadMore == true) {\r\n                currentProductSalesData = state.productSalesData;\r\n                let loadedProductList = action.payload.entities;\r\n                for (let i = 0; i < loadedProductList.length; i++) {\r\n                    currentProductSalesData.entities.push(loadedProductList[i]);\r\n                }\r\n            }\r\n            console.log(\"will update currentProductSalesData: \", currentProductSalesData.entities.length);\r\n            result = { ...state, productSalesData: currentProductSalesData };\r\n            action.referrer.refresh();\r\n            return result; \r\n        case types.GET_PRODUCT_SALES_DETAIL:\r\n            return { ...state, productSalesDetails: action.payload };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\" \r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer, \r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState, \r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, {}, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(response => {\r\n        const responseJson = response.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n\r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = response.headers['access-token'];\r\n            console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => {\r\n        const data = response.data;\r\n        if (data.code != \"00\") {\r\n            alert(\"Error requesting app ID\");\r\n            return;\r\n        }\r\n        common.updateAccessToken(response);\r\n        console.debug(\"response header:\", response.headers['access-token']);\r\n        let newAction = Object.assign({}, action, { payload: { loginStatus: data.loggedIn, ...data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n    const apps:any[] = action.payload.apps;\r\n    for (let i = 0; i < apps.length; i++) {\r\n        const app = apps[i];\r\n        if (app.refresh){ \r\n            app.refresh();\r\n        }\r\n    }\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware' \r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware, \r\n            userMiddleware.requestAppIdMiddleware, \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n\r\n            //transaction   \r\n            getCashflowInfoMiddleware,\r\n            getCashflowDetailMiddleware,\r\n            getProductSalesMiddleware,\r\n            resetProductsMiddleware,   \r\n            getProductSalesDetailMiddleware,\r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n  \r\n  \r\n\r\nconst getProductSalesDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.debug(\"getProductSalesDetailMiddleware Response:\", data);\r\n        if (data.code != \"00\") {\r\n            alert(\"Server error\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: data });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n    .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data, loadMore: action.meta.loadMore, referrer: action.meta.referrer });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.referrer.props.app.endLoading());\r\n}\r\n\r\nconst getCashflowDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getCashflowDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCashflowInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_INFO) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.debug(\"getCashflowInfoMiddleware Response:\", data);\r\n        if (data.code != \"00\") {\r\n            alert(\"Server error\");\r\n            return;\r\n        }\r\n\r\n        if (data.entity == null) {\r\n            alert(\"Data for cashflow: \" + action.payload.filter.module + \" in \" + action.payload.filter.month + \"/\" + action.payload.filter.year + \" period not found!\");\r\n            return;\r\n        }\r\n\r\n        if (data.entity.amount == null) {\r\n            data.entity.amount = 0;\r\n            data.entity.count = 0;\r\n            console.log(\"DATA:\", data);\r\n        }\r\n        let newAction = Object.assign({}, action, { payload: data });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n    .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n   \r\nconst resetProductsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCTS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
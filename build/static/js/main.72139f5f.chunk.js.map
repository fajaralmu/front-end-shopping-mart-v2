{"version":3,"sources":["constant/Url.js","redux/actionCreators.ts","redux/types.js","constant/stores.js","component/loader/Loader.js","component/alert/Alert.js","utils/ComponentUtil.js","component/BaseComponent.tsx","constant/Menus.ts","component/navigation/Header.tsx","component/pages/login/Login.tsx","component/layout/BaseMainMenus.tsx","component/pages/dashboard/DashboardMain.tsx","middlewares/Common.js","services/Promises.ts","services/MasterDataService.ts","component/navigation/AnchorButton.tsx","component/container/Modal.tsx","models/EntityProperty.ts","models/FieldType.ts","utils/EntityValues.tsx","utils/StringUtil.ts","component/navigation/NavigationButtons.tsx","component/pages/masterdata/form/FormInputImage.tsx","component/pages/masterdata/form/FormInputImageMultiple.tsx","component/form/FormGroup.tsx","component/pages/masterdata/form/FormInputField.tsx","component/pages/masterdata/form/MasterDataForm.tsx","component/pages/masterdata/EditDeleteAction.tsx","component/pages/masterdata/DataTableHeader.tsx","component/alert/SimpleError.tsx","component/loader/Spinner.tsx","component/pages/masterdata/MasterDataList.tsx","component/pages/masterdata/MasterDataManagement.tsx","component/pages/masterdata/MasterDataMain.tsx","component/pages/transaction/TransactionMain.tsx","component/container/Card.tsx","component/navigation/AnchorWithIcon.tsx","services/CatalogService.ts","component/pages/catalog/CatalogMain.tsx","component/pages/home/HomeMain.tsx","models/BaseEntity.ts","models/Product.ts","component/pages/cart/CartMain.tsx","services/BaseTransactionService.ts","services/TransactionPurchasingService.ts","component/pages/transaction/purchasing/SupplierForm.tsx","component/pages/transaction/ProductForm.tsx","models/Transaction.ts","models/ProductFlow.ts","component/pages/transaction/BaseTransactionComponent.tsx","component/pages/transaction/purchasing/TransactionPurchasing.tsx","services/TransactionSellingService.ts","component/pages/transaction/selling/CustomerForm.tsx","component/pages/transaction/selling/TransactionSelling.tsx","services/TransactionHistoryService.ts","component/pages/transaction/detail/TransactionDetail.tsx","component/pages/catalog/product/ProductCatalogList.tsx","component/pages/catalog/product/ProductCatalog.tsx","component/pages/cart/CartList.tsx","component/container/Carousel.tsx","component/pages/catalog/productdetail/ProductCatalogDetail.tsx","utils/DateUtil.js","component/pages/dashboard/DashboardFilter.tsx","models/Cashflow.ts","component/pages/dashboard/DashboardBarChart.tsx","component/pages/dashboard/statistic/CashflowChart.tsx","component/pages/dashboard/statistic/DashboardStatistic.tsx","models/ProductSales.ts","component/pages/dashboard/sales/ProductSalesPage.tsx","component/pages/dashboard/sales/ProductSalesDetailPage.tsx","component/pages/settings/SettingsMain.tsx","models/User.ts","services/UserService.ts","component/pages/settings/helper.tsx","component/pages/settings/UserProfile.tsx","models/ApplicationProfile.ts","component/pages/settings/EditApplicationProfile.tsx","component/layout/ApplicationContent.tsx","models/Menu.ts","component/navigation/SideBar.tsx","component/layout/MainLayout.tsx","App.tsx","redux/shopReducer.js","redux/userReducer.js","redux/transactionReducer.js","redux/reducers.js","middlewares/UserMiddleware.ts","middlewares/RealtimeChatMiddleware.js","middlewares/CatalogMiddleware.ts","redux/configureStore.js","Root.tsx","serviceWorker.js","index.js"],"names":["devMode","document","getElementById","value","rootValue","contextPath","concat","baseImageUrl","usedHost","url","apiBaseUrl","apiAccount","updateCart","cart","apps","type","payload","meta","performLogout","app","startLoading","mapCommonUserStateToProps","state","applicationProfile","userState","loggedUser","loginStatus","requestId","shopState","LoaderContent","props","realtime","className","role","style","width","progress","transitionDuration","disabled","aria-hidden","Loader","timer","intervalId","update","clearInterval","console","log","setState","endMessage","this","withTimer","setInterval","msgStyle","text","zIndex","Component","Backdrop","backgroundColor","Footer","ref","yesButtonRef","onClick","onYes","yesOnly","noButtonRef","onNo","Header","fontClassName","id","title","onClose","Alert","React","createRef","e","isError","current","focus","headerClassName","display","tabIndex","aria-labelledby","children","byId","toBase64v2","fileInput","Promise","resolve","reject","reader","FileReader","readAsDataURL","files","onload","result","onerror","error","BaseComponent","authenticated","parentApp","updated","Date","validateLoginStatus","isLoggedUserNull","backToLogin","showCommonErrorAlert","msg","message","showError","event","target","checked","name","debug","activeId","element","withProgress","endLoading","method","successCallback","errorCallback","params","then","response","catch","alert","finally","doAjax","user","password","body","showAlert","showAlertError","history","push","menus","code","menuClass","active","showSidebar","subMenus","IState","showNavLinks","toggleNavLinks","onLogout","showConfirmation","ok","menuSet","i","length","getMenus","position","padding","margin","label","getApplicationProfile","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","map","menu","isActive","activeMenuCode","key","String","setMenu","to","setMenuNull","isUserLoggedIn","getLoggedUser","NavBarTop","paddingLeft","fontSize","UserIcon","marginRight","displayName","withRouter","connect","dispatch","Login","formRef","preventDefault","formData","FormData","performLogin","get","onSubmit","login","PasswordField","placeholder","required","UsernameField","autoFocus","username","BaseMainMenus","DashboardMain","commonAuthorizedHeader","getRequestId","getLoginKey","getCookie","updateAccessToken","axiosResponse","headers","accessToken","setCookie","cname","cvalue","exdays","d","setTime","getTime","expires","toUTCString","cookie","ca","decodeURIComponent","split","c","charAt","substring","indexOf","axios","require","commonAjaxPostCalls","endpoint","request","post","data","MasterDataService","managementProperties","entityPropertyMap","Map","updateApplicationProfile","profile","set","undefined","req","entity","filter","limit","page","exacts","fieldsFilter","model","editMode","instance","AnchorButton","show","btnClassName","attributes","iconClassName","Modal","hideModal","showModal","toggleable","marginBottom","footerContent","showFooter","EntityProperty","groupNames","entityName","alias","fieldNames","idField","detailFieldName","imageElementsJson","dateElementsJson","multipleSelectElementsJson","currencyElementsJson","formInputColumn","editable","withDetail","dateElements","imageElements","currencyElements","multipleSelectElements","elements","Array","fieldNameList","ignoreBaseField","isQuestionare","record","prop","getEntityElement","getHeaderLabels","header","lableName","isDate","FieldType","EntityValues","object","elemnents","elementid","fieldType","FIELD_TYPE_FIXED_LIST","FIELD_TYPE_DYNAMIC_LIST","optionItemName","FIELD_TYPE_DATE","toString","FIELD_TYPE_IMAGE","imgLink","src","height","FIELD_TYPE_COLOR","color","index","uniqueId","string","getUTCMilliseconds","beautifyNominal","val","isDecimal","includes","rawVal","parseInt","nominal","Math","abs","zeroIndex","NavigationButtons","buttonIndexes","generateButtonValues","totalData","activePage","lastIndex","nextPage","previusPage","currentPage","displayed_buttons","buttonCount","ceil","min","max","FormInputImage","singlePreviewData","showInputFile","changeSingleImageData","removeImage","showConfirmationDanger","doRemoveImage","prepopulateForm","recordToEdit","defaultValue","fullUrl","Fragment","onChange","accept","imageData","ImagePreview","FormInputImageMultiple","previewData","inputElements","setImageData","addInputElement","removeInputElement","removedIndex","doRemoveInputElement","splice","delete","trim","imageNames","imageName","isNull","isBase64","isBase64Image","startsWith","FormGroup","orientation","FormInputField","masterDataService","getInstance","inputList","entityElement","getRequiredAttr","inputListLoaded","entities","Error","loadInputList","entityReferenceClass","commonAjax","loadAllEntities","hasInputList","hasInputListAndNotReady","validateInputType","fieldName","recordValue","defaultInputValue","optionValueName","requiredAttr","input","options","option","optionItemValue","multiple","FIELD_TYPE_TEXTAREA","MasterDataForm","form","submit","promises","nulledFields","forEach","file","valueAttr","constructor","promise","all","objectPayload","generateRequestPayload","ajaxSubmit","rawObject","join","save","recordSaved","getEntityProperty","showInfo","entityProperty","editModeStr","SubmitReset","InputFields","groupedElements","counter","EditDeleteAction","doDelete","recordId","getRecordId","recordDeleted","getRecordById","getById","recordLoaded","showEditForm","reload","DataTableHeader","headerProps","headerProp","filterOnChange","data-orderType","orderButtonOnClick","data-orderby","SimpleError","Spinner","innerDivs","visibility","MasterDataList","showForm","loading","adjustFilter","loadEntities","entitiesLoaded","recordData","checkDefaultData","getRecordNumber","filterFormSubmit","useExistingFilterPage","filterReset","dataset","orderBy","orderType","showCreateForm","updateFilterPage","updateFilterLimit","resultList","onReset","overflow","number","values","parseValues","Loading","paddingTop","marginLeft","marginTop","SubmitResetButton","MasterDataManagement","loadingEntityProperty","entityPropertyLoaded","setEntityProperty","setTitle","entityProp","loadEntityProperty","existingEntityProperty","MasterDataMain","managementPropertiesLoaded","generalList","setSidebarMenus","refresh","sidebarMenus","loadManagamenetPages","loadManagementProperties","getCode","match","properties","property","TransactionMain","Card","AnchorWithIcon","CatalogService","totalProduct","setTotalProduct","getTotalProduct","getProductList","raw","getProductDetail","getMoreSupplier","productId","CatalogMain","catalogService","totalProductLoaded","totalProductNotLoaded","loadTotalProduct","HomeMain","imageUrl","backgroundUrl","backgroundImage","backgroundSize","fontColor","shortDescription","welcomingMessage","BaseEntity","createdDate","modifiedDate","deletedDate","deleted","Product","description","price","unit","category","newProduct","count","suppliers","product","names","getDefaultPicture","products","CartMain","countSummary","BaseTransactionService","defaultResponse","res","rej","submitTransactionSelling","transaction","submitTransaction","submitTransactionPurchasing","productFlows","customer","supplier","getStockInfo","productCode","withStock","TransactionPurchasingService","SupplierForm","supplierNotFound","searchSupplier","loadSupplier","supplierLoaded","setSupplier","notFound","SupplierDetail","h","address","contact","ProductForm","transactionService","productNotFound","searchProduct","loadProduct","productLoaded","setProduct","commonAjaxWithProgress","ProductDetail","fontFamily","Transaction","mode","transactionDate","productFlow","ProductFlow","expiryDate","flowReferenceId","transactionId","productFlowStock","totalPrice","obj","BaseTransactionComponent","productFormRef","create","selectedProductFlow","addToCart","Object","assign","existInCart","addProductFlowState","reset","clearSelectedProductFlow","editProduct","removeProduct","totalUnitAndPrice","totalUnit","totalProductPrice","productFlowPrice","productPrice","TransactionPurchasing","transactionPurchasingService","updateSelectedProductFlowProp","propName","doSubmit","date","transactionSucess","productFlowsPopulated","supplierExist","showSubmitTrxButton","colSpan","TransactionSellingService","getCustomerList","CustomerForm","customerNotFound","searchCustomer","loadCustomer","customerLoaded","setCustomer","CustomerDetail","phone","TransactionSelling","transactionSellingService","updateSaleQty","customerExist","TransactionHistoryService","getProductSales","getProductSalesDetail","getCashflowDetail","getTransactionData","transactionCode","getInventoriesQuantity","getBalanceInfo","TransactionDetail","transactionHistoryService","dataNotFound","transactionData","recordNotLoaded","setTransactionCode","TransactionData","isSelling","showCart","ProductCatalogList","showShoppingCart","hideShoppingCart","getProductInCart","addOneToCart","productInCart","setProductToCart","reduceOneFromCart","resetProductCart","productCloned","resetAllShoppingCart","getShoppingCartCounts","found","imgName","withCategories","categories","ProductCatalog","productNotLoaded","productsLoaded","loadProducts","setFieldsFilterValue","setFilterPage","setLimit","setOrder","rawOrder","withProgess","defaultChecked","CartList","removeFromCart","doRemoveFromCart","cartList","imgUrl","Carousel","imageLength","getCurrentImage","imageUrls","prev","currentActive","next","overflowX","ProductCatalogDetail","loadProductDetail","getPictureNames","MONTHS","DashboardFilter","updatePeriodFilter","yearTo","year","transactionYears","month","monthName","monthTo","Cashflow","amount","module","getFullYear","getAmount","getLabel","toDataSet","cashflow","toDataSets","cashflows","dataSets","maxAmount","hoveredIndex","DashboardBarChart","middleYAxisValue","bottomYAxisValue","offsetX","offsetY","baseYIndex","baseHeight","lineWidth","maxValue","updateSizes","dataSet","round","hover","unHover","minHeight","onMouseOut","version","baseProfile","xmlns","percentage","labelY","labelX","transform","hovered","cursor","onMouseOver","fill","x","y","textAnchor","cx","cy","r","activeSellingIndex","activePurchasingIndex","CashflowChart","getCashflowData","cashflowData","getPeriodString","getSellingData","list","sellings","getPurchasingData","purchasings","setActiveSellingData","unSelectSellingData","setActivePurchasingData","unSelectPurchasingData","onUnHover","CashflowDetail","getMonth","DashboardStatistic","loadStatistic","cashflowDataLoaded","cashflowDataNotLoaded","ProductSales","sales","objects","sortBySales","sort","p1","p2","sortBySalesDesc","sortType","activeSalesDataIndex","salesData","ProductSalesPage","loadSales","salesDataLoaded","salesDataNotLoaded","setActiveSalesData","unSelectSalesData","getActiveSalesData","salesList","showBtnLoadMore","btnSortIconClass","paddingBottom","productSales","ProductSalesDetail","ProductSalesDetailPage","getProductId","getProduct","SettingsMain","User","profileImage","authorities","processingDate","UserService","updateProfile","EditField","edit","toggleInput","updateProperty","PropertyInput","PropertyLabel","editFields","fieldChanged","UserProfile","userService","updateProfileProperty","updateProfleImage","setProfileImage","actualLoggedUser","propertyName","getAttribute","enabled","saveRecord","doSaveRecord","getUserEditedData","profileSaved","editedUser","setLoggedUser","EditImage","ApplicationProfile","appCode","about","website","iconUrl","pageIcon","footerIconClass","EditApplicationProfile","appProfile","actualAppProfile","getApplicationEditedData","editedApplication","setApplicationProfile","bgUrl","ApplicationContent","path","render","exact","Menu","pathVariables","menuPage","defaultMenuIconClassName","getIconClassName","SideBar","isSidebarActive","parentMenu","pathName","location","pathname","window","addEventListener","handleScroll","removeEventListener","scrollTop","srcElement","brand","menuClassName","Brand","textAlign","textDecoration","MainLayout","currentPathName","warn","setCurrentMenu","pathRaw","firstPath","extractMenuPath","getMenuByMenuPath","getSubMenus","App","loadings","alertTitle","alertBody","alertIsYesOnly","alertIsError","alertOnYesCallback","alertOnCancelCallback","clientRef","alertCallback","onOk","loadingPercentage","mainAppUpdated","requestAppId","incrementLoadings","decrementLoadings","percentageFloat","floor","yesCallback","noCallback","dismissAlert","link","querySelector","createElement","setAttribute","head","appendChild","updateFavicon","topics","onMessage","handleMessage","client","actions","initState","messages","userAlias","reducer","action","loginKey","loginFailed","menuData","loginAttempt","productsData","cashflowInfoOut","cashflowInfoIn","cashflowDetail","productSalesData","productSalesDetails","currentProductSalesData","loadMore","loadedProductList","referrer","rootReducer","combineReducers","shopReducer","userReducer","transactionState","transactionReducer","initialState","performLoginMiddleware","store","responseJson","loginSuccess","newAction","requestAppIdMiddleware","common","loggedIn","param","getLoggedUserMiddleware","performLogoutMiddleware","logoutSuccess","setLoggedUserMiddleware","getMessagesMiddleware","fetch","JSON","stringify","json","err","storeChatMessageLocallyMiddleware","removeEntityMiddleware","updateCartMiddleware","getProductSalesDetailMiddleware","getProductSalesMiddleware","getCashflowDetailMiddleware","getCashflowInfoMiddleware","resetProductsMiddleware","configureStore","createStore","applyMiddleware","catalogMiddleware","userMiddleware","realtimeChatMiddleware","Root","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iaACMA,EAC2C,kBAA7CC,SAASC,eAAe,YAAYC,OACS,IAA7CF,SAASC,eAAe,YAAYC,MAClCC,EAAYJ,EACb,wBAA0BC,SAASC,eAAe,YAAYC,MAAM,IAE5DE,EAAc,WACvB,IAAMA,EAAcL,EAAS,wBAAwBM,OAAOF,GAAWA,EAEvE,OAAOC,GAIEE,EAAe,8DCPtBC,EAAWC,IACXC,EAAaF,EAAW,cAExBG,EAAaH,EAAW,mBAIjBI,EAAa,SAACC,GAA8B,IAAD,uBAATC,EAAS,iCAATA,EAAS,kBAEpD,MAAO,CAAEC,KCAc,cDAWC,QAAS,CAAEH,KAAMA,EAAMC,KAAMA,GAAQG,KAAM,CAAEF,KCAxD,iBDiOdG,EAAgB,SAACC,GAO1B,OANAA,EAAIC,eACe,CACfL,KC7OiB,YD8OjBC,QAAS,GACTC,KAAM,CAAEE,IAAKA,EAAKJ,KC/OD,YD+OwBN,IAAKE,EAAWL,OAAO,a,wBErP3De,EAA4B,SAACC,GACtC,MAAO,CACHC,mBAAoBD,EAAME,UAAUD,mBACpCE,WAAYH,EAAME,UAAUC,WAC5BC,YAAaJ,EAAME,UAAUE,YAC7BC,UAAWL,EAAME,UAAUG,UAC3Bd,KAAMS,EAAMM,UAAUf,O,OC0C9B,SAASgB,EAAcC,GACnB,OAAGA,EAAMC,SAED,yBAAKC,UAAU,oCAAoCC,KAAK,cAAcC,MAAO,CACzEC,MAAOL,EAAMM,SAAW,IACxBC,mBAAoB,WAM5B,4BAAQL,UAAU,gBAAgBjB,KAAK,SAASuB,UAAQ,GACpD,0BAAMN,UAAU,mCAAmCC,KAAK,SAASM,cAAY,SAC7E,0BAAMP,UAAU,KAAhB,eAKGQ,M,kDA/DX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IACDR,MAAQ,CACTmB,MAAO,IACPC,WAAY,GAEhB,EAAKC,OAAS,WACN,EAAKrB,MAAMmB,MAAQ,GACnBG,cAAc,EAAKtB,MAAMoB,YAE7BG,QAAQC,IAAI,QACZ,EAAKC,SAAS,CAAEN,MAAO,EAAKnB,MAAMmB,MAAQ,IACtC,EAAKnB,MAAMmB,MAAQ,GAAK,EAAKX,MAAMkB,YACnC,EAAKlB,MAAMkB,cAbJ,E,gEAmBf,GAA4B,GAAxBC,KAAKnB,MAAMoB,UAAmB,CAC9B,IAAIR,EAAaS,YAAYF,KAAKN,OAAQ,EAAG,MAC7CM,KAAKF,SAAS,CAAEL,WAAYA,O,+BAKhC,IAAIV,EAAY,mBAAqBiB,KAAKnB,MAAMf,KAG5CqC,GAFcH,KAAKnB,MAAMuB,KAEd,IAOf,OAN2B,GAAvBJ,KAAKnB,MAAMC,WACXC,EAAY,2BACE,0BAAMA,UAAU,UAAUiB,KAAKnB,MAAMM,SAAW,KAC9DgB,EAASE,OAAS,KAIlB,yBAAKpB,MAAOkB,EAAUpB,UAAWA,GAC7B,kBAACH,EAAD,CAAeO,SAAUa,KAAKnB,MAAMM,SAAUL,SAAUkB,KAAKnB,MAAMC,gB,GAvC9DwB,aCyDrB,SAASC,EAAS1B,GACd,OACI,yBAAKE,UAAU,iBAAiBE,MAAO,CAACuB,gBAAiB,2BAIjE,SAASC,EAAO5B,GACZ,OACI,yBAAKE,UAAW,gBAAgBF,EAAME,WAClC,4BAAQ2B,IAAK7B,EAAM8B,aAAc7C,KAAK,SAClC8C,QAAS/B,EAAMgC,MAAO9B,UAAU,2BADpC,OAECF,EAAMiC,QAAU,KAAO,4BAAQJ,IAAK7B,EAAMkC,YAAajD,KAAK,SACzD8C,QAAS/B,EAAMmC,KAAMjC,UAAU,6BADX,OAMpC,SAASkC,EAAOpC,GACZ,OAAQ,yBAAKE,UAAW,gBAAgBF,EAAME,WAC1C,wBAAIA,UAAW,eAAeF,EAAMqC,cAAeC,GAAG,2BAA2BtC,EAAMuC,OACvF,4BAAQR,QAAS/B,EAAMwC,QAASvD,KAAK,SAASiB,UAAU,SACpD,0BAAMO,cAAY,OAAOP,UAAWF,EAAMqC,eAAe,uBAAGnC,UAAU,oBAKnEuC,M,kDAlFX,WAAYzC,GAAQ,IAAD,8BACf,cAAMA,IACD8B,aAAeY,IAAMC,YAC1B,EAAKT,YAAcQ,IAAMC,YAEzB,EAAKX,MAAQ,SAACY,GAEN,EAAK5C,MAAMgC,OACX,EAAKhC,MAAMgC,MAAMY,IAGzB,EAAKT,KAAO,SAACS,GAEL,EAAK5C,MAAMmC,MACX,EAAKnC,MAAMmC,KAAKS,IAGxB,EAAKJ,QAAU,SAACI,GACR,EAAK5C,MAAMwC,SACX,EAAKxC,MAAMwC,QAAQI,IAnBZ,E,gEAyBf,IAAMC,EAAgC,GAAtB1B,KAAKnB,MAAM6C,SACtBA,GAAW1B,KAAKW,aAAagB,QAC9B3B,KAAKW,aAAagB,QAAQC,QACnBF,GAAW1B,KAAKe,YAAYY,SACnC3B,KAAKe,YAAYY,QAAQC,U,+BAK7B,IAAMR,EAAQpB,KAAKnB,MAAMuC,MAAQpB,KAAKnB,MAAMuC,MAAQ,OAC9CN,EAAgC,GAAtBd,KAAKnB,MAAMiC,QAErBe,EADgC,GAAtB7B,KAAKnB,MAAM6C,QACO,YAAY,UAE9C,OACI,oCACI,kBAACnB,EAAD,MACA,yBAAKxB,UAAU,kBAAkBE,MAAO,CAAE6C,QAAS,SAAWX,GAAG,qBAAqBY,SAAS,KAAK/C,KAAK,SAASgD,kBAAgB,0BAA0B1C,cAAY,QACpK,yBAAKP,UAAU,qCAAqCC,KAAK,YACrD,yBAAKD,UAAU,iBACX,kBAAC,EAAD,CAAQmC,cAPA,aAOoCnC,UAAW8C,EAAiBT,MAAOA,EAAOC,QAASrB,KAAKqB,UACpG,yBAAKtC,UAAU,cAAf,IAA8BiB,KAAKnB,MAAMoD,UACzC,kBAACxB,EAAD,CAAQM,YAAaf,KAAKe,YAAaJ,aAAcX,KAAKW,aAAcG,QAASA,EAASD,MAAOb,KAAKa,MAAOG,KAAMhB,KAAKgB,e,GAjDhIV,a,QCFP4B,EAAO,SAACf,GAAS,OAAOnE,SAASC,eAAekE,IAmCtD,SAASgB,EAAWC,GACvB,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GAClC,IACI,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,EAAUO,MAAM,IACrCH,EAAOI,OAAS,WAAcN,EAAQE,EAAOK,SAC7CL,EAAOM,QAAU,SAAUC,GACvBR,EAAOQ,IAEb,MAAOtB,GACLc,EAAOd,OAuBZ,IC9DcuB,E,kDAIjB,WAAYnE,GAAoC,IAAD,EAAvBoE,EAAuB,oFAC3C,cAAMpE,IAJVqE,eAG+C,IAF/CD,eAAyB,EAEsB,EAD/C5E,MAAa,CAAE8E,QAAS,IAAIC,MACmB,EAS/CC,oBAAsB,WACQ,GAAtB,EAAKJ,eACL,EAAKK,oBACL,EAAKC,eAZkC,EAyI/CC,qBAAuB,SAAC/B,GAAW,IAAD,EAC9B7B,QAAQmD,MAAMtB,GACd,IAAMgC,EAAG,UAAGhC,EAAEiC,eAAL,QAAcjC,EACvB,EAAKkC,UAAU,qBAAqBF,IA1IpC,EAAKP,UAAYrE,EAAMX,IACvB,EAAK+E,cAAgBA,EACrB,EAAK5E,MAAL,eACO,EAAKA,OAL+B,E,oEAkB3C,OAAwC,MAAjC2B,KAAKnB,MAAMP,mBAA6B,GAAK0B,KAAKnB,MAAMP,qB,wCAGjDsF,GACd,IAAMC,EAASD,EAAMC,OACf3G,EAAuB,YAAf2G,EAAO/F,KAAqB+F,EAAOC,QAAUD,EAAO3G,MAClE8C,KAAKF,SAAL,eAAiB+D,EAAOE,KAAO7G,IAC/B0C,QAAQoE,MAAM,kBAAmBH,EAAOE,KAAM7G,K,2CAI9C,GAA2B,MAAvB8C,KAAK3B,MAAM4F,UAAiD,MAA7B/B,EAAKlC,KAAK3B,MAAM4F,UAAmB,CAClE,IAAMC,EAAUhC,EAAKlC,KAAK3B,MAAM4F,UACjB,MAAXC,GACAA,EAAQtC,W,mCAQPuC,GACTnE,KAAKkD,UAAU/E,aAAagG,K,mCAI5BnE,KAAKkD,UAAUkB,e,6BAUZC,EAAkBF,EAAuBG,EAA2BC,GAA4C,IAAD,OAClHvE,KAAK7B,aAAagG,GADgG,2BAAdK,EAAc,iCAAdA,EAAc,kBAGlHH,EAAM,WAAN,EAAUG,GAAQC,MAAK,SAAUC,GACzBJ,GACAA,EAAgBI,MAErBC,OAAM,SAAUlD,GACX8C,EACAA,EAAc9C,IAEI,iBAANA,GACRmD,MAAM,qBAAuBnD,GAEjCmD,MAAM,0BAEXC,SAAQ,SAACpD,GACR,EAAK2C,kB,iCAIFC,EAAkBC,EAA2BC,GAAyC,IAAD,uBAAZC,EAAY,iCAAZA,EAAY,kBAC5FxE,KAAK8E,OAAL,MAAA9E,KAAA,CAAYqE,GAAQ,EAAOC,EAAiBC,GAA5C,OAA8DC,M,6CAE3CH,EAAkBC,EAA2BC,GAAyC,IAAD,uBAAZC,EAAY,iCAAZA,EAAY,kBACxGxE,KAAK8E,OAAL,MAAA9E,KAAA,CAAYqE,GAAQ,EAAMC,EAAiBC,GAA3C,OAA6DC,M,sCAG7D,IAAMO,EAAsB/E,KAAKnB,MAAML,WACvC,GAAKuG,EAEL,OADAA,EAAKC,SAAW,MACTD,I,yCAGP,OAAO,GAAS/E,KAAKnB,MAAMJ,aAAe,MAAQuB,KAAKnB,MAAML,a,uCAG7D,OAAO,GAAQwB,KAAKnB,MAAMJ,aAAe,MAAQuB,KAAKnB,MAAML,a,uCAE/CyG,GACb,IAAM/G,EAAM8B,KACZ,OAAO,IAAIqC,SAAQ,SAASC,EAASC,GAOjCrE,EAAIgF,UAAUgC,UAAU,eAAgBD,GAAM,GANhC,SAAUxD,GACpBa,GAAQ,MAEC,SAAUb,GACnBa,GAAQ,W,6CAMG2C,GACnB,IAAM/G,EAAM8B,KACZ,OAAO,IAAIqC,SAAQ,SAASC,EAASC,GAOjCrE,EAAIgF,UAAUiC,eAAe,eAAgBF,GAAM,GANrC,SAAUxD,GACpBa,GAAQ,MAEC,SAAUb,GACnBa,GAAQ,W,+BAMX2C,GACLjF,KAAKkD,UAAUgC,UAAU,OAAQD,GAAM,GAAM,iB,gCAEvCA,GACNjF,KAAKkD,UAAUiC,eAAe,QAASF,GAAM,GAAM,iB,oCAI9CjF,KAAKiD,eAAuC,MAAtBjD,KAAKnB,MAAMuG,SAGtCpF,KAAKnB,MAAMuG,QAAQC,KAAK,Y,gCAGxBrF,KAAKF,SAAS,CAAEqD,QAAS,IAAIC,S,2CAUH,GAAtBpD,KAAKiD,eAAyBjD,KAAKsD,qBACnC1D,QAAQoE,aAAahE,KAAO,iBAC5BA,KAAKqD,2B,GAtJ0B/C,a,cC2C9BgF,EAAgB,CACzB,CACIC,KAhDY,OAiDZxB,KAAM,OACNvG,IAAK,QACLgI,UAAW,aACXC,QAAQ,EACRxC,eAAe,EACfyC,aAAa,GAEjB,CACIH,KAxDe,UAyDfxB,KAAM,UACNvG,IAAK,WACLgI,UAAW,iBACXC,QAAQ,EACRxC,eAAe,EACfyC,aAAa,EACbC,SAAU,CAAC,CACPJ,KAAM,kBACNxB,KAAM,UACNvG,IAAK,UACLgI,UAAW,gBAEf,CACID,KAAM,mBACNxB,KAAM,WACNvG,IAAK,cAGb,CACI+H,KAhEY,OAiEZxB,KAAM,gBACNvG,IAAK,QACLgI,UAAW,sBACXC,QAAQ,EACRxC,eAAe,EACfyC,aAAa,EACbC,SAAU,CACN,CACIJ,KAAM,YACNxB,KAAM,qBACNyB,UAAW,sBACXhI,IAAK,cAIjB,CACI+H,KAxFiB,YAyFjBxB,KAAM,YACNvG,IAAK,aACLgI,UAAW,wBACXC,QAAQ,EACRxC,eAAe,EACfyC,aAAa,EACbC,SAAU,CACN,CACIJ,KAAM,iBACNxB,KAAM,YACNvG,IAAK,YACLgI,UAAW,oBAGf,CACID,KAAM,yBACNxB,KAAM,gBACNvG,IAAK,eACLgI,UAAW,uBAIvB,CACID,KA9GwB,aA+GxBxB,KAAM,cACNvG,IAAK,eACLgI,UAAW,kBACXC,QAAQ,EACRxC,eAAe,EACfyC,aAAa,EACbC,SAAU,CACN,CACIJ,KAAM,cACNxB,KAAM,UACNyB,UAAW,uBACXhI,IAAK,WAET,CACI+H,KAAM,iBACNxB,KAAM,aACNyB,UAAW,yBACXhI,IAAK,cAET,CACI+H,KAAM,aACNxB,KAAM,qBACNyB,UAAW,wBACXhI,IAAK,YAIjB,CACI+H,KAxIwB,aAyIxBxB,KAAM,cACNvG,IAAK,cACLgI,UAAW,iBACXC,QAAQ,EACRxC,eAAe,EACfyC,aAAa,GAEjB,CACIH,KAnJoB,WAoJpBxB,KAAM,UACNvG,IAAK,YACLgI,UAAW,cACXC,QAAQ,EACRxC,eAAe,EACfyC,aAAa,EACbC,SAAU,CACN,CACIJ,KAAM,eACNxB,KAAM,UACNyB,UAAW,kBACXhI,IAAK,gBAET,CACI+H,KAAM,cACNxB,KAAM,sBACNyB,UAAW,aACXhI,IAAK,kBCxKfoI,G,6CACFC,cAAwB,IAEtB5E,E,kDAEF,WAAYpC,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAFjBR,MAAgB,IAAIuH,EACI,EAGxBE,eAAiB,WACb,EAAKhG,SAAS,CAAE+F,cAAe,EAAKxH,MAAMwH,gBAJtB,EAMxBE,SAAW,SAACtE,GACR,IAAMvD,EAAG,eACTA,EAAI8H,iBAAiB,WAAWvB,MAC5B,SAAUwB,GACFA,GACA/H,EAAIW,MAAMZ,cAAcC,EAAIgF,eAXpB,E,qDAgBd,IAAD,OACC2C,EAAwB7F,KAAK3B,MAAMwH,aACnCP,EDdU,WAEpB,IADA,IAAIY,EAAkB,GACbC,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAAK,CACnC,IAAMjC,EAAgBoB,EAAMa,GAC5BD,EAAQb,KAAKnB,GAEjB,OAAOgC,ECQWG,GACd,OACI,yBAAKtH,UAAU,0BAA0BE,MAAO,CAAEqH,SAAU,QAASjG,OAAQ,GAAIkG,QAAS,EAAGC,OAAQ,IACjG,kBAAC,EAAD,CAAWC,MAAOzG,KAAK0G,wBAAwB3C,OAC/C,yBAAK5C,GAAG,SAASpC,UAAU,8CAA8CE,MAAO,CAAEC,MAAO,SAErF,uBAAGiC,GAAG,eAAepC,UAAU,eAAe4H,KAAK,KAAK3G,KAAK0G,wBAAwB3C,MACrF,4BAAQnD,QAASZ,KAAK8F,eAAgB/G,UAAU,iBAAiBjB,KAAK,SAAS8I,cAAY,WACvFC,cAAY,iBAAiBC,gBAAc,gBAC3CC,gBAAc,QAAQC,aAAW,qBACjC,uBAAGjI,UAAW8G,EAAe,eAAiB,iBAElD,yBAAK9G,UAAW,2BAA4BoC,GAAG,iBAC3C,wBAAIA,GAAG,aAAapC,UAAU,mCACzBuG,EAAM2B,KAAI,SAAAC,GACP,GAAY,MAARA,GAAgBA,EAAKjE,eAAiB,EAAKK,mBAAoB,OAAO,KAC1E,IAAM6D,EAAW,EAAKtI,MAAMuI,gBAAkBF,EAAK3B,KACnD,OACI,wBAAI8B,IAAK,eAAiB,IAAIC,OAAOJ,EAAK3B,MAAOxG,UAAW,aAAeoI,EAAW,oBAAsB,iBACxG,kBAAC,IAAD,CAAMvG,QAAS,kBAAM,EAAK/B,MAAM0I,QAAQL,IAAOnI,UAAW,aACtDyI,GAAIN,EAAK1J,KAAK,8BAAO0J,EAAKnD,YAK9C,0BAAMhF,UAAU,4BACZ,kBAAC,EAAD,CAAU0I,YAAazH,KAAKnB,MAAM4I,YAAaxE,cAAejD,KAAK0H,iBAC/D3B,SAAU/F,KAAK+F,SAAUhB,KAAM/E,KAAK2H,0B,GA/C/C3E,GAwDf4E,EAAY,SAAC/I,GACf,OACI,yBAAKsC,GAAG,mBAAmBlC,MAAO,CAAE4I,YAAa,UAAY9I,UAAU,mBACnE,uBAAGE,MAAO,CAAE6I,SAAU,QAAU/I,UAAU,0BAA0B4H,KAAK,KACrE,gCAAS9H,EAAM4H,UAKzBsB,EAAW,SAAClJ,GACd,OAAIA,EAAMoE,cAEF,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAMrC,QAAS/B,EAAM4I,YAAaxI,MAAO,CAAE+I,YAAa,OAASjJ,UAAU,oCACvEyI,GAAG,0BAAyB,uBAAGzI,UAAU,uBAD7C,OAC6EF,EAAMkG,KAAKkD,aAExF,uBAAGhJ,MAAO,CAAC+I,YAAY,OAAQjJ,UAAU,sCACrC6B,QAAS/B,EAAMkH,UAAU,uBAAGhH,UAAU,wBAD1C,eAOR,kBAAC,IAAD,CAAME,MAAO,CAAC+I,YAAY,OAAQpH,QAAS/B,EAAM4I,YAAa1I,UAAU,mCACpEyI,GAAG,UADP,IACiB,uBAAGzI,UAAU,uBAD9B,cAWOmJ,cAAWC,YACtB/J,GANuB,SAACgK,GAAD,MAAyB,CAChDnK,cAAe,SAACC,GAAD,OAAckK,EAASnK,EAAcC,QAI9BiK,CAGxBlH,IChGIoH,G,yDAEF,WAAYxJ,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAFjByJ,QAAsC/G,IAAMC,YACpB,E,kDAGlBC,GACFA,EAAE8G,iBACwB9G,EAAEoC,OAC5B,GAAI,MAAQ7D,KAAKsI,QAAQ3G,QAAzB,CAGA,IAAM6G,EAAqB,IAAIC,SAASzI,KAAKsI,QAAQ3G,SACrD/B,QAAQoE,MAAM,aAAcwE,GAC5BxI,KAAKnB,MAAM6J,aAAaF,EAASG,IAAI,YAAaH,EAASG,IAAI,YAAa3I,KAAKkD,c,0CAGjFlG,SAASoE,MAAQ,QACbpB,KAAK0H,kBACL1H,KAAKnB,MAAMuG,QAAQC,KAAK,gB,2CAK5BzF,QAAQoE,MAAM,gBACdpE,QAAQoE,MAAM,eAAgBhE,KAAKnB,MAAMJ,aACzCmB,QAAQoE,MAAM,iBAAkBhE,KAAK2H,iBACjC3H,KAAK0H,kBACL1H,KAAKnB,MAAMuG,QAAQC,KAAK,gB,+BAGtB,IAAD,OACL,OACI,yBAAKlE,GAAG,SACJ,0BAAMT,IAAKV,KAAKsI,QAASvE,KAAK,QAAQ6E,SAAU,SAACnH,GAAQ,EAAKoH,MAAMpH,IAChE4C,OAAO,OAAOtF,UAAU,eACxB,yBAAKA,UAAU,eACX,4BAAI,uBAAGA,UAAU,wBACjB,wBAAIA,UAAU,8BAAd,mBAEJ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,4BAAQA,UAAU,mCAAmCjB,KAAK,UAA1D,WACA,2BAAOiG,KAAK,iBAAiBjG,KAAK,SAASZ,MAAM,e,GA1CjD8F,IAiDd8F,EAAgB,SAACjK,GACnB,OAAO,kBAAC,WAAD,KACH,2BAAOE,UAAU,WAAjB,YACA,2BAAOgF,KAAK,WAAWjG,KAAK,WAAWqD,GAAG,gBAAgBpC,UAAU,eAChEgK,YAAY,WAAWC,UAAQ,MAGrCC,EAAgB,SAACpK,GACnB,OAAQ,kBAAC,WAAD,KACJ,2BAAOE,UAAU,WAAjB,YACA,2BAAOgF,KAAK,WAAWjG,KAAK,OAAOqD,GAAG,WAAWpC,UAAU,eACvDgK,YAAY,WAAWC,UAAQ,EAACE,WAAS,MAQtChB,cAAWC,YACtB/J,GANuB,SAACgK,GAAD,MAAyB,CAChDM,aAAc,SAACS,EAAkBnE,EAAkB9G,GAArC,OAAkDkK,ETkLxC,SAACe,EAAUnE,EAAU9G,GAU7C,OATAA,EAAIC,eACe,CACfL,KCxPgB,WDyPhBC,QAAS,GACTC,KAAM,CACFF,KC3PY,WD2PUN,IAAKJ,IAAcC,OAAO,kBAAoB8L,EAAW,aAC3EnE,EAAW,wBAAyB9G,IAAKA,ISzLoBwK,CAAaS,EAAUnE,EAAU9G,QAIpFiK,CAGxBE,IC7EmBe,E,kDAGjB,WAAYvK,EAAOuC,GAA8C,IAAD,EAA/B6B,EAA+B,oFAC5D,cAAMpE,EAAOoE,IAFjB7B,MAAe,GAGX,EAAKA,MAAQA,EAF+C,E,gEAMxDpB,KAAKiD,eACLjD,KAAKqD,sBAETrG,SAASoE,MAAQpB,KAAKoB,U,GAZa4B,GCMrCqG,E,kDAEF,WAAYxK,GAAW,uCACbA,EAAO,aAAa,G,qDAErB,IAAD,EACJ,OACI,yBAAKsC,GAAG,gBAAgBpC,UAAU,mBAC9B,yCACA,yBAAKA,UAAU,oBAAf,YACa,0CAASiB,KAAK2H,uBAAd,aAAS,EAAsBM,mB,GAVhCmB,GAqBblB,cAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGtBkB,I,gBChCSC,EAAyB,WAClC,MAAO,CACH,eAAgB,mBAChB,UAAaC,KACb,cAAiB,UAAUC,OAItBA,GAAc,WACvB,OAAOC,GAAU,aAGRC,GAAoB,SAACC,GAC9B,GAAIA,GAAiBA,EAAcC,SAAWD,EAAcC,QAAQ,gBAAiB,CACjF,IAAMC,EAAcF,EAAcC,QAAQ,gBAE1CE,GAAU,WAAYD,KAIjBN,GAAe,WACxB,OAAOE,GAAU,cAGRK,GAAY,SAAUC,EAAOC,EAAQC,GAC9C,IAAIC,EAAI,IAAI9G,KACZ8G,EAAEC,QAAQD,EAAEE,UAAsB,GAATH,EAAc,GAAK,GAAK,KACjD,IAAII,EAAU,WAAaH,EAAEI,cAC7BtN,SAASuN,OAASR,EAAQ,IAAMC,EAAS,IAAMK,EAAU,WAEhDZ,GAAY,SAAUM,GAI/B,IAHA,IAAIhG,EAAOgG,EAAQ,IAEfS,EADgBC,mBAAmBzN,SAASuN,QACzBG,MAAM,KACpBvE,EAAI,EAAGA,EAAIqE,EAAGpE,OAAQD,IAAK,CAEhC,IADA,IAAIwE,EAAIH,EAAGrE,GACW,KAAfwE,EAAEC,OAAO,IACZD,EAAIA,EAAEE,UAAU,GAEpB,GAAuB,GAAnBF,EAAEG,QAAQ/G,GACV,OAAO4G,EAAEE,UAAU9G,EAAKqC,OAAQuE,EAAEvE,QAG1C,MAAO,ICvCL2E,GAAQC,EAAQ,IAYTC,GAAsB,SAACC,EAAkBnN,GAClD,IAAMoN,EAAqB,MAAXpN,EAAkB,GAAKA,EACvC,OAAO,IAAIsE,SAAqB,SAAUC,EAASC,GAC/CwI,GAAMK,KAAKF,EAAUC,EAAS,CAC1BvB,QAASN,MAER7E,MAAK,SAAAkF,GACFD,GAAkBC,GAClB,IAAMjF,EAAwBiF,EAAc0B,KACvB,MAAjB3G,EAASa,KAETjD,EAAQoC,GAELnC,EAAOmC,MAEjBC,OAAM,SAAClD,GAAa7B,QAAQmD,MAAMtB,GAAIc,EAAOd,UCtBrC6J,G,iDACjBC,qBAA6C,G,KACrCC,kBAAiD,IAAIC,I,KAuG7DC,yBAA2B,SAACpN,GACxB,IAAM6M,EAAsB,CACxBQ,QAASrN,GAEP4M,EAAW9N,IAAcC,OAAO,iCACtC,OAAO4N,GAAoBC,EAAUC,I,8DAlGvB5F,EAAc8F,GACvBA,GAGLrL,KAAKwL,kBAAkBI,IAAIrG,EAAM8F,K,wCAEnB9F,GACd,QAAYsG,GAARtG,EAGJ,OAAOvF,KAAKwL,kBAAkB7C,IAAIpD,K,+CAGbuG,GACrB,IAAMZ,EAAmB9N,IAAcC,OAAO,kCAC9C,OAAO4N,GAAoBC,EAAU,M,yCAGtB3F,GACf3F,QAAQoE,MAAM,qBAAsBuB,GACpC,IAAM4F,EAAsB,CACxBY,OAAQxG,GAEN2F,EAAmB9N,IAAcC,OAAO,2BAC9C,OAAO4N,GAAoBC,EAAUC,K,mCAG5BA,GACT,IAAMD,EAAmB9N,IAAcC,OAAO,sBAC9C,OAAO4N,GAAoBC,EAAUC,K,sCAGzB5F,GACZ,IAAM4F,EAAsB,CACxBY,OAAQxG,EACRyG,OAAQ,CACJC,MAAO,EAAGC,KAAM,IAGlBhB,EAAmB9N,IAAcC,OAAO,sBAC9C,OAAO4N,GAAoBC,EAAUC,K,8BAGjC5F,EAAcpE,GAClB,IAAMgK,EAAsB,CACxBY,OAAQxG,EACRyG,OAAQ,CACJG,QAAQ,EACRF,MAAO,EACPC,KAAM,EACNE,aAAc,CAAE,GAAMjL,KAGxB+J,EAAmB9N,IAAcC,OAAO,sBAC9C,OAAO4N,GAAoBC,EAAUC,K,4BAEnC5F,EAAc6G,GAA8B,IAAZH,EAAW,uDAAH,EACpCd,EAAsB,CACxBY,OAAQxG,EACRyG,OAAQ,CACJG,QAAQ,EACRF,MAAOA,EACPC,KAAM,EACNE,aAAcA,IAGhBlB,EAAmB9N,IAAcC,OAAO,sBAC9C,OAAO4N,GAAoBC,EAAUC,K,6BAElC5F,EAAcpE,GACjB,IAAMgK,EAAsB,CACxBY,OAAQxG,EACRyG,OAAQ,CACJI,aAAc,CAAE,GAAMjL,KAGxB+J,EAAmB9N,IAAcC,OAAO,yBAC9C,OAAO4N,GAAoBC,EAAUC,K,2BAEpC5F,EAAc8G,EAAmBC,GAClC,IAIIpB,EAJEC,EAAmB,aACrBY,OAAQxG,GACPA,EAAO8G,GAQZ,OAJInB,EADAoB,EACWlP,IAAcC,OAAO,yBAErBD,IAAcC,OAAO,sBAE7B4N,GAAoBC,EAAUC,M,qCA7FrC,OAHqB,MAAjBnL,KAAKuM,WACLvM,KAAKuM,SAAW,IAAIjB,GAEjBtL,KAAKuM,a,KATCjB,GAGFiB,c,eCHEC,G,kDAEjB,WAAY3N,GAAY,uCACdA,G,qDAEA,IAAD,EACL,GAAuB,GAAnBmB,KAAKnB,MAAM4N,KAAe,OAAO,KACrC,IAAMC,EAAY,UAAG1M,KAAKnB,MAAME,iBAAd,QAAyB,4BAC3C,OACI,qCAAGE,MAAOe,KAAKnB,MAAMI,OAAWe,KAAKnB,MAAM8N,WAA3C,CAAuD/L,QAASZ,KAAKnB,MAAM+B,QAAS7B,UAAW2N,IAC1F1M,KAAKnB,MAAM+N,cACZ,0BAAM3N,MAAOe,KAAKnB,MAAMoD,SAAS,CAAC+F,YAAY,OAAO,IAAI,uBAAGjJ,UAAWiB,KAAKnB,MAAM+N,iBAElF,KACC5M,KAAKnB,MAAMoD,c,GAdc3B,aCPpCsF,G,sCACF6G,MAAe,GAEEI,G,kDAEjB,WAAYhO,GAAa,IAAD,8BACpB,cAAMA,IAFVR,MAAe,IAAIuH,GACK,EAGxBkH,UAAY,WACR,EAAKhN,SAAS,CAAC2M,MAAK,KAJA,EAMxBM,UAAY,WACR,EAAKjN,SAAS,CAAC2M,MAAK,KAPA,E,qDASd,IAAD,EACN,GAAuB,GAAnBzM,KAAKnB,MAAM4N,KAAiB,OAAO,KACtC,IAAMrL,EAAK,UAAGpB,KAAKnB,MAAMuC,aAAd,QAAsB,QACjC,GAA6B,GAAzBpB,KAAKnB,MAAMmO,YAAyC,GAAnBhN,KAAK3B,MAAMoO,KAC5C,OACI,kBAAC,GAAD,CAAcxN,MAAO,CAACgO,aAAa,QAASrM,QAASZ,KAAK+M,UAAWH,cAAc,qBAAnF,QAA8GxL,GAGtH,IAAMvC,EAAS,cAAGI,MAAH,EAAUwN,KAAV,EAAgBS,cAAhB,EAA+BF,WAA/B,sEAAiEhN,KAAKnB,OACrF,OACI,yCAASA,EAAT,CAAgBE,UAAU,iBAAiBE,MAAK,2BAAMJ,EAAMI,OAAZ,IAAmBgO,aAAa,WAC5E,yBAAKlO,UAAU,gBACX,wBAAIA,UAAU,eAAeqC,GAC5BpB,KAAKnB,MAAMmO,WACZ,4BAAQlP,KAAK,SAASiB,UAAU,aAAa6B,QAASZ,KAAK8M,UAAW9F,aAAW,SAC7E,0BAAM1H,cAAY,QACd,uBAAGP,UAAU,mBAIrB,MAEJ,yBAAKA,UAAU,cACViB,KAAKnB,MAAMoD,UAEfjC,KAAKnB,MAAMqO,eAA0C,GAAzBlN,KAAKnB,MAAMsO,WACxC,yBAAKpO,UAAU,gBACViB,KAAKnB,MAAMqO,eAEf,U,GAxCkB5M,aCFd8M,G,iDACpBC,gB,OACAC,gB,OACAC,W,OACAC,gB,OACAC,a,OACAC,qB,OACAC,uB,OACAC,sB,OACAC,gC,OACAC,0B,OACAC,qB,OACAC,c,OACAC,gB,OACAC,kB,OACAC,mB,OACAC,sB,OACAC,4B,OACAC,SAA2B,IAAIC,M,KAC/BC,mB,OACAC,qB,OACAC,mB,+DA+BmBC,EAAYC,GAE9B,IADA,IAAMN,EAAWM,EAAKN,SACbnI,EAAI,EAAGA,EAAImI,EAASlI,OAAQD,IAAK,CACzC,IAAMjC,EAAUoK,EAASnI,GACzB,GAAIjC,EAAQuJ,QACX,OAAOkB,EAAOzK,EAAQ/C,IAGxB,OAAO,S,KA5DYiM,GAuBbyB,iBAAmB,SAACD,EAAsBzN,GAChD,IAAK,IAAIgF,EAAI,EAAGA,EAAIyI,EAAKN,SAASlI,OAAQD,IAAK,CAC9C,IAAMjC,EAAU0K,EAAKN,SAASnI,GAC9B,GAAIjC,EAAQ/C,IAAMA,EACjB,OAAO+C,IA3BUkJ,GAiCb0B,gBAAkB,SAACF,GACzB,IAAM/L,EAAuB,IAAI0L,MACjC,QAAqB1C,GAAjB+C,EAAKN,SACR,OAAOzL,EAGR,IADA,IAAMyL,EAA2BM,EAAKN,SAC7BnI,EAAI,EAAGA,EAAImI,EAASlI,OAAQD,IAAK,CAEzC,IAAMjC,EAAUoK,EAASnI,GACnB4I,EAAqB,CAC1BtI,MAAMvC,EAAQ8K,UACd9R,MAAMgH,EAAQ/C,GACd8N,OAAuB,QAAhB/K,EAAQpG,MAEhB+E,EAAOwC,KAAK0J,GAEb,OAAOlM,G,ICpDGqM,G,iBAAAA,K,kCAAAA,E,oCAAAA,E,0CAAAA,E,sCAAAA,E,sCAAAA,E,oCAAAA,E,8CAAAA,E,kDAAAA,E,0CAAAA,E,8CAAAA,E,mCAAAA,Q,SCISC,G,yGACDC,EAAYR,GAG9B,IAHiE,IAAD,EAC1D/L,EAAS,IAAI0L,MACbc,EAA2BT,EAAKN,SAC7BnI,EAAI,EAAGA,EAAIkJ,EAAUjJ,OAAQD,IAAK,CAC1C,IAAMjC,EAAUmL,EAAUlJ,GACpBmJ,EAAYpL,EAAQ/C,GACtBjE,EAAakS,EAAOE,GACxB,GAAa,MAATpS,EAAJ,CAIA,OAAOgH,EAAQqL,WACd,KAAKL,GAAUM,sBACf,KAAKN,GAAUO,wBAEdvS,EADmBkS,EAAOE,GACR,UAACpL,EAAQwL,sBAAT,QAAyB,MAC3C,MACD,KAAKR,GAAUS,gBACdzS,EAAQ,IAAIkG,KAAKlG,GAAO0S,WACxB,MACD,KAAKV,GAAUW,iBACd,IAAMC,EAAU,IAAIxI,OAAOpK,GAAOwN,MAAM,KAAK,GAC7CxN,EAAQ,yBAAK6S,IAAMzS,EAAawS,EAAS5Q,MAAM,KAAK8Q,OAAO,OAC3D,MACD,KAAKd,GAAUe,iBACd/S,EAAQ,4BAAQ+B,MAAO,CAACiR,MAAMhT,IAAUA,GACxC,MACD,QACCA,EAAQkS,EAAOE,GAEjBzM,EAAOwC,KAAKnI,QAtBX2F,EAAOwC,KAAKnI,GAwBd,OAAO2F,M,KCtCLsN,GAAQ,EACCC,GAAW,WACvB,IAAIC,EAAS,IAAI/I,QAAO,IAAIlE,MAAOkN,sBAAsBV,WAEzD,QADAO,GACe,IAAME,GAGf,SAASE,GAAgBC,GAC/B,GAAW,IAAPA,GAAoB,MAAPA,EAAa,MAAO,IACrC,IAAMC,EAAoB,IAAInJ,OAAOkJ,GAAKE,SAAS,KAE7CC,EAASF,EAAWG,SAAU,IAAItJ,OAAOkJ,GAAK9F,MAAM,KAAK,IAAMkG,SAASJ,GAC1EK,EAAUC,KAAKC,IAAIJ,GAAQf,WAC3B/M,EAAS,GACb,GAAIgO,EAAQzK,OAAS,EAAG,CAEvB,IADA,IAAI4K,EAAoB,EACf7K,EAAI0K,EAAQzK,OAAS,EAAGD,EAAI,EAAGA,IACvC6K,IACAnO,EAASgO,EAAQ1K,GAAKtD,EACL,GAAbmO,IACHnO,EAAS,IAAMA,EACfmO,EAAY,GAIdnO,EAASgO,EAAQ,GAAKhO,OAEtBA,EAAS2N,EAEV,OAAIG,EAAS,EACLA,GAEJF,IACH5N,GAAS,IAAK,IAAIyE,OAAOkJ,GAAK9F,MAAM,KAAK,IAEnC7H,GAGD,IC7BcoO,G,kDACjB,WAAYpS,GAAgB,uCAClBA,G,qDAEA,IAAD,OACCqS,EAAgBC,GAAqBnR,KAAKnB,MAAMoN,MAAOjM,KAAKnB,MAAMuS,UAAWpR,KAAKnB,MAAMwS,YAC9F,GAA4B,GAAxBH,EAAc9K,OAAe,OAAO,KACxC,IAAMkL,EAAYJ,EAAcA,EAAc9K,OAAS,GACjDmL,EAAWvR,KAAKnB,MAAMwS,WAAa,GAAKC,EAAa,EAAItR,KAAKnB,MAAMwS,WAAa,EACjFG,EAAcxR,KAAKnB,MAAMwS,WAAa,EAAI,EAAGC,EAAU,EAAItR,KAAKnB,MAAMwS,WAAa,EACzF,OAAQ,6BACJ,yBAAKrK,aAAW,2BACZ,wBAAIjI,UAAU,cACV,wBAAIA,UAAU,aAAY,uBAAGA,UAAU,YAAY6B,QAAS,SAACa,GAAD,OAAO,EAAK5C,MAAM+B,QAAQ4Q,KAA5D,aACzBN,EAAcjK,KAAI,SAACiF,EAAM/F,GACtB,OAAO,wBAAIkB,IAAK,OAAO+I,KAAYrR,UAAW,cAAcmN,EAAK,GAAK,EAAKrN,MAAMwS,WAAW,SAAS,KAAK,uBAAGtS,UAAU,aAAa6B,QAAS,SAACa,GAAD,OAAO,EAAK5C,MAAM+B,QAAQsL,EAAO,KAAMA,OAExL,wBAAInN,UAAU,aAAY,uBAAGA,UAAU,YAAY6B,QAAS,SAACa,GAAD,OAAO,EAAK5C,MAAM+B,QAAQ2Q,KAA5D,gB,GAjBCjR,aAwBzC6Q,GAAuB,SAAClF,EAAemF,EAAmBK,GAG5D,IAAMC,EAA8B,GAC9BC,EAAcb,KAAKc,KAAKR,EAAYnF,GAGpC4F,EAAOJ,EAAe,EACtBK,EAAOL,EAAe,EAKxBE,EAAc,GACdD,EAAkBrM,KAAK,GAE3B,IAAK,IAAIc,EAAI0L,EAAK1L,GAAK2L,EAAK3L,IACpBA,EAAI,GAAKA,GAAKwL,GACbD,EAAkBrM,KAAKc,GAMhC,OAHI2L,EAAMH,GACND,EAAkBrM,KAAKsM,GAEpBD,GC9CUK,G,kDAMjB,WAAYlT,GAAa,IAAD,8BACpB,cAAMA,GAAO,IANjBR,MAAgB,CACZ2T,uBAAmBnG,EACnBoG,eAAe,GAGK,EADxBvR,IAA4Ba,IAAMC,YACV,EAGxB0Q,sBAAwB,SAACzQ,GACrB,IAAMvD,EAAG,eACTiE,EAAWV,EAAEoC,QAAQY,MAAK,SAAU4G,GAChCnN,EAAI4B,SAAS,CAAEkS,kBAAmB3G,QANlB,EASxB8G,YAAc,SAAC1Q,GACX,IAAMvD,EAAG,eACT,EAAKkU,uBAAuB,iBACvB3N,MAAK,SAAUwB,GACRA,GACA/H,EAAImU,oBAdI,EAmBxBA,cAAgB,WACR,EAAK3R,IAAIiB,UACT,EAAKjB,IAAIiB,QAAQzE,MAAQ,MAE7B,EAAK4C,SAAS,CAAEkS,uBAAmBnG,EAAWoG,eAAe,KAvBzC,E,+DA2BpB,OAAOjS,KAAKnB,MAAMqF,U,0CAGlBlE,KAAKsS,oB,wCAGL,GAAKtS,KAAKnB,MAAM0T,aAAhB,CAGA,IAAIC,EAAexS,KAAKnB,MAAM0T,aAAavS,KAAK6O,mBAAmB1N,IACnE,GAAKqR,EAAL,CAGA,IAAMC,EAAUnV,EAAekV,EAC/BxS,KAAKF,SAAS,CAAEkS,kBAAmBS,EAASR,eAAc,Q,+BAEpD,IAAD,OACC/N,EAAyBlE,KAAK6O,mBACpC,OACI,kBAAC,IAAM6D,SAAP,KACK1S,KAAK3B,MAAM4T,cACR,2BAAOvR,IAAKV,KAAKU,IACbiS,SAAU3S,KAAKkS,sBAAuBpU,KAAK,OAAO8U,OAAO,UAAU7O,KAAMG,EAAQ/C,GAAIpC,UAAU,iBAGnG,kBAAC,WAAD,KACI,4BACA,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,OAAM,EAAK3B,SAAS,CAACmS,eAAc,KAAQrF,cAAc,cAAc7N,UAAU,uBAAxG,aACA,2BAAOjB,KAAK,SAASiG,KAAMG,EAAQ/C,GAAIjE,MAAM,YAGrD,kBAAC,GAAD,CAAc2V,UAAW7S,KAAK3B,MAAM2T,oBACpC,kBAAC,GAAD,CAAcvF,UAAsCZ,GAAhC7L,KAAK3B,MAAM2T,kBAAgCpR,QAASZ,KAAKmS,YAAavF,cAAc,eAAe7N,UAAU,yBAAjI,e,GAjE4BiE,GAuEtC8P,GAAe,SAACjU,GAClB,OAAkB,GAAdA,EAAM4N,MAAkB5N,EAAMgU,UAC3B,yBAAK9T,UAAU,QAAQE,MAAO,CAAEuH,OAAQ,OAASuJ,IAAKlR,EAAMgU,UAAW3T,MAAM,KAAK8Q,OAAO,OAD5C,MCxEnC+C,G,kDAMjB,WAAYlU,GAAa,IAAD,8BACpB,cAAMA,GAAO,IANjBR,MAAgB,CACZ2U,YAAa,IAAIvH,IACjBwH,cAAe,CAAC,IAGI,EADxBvS,IAA4Ba,IAAMC,YACV,EAGxB0R,aAAe,SAACzR,EAAG0O,GACf,IAAMjS,EAAG,eACTiE,EAAWV,EAAEoC,QAAQY,MAAK,SAAU4G,GAChC,IAAM2H,EAAc9U,EAAIG,MAAM2U,YAC9BA,EAAYpH,IAAIuE,EAAO9E,GACvBnN,EAAI4B,SAAS,CAAEkT,YAAaA,QARZ,EAYxBG,gBAAkB,SAAC1R,GACf,IAAMyC,EAAU,EAAK7F,MAAM4U,cACL,GAAlB/O,EAAQkC,OACRlC,EAAQmB,KAAK,GAEbnB,EAAQmB,KAAKnB,EAAQA,EAAQkC,OAAS,GAAK,GAE/C,EAAKtG,SAAS,CAAEmT,cAAe/O,KAnBX,EAqBxBkP,mBAAqB,SAACC,GAClB,IAAMnV,EAAG,eACT,EAAKkU,uBAAuB,iBACvB3N,MAAK,SAAUwB,GACRA,GACA/H,EAAIoV,qBAAqBD,OA1BjB,EA+BxBC,qBAAuB,SAACD,GAGpB,IAFA,IAAML,EAAc,EAAK3U,MAAM2U,YACzB9O,EAAU,EAAK7F,MAAM4U,cAClB9M,EAAI,EAAGA,EAAIjC,EAAQkC,OAAQD,IAAK,CACvBjC,EAAQiC,IACTkN,IACTnP,EAAQqP,OAAOpN,EAAG,GAClB6M,EAAYQ,OAAOH,IAG3B,EAAKvT,SAAS,CAAEmT,cAAe/O,EAAS8O,YAAaA,KAzCjC,E,+DA4CpB,OAAOhT,KAAKnB,MAAMqF,U,0CAGlBlE,KAAKsS,oB,wCAGL,GAAKtS,KAAKnB,MAAM0T,aAAhB,CAGA,IAAIC,EAAexS,KAAKnB,MAAM0T,aAAavS,KAAK6O,mBAAmB1N,IACnE,GAAKqR,GAAmD,IAAnC,IAAIlL,OAAOkL,GAAciB,OAA9C,CAMA,IAHA,IAAMT,EAAmChT,KAAK3B,MAAM2U,YAC9CU,EAAuB,IAAIpM,OAAOkL,GAAc9H,MAAM,KACtDuI,EAA0B,IAAI1E,MAC3BpI,EAAI,EAAGA,EAAIuN,EAAWtN,OAAQD,IAAK,CACxC,IAAMwN,EAAoBD,EAAWvN,GACrC6M,EAAYpH,IAAIzF,EAAGwN,GACnBV,EAAc5N,KAAKc,GAEvBnG,KAAKF,SAAS,CAAEkT,YAAaA,EAAaC,cAAeA,Q,+BAEnD,IAAD,OACC/O,EAAyBlE,KAAK6O,mBAEpC,OACI,kBAAC,IAAM6D,SAAP,KACK1S,KAAK3B,MAAM4U,cAAchM,KAAI,SAAAkJ,GAC1B,IAAM6C,EAAkC,EAAK3U,MAAM2U,YAAYrK,IAAIwH,GAC7DyD,OAAwB/H,GAAfmH,GAA8D,IAAlC,IAAI1L,OAAO0L,GAAaS,OAC7DI,GAAYD,GAAUE,GAAcd,GAC1C,OACI,kBAAC,WAAD,KACKY,EACG,2BAAOjB,SAAU,SAAClR,GAAD,OAAO,EAAKyR,aAAazR,EAAG0O,IAAQrS,KAAK,OAAO8U,OAAO,UACpE7O,KAAMG,EAAQ/C,GAAIpC,UAAU,iBAAoB,KACvD8U,EACG,6BACI,2BAAO3W,MAAO8V,EAAalV,KAAK,SAASiG,KAAMG,EAAQ/C,KACvD,kBAAC,GAAD,CAAc0R,UAAWG,KAG5BY,EAMG,KALA,6BACI,2BAAO1W,MAAO8V,EAAalV,KAAK,SAASiG,KAAMG,EAAQ/C,GAAIpC,UAAU,iBACrE,kBAAC,GAAD,CAAc8T,UAAWvV,EAAe0V,IACxC,uBAAGjU,UAAU,uBAAuBiU,IAIhD,kBAAC,GAAD,CAAcvG,UAAgCZ,GAA1B,EAAKxN,MAAM2U,YAC3BpS,QAAS,SAACa,GAAD,OAAY,EAAK2R,mBAAmBjD,IAAQvD,cAAc,eAAe7N,UAAU,yBADhG,UAEYoR,OAIxB,4BACA,kBAAC,GAAD,CAAcvD,cAAc,cAAchM,QAASZ,KAAKmT,iBAAxD,Y,GA5GoCnQ,GAkH9C8Q,GAAgB,SAACzD,GACnB,OAAOA,GAAUA,EAAO0D,WAAW,eAEjCjB,GAAe,SAACjU,GAClB,OAAkB,GAAdA,EAAM4N,MAAkB5N,EAAMgU,UAC3B,yBAAK9T,UAAU,QAAQE,MAAO,CAAEuH,OAAQ,OAASuJ,IAAKlR,EAAMgU,UAAW3T,MAAM,KAAK8Q,OAAO,OAD5C,MC/HnCgE,G,kDAEjB,WAAYnV,GAAQ,uCACVA,G,qDAGN,IAAMoV,EAAwC,YAA1BjU,KAAKnB,MAAMoV,YAA4B,WAAa,aACxE,OACI,yBAAKlV,UAAW,cAAeiB,KAAKnB,MAAME,UAAW,KAAsB,YAAfkV,EAA4B,GAAK,QACzF,2BAAOlV,UAA2B,YAAfkV,EAA4B,GAAK,YAAa,gCAASjU,KAAKnB,MAAM4H,MAAQzG,KAAKnB,MAAM4H,MAAQ,OAChH,yBAAK1H,UAA2B,YAAfkV,EAA4B,GAAK,YAC7CjU,KAAKnB,MAAMoD,e,GAXO3B,aCiBjC4T,G,kDAQF,WAAYrV,GAAa,IAAD,8BACpB,cAAMA,GAAO,IARjBsV,kBAAuC7I,GAAkB8I,cAOjC,EANxB/V,MAAgB,CACZgW,UAAW,GACXrC,uBAAmBnG,EACnBoH,cAAe,CAAC,IAGI,EADxBvS,IAA4Ba,IAAMC,YACV,EAGxBqN,iBAAmB,WACf,OAAO,EAAKhQ,MAAMyV,eAJE,EAMxBC,gBAAkB,WAEd,MADqB,CAAEvL,SAA8C,GAApC,EAAK6F,mBAAmB7F,WAPrC,EAaxBwL,gBAAkB,SAAC9P,GACf,IAAKA,EAAS+P,UAAwC,GAA5B/P,EAAS+P,SAASrO,OACxC,MAAM,IAAIsO,MAAM,aAEpB,EAAK5U,SAAS,CAAEuU,UAAW3P,EAAS+P,WACpC,EAAKnC,mBAlBe,EAoBxBqC,cAAgB,WACZ,IACMpP,EADU,EAAKsJ,mBACA+F,qBACrB,EAAKC,WACD,EAAKV,kBAAkBW,gBACvB,EAAKN,gBACL,EAAKhR,qBACL+B,IA3BgB,EA8BxBwP,aAAe,WACX,OAAI,EAAKlG,mBAAmBU,WAAaL,GAAUM,uBAAyB,EAAKX,mBAAmBU,WAAaL,GAAUO,yBA/BvG,EAoCxBuF,wBAA0B,WACtB,OAAO,EAAKD,gBAAiD,GAA/B,EAAK1W,MAAMgW,UAAUjO,QArC/B,EAuCxB6O,kBAAoB,WACZ,EAAKD,2BACL,EAAKL,iBAzCW,EAoDxBrC,gBAAkB,WACd,GAAK,EAAKzT,MAAM0T,cAAiB,EAAK7R,IAAIiB,QAA1C,CAIA,IAAMuT,EAAY,EAAKrG,mBAAmB1N,GACtCgU,EAAc,EAAKtW,MAAM0T,aAAa2C,GAC1C,GAAKC,EAAL,CAEA,IACIC,OAAoBvJ,EACxB,OAF6B,EAAKgD,mBAAmBU,WAGjD,KAAKL,GAAUO,wBACf,KAAKP,GAAUM,sBACX,GAAmC,GAA/B,EAAKnR,MAAMgW,UAAUjO,OACrB,MAEJ,IAAMiP,EAAkB,EAAKxG,mBAAmBwG,gBAChD,IAAKA,EAAiB,MACtBD,EAAoBD,EAAYE,GAChC,MAEJ,QACID,EAAoBD,EAGxBC,IACA,EAAK1U,IAAIiB,QAAQzE,MAAQkY,MA/ET,E,iEA6CpBpV,KAAKiV,sB,0CAGLjV,KAAKiV,oBACLjV,KAAKsS,oB,+BAmCL,IAAMpO,EAAUlE,KAAK6O,mBACfyG,EAAetV,KAAKuU,kBAC1B,GAAIvU,KAAKgV,0BACL,OAAO,yBAAKjW,UAAU,cAAf,cAEX,GAAuB,GAAnBmF,EAAQuJ,QACR,OACI,kBAAC,GAAD,CAAWwG,YAAY,WAAWxN,MAAOvC,EAAQ8K,WAC7C,2CAAWsG,EAAX,CAAyBpY,MAAM,YAAYwD,IAAKV,KAAKU,IAAK3B,UAAU,eAAegF,KAAMG,EAAQ/C,GAAI9B,UAAQ,MAIzH,IAAIkW,EAAQ,kBAAC,WAAD,MACZ,OAAQrR,EAAQqL,WACZ,KAAKL,GAAUO,wBACf,KAAKP,GAAUM,sBACX,IAAMgG,EAAUxV,KAAK3B,MAAMgW,UAC3BkB,EAAQ,4BAAQ7U,IAAKV,KAAKU,IAAK3B,UAAU,eAAegF,KAAMG,EAAQ/C,IACjEqU,EAAQvO,KAAI,SAAAwO,GACT,IAAMC,EAAkBxR,EAAQmR,gBAC1B3F,EAAiBxL,EAAQwL,eAC/B,OAAKA,GAAmBgG,EAEpB,4BAAQxY,MAAOuY,EAAOC,IAAoBD,EAAO/F,IAFH,SAM1D,MACJ,KAAKR,GAAUW,iBACX0F,EAAQrR,EAAQyR,SACZ,kBAAC,GAAD,CAAwBzX,IAAK8B,KAAKkD,UAAWqP,aAAcvS,KAAKnB,MAAM0T,aAAcrO,QAASA,IAE7F,kBAAC,GAAD,CAAgBhG,IAAK8B,KAAKkD,UAAWqP,aAAcvS,KAAKnB,MAAM0T,aAAcrO,QAASA,IACzF,MACJ,KAAKgL,GAAU0G,oBACXL,EAAQ,8CAAcD,EAAd,CAA4B5U,IAAKV,KAAKU,IAAK3B,UAAU,eAAegF,KAAMG,EAAQ/C,MAC1F,MACJ,QACIoU,EAAQ,yCAAOzX,KAAMoG,EAAQpG,MAAUwX,EAA/B,CAA6C5U,IAAKV,KAAKU,IAAK3B,UAAU,eAAegF,KAAMG,EAAQ/C,MAGnH,OACI,kBAAC,GAAD,CAAW8S,YAAY,WAAWxN,MAAOvC,EAAQ8K,WAC3CuG,O,GAvIWvS,GAmJdkF,eAAWC,YACtB/J,EADsB+J,CAExB+L,KCvJI2B,G,kDAIF,WAAYhX,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAJjBsV,kBAAuC7I,GAAkB8I,cAGjC,EAFxB9H,UAAmB,EAEK,EADxBiG,kBAAmB1G,EACK,EAgBxBjD,SAAW,SAACnH,GACRA,EAAE8G,iBACF,IAAMuN,EAAOrU,EAAEoC,OAAQ3F,EAAG,eAC1B,EAAK8H,iBAAiB,cACjBvB,MAAK,SAAUwB,GACRA,GAAM/H,EAAI6X,OAAOD,OArBT,EA2BxBC,OAAS,SAACD,GACN,IAAMtN,EAAqB,IAAIC,SAASqN,GAClC1G,EAAa,GAAIlR,EAAG,eACpB8X,EAA2B,IAAIzH,MAC/B0H,EAAqB,GAC3BzN,EAAS0N,SAAQ,SAAChZ,EAAOmK,GACrBzH,QAAQoE,MAAM,aAAcqD,GACvB+H,EAAO/H,KACR+H,EAAO/H,GAAO,IAAIkH,OAEtB,IrBPqB4H,EqBOfjS,EAAkC,EAAK2K,iBAAiBxH,GAC9D,IAAKnD,EAAS,OAAO,EACrB,OAAQA,EAAQqL,WACZ,KAAKL,GAAUO,wBACf,KAAKP,GAAUM,sBACX,IAAM4G,EAAYlS,EAAQmR,gBACtBe,GACAhH,EAAO/H,GAAKhC,KAAZ,eAAoB+Q,EAAYlZ,IAEpC,MACJ,KAAKgS,GAAUW,iBAEX,GADAjQ,QAAQoE,MAAMqD,EAAK,aACN,UAATnK,EACA0C,QAAQoE,MAAM,qBAAsBqD,GACpC4O,EAAa5Q,KAAKgC,QAEf,GAA6B,QAA1BnK,EAAMmZ,YAAYtS,KAAgB,CACxC,IAAIuS,GrBxBKH,EqBwBsBjZ,ErBvB5C,IAAImF,SAAQ,SAAUC,EAASC,GAClC,IACI,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcyT,GACrB3T,EAAOI,OAAS,WAAcN,EAAQE,EAAOK,SAC7CL,EAAOM,QAAU,SAAUC,GACvBR,EAAOQ,IAEb,MAAOtB,GACLc,EAAOd,QqBc2CgD,MAAK,SAAA4G,GACvC+D,EAAO/H,GAAKhC,KAAKgG,MAClB1G,MAAM/E,QAAQmD,OACZ8B,SAAQ,WAAcjF,QAAQoE,MAAM,aACzCgS,EAAS3Q,KAAKiR,QAEdlH,EAAO/H,GAAKhC,KAAKnI,GAErB,MACJ,QACIkS,EAAO/H,GAAKhC,KAAKnI,GAGzB,OAAO,KAEXmF,QAAQkU,IAAIP,GAAUvR,MAAK,SAAU+L,GACjC,IAAMgG,EAAgBtY,EAAIuY,uBAAuBrH,EAAQ6G,GACzDrW,QAAQoE,MAAM,0BAA2BwS,GACzCtY,EAAIwY,WAAWF,OAxEC,EA4ExBC,uBAAyB,SAACE,EAAeV,GACrC,IAAMpT,EAAmC,EAAKyJ,UAAY,EAAKiG,aAAtB,2BACrC,EAAKA,cADgC,IAClB0D,aAAaA,IACpC,CAACA,aAAa,IAAI1H,OAClB,IAAK,IAAMlH,KAAOsP,EAAW,CACzB,IAAMzS,EAAiByS,EAAUtP,GACjCzH,QAAQoE,MAAMqD,EAAK,YAAanD,EAAQkC,QAClB,GAAlBlC,EAAQkC,OACRvD,EAAOwE,GAAOnD,EAAQ,GACfA,EAAQkC,OAAS,IACxBvD,EAAOwE,GAAOnD,EAAQ0S,KAAK,MAInC,OADA/T,EAAOoT,aAAeA,EACfpT,GA1Fa,EA6FxB6T,WAAa,SAACtH,GACV,EAAKyF,WACD,EAAKV,kBAAkB0C,KAAM,EAAKC,YAAa,EAAKtT,qBACpD,EAAKuT,oBAAoBzJ,WAAY8B,EAAQ,EAAK9C,WAhGlC,EAmGxBwK,YAAc,SAACpS,GACX,EAAKsS,SAAS,iBAlGVnY,EAAM0T,eACN,EAAKjG,UAAW,EAChB,EAAKiG,aAAe1T,EAAM0T,cAJV,E,gEASpB,OAAOvS,KAAKnB,MAAMoY,iB,2CAGuB,GAArCjX,KAAK+W,oBAAoB/I,UACzBhO,KAAKnB,MAAMwC,Y,uCAWFgG,GACb,OAAO+F,GAAeyB,iBAAiB7O,KAAK+W,oBAAqB1P,K,+BA8EjE,IAAM4P,EAAiCjX,KAAK+W,oBAEtCG,EAAclX,KAAKsM,SAAY,0BAAMvN,UAAU,uBAAhB,aAAuD,GAC5F,OACI,yBAAKoC,GAAG,kBACJ,kBAAC,GAAD,CAAclC,MAAO,CAAEgO,aAAc,OAASrM,QAASZ,KAAKnB,MAAMwC,QAASuL,cAAc,qBAAzF,QACA,0BAAMhE,SAAU5I,KAAK4I,SAAUzH,GAAG,eAClC,kBAAC,GAAD,CAAOC,MAAO,8BAAO6V,EAAe1J,MAAtB,gBAA0C2J,GAAqBhK,cAAe,kBAAC,GAAD,OACpF,kBAAC,GAAD,CAAaqF,aAAcvS,KAAKuS,aAAcrU,IAAK8B,KAAKkD,UAAW+T,eAAgBA,W,GAnH9EjU,GA2HvBmU,GAAc,SAACtY,GACjB,OACI,yBAAKE,UAAU,aACX,4BAAQjB,KAAK,SAASiB,UAAU,mBAAhC,UACA,2BAAOjB,KAAK,QAAQiB,UAAU,sBAKpCqY,GAAc,SAACvY,GACjB,IAAMyP,EAA4BzP,EAAMoY,eAAe3I,SACjD+I,EAA+C,IAAI9I,MACrD+I,EAAkB,EACtBD,EAAgBhS,KAAK,IAAIkJ,OACzB,IAAK,IAAIpI,EAAI,EAAGA,EAAImI,EAASlI,OAAQD,IAAK,CACtC,IAAMjC,EAAUoK,EAASnI,GACrBA,EAAI,GAAKA,EAAI,GAAK,IAClBmR,IACAD,EAAgBhS,KAAK,IAAIkJ,QAE7B8I,EAAgBC,GAASjS,KAAKnB,GAElC,OACI,yBAAKnF,UAAU,OACVsY,EAAgBpQ,KAAI,SAAAqH,GACjB,OACI,yBAAKvP,UAAU,YACVuP,EAASrH,KAAI,SAAA/C,GACV,OAAO,kBAAC,GAAD,CAAgBqO,aAAc1T,EAAM0T,aAAcrU,IAAKW,EAAMX,IAAKoW,cAAepQ,aAQrGgE,eAAWC,YAAQ/J,EAAR+J,CAAmC0N,KCpKvD0B,G,kDAEF,WAAY1Y,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAFjBsV,kBAAsC7I,GAAkB8I,cAChC,EAGxBZ,OAAS,SAAC/R,GACN,IAAMvD,EAAG,eACT,EAAKkU,uBAAuB,kBAC3B3N,MAAK,SAASwB,GACPA,GACA/H,EAAIsZ,eARQ,EAYxBA,SAAW,WACP,IAAM7I,EAAS,EAAK9P,MAAM8P,OACpBsI,EAAgC,EAAKpY,MAAMoY,eAC3CQ,EAAWrK,GAAesK,YAAY/I,EAAQsI,GACpD,EAAKpC,WACD,EAAKV,kBAAkBX,OACvB,EAAKmE,cACL,EAAKnU,qBACLyT,EAAe3J,WAAYmK,IApBX,EAuBxBG,cAAgB,WACZ,IAAMjJ,EAAS,EAAK9P,MAAM8P,OACpBsI,EAAgC,EAAKpY,MAAMoY,eAC3CQ,EAAWrK,GAAesK,YAAY/I,EAAQsI,GACpD,EAAKpC,WACD,EAAKV,kBAAkB0D,QACvB,EAAKC,aACL,EAAKtU,qBACLyT,EAAe3J,WACfmK,IAhCgB,EAmCxBK,aAAe,SAACpT,GACZ,IAAKA,EAAS+P,UAAwC,GAA5B/P,EAAS+P,SAASrO,OACxC,MAAM,IAAIsO,MAAM,oBAEjB,EAAK7V,MAAMkZ,cACV,EAAKlZ,MAAMkZ,aAAarT,IAxCR,EA2CxBiT,cAAgB,SAACjT,GACb,EAAKsS,SAAS,kBACd,EAAKnY,MAAMmZ,UA7CS,E,qDAgDpB,OAAuB,GAAnBhY,KAAKnB,MAAM4N,KAAsB,KAEjC,yBAAK1N,UAAU,aACX,kBAAC,GAAD,CAAc6B,QAASZ,KAAK4X,cAAehL,cAAc,cAAc7N,UAAU,2BACjF,kBAAC,GAAD,CAAc6B,QAASZ,KAAKwT,OAAQzU,UAAU,wBAAwB6N,cAAc,sB,GAtDrE5J,GAgEhBkF,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGxBoP,KC5EmBU,G,uKAGb,IAAMpZ,EAAQmB,KAAKnB,MACbqZ,EAA6BrZ,EAAMqZ,YACzC,OAAQ,+BACJ,4BACI,kCACCA,EAAYjR,KAAI,SAAAkR,GACb,IAAMlJ,EAASkJ,EAAWlJ,OAC1B,OACI,4BACI,2BAAIkJ,EAAW1R,OACf,6BACKwI,EACG,kBAAC,WAAD,KACI,2BAAO0D,SAAU9T,EAAMuZ,eAAgBrU,KAAMoU,EAAWjb,MAAQ,OAC5D6B,UAAU,eAAegK,YAAa,QAC1C,2BAAO4J,SAAU9T,EAAMuZ,eAAgBrU,KAAMoU,EAAWjb,MAAQ,SAC5D6B,UAAU,eAAegK,YAAa,UAC1C,2BAAO4J,SAAU9T,EAAMuZ,eAAgBrU,KAAMoU,EAAWjb,MAAQ,QAC5D6B,UAAU,eAAegK,YAAa,UAG9C,2BAAO4J,SAAU9T,EAAMuZ,eAAgBrP,YAAaoP,EAAW1R,MAC3D1H,UAAU,eAAegF,KAAMoU,EAAWjb,SAEtD,yBAAK6B,UAAU,aACX,4BAAQsZ,iBAAe,MAAMzX,QAAS/B,EAAMyZ,mBAAoBC,eAAcJ,EAAWjb,MAAO6B,UAAU,oCACtG,uBAAGsZ,iBAAe,MAAMzX,QAAS/B,EAAMyZ,mBAAoBC,eAAcJ,EAAWjb,MAAO6B,UAAU,qBACzG,4BAAQsZ,iBAAe,OAAOzX,QAAS/B,EAAMyZ,mBAAoBC,eAAcJ,EAAWjb,MAAO6B,UAAU,oCACvG,uBAAGsZ,iBAAe,OAAOzX,QAAS/B,EAAMyZ,mBAAoBC,eAAcJ,EAAWjb,MAAO6B,UAAU,4BAK1H,4C,GApC6BuB,aCDxBkY,G,uKAGP,IAAD,EACL,OAAuB,GAAnBxY,KAAKnB,MAAM4N,KAAsB,KAEjC,yBAAK1N,UAAU,sBAAf,UACKiB,KAAKnB,MAAMoD,gBADhB,QAC0B,qB,GAPG3B,aCCpBmY,I,yDACjB,WAAY5Z,GAAQ,uCACVA,G,qDAKN,IADA,IAAM6Z,EAA0B,IAAInK,MAC3BpI,EAAI,EAAGA,GAAK,GAAIA,IACrBuS,EAAUrT,KAAK,+BAEnB,OACI,yBAAKpG,MAAO,CAACC,MAAM,OAAQ8Q,OAAO,OAAQlO,QAAQ,SAAU/C,UAAU,+BACjE,yBAAKE,MAAO,CAAC0Z,WAA8B,GAAnB3Y,KAAKnB,MAAM4N,KAAc,SAAS,WAAY1N,UAAU,eAC9E2Z,Q,GAbkBpY,cCsB/BsY,G,kDAQF,WAAY/Z,GAAa,IAAD,8BACpB,cAAMA,GAAO,IARjBsV,kBAAuC7I,GAAkB8I,cAOjC,EANxB/V,MAAgB,CACZwa,UAAU,EAAOC,SAAS,EAC1B9M,OAAQ,CAAEC,MAAO,EAAGC,KAAM,EAAGE,aAAc,KAIvB,EAFxBmG,kBAAoB1G,EAEI,EADxBoL,oBACwB,IAOxB8B,aAAe,SAAC/M,GACZ,IAAMI,EAAeJ,EAAOI,aAC5B,IAAK,IAAM/E,KAAO+E,EAAc,CAC5B,IAAMlI,EAAUkI,EAAa/E,QACdwE,GAAX3H,GAAmC,MAAXA,GAAiD,GAA9B,IAAIoD,OAAOpD,GAASkC,aACpCyF,GAAvBG,EAAOI,qBACAJ,EAAOI,aAAa/E,GAIvC,OAAO2E,GAjBa,EAmBxBgN,aAAe,SAAC9M,GACZ,IAAMF,EAAS,EAAK3N,MAAM2N,OACpBsB,EAAa,EAAK2J,eAAe3J,WACvCtB,EAAOE,KAAP,OAAcA,QAAd,IAAcA,IAAQF,EAAOE,KAC7B,IAAMf,EAAsB,CACxBY,OAAQuB,EACRtB,OAAQ,EAAK+M,aAAa/M,IAE9B,EAAK6I,WACD,EAAKV,kBAAkB6E,aACvB,EAAKC,eACL,EAAKzV,qBACL2H,IA/BgB,EAmCxB8N,eAAiB,SAACvU,GACd,EAAK5E,SAAS,CAAEoZ,WAAYxU,EAAUsH,OAAQtH,EAASsH,UApCnC,EAsCxBmN,iBAAmB,WACX,EAAK9a,MAAMya,SAGX,EAAK7B,eAAe3J,YAAc,EAAKzO,MAAMoY,eAAe3J,iBAAuCzB,GAAzB,EAAKxN,MAAM6a,aAGzF,EAAKjC,eAAiB,EAAKpY,MAAMoY,eACjC,EAAK+B,aAAa,KA9CE,EAyDxBI,gBAAkB,SAACjT,GAAuB,IAAD,IAErC,OADU,UAAC,EAAK9H,MAAM2N,OAAOE,YAAnB,QAA2B,IAA3B,UAAiC,EAAK7N,MAAM2N,OAAOC,aAAnD,QAA4D,GAAK9F,EAAI,GA1D3D,EA6DxBkT,iBAAmB,SAAC5X,GAChB,IAAIyK,EAAO,EAAK7N,MAAM2N,OAAOsN,sBAAwB,EAAKjb,MAAM2N,OAAOE,KAAO,EAC9E,EAAK8M,aAAa9M,IA/DE,EAiExBkM,eAAiB,SAAC3W,GACd,IAAMsC,EAAOtC,EAAEoC,OAAOE,KAChB7G,EAAQuE,EAAEoC,OAAO3G,MACjB8O,EAAS,EAAK3N,MAAM2N,YACCH,GAAvBG,EAAOI,eACPJ,EAAOI,aAAe,IAE1BJ,EAAOI,aAAarI,GAAQ7G,EAC5B,EAAK4C,SAAS,CAAEkM,OAAQA,KAzEJ,EA2ExBuN,YAAc,SAAC9X,GACX,IAAMuK,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOI,aAAe,GACtBJ,EAAOC,MAAQ,EACf,EAAKnM,SAAS,CAAEkM,OAAQA,KA/EJ,EAiFxBsM,mBAAqB,SAAC7W,GAClB,IAAM+X,EAAwB/X,EAAEoC,OAAO2V,QACjCxN,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOyN,QAAUD,EAAO,QACxBxN,EAAO0N,UAAYF,EAAO,UAC1B,EAAK1Z,SAAS,CAAEkM,OAAQA,IACxB,EAAKgN,aAAa,IAvFE,EAyFxBjB,aAAe,SAACrT,GACPA,EAAS+P,WAGd,EAAKlC,aAAe7N,EAAS+P,SAAS,GACtC,EAAK3U,SAAS,CAAE+Y,UAAU,MA9FN,EAgGxBc,eAAiB,SAAClY,GACd,EAAK8Q,kBAAe1G,EACpB,EAAK/L,SAAS,CAAE+Y,UAAU,KAlGN,EAoGxBe,iBAAmB,SAAC1N,GAChB,IAAMF,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOsN,uBAAwB,EAC/BtN,EAAOE,KAAO0E,SAAS1E,GAAQ,EAC/B,EAAKpM,SAAS,CAAEkM,OAAQA,KAxGJ,EA0GxB6N,kBAAoB,SAAC5N,GACjB,IAAMD,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOC,MAAQ2E,SAAS3E,GACxB,EAAKnM,SAAS,CAAEkM,OAAQA,KA3GxB,EAAKiL,eAAiB,EAAKpY,MAAMoY,eAFb,E,2DAgDPjX,KAAKF,SAAS,CAAEgZ,SAAS,M,mCAC3B9Y,KAAKF,SAAS,CAAEgZ,SAAS,M,2CAEpC9Y,KAAKqD,sBACLrD,KAAKmZ,qB,0CAGLnZ,KAAKmZ,qB,+BAwDC,IAAD,eACL,QAAItN,GAAa7L,KAAK3B,MAAM6a,WACxB,OAAO,6CAEX,IAAMhB,EAA6B9K,GAAe0B,gBAAgB9O,KAAKnB,MAAMoY,gBACvE6C,EAAoB9Z,KAAK3B,MAAM6a,WAAWzE,SAAWzU,KAAK3B,MAAM6a,WAAWzE,SAAW,GAC5F,YAAmB5I,GAAfqM,QAA0CrM,GAAdiO,EACrB,kBAAC,GAAD,MAGgB,GAAvB9Z,KAAK3B,MAAMwa,SACJ,kBAAC,GAAD,CAAgBtG,aAAcvS,KAAKuS,aAAc0E,eAAgBjX,KAAKiX,eAAgB5V,QAAS,SAACI,GAAQ,EAAK3B,SAAS,CAAE+Y,UAAU,KAAY3a,IAAK8B,KAAKkD,YAI/J,yBAAK/B,GAAG,kBACJ,kBAAC,GAAD,CAAcsL,KAAsC,GAAhCzM,KAAKiX,eAAejJ,SAAkB/O,MAAO,CAAEgO,aAAc,OAASrM,QAASZ,KAAK2Z,eAAgB/M,cAAc,eAAtI,cACA,0BAAMzL,GAAG,cAAcyH,SAAU,SAACnH,GAAQA,EAAE8G,mBACxC,kBAAC,GAAD,CAAOnH,MAAM,SAAS4L,YAAY,GAC9B,6BACI,yBAAKjO,UAAU,kBACX,yBAAKA,UAAU,SACX,2BAAO7B,OAAO,UAAC8C,KAAK3B,MAAM2N,OAAOE,YAAnB,QAA2B,GAAK,EAAGyG,SAAU,SAAClR,GAAQ,EAAKmY,iBAAiBnY,EAAEoC,OAAO3G,QAAU2U,IAAI,IAAI9S,UAAU,eAAejB,KAAK,SAASiL,YAAY,gBAE5K,yBAAKhK,UAAU,SACX,2BAAO7B,MAAO8C,KAAK3B,MAAM2N,OAAOC,MAAO0G,SAAU,SAAClR,GAAD,OAAO,EAAKoY,kBAAkBpY,EAAEoC,OAAO3G,QAAQ2U,IAAI,IAAI9S,UAAU,eAAejB,KAAK,SAASiL,YAAY,sBAGnK,kBAAC,GAAD,CAAmBH,SAAU5I,KAAKqZ,iBAAkBU,QAAS/Z,KAAKuZ,gBAG1E,kBAAC,GAAD,CAAmBtN,MAAK,UAAEjM,KAAK3B,MAAM2N,OAAOC,aAApB,QAA6B,EAAGmF,UAAS,UAAEpR,KAAK3B,MAAM6a,WAAW9H,iBAAxB,QAAqC,EAClGC,WAAU,UAAErR,KAAK3B,MAAM2N,OAAOE,YAApB,QAA4B,EAAGtL,QAASZ,KAAKgZ,eAC3D,kBAAC,GAAD,CAAO5X,MAAM,aACRpB,KAAK3B,MAAMya,QACR,kBAAC,GAAD,CAASA,QAAS9Y,KAAK3B,MAAMya,UAAc,KAC/C,yBAAK/Z,UAAU,kBAAkBE,MAAO,CAAE+a,SAAU,WAChD,2BAAOjb,UAAU,SACb,kBAAC,GAAD,CAAiBuZ,mBAAoBtY,KAAKsY,mBAAoBF,eAAgBpY,KAAKoY,eAAgBF,YAAaA,IAChH,+BAEQ4B,EAAW7S,KAAI,SAACpE,EAAQsD,GACpB,IAAM8T,EAAS,EAAKb,gBAAgBjT,GAC9B+T,EAAqB/K,GAAagL,YAAYtX,EAAQ,EAAKhE,MAAMoY,gBACvE,OAAQ,4BACJ,4BAAKgD,GACJC,EAAOjT,KAAI,SAAA/J,GACR,IACI,OAAQ,4BAAKA,GACf,MAAO6F,GACL,OAAQ,qCAGhB,4BAAI,kBAAC,GAAD,CAAkB0J,KAAsC,GAAhC,EAAKwK,eAAejJ,SAAkB+J,aAAc,EAAKA,aAAcpJ,OAAQ9L,EAAQoU,eAAgB,EAAKA,eAAgBe,OAAQ,kBAAM,EAAKgB,kBAAanN,IAAY3N,IAAK,EAAKgF,2B,GA5KjOF,GAyLvBoX,GAAU,SAAC,GAAe,IAAdtB,EAAa,EAAbA,QACd,OACI,yBAAK7Z,MAAO,CAAEC,MAAO,OAAQ8Q,OAAQ,OAAQqK,WAAY,OAAQ7Z,gBAAiB,uBAAwB8Z,WAAY,QAASC,UAAW,QAASjU,SAAU,aACzJ,kBAAC,GAAD,CAASmG,KAAMqM,MAIrB0B,GAAoB,SAAC3b,GACvB,OAAQ,yBAAKE,UAAU,aACnB,4BAAQ6B,QAAS/B,EAAM+J,SAAU7J,UAAU,4BAA2B,0BAAMA,UAAU,QAAO,uBAAGA,UAAU,iBAA1G,gBACA,4BAAQ6B,QAAS/B,EAAMkb,QAASjc,KAAK,QAAQiB,UAAU,0BAAyB,0BAAMA,UAAU,QAAO,uBAAGA,UAAU,qBAApH,WAIOmJ,eAAWC,YACtB/J,EADsB+J,CAExByQ,KCpNI6B,G,kDAKF,WAAY5b,GAAa,IAAD,8BACpB,cAAMA,GAAO,IALjBsV,kBAAuC7I,GAAkB8I,cAIjC,EAHxB7O,KAAe,GAGS,EAFxBmV,uBAAiC,EAET,EADxBzD,oBACwB,IAIxB0D,qBAAuB,SAACjW,GACpB,EAAKgW,uBAAwB,OACE7O,GAA3BnH,EAASuS,iBAGb,EAAK9C,kBAAkByG,kBAAkB,EAAK/b,MAAM0G,KAAMb,EAASuS,gBACnE,EAAKnX,SAAS,CAAEmX,eAAgBvS,EAASuS,iBACzC,EAAK4D,SAASnW,EAASuS,kBAXH,EAoBxB4D,SAAW,SAACC,GACR9d,SAASoE,MAAQ,IAAIkG,OAAJ,OAAWwT,QAAX,IAAWA,OAAX,EAAWA,EAAYvN,OAAOqC,YArB3B,E,sEAcG/D,GAAnB7L,KAAKnB,MAAM0G,MAAqBvF,KAAKuF,MAAQvF,KAAKnB,MAAM0G,OACxDvF,KAAKuF,KAAOvF,KAAKnB,MAAM0G,KACvBvF,KAAK+a,sBAETnb,QAAQoE,MAAM,4BAA6BhE,KAAKnB,MAAM0G,Q,+CAM/BsG,GAAnB7L,KAAKnB,MAAM0G,MAAqBvF,KAAKuF,MAAQvF,KAAKnB,MAAM0G,OACxDvF,KAAKuF,KAAOvF,KAAKnB,MAAM0G,KACvBvF,KAAK+a,wB,yHASS,IAAD,OAEjB,QAAIlP,GAAa7L,KAAKuF,MAAsC,GAA9BvF,KAAK0a,sBAAnC,CAGA,IAAMM,EAAyBhb,KAAKmU,kBAAkB4C,kBAAkB/W,KAAKuF,MAC7E,QAA8BsG,GAA1BmP,EAKA,OAJAhb,KAAK0a,uBAAwB,EAC7B1a,KAAKF,SAAS,CAAEmX,eAAgB+D,SAChChb,KAAK6a,SAASG,GAIlBhb,KAAK0a,uBAAwB,EAC7B1a,KAAKF,SAAS,CAAEmX,oBAAgBpL,IAChC7L,KAAK6U,WACD7U,KAAKmU,kBAAkB4G,mBACvB/a,KAAK2a,sBACL,SAAClZ,GAAa,EAAKiZ,uBAAwB,EAAO,EAAKlX,qBAAqB/B,KAC5EzB,KAAKuF,S,+BAKT,YAAiCsG,GAA7B7L,KAAK3B,MAAM4Y,eACJ,yBAAKlY,UAAU,OAClB,yBAAKA,UAAU,SAAQ,yBAAKA,UAAU,iBAAiBC,KAAK,UACxD,0BAAMD,UAAU,WAAhB,gBAGJ,yBAAKA,UAAU,UAAS,uDAI5B,yBAAKoC,GAAG,uBAAuBpC,UAAU,mBACrC,4BAAKiB,KAAK3B,MAAM4Y,eAAe1J,OAC/B,kBAAC,GAAD,CAAgBrP,IAAK8B,KAAKkD,UAAW+T,eAAgBjX,KAAK3B,MAAM4Y,sB,GA5E7CjU,GAsFpBkF,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGxBsS,KCtFIQ,G,kDAKF,WAAYpc,GAAa,IAAD,8BACpB,cAAMA,EAAO,eAAe,IALhCsV,kBAAuC7I,GAAkB8I,cAIjC,EAHxB/V,MAAgB,CACZkH,UAAMsG,GAEc,EAIxBqP,2BAA6B,SAACxW,GAC1B,EAAKyP,kBAAkB5I,qBAAuB7G,EAASyW,YAAczW,EAASyW,YAAc,GAC5F,EAAKC,kBACL,EAAKC,WAPe,EASxBD,gBAAkB,WAGd,IAFA,IAAME,EAAuB,GACvB/P,EAA6C,EAAK4I,kBAAkB5I,qBACjEpF,EAAI,EAAGA,EAAIoF,EAAqBnF,OAAQD,IAAK,CAClD,IAAMjC,EAAUqH,EAAqBpF,GACrCmV,EAAajW,KAAK,CACdtB,KAAMG,EAAQuC,MACdjJ,IAAK0G,EAAQoJ,WACb/H,KAAMrB,EAAQoJ,WACd9H,UAAWtB,EAAQ0I,gBAGvB,EAAK/N,MAAMuc,iBACX,EAAKvc,MAAMuc,gBAAgBE,IAtBX,EAyBxBC,qBAAuB,WACnB,GAAI,EAAKpH,kBAAkB5I,qBAAqBnF,OAAS,EAGrD,OAFA,EAAKgV,uBACL,EAAKC,UAGT,EAAKxG,WACD,EAAKV,kBAAkBqH,yBACvB,EAAKN,2BACL,EAAK1X,uBAlCW,EAqCxBiY,QAAU,WACN,OAAO,EAAK5c,MAAM6c,MAAMlX,OAAOe,MAtCX,E,gEAyCpB,0EACAvF,KAAKub,yB,2CAGLvb,KAAKob,kBAEDpb,KAAK3B,MAAMkH,MAAQvF,KAAKyb,WACxBzb,KAAKF,SAAS,CAAEyF,KAAMvF,KAAKyb,c,+BAK/B,QAAsB5P,GAAlB7L,KAAKyb,WAA4C,MAAlBzb,KAAKyb,WAAuC,IAAlBzb,KAAKyb,UAC9D,OAAO,kBAAC,GAAD,CAAsBvd,IAAK8B,KAAKkD,UAAWqC,KAAMvF,KAAKyb,YAEjE,GAA0D,GAAtDzb,KAAKmU,kBAAkB5I,qBAAqBnF,OAC5C,OAAO,yBAAKrH,UAAU,mBAAkB,wCAE5C,IAAM4c,EAAmC3b,KAAKmU,kBAAkB5I,qBAChE,OACI,yBAAKxM,UAAU,mBACX,gDACA,yBAAKA,UAAU,OACV4c,EAAW1U,KAAI,SAAA2U,GAEZ,OACI,yBAAK7c,UAAU,uBAAuBE,MAAO,CAAEgO,aAAc,SACzD,4BAAK,kBAAC,IAAD,CAAMlO,UAAU,yBAAyByI,GAAI,eAAiBoU,EAAStO,YAAa,uBAAGvO,UAAW6c,EAAShP,kBAChH,2BAAIgP,EAASnV,iB,GA1EhB2C,GAmFdlB,eAAWC,YACtB/J,EADsB+J,CAExB8S,KC9FIY,G,kDACF,WAAYhd,GAAa,uCACfA,EAAO,eAAe,G,qDAK5B,OACI,yBAAKsC,GAAG,kBAAkBpC,UAAU,mBAChC,gDACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,gCAAK,kBAAC,IAAD,CAAMA,UAAU,sBAAsByI,GAAG,wBAAuB,uBAAGzI,UAAU,2BAClF,uCAEJ,yBAAKA,UAAU,wBACX,4BAAI,kBAAC,IAAD,CAAMA,UAAU,sBAAsByI,GAAG,2BAA0B,uBAAGzI,UAAU,6BACpF,gD,GAjBMqK,GA6BflB,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGxB0T,KCtCmBC,G,kDACjB,WAAYjd,GAAa,uCACfA,G,qDAKN,OACI,yCAASmB,KAAKnB,MAAM8N,WAApB,CAAgC5N,UAAW,QAAUiB,KAAKnB,MAAME,YAC3DiB,KAAKnB,MAAMuC,MAAQ,yBAAKrC,UAAU,eAC9BiB,KAAKnB,MAAMuC,OACP,KACT,yBAAKrC,UAAU,aACViB,KAAKnB,MAAMoD,eAEa4J,GAA5B7L,KAAKnB,MAAMqO,cACR,yBAAKnO,UAAU,eACViB,KAAKnB,MAAMqO,eAEd,U,GAnBY5M,aCCbyb,G,kDAEjB,WAAYld,GAAY,uCACdA,G,qDAEA,IAAD,EACL,GAAuB,GAAnBmB,KAAKnB,MAAM4N,KAAe,OAAO,KACrC,IAAMC,EAAY,UAAG1M,KAAKnB,MAAME,iBAAd,QAAyB,4BAC3C,OACI,kBAAC,IAAD,iBAAUiB,KAAKnB,MAAM8N,WAArB,CAAiCnF,GAAIxH,KAAKnB,MAAM2I,GAAIvI,MAAOe,KAAKnB,MAAMI,MAAO2B,QAASZ,KAAKnB,MAAM+B,QAAS7B,UAAW2N,IAChH1M,KAAKnB,MAAM+N,cACZ,0BAAM3N,MAAO,CAAC+I,YAAY,QAAQ,uBAAGjJ,UAAWiB,KAAKnB,MAAM+N,iBAE3D,KACC5M,KAAKnB,MAAMoD,c,GAdgB3B,aCCvB0b,G,4DAEjBC,aAAsB,E,KAQtBC,gBAAkB,SAAChf,GACf,EAAK+e,aAAe/e,G,KAExBif,gBAAkB,WACd,IAAMjR,EAAW1N,IAAkBH,OAAO,2BAC1C,OAAO4N,GAAoBC,EAAU,K,KAMzCkR,eAAiB,SAACC,GAEd,IAAMjQ,EAAY,eAIViQ,EAAIjQ,cAGNjB,EAAqB,CACvBY,OAAQ,UACRC,OAAQ,CACJG,OAAsB,GAAdkQ,EAAIlQ,OACZF,MAAOoQ,EAAIpQ,MAAQoQ,EAAIpQ,MAAQ,GAC/BC,KAAMmQ,EAAInQ,KAAOmQ,EAAInQ,KAAO,EAC5BE,aAAcA,EACdqN,QAAS4C,EAAI5C,QACbC,UAAW2C,EAAI3C,YAGjBxO,EAAW1N,IAAkBH,OAAO,kBAC1C,OAAO4N,GAAoBC,EAAUC,I,KAQzCmR,iBAAmB,SAAC/W,GAAD,OAAiB,EAAK6W,eAAe,CACpDnQ,MAAO,EACPE,QAAQ,EACRC,aAAc,CACV,KAAS7G,EACT,WAAa,EACb,cAAgB,M,KAQxBgX,gBAAkB,SAACzQ,GAEf,IAAMX,EAAqB,CACvBa,OAAQ,CACJE,KAAMJ,EAAII,KACVE,aAAc,CAAEoQ,UAAW1Q,EAAI0Q,aAGjCtR,EAAW1N,IAAkBH,OAAO,2BAC1C,OAAO4N,GAAoBC,EAAUC,I,+DAjErC,OAHqB,MAAjBnL,KAAKuM,WACLvM,KAAKuM,SAAW,IAAIyP,GAEjBhc,KAAKuM,a,KARCyP,GACFzP,c,MCUbkQ,G,kDAGF,WAAY5d,GAAa,IAAD,8BACpB,cAAMA,EAAO,YAHjB6d,eAAiCV,GAAe5H,cAExB,EADxB/V,MAAgB,CAAE4d,aAAc,GACR,EAGxBU,mBAAqB,SAACjY,GAA2B,IAAD,EAC5C,EAAKgY,eAAeR,gBAApB,UAAoCxX,EAAS0M,iBAA7C,QAA0D,GAC1D,EAAKtR,SAAS,CAAEmc,aAAcvX,EAAS0M,aALnB,EAOxBwL,sBAAwB,SAACnb,GACrB7B,QAAQmD,MAAMtB,IARM,EAUxBob,iBAAmB,WACf,EAAKhI,WACD,EAAK6H,eAAeP,gBACpB,EAAKQ,mBACL,EAAKC,wBAdW,E,gEAkBhB5c,KAAK0c,eAAeT,cAAgB,EACpCjc,KAAK6c,mBAEL7c,KAAKF,SAAS,CAAEmc,aAAcjc,KAAK0c,eAAeT,iB,+BAKtD,OACI,yBAAK9a,GAAG,cAAcpC,UAAU,mBAC5B,4CACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAMqC,MAAM,kBAAkBrC,UAAU,YACpC,8CAAoBiB,KAAK3B,MAAM4d,cAC/B,yBAAKld,UAAU,aACX,kBAAC,GAAD,CAAgBA,UAAU,eAAeyI,GAAG,oBAA5C,gBACA,kBAAC,GAAD,CAAcoF,cAAc,kBAAkBhM,QAASZ,KAAK6c,sBAIxE,yBAAK9d,UAAU,YACX,kBAAC,GAAD,CAAMqC,MAAM,mBAAmBrC,UAAU,YACrC,gDACA,kBAAC,GAAD,CAAgBA,UAAU,eAAeyI,GAAG,qBAA5C,wB,GA7CF4B,GA2DXlB,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGxBsU,KCnEIK,G,kDACF,WAAYje,GAAa,uCACfA,GAAO,G,gEAIb7B,SAASoE,MAAQ,S,+BAGjB,IAAM9C,EAAyC0B,KAAK0G,wBAC9CqW,EAAmBzf,EAAegB,EAAmB0e,cAC3D,OACI,yBAAKje,UAAU,kBAAkBE,MAAO,CAACsH,QAAQ,IAC7C,yBAAKxH,UAAU,YACXE,MAAO,CACHuH,OAAO,MACP+T,UAAW,OACX0C,gBAAiB,QAAUF,EAAW,KACtCG,eAAgB,QAChBhN,MAAO5R,EAAmB6e,YAG9B,wBAAIpe,UAAU,aAAaT,EAAmByF,MAC9C,uBAAGhF,UAAU,QAAQT,EAAmB8e,kBACxC,wBAAIre,UAAU,SACd,2BAAIT,EAAmB+e,kBACvB,uBAAGte,UAAU,yBAAyB4H,KAAK,IAAI3H,KAAK,UAApD,oB,GA1BGgE,GAsCRkF,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGxB2U,KClDmBQ,G,sCACpBnc,Q,OACAoc,iB,OACAC,kB,OACAC,iB,OACAC,a,GCDoBC,G,4MACpBpY,U,IACAxB,U,IACA6Z,iB,IACAC,W,IACA/f,U,IACAif,c,IACAe,U,IACAC,c,IACAC,gB,IACAC,W,IACAC,e,uEAEyBC,EAAiB7gB,GAA8B,IAAD,EAEtE,OAAI6gB,EAAQpB,WAAY,UAAAoB,EAAQpB,gBAAR,eAAkB3W,QAAQ,GACzC9I,GAA0B,IAAM6gB,EAAQpB,SAASrS,MAAM,KAAK,IAE7DpN,GAA0B,IAAM,gB,sCAElB6gB,EAAiB7gB,GAAiC,IAAD,EACvE,GAAI6gB,EAAQpB,WAAY,UAAAoB,EAAQpB,gBAAR,eAAkB3W,QAAQ,EAAG,CACpD,IAAIgY,EAAiBD,EAAQpB,SAASrS,MAAM,KAC5C,OAAIpN,EACI8gB,EAAMnX,KAAI,SAAAlD,GAChB,OAAOzG,EAAayG,KAGfqa,EAER,MAAO,CAACT,EAAQU,kBAAkBF,EAAS7gB,M,mCAGxBghB,GAGnB,IADA,IAAIL,EAAQ,EACH9X,EAAI,EAAGA,EAAImY,EAASlY,OAAQD,IAAK,CAAC,IAAD,EAEzC8X,GAAK,UADWK,EAASnY,GACR8X,aAAZ,QAAmB,EAEzB,OAAOA,M,GAxC4BX,ICK/BiB,G,kDAEF,WAAY1f,GAAW,uCACbA,EAAO,iB,qDAGb,OACI,yBAAKsC,GAAG,WAAWpC,UAAU,mBACzB,6CACA,yBAAKA,UAAU,oBACZ,sDACA,6CAAkB,gCAAS4e,GAAQa,aAAaxe,KAAKnB,MAAMjB,c,GAXvDwL,GAsBRlB,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGtBoW,KC7BExT,GAAQC,EAAQ,IACDyT,G,iDAEjBrC,eAAiB,SAACC,GACd,GAAiB,MAAbA,EAAInf,OAAgD,IAA/Bmf,EAAInf,MAAM0S,WAAW6D,OAC1C,O9BEiBiL,E8BFG,CAACjK,SAAS,I9BEY,IAAIpS,SAAQ,SAAUsc,EAAKC,GAC7ED,EAAID,MADoB,IAACA,E8BAftS,EAAe,GACrBA,EAAaiQ,EAAIhV,KAAOgV,EAAInf,MAC5B,IAAMiO,EAAU,CACZY,OAAQ,UACRC,OAAQ,CACJE,KAAM,EACNC,OAAuB,GAAdkQ,EAAIlQ,OACbF,MAAO,GACPG,aAAcA,IAGhBlB,EAAW1N,IAAkBH,OAAO,sBAC1C,OAAO4N,GAAoBC,EAAUC,I,KAGzC0T,yBAA2B,SAACC,GAAD,OAA6B,EAAKC,kBAAL,2BAA2BD,GAA3B,IAAwChhB,KAAK,c,KACrGkhB,4BAA8B,SAACF,GAAD,OAA6B,EAAKC,kBAAL,2BAA2BD,GAA3B,IAAwChhB,KAAK,iB,KAExGihB,kBAAoB,SAAC1C,GACjBzc,QAAQoE,MAAM,qBAAsBqY,EAAIve,MACxC,IAAMA,EAAOue,EAAIve,KACXqN,EAAqB,CACvB8T,aAAc5C,EAAI4C,cAEtB,OAAO,IAAI5c,SAAqB,SAAUC,EAASC,GAC/C,IAAI2I,EAAkB,GACtB,OAAQpN,GACJ,IAAK,UACD,GAAG,MAAQue,EAAI6C,SAAS,CACpB3c,EAAO,oBACP,MAEJ4I,EAAQ+T,SAAW7C,EAAI6C,SACvBhU,EAAW1N,IAAkBH,OAAO,+BACpC,MACJ,IAAK,aACL,QACI,GAAG,MAAQgf,EAAI8C,SAAS,CACpB5c,EAAO,oBACP,MAEJ4I,EAAQgU,SAAW9C,EAAI8C,SACvBjU,EAAW1N,IAAkBH,OAAO,kCAG5C0N,GAAMK,KAAKF,EAAUC,EAAQ,CACzBvB,QAASN,MAER7E,MAAK,SAAAC,GAAQ,OAAIA,EAAS2G,QAAM5G,MAAK,SAAUC,GACvB,MAAjBA,EAASa,KACXjD,EAAQoC,GAERnC,EAAOmC,MAEbC,OAAM,SAAClD,GAAW7B,QAAQmD,MAAMtB,GAAIc,EAAOd,U,KAIvD2d,aAAe,SAACC,GACZ,IAAMlU,EAAqB,CACvBY,OAAQ,UACRC,OAAQ,CACJC,MAAO,EACPE,QAAQ,EACRC,aAAc,CAAE,KAAQiT,EAAaC,WAAW,KAGlDpU,EAAW1N,IAAkBH,OAAO,kBAC1C,OAAO4N,GAAoBC,EAAUC,KCzExBoU,G,iLAOb,OAHqB,MAAjBvf,KAAKuM,WACLvM,KAAKuM,SAAW,IAAIgT,GAEjBvf,KAAKuM,a,GAPsCkS,IAArCc,GACFhT,c,MCUbiT,G,kDAKF,WAAY3gB,GAAa,IAAD,8BACpB,cAAMA,IALVsV,kBAAoB7I,GAAkB8I,cAId,EAHxB/V,MAAgB,CACZohB,kBAAkB,GAEE,EAIxBC,eAAiB,SAACje,GACdA,EAAE8G,iBACF,IACMpH,EADqB,IAAIsH,SAAShH,EAAEoC,QACtB8E,IAAI,MACnBxH,GACL,EAAKwe,aAAa/O,SAASzP,EAAGyO,cATV,EAWxBgQ,eAAiB,SAAClb,GACd,IAAKA,EAAS+P,WAAa/P,EAAS+P,SAAS,GACzC,MAAM,IAAIC,MAAM,sBAEpB,EAAK7V,MAAMghB,YAAYnb,EAAS+P,SAAS,IACzC,EAAK3U,SAAS,CAAEqf,SAAUza,EAAS+P,SAAS,GAAIgL,kBAAkB,KAhB9C,EAkBxBA,iBAAmB,SAAChe,GAChB,EAAK3B,SAAS,CAAE2f,kBAAkB,KAnBd,EAqBxBE,aAAe,SAACxe,GACZ,EAAK0T,WAAW,EAAKV,kBAAkB0D,QACnC,EAAK+H,eAAgB,EAAKH,iBAAkB,WAAYte,IAvBxC,E,qDA0BpB,OAEI,0BAAMyH,SAAU5I,KAAK0f,gBACjB,kBAAC,GAAD,CAAO1S,YAAY,EAAM5L,MAAM,gBAAgB8L,cAC3C,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAgBN,cAAc,cAAcD,WAAY,CAAE9I,OAAQ,UAAY2D,GAAG,uBAAuBzI,UAAU,8BAClH,2BAAOjB,KAAK,SAASiB,UAAU,oBAAoB7B,MAAM,WACzD,2BAAOY,KAAK,QAAQiB,UAAU,gCAGlC,yBAAKA,UAAU,cACX,kBAAC,GAAD,CAAW0H,MAAM,QACb,2BAAOsC,YAAY,gBAAgBC,UAAQ,EAAClL,KAAK,SAASiB,UAAU,eAAegF,KAAK,SAGhG,kBAAC,GAAD,CAAgBob,SAAUnf,KAAK3B,MAAM8gB,SAAUW,SAAU9f,KAAK3B,MAAMohB,yB,GA9C7Dzc,GAqDrB+c,GAAiB,SAAClhB,GACpB,IAAMmhB,EAAI,QACV,GAAI,GAAQnhB,EAAMihB,SACd,OAAO,yBAAK7gB,MAAO,CAAE+Q,OAAQgQ,IAAK,yBAAKjhB,UAAU,uBAAf,uBAEtC,IAAKF,EAAMsgB,SACP,OAAO,yBAAKlgB,MAAO,CAAE+Q,OAAQgQ,IAAK,yBAAKjhB,UAAU,yBAAf,2BAEtC,IAAMogB,EAAqBtgB,EAAMsgB,SACjC,OACI,yBAAKlgB,MAAO,CAAE+Q,OAAQgQ,IAClB,4BAAKb,EAASpb,MACd,iCACKob,EAASc,QAAQ,6BAClB,0BAAM7e,MAAM,WAAZ,aAAuC+d,EAASe,WASjDhY,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGxBqX,KChFmBW,G,kDAQjB,WAAYthB,GAAa,IAAD,8BACpB,cAAMA,IAPVuhB,mBAAqBb,GAA6BnL,cAM1B,EALxBD,kBAAoB7I,GAAkB8I,cAKd,EAJxB/V,MAAgB,CACZ4gB,aAAc,GACdoB,iBAAiB,GAEG,EAKxBC,cAAgB,SAAC7e,GACbA,EAAE8G,iBACF,IACMpH,EADqB,IAAIsH,SAAShH,EAAEoC,QACtB8E,IAAI,QACnBxH,GACL,EAAKof,YAAapf,EAAGyO,aAVD,EAYxB4Q,cAAgB,SAAC9b,GACb,IAAKA,EAAS+P,WAAa/P,EAAS+P,SAAS,GACzC,MAAM,IAAIC,MAAM,qBAEpB,EAAK7V,MAAM4hB,WAAW/b,EAAS+P,SAAS,IACxC,EAAK3U,SAAS,CAAEqe,QAASzZ,EAAS+P,SAAS,GAAI4L,iBAAiB,KAjB5C,EAmBxBI,WAAa,SAACtC,GACV,EAAKre,SAAS,CAAEqe,QAASA,EAASkC,iBAAiB,KApB/B,EAsBxBA,gBAAkB,SAAC5e,GACf,EAAK3B,SAAS,CAAEugB,iBAAiB,KAvBb,EAyBxBE,YAAc,SAAChb,GAIX,EAAKmb,uBAAuB,EAAKN,mBAAmBhB,aAChD,EAAKoB,cAAe,EAAKH,gBAAiB9a,IA5B9C,EAAKlH,MAAL,eAAkB,EAAKA,OAFH,E,qDAiCpB,OAEI,0BAAMuK,SAAU5I,KAAKsgB,eACjB,kBAAC,GAAD,CAAOtT,YAAY,EAAO5L,MAAM,eAAe8L,cAC3C,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAgBN,cAAc,cAAcD,WAAY,CAAE9I,OAAQ,UAAY2D,GAAG,sBAAsBzI,UAAU,8BACjH,2BAAOjB,KAAK,SAASiB,UAAU,oBAAoB7B,MAAM,WACzD,2BAAOY,KAAK,QAAQiB,UAAU,gCAGlC,yBAAKA,UAAU,cACX,kBAAC,GAAD,CAAW0H,MAAM,QACb,2BAAOsC,YAAY,eAAeC,UAAQ,EAAClL,KAAK,OAAOiB,UAAU,eAAegF,KAAK,WAG7F,kBAAC,GAAD,CAAeoa,QAASne,KAAK3B,MAAM8f,QAAS2B,SAAU9f,KAAK3B,MAAMgiB,wB,GAxD5Crd,GA+DnC2d,GAAgB,SAAC9hB,GACnB,IAAMmhB,EAAI,QACV,GAAI,GAAQnhB,EAAMihB,SACd,OAAO,yBAAK7gB,MAAO,CAAE+Q,OAAQgQ,IAAK,yBAAKjhB,UAAU,uBAAf,sBAEtC,IAAKF,EAAMsf,QACP,OAAO,yBAAKlf,MAAO,CAAE+Q,OAAQgQ,IAAK,yBAAKjhB,UAAU,yBAAf,0BAEtC,IAAMof,EAAmBtf,EAAMsf,QAC/B,OACI,yBAAKlf,MAAO,CAAE+Q,OAAQgQ,IAClB,4BAAK7B,EAAQpa,MACb,2BAAOhF,UAAU,SACb,+BAAO,4BACH,oCACA,wCACA,0CACA,gDAGJ,+BACI,4BACI,4BAAKof,EAAQL,KAAOK,EAAQL,KAAK/Z,KAAO,KACxC,4BAAKoa,EAAQJ,SAAWI,EAAQJ,SAASha,KAAO,KAChD,wBAAI9E,MAAO,CAAE2hB,WAAY,cAAgBzC,EAAQN,OACjD,4BAAKM,EAAQF,YCpGhB4C,G,4MACpB3B,c,IACAC,c,IACA5Z,U,IACAzH,U,IACAgjB,U,IACAC,qB,IACAhc,U,IACAka,kB,IACA+B,iB,cATwC1D,ICDpB2D,G,4MAEpBnC,iB,IACAoC,gB,IACArD,W,IACAI,W,IACAkD,qB,IACAhD,a,IACAiD,mB,IACAC,sB,IACAC,gB,4DACcnD,GACb,IAAMoD,EAAM,IAAIN,EAEhB,OADAM,EAAIpD,QAAUA,EACPoD,M,GAdgCjE,ICSpBkE,G,kDAMjB,WAAY3iB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IANjBsV,kBAAoB7I,GAAkB8I,cAKnB,EAJnB/V,MAAgB,CACZ4gB,aAAc,IAGC,EADnBwC,eAAuClgB,IAAMC,YAC1B,EASnBif,WAAa,SAACtC,GACV,IAAM6C,EAAcC,GAAYS,OAAOvD,GACvC,EAAKre,SAAS,CAAE6hB,oBAAqBX,KAXtB,EAanBY,UAAY,SAACngB,GAET,GADAA,EAAE8G,iBACG,EAAKlK,MAAMsjB,oBAAhB,CAIA,IAAMX,EAA2Ba,OAAOC,OAAO,IAAIb,GAAe,EAAK5iB,MAAMsjB,qBAG7E,GAF6B,EAAKI,YAAYf,GAE7B,CAAC,IAAD,EACP9iB,EAAG,eACT,EAAK8H,iBAAiB,uBAAcgb,EAAY7C,eAA1B,aAAc,EAAqBpa,MAAO,UAC3DU,MAAK,SAAUwB,GACRA,GACA/H,EAAI8jB,oBAAoBhB,WAKpC,EAAKgB,oBAAoBhB,GAE7Bvf,EAAEoC,OAAOoe,aAlBL,EAAKte,UAAU,2BAhBJ,EAqCnBqe,oBAAsB,SAAChB,GACnB,IAAM/B,EAA8B,EAAK5gB,MAAM4gB,aAE/C,GAD6B,EAAK8C,YAAYf,GAE1C,IAAK,IAAI7a,EAAI,EAAGA,EAAI8Y,EAAa7Y,OAAQD,IAAK,CAAC,IAAD,KAEtC,UADY8Y,EAAa9Y,GACjBgY,eAAR,eAAiB5Y,QAAjB,UAAyByb,EAAY7C,eAArC,aAAyB,EAAqB5Y,QAC9C0Z,EAAa9Y,GAAK6a,QAI1B/B,EAAa5Z,KAAK2b,GAGtB,EAAKlhB,SAAS,CAAEmf,aAAcA,IAC9B,EAAKiD,4BApDU,EAuDnBH,YAAc,SAACf,GACX,IAAK,IAAI7a,EAAI,EAAGA,EAAI,EAAK9H,MAAM4gB,aAAa7Y,OAAQD,IAAK,CAAC,IAAD,IAErD,IAAI,UADY,EAAK9H,MAAM4gB,aAAa9Y,GAC5BgY,eAAR,eAAiB5Y,QAAjB,UAAyByb,EAAY7C,eAArC,aAAyB,EAAqB5Y,MAC9C,OAAO,EAGf,OAAO,GA9DQ,EAiEnB2c,yBAA2B,WAClB,EAAK7jB,MAAMsjB,sBAGhB,EAAK7hB,SAAS,CAAE6hB,yBAAqB9V,IACjC,EAAK4V,eAAe9f,SACpB,EAAK8f,eAAe9f,QAAQ8e,gBAAW5U,KAvE5B,EAyEnBsW,YAAc,SAAC5c,GACX,IAAM0Z,EAAgB,EAAK5gB,MAAM4gB,aAC3B/gB,EAAI,eAEV,EAAK8H,iBAAiB,aAAaT,EAAK,KACvCd,MAAK,SAASwB,GAEX,IADA,IAAI+a,OAAoCnV,EAC/B1F,EAAI,EAAGA,EAAI8Y,EAAa7Y,OAAQD,IAAK,CAAC,IAAD,EACpCjC,EAAU+a,EAAa9Y,IACzB,UAAAjC,EAAQia,eAAR,eAAiB5Y,OAASA,IAC1Byb,EAAca,OAAOC,OAAO,IAAIb,GAAe/c,IAInD8c,GAAe/a,GAAM/H,EAAIujB,eAAe9f,UACxCzD,EAAI4B,SAAS,CAAC6hB,oBAAoBX,IAClC9iB,EAAIujB,eAAe9f,QAAQ8e,WAAWO,EAAY7C,cAzF3C,EA6FnBiE,cAAgB,SAAC7c,GAGb,IAFA,IAAM0Z,EAAgB,EAAK5gB,MAAM4gB,aAC3B/gB,EAAI,eACDiI,EAAI,EAAGA,EAAI8Y,EAAa7Y,OAAQD,IAAK,CAAC,IAAD,EAE1C,IAAI,UADY8Y,EAAa9Y,GACjBgY,eAAR,eAAiB5Y,OAASA,EAAM,CAChC0Z,EAAa1L,OAAOpN,EAAE,GACtB,OAGR,EAAKiM,uBAAuB,gBAC3B3N,MAAK,SAASwB,GACF,IAAD,EAAJA,IACI/H,EAAIG,MAAMsjB,qBAAuBpc,IAAI,UAAIrH,EAAIG,MAAMsjB,oBAAoBxD,eAAlC,aAAI,EAAuC5Y,OAChFrH,EAAIgkB,2BAERhkB,EAAI4B,SAAS,CAACmf,aAAaA,SA7GpB,E,iEAIfjf,KAAKqD,wB,0CAGLrD,KAAKqD,0B,GAbyCL,GA0HzCqf,GAAoB,SAACpD,GAE9B,IADA,IAAIqD,EAAmB,EAAGhB,EAAoB,EAAGiB,EAA2B,EACnEpc,EAAI,EAAGA,EAAI8Y,EAAa7Y,OAAQD,IAAK,CAAC,IAAD,UACpCjC,EAAU+a,EAAa9Y,GAC7Bmc,GAAYpe,EAAQ+Z,MAAM/Z,EAAQ+Z,MAAM,EACxCqD,IAAa,UAACpd,EAAQ+Z,aAAT,QAAgB,IAAhB,UAAoB/Z,EAAQ2Z,aAA5B,QAAmC,GAChD0E,IAAoB,UAACre,EAAQ+Z,aAAT,QAAgB,IAAhB,oBAAoB/Z,EAAQia,eAA5B,aAAoB,EAAiBN,aAArC,QAA4C,GAEpE,MAAO,CACHC,KAAKwE,EACLE,iBAAiBlB,EACjBmB,aAAaF,IC9HfG,G,kDAEF,WAAY7jB,GAAa,IAAD,8BACpB,cAAMA,IAFV8jB,6BAA+BpD,GAA6BnL,cACpC,EAGxByL,YAAc,SAACV,GACX,EAAKrf,SAAS,CAAEqf,SAAUA,KAJN,EAQxByD,8BAAgC,SAACnhB,GAC7B,IAAMuf,EAAuC,EAAK3iB,MAAMsjB,oBACxD,IAAKX,EAGD,OAFA,EAAKrd,UAAU,+BACflC,EAAEoC,OAAO3G,MAAQ,MAGrB,IAAM2lB,EAAWphB,EAAEoC,OAAOE,KACpB7G,EAAuB,UAAfuE,EAAEoC,OAAO/F,KAAe8S,SAASnP,EAAEoC,OAAO3G,OAASuE,EAAEoC,OAAO3G,MAC1E8jB,EAAY6B,GAAY3lB,EACxB,EAAK4C,SAAS,CAAE6hB,oBAAqBX,KAlBjB,EAuBxBjC,kBAAoB,SAACtd,GACjBA,EAAE8G,iBACF,IAAMrK,EAAG,eACHsK,EAAW,IAAIC,SAAShH,EAAEoC,QAChC,EAAKmC,iBAAiB,sBACrBvB,MAAK,SAASwB,GACPA,GACA/H,EAAI4kB,SAASta,OA9BD,EAmCxBsa,SAAW,SAACta,GACR,IAAMsW,EAA0B,IAAI+B,GACpC/B,EAAYG,aAAe,EAAK5gB,MAAM4gB,aACtCH,EAAYK,SAAW,EAAK9gB,MAAM8gB,SAClC,IAAM4D,EAAOva,EAASG,IAAI,QAC1BmW,EAAYiC,gBAAiBgC,EAAO,IAAI3f,KAAK2f,EAAKnT,YAAc,IAAIxM,KACpE,EAAKsd,uBACD,EAAKiC,6BAA6B3D,4BAClC,EAAKgE,kBACL,EAAKxf,qBACLsb,IA7CgB,EAiDxBkE,kBAAoB,SAACte,GAA0B,IAAD,EACpCa,EAAI,UAAGb,EAASoa,mBAAZ,aAAG,EAAsBvZ,KACnC,EAAKyR,SAAS,wBAAwBzR,IAnDlB,E,qDAsDd,IAAD,aACC0d,EAAwBjjB,KAAK3B,MAAM4gB,aAAa7Y,OAAS,EACzD8c,OAAuCrX,GAAvB7L,KAAK3B,MAAM8gB,SAC3BgE,EAA+C,GAAzBF,GAAkD,GAAjBC,EAC7D,OACI,yBAAK/hB,GAAG,wBAAwBpC,UAAU,mBACtC,0CACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAa2B,IAAKV,KAAKyhB,eAAgBhB,WAAYzgB,KAAKygB,WAAYviB,IAAK8B,KAAKkD,aAElF,yBAAKnE,UAAU,YACX,kBAAC,GAAD,CAAc8gB,YAAa7f,KAAK6f,YAAa3hB,IAAK8B,KAAKkD,aAE3D,yBAAKnE,UAAU,YACX,0BAAM6J,SAAU5I,KAAK4hB,WACjB,kBAAC,GAAD,CAAOxgB,MAAO,eAAgB8L,cAAe,kBAAC,WAAD,KACzC,2BAAOpP,KAAK,SAASiB,UAAU,eAAe7B,MAAM,QACpD,2BAAOY,KAAK,QAAQiB,UAAU,kBAAkB7B,MAAM,YAEtD,kBAAC,GAAD,CAAWuJ,MAAM,YACb,2BAAO+L,aAAY,UAAExS,KAAK3B,MAAMsjB,2BAAb,aAAE,EAAgC1D,MAAOngB,KAAK,SAAS6U,SAAU3S,KAAK4iB,8BAA+B7e,KAAK,QAAQiF,UAAQ,EAAC6I,IAAI,IAAI9S,UAAU,kBAEpK,kBAAC,GAAD,CAAW0H,MAAM,eACb,2BAAO+L,aAAY,UAAExS,KAAK3B,MAAMsjB,2BAAb,aAAE,EAAgC9D,MAAO/f,KAAK,SAAS6U,SAAU3S,KAAK4iB,8BAA+B7e,KAAK,QAAQ8N,IAAI,IAAI7I,UAAQ,EAACjK,UAAU,kBAEpK,kBAAC,GAAD,CAAW0H,MAAM,gBACb,2BAAO+L,aAAc,IAAIlL,OAAJ,UAAWtH,KAAK3B,MAAMsjB,2BAAtB,aAAW,EAAgCT,YAAYtR,WAAY9R,KAAK,OAAO6U,SAAU3S,KAAK4iB,8BAA+B7e,KAAK,aAAaiF,UAAQ,EAACjK,UAAU,qBAKvM,yBAAKA,UAAU,YACVokB,EACD,0BAAMva,SAAU5I,KAAK+e,mBACjB,kBAAC,GAAD,CAAO3d,MAAM,UACT,kBAAC,GAAD,CAAWqF,MAAM,QACb,2BAAOuC,UAAQ,EAAClL,KAAK,OAAOiG,KAAK,OAAOhF,UAAU,kBAEtD,kBAAC,GAAD,CAAW0H,MAAM,UACb,6BACI,2BAAO3I,KAAK,SAASiB,UAAU,kBAAkB7B,MAAM,2BAI/D,MAEZ,yBAAK6B,UAAU,aACX,kBAAC,GAAD,CAAOqC,MAAM,YACT,2BAAOrC,UAAU,SACb,+BACI,4BACI,kCACA,oCACA,wCACA,oCACA,wCACA,qCACA,2CACA,wCAGR,+BACKiB,KAAK3B,MAAM4gB,aAAahY,KAAI,SAAC+Z,EAAa7a,GAAO,IAAD,UAC7C,OACI,wBAAIkB,IAAK,MAAMlB,GACX,4BAAKA,EAAI,GACT,sCAAK6a,EAAY7C,eAAjB,aAAK,EAAqBpa,MAC1B,4BAAKid,EAAY/C,OACjB,sCAAK+C,EAAY7C,eAAjB,iBAAK,EAAqBL,YAA1B,aAAK,EAA2B/Z,MAChC,4BAAKid,EAAYE,YACjB,4BAAKF,EAAYnD,OACjB,6BAAK,UAACmD,EAAY/C,aAAb,QAAsB,IAAtB,UAA4B+C,EAAYnD,aAAxC,QAAiD,IACtD,4BACI,kBAAC,GAAD,CAAcjd,QAAS,SAACa,GAAD,aAAK,EAAK0gB,YAAL,UAAiBnB,EAAY7C,eAA7B,aAAiB,EAAqB5Y,OAAOqH,cAAc,cAAc7N,UAAU,0BAA/G,QACA,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,aAAK,EAAK2gB,cAAL,UAAmBpB,EAAY7C,eAA/B,aAAmB,EAAqB5Y,OAAOqH,cAAc,eAAe7N,UAAU,yBAAlH,eAKhB,4BACI,wBAAIqkB,QAAS,GAAG,0CAChB,4BAAKf,GAAkBriB,KAAK3B,MAAM4gB,cAAcnB,MAChD,6BACA,6BACA,6BACA,4BAAKuE,GAAkBriB,KAAK3B,MAAM4gB,cAAcuD,kBAChD,wC,GA/IJhB,IA6JrBtZ,eAAWC,YACtB/J,EADsB+J,CAExBua,KChLmBW,G,4MAUjBC,gBAAkB,SAACjH,GACf,IAAMjQ,EAAe,GACrBA,EAAaiQ,EAAIhV,KAAOgV,EAAInf,MAC5B,IAAMiO,EAAqB,CACvBY,OAAQ,WACRC,OAAQ,CACJE,KAAOmQ,EAAInQ,KAAO,EAAImQ,EAAInQ,KAAO,EACjCD,MAAQoQ,EAAIpQ,MAAQ,EAAIoQ,EAAIpQ,MAAQ,GACpCE,OAAuB,GAAdkQ,EAAIlQ,OACbC,aAAcA,IAIhBlB,EAAW1N,IAAkBH,OAAO,sBAC1C,OAAO4N,GAAoBC,EAAUC,I,iEAjBrC,OAHqB,MAAjBnL,KAAKuM,WACLvM,KAAKuM,SAAW,IAAI8W,GAEjBrjB,KAAKuM,a,GAPmCkS,IAAlC4E,GACF9W,c,MCYbgX,G,kDAKF,WAAY1kB,GAAa,IAAD,8BACpB,cAAMA,IALVsV,kBAAoB7I,GAAkB8I,cAId,EAHxB/V,MAAgB,CACZmlB,kBAAkB,GAEE,EAIxBC,eAAiB,SAAChiB,GACdA,EAAE8G,iBACF,IACMpH,EADqB,IAAIsH,SAAShH,EAAEoC,QACtB8E,IAAI,MACnBxH,GACL,EAAKuiB,aAAa9S,SAASzP,EAAGyO,cATV,EAWxB+T,eAAiB,SAACjf,GACd,IAAKA,EAAS+P,WAAa/P,EAAS+P,SAAS,GACzC,MAAM,IAAIC,MAAM,sBAEpB,EAAK7V,MAAM+kB,YAAYlf,EAAS+P,SAAS,IACzC,EAAK3U,SAAS,CAAEof,SAAUxa,EAAS+P,SAAS,GAAI+O,kBAAkB,KAhB9C,EAkBxBA,iBAAmB,SAAC/hB,GAChB,EAAK3B,SAAS,CAAE0jB,kBAAkB,KAnBd,EAqBxBE,aAAe,SAACviB,GACZ,EAAK0T,WAAW,EAAKV,kBAAkB0D,QACnC,EAAK8L,eAAgB,EAAKH,iBAAkB,WAAYriB,IAvBxC,E,qDA0BpB,OAEI,0BAAMyH,SAAU5I,KAAKyjB,gBACjB,kBAAC,GAAD,CAAOzW,YAAY,EAAO5L,MAAM,gBAAgB8L,cAC5C,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAgBN,cAAc,cAAcD,WAAY,CAAE9I,OAAQ,UAAY2D,GAAG,uBAAuBzI,UAAU,8BAClH,2BAAOjB,KAAK,SAASiB,UAAU,oBAAoB7B,MAAM,WACzD,2BAAOY,KAAK,QAAQiB,UAAU,gCAGlC,yBAAKA,UAAU,cACX,kBAAC,GAAD,CAAW0H,MAAM,QACb,2BAAOsC,YAAY,gBAAgBC,UAAQ,EAAClL,KAAK,SAASiB,UAAU,eAAegF,KAAK,SAGhG,kBAAC,GAAD,CAAgBmb,SAAUlf,KAAK3B,MAAM6gB,SAAUY,SAAU9f,KAAK3B,MAAMmlB,yB,GA9C7DxgB,GAqDrB6gB,GAAiB,SAAChlB,GACpB,IAAMmhB,EAAI,QACV,GAAI,GAAQnhB,EAAMihB,SACd,OAAO,yBAAK7gB,MAAO,CAAE+Q,OAAQgQ,IAAK,yBAAKjhB,UAAU,uBAAf,uBAEtC,IAAKF,EAAMqgB,SACP,OAAO,yBAAKjgB,MAAO,CAAE+Q,OAAQgQ,IAAK,yBAAKjhB,UAAU,yBAAf,2BAEtC,IAAMmgB,EAAqBrgB,EAAMqgB,SACjC,OACI,yBAAKjgB,MAAO,CAAE+Q,OAAQgQ,IAClB,4BAAKd,EAASnb,MACd,iCACKmb,EAASe,QAAQ,6BAClB,0BAAM7e,MAAM,WAAZ,aAAuC8d,EAAS4E,SAMjD5b,eAAWC,YACtB/J,EADsB+J,CAExBob,KC1EIQ,G,kDAEF,WAAYllB,GAAa,IAAD,8BACpB,cAAMA,IAFVmlB,0BAA4BX,GAA0BjP,cAC9B,EAGxBwP,YAAc,SAAC1E,GACX,EAAKpf,SAAS,CAAEof,SAAUA,KAJN,EAOxB+E,cAAgB,SAACxiB,GACb,IAAMuf,EAAuC,EAAK3iB,MAAMsjB,oBACxD,IAAKX,EAGD,OAFA,EAAKrd,UAAU,+BACflC,EAAEoC,OAAO3G,MAAQ,MAGrB,IAAMA,EAAQ0T,SAASnP,EAAEoC,OAAO3G,OAChC8jB,EAAY/C,MAAQ/gB,EACpB,EAAK4C,SAAS,CAAE6hB,oBAAqBX,KAhBjB,EAmBxBjC,kBAAoB,SAACtd,GACjBA,EAAE8G,iBACF,IAAMrK,EAAG,eACHsK,EAAW,IAAIC,SAAShH,EAAEoC,QAChC,EAAKmC,iBAAiB,sBACjBvB,MAAK,SAAUwB,GACRA,GACA/H,EAAI4kB,SAASta,OA1BL,EA+BxBsa,SAAW,SAACta,GACR,IAAMsW,EAA2B,IAAI+B,GACrC/B,EAAYG,aAAe,EAAK5gB,MAAM4gB,aACtCH,EAAYI,SAAW,EAAK7gB,MAAM6gB,SAClC,IAAM6D,EAAOva,EAASG,IAAI,QAC1BmW,EAAYiC,gBAAkBgC,EAAO,IAAI3f,KAAK2f,EAAKnT,YAAc,IAAIxM,KACrE,EAAKsd,uBACD,EAAKsD,0BAA0BnF,yBAC/B,EAAKmE,kBACL,EAAKxf,qBACLsb,IAzCgB,EA6CxBkE,kBAAoB,SAACte,GAA2B,IAAD,EACrCa,EAAI,UAAGb,EAASoa,mBAAZ,aAAG,EAAsBvZ,KACnC,EAAKyR,SAAS,wBAA0BzR,IA/CpB,E,qDAkDd,IAAD,WACC0d,EAAwBjjB,KAAK3B,MAAM4gB,aAAa7Y,OAAS,EACzD8d,OAAuCrY,GAAvB7L,KAAK3B,MAAM6gB,SAC3BiE,EAA+C,GAAzBF,GAAkD,GAAjBiB,EACvDvC,EAAsB3hB,KAAK3B,MAAMsjB,oBACvC,OACI,yBAAKxgB,GAAG,qBAAsBpC,UAAU,mBACpC,uCACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAa2B,IAAKV,KAAKyhB,eAAgBhB,WAAYzgB,KAAKygB,WAAYviB,IAAK8B,KAAKkD,aAElF,yBAAKnE,UAAU,YACX,kBAAC,GAAD,CAAc6kB,YAAa5jB,KAAK4jB,YAAa1lB,IAAK8B,KAAKkD,aAE3D,yBAAKnE,UAAU,YACX,0BAAM6J,SAAU5I,KAAK4hB,WACjB,kBAAC,GAAD,CAAOxgB,MAAO,eAAgB8L,cAAe,kBAAC,WAAD,KACzC,2BAAOpP,KAAK,SAASiB,UAAU,eAAe7B,MAAM,QACpD,2BAAOY,KAAK,QAAQiB,UAAU,kBAAkB7B,MAAM,YAEtD,kBAAC,GAAD,CAAWuJ,MAAM,YACb,2BAAO+L,aAAY,UAAExS,KAAK3B,MAAMsjB,2BAAb,aAAE,EAAgC1D,MAChDngB,KAAK,SAAS6U,SAAU3S,KAAKikB,cAAelgB,KAAK,QAAQiF,UAAQ,EACjE6I,IAAK,EAAGC,IACL6P,EAAmB,UAACA,EAAoBxD,eAArB,aAAC,EAA6BF,MAAM,EACxDlf,UAAU,qBAKjC,yBAAKA,UAAU,YACVokB,EACG,0BAAMva,SAAU5I,KAAK+e,mBACjB,kBAAC,GAAD,CAAO3d,MAAM,UACT,kBAAC,GAAD,CAAWqF,MAAM,QACb,2BAAOuC,UAAQ,EAAClL,KAAK,OAAOiG,KAAK,OAAOhF,UAAU,kBAEtD,kBAAC,GAAD,CAAW0H,MAAM,UACb,6BACI,2BAAO3I,KAAK,SAASiB,UAAU,kBAAkB7B,MAAM,2BAI7D,MAElB,yBAAK6B,UAAU,aACX,kBAAC,GAAD,CAAOqC,MAAM,YACT,2BAAOrC,UAAU,SACb,+BACI,4BACI,kCACA,oCACA,wCACA,oCAEA,qCACA,2CACA,wCAGR,+BACKiB,KAAK3B,MAAM4gB,aAAahY,KAAI,SAAC+Z,EAAa7a,GAAO,IAAD,cAC7C,OACI,wBAAIkB,IAAK,MAAQlB,GACb,4BAAKA,EAAI,GACT,sCAAK6a,EAAY7C,eAAjB,aAAK,EAAqBpa,MAC1B,4BAAKid,EAAY/C,OACjB,sCAAK+C,EAAY7C,eAAjB,iBAAK,EAAqBL,YAA1B,aAAK,EAA2B/Z,MAEhC,sCAAKid,EAAY7C,eAAjB,aAAK,EAAqBN,OAC1B,6BAAK,UAACmD,EAAY/C,aAAb,QAAsB,IAAtB,oBAA4B+C,EAAY7C,eAAxC,aAA4B,EAAqBN,aAAjD,QAA0D,IAC/D,4BACI,kBAAC,GAAD,CAAcjd,QAAS,SAACa,GAAD,aAAO,EAAK0gB,YAAL,UAAiBnB,EAAY7C,eAA7B,aAAiB,EAAqB5Y,OAAOqH,cAAc,cAAc7N,UAAU,0BAAjH,QACA,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,aAAO,EAAK2gB,cAAL,UAAmBpB,EAAY7C,eAA/B,aAAmB,EAAqB5Y,OAAOqH,cAAc,eAAe7N,UAAU,yBAApH,eAKhB,4BACI,wBAAIqkB,QAAS,GAAG,0CAChB,4BAAKf,GAAkBriB,KAAK3B,MAAM4gB,cAAcnB,MAEhD,6BACA,6BACA,4BAAKuE,GAAkBriB,KAAK3B,MAAM4gB,cAAcwD,cAChD,wC,GA1IPjB,IAwJlBtZ,eAAWC,YACtB/J,EADsB+J,CAExB4b,KCxKmBI,G,iDAUjBC,gBAAkB,SAACpY,GACf,IAAMb,EAAqB,CACvBa,OAAOA,GAELd,EAAW1N,IAAkBH,OAAO,oCAC1C,OAAO4N,GAAoBC,EAAUC,I,KAEzCkZ,sBAAwB,SAACljB,EAAW6K,GAChC,IAAMb,EAAqB,CACvBa,OAAOA,GAELd,EAAW1N,IAAkBH,OAAO,0CAA0C8D,GACpF,OAAO8J,GAAoBC,EAAUC,I,KAEzCmZ,kBAAoB,SAACtY,GACjB,IAAMb,EAAqB,CACvBa,OAAOA,GAELd,EAAW1N,IAAkBH,OAAO,sCAC1C,OAAO4N,GAAoBC,EAAUC,I,KAEzCoZ,mBAAqB,SAAUC,GAC3B,IAAMtZ,EAAW1N,IAAkBH,OAAO,uCAAyCmnB,GACnF,OAAOvZ,GAAoBC,EAAU,K,KAIzCuZ,uBAAyB,WAAyB,IAAftZ,EAAc,uDAAJ,GACnCD,EAAW1N,IAAkBH,OAAO,2CAC1C,OAAO4N,GAAoBC,EAAUC,I,KAIzCuZ,eAAiB,SAACvZ,GACd,IAAMD,EAAW1N,IAAkBH,OAAO,yBAC1C,OAAO4N,GAAoBC,EAAUC,I,+DArCrC,OAHqB,MAAjBnL,KAAKuM,WACLvM,KAAKuM,SAAW,IAAI4X,GAEjBnkB,KAAKuM,a,KARC4X,GACF5X,c,MCkBboY,G,kDAGF,WAAY9lB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjB+lB,0BAAuDT,GAA0B/P,cAEzD,EADxB/V,MAAgB,CAAEwmB,cAAc,GACR,EAaxB/M,aAAe,SAACpT,GACZ,IAAKA,EAASoa,YACV,MAAM,IAAIpK,MAAM,aAEpBhQ,EAASoa,YAAYG,aAAeva,EAAS+P,SAC7C,EAAK3U,SAAS,CAAEglB,gBAAiBpgB,EAASoa,YAAa+F,cAAc,KAlBjD,EAqBxBE,gBAAkB,SAACtjB,GACf7B,QAAQmD,MAAMtB,GACd,EAAK3B,SAAS,CAAE+kB,cAAc,EAAMC,qBAAiBjZ,KAvBjC,EA0BxBjD,SAAW,SAACnH,GACRA,EAAE8G,iBACF,EAAKsM,WACD,EAAK+P,0BAA0BL,mBAC/B,EAAKzM,aACL,EAAKiN,gBACL,EAAK1mB,MAAMmmB,kBAhCK,EAmCxBQ,mBAAqB,SAACvjB,GAClB,EAAK3B,SAAS,CAAE0kB,gBAAiB/iB,EAAEoC,OAAO3G,SApCtB,E,gEAMpB8C,KAAKqD,sBACLrG,SAASoE,MAAQ,uB,2CAGjBpB,KAAKqD,wB,+BA8BL,OACI,yBAAKlC,GAAG,oBAAoBpC,UAAU,mBAClC,uDACA,yBAAKA,UAAU,OACX,0BAAMA,UAAU,WAAW6J,SAAU5I,KAAK4I,UACtC,kBAAC,GAAD,CAAOxH,MAAM,mBACT8L,cACI,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAgBN,cAAc,cAAcD,WAAY,CAAE9I,OAAQ,UAAY2D,GAAG,0BAA0BzI,UAAU,qBAArH,uBACA,2BAAOjB,KAAK,SAASiB,UAAU,kBAAkB7B,MAAM,aAI/D,kBAAC,GAAD,CAAWuJ,MAAM,QACb,2BAAOuC,UAAQ,EAAC2J,SAAU3S,KAAKglB,mBAAoBlnB,KAAK,OAAOiL,YAAY,mBAAmBhK,UAAU,oBAIpH,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACX,kBAAC,GAAD,CAAa0N,KAAiC,GAA3BzM,KAAK3B,MAAMwmB,cAA9B,kBACA,kBAAC,GAAD,CAAiBpY,UAAoCZ,GAA9B7L,KAAK3B,MAAMymB,gBAA8BhG,YAAa9e,KAAK3B,MAAMymB,yB,GAhEhF9hB,GAwE1BiiB,GAAkB,SAACpmB,GAAW,IAAD,QAC/B,GAAkB,GAAdA,EAAM4N,KAAe,OAAO,KAChC,IAAMqS,EAA2BjgB,EAAMigB,YACjCG,EAA8BH,EAAYG,aAAeH,EAAYG,aAAc,GACnFiG,EAAgC,WAApBpG,EAAYhhB,KAE9B,OACI,kBAAC,GAAD,CAAOsD,MAAM,oBACT,yBAAKrC,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAW0H,MAAM,OAAOwN,YAAY,cAC/B6K,EAAYvZ,MAEjB,kBAAC,GAAD,CAAWkB,MAAM,OAAOwN,YAAY,cAC/B6K,EAAYhhB,KADjB,IACwBghB,EAAYgC,MAEpC,kBAAC,GAAD,CAAWra,MAAM,OAAOwN,YAAY,cAC/B,IAAI7Q,KAAJ,UAAS0b,EAAYiC,uBAArB,QAAwC,IAAI3d,MAAQwM,aAG7D,yBAAK7Q,UAAU,YACVmmB,EACG,kBAAC,GAAD,CAAWze,MAAM,WAAWwN,YAAY,cAAxC,UACK6K,EAAYI,gBADjB,aACK,EAAsBnb,MAE3B,kBAAC,GAAD,CAAW0C,MAAM,WAAWwN,YAAY,cAAxC,UACK6K,EAAYK,gBADjB,aACK,EAAsBpb,MAI/B,kBAAC,GAAD,CAAW0C,MAAM,OAAOwN,YAAY,cAApC,UACK6K,EAAY/Z,YADjB,aACK,EAAkBkD,cAG3B,yBAAKlJ,UAAU,aACX,wCACA,2BAAOA,UAAU,uBACb,+BACI,4BACI,kCACA,oCACA,wCACA,oCACA,sCACA,6CAGR,+BACKkgB,EAAahY,KAAI,SAAC+Z,EAAa7a,GAAK,IAAD,MAC1BgY,EAAe,UAAG6C,EAAY7C,eAAf,QAAyB,IAAIR,GAC5CE,EAAQmD,EAAYnD,MAC1B,OACI,wBAAIxW,IAAK,SAASlB,GACd,4BAAKA,EAAE,GACP,4BAAKgY,EAAQpa,MACb,4BAAKwM,GAAgByQ,EAAY/C,QACjC,sCAAKE,EAAQL,YAAb,aAAK,EAAc/Z,MACnB,4BAAKwM,GAAgBsN,IACrB,4BAAKtN,IAAgB,OAACsN,QAAD,IAACA,IAAO,IAAR,UAAcmD,EAAY/C,aAA1B,QAAiC,WAM1E,yBAAKlf,UAAU,8BACX,kBAAC,GAAD,CAAW0H,MAAM,cACjB,2BAAI8J,GAAgB8R,GAAkBpD,GAAcnB,QAEpD,kBAAC,GAAD,CAAWrX,MAAM,eACjB,2BAAI8J,GAAgB8R,GAAkBpD,GAAcuD,yBAW7Dta,eAAWC,YACtB/J,GAJuB,SAACgK,GAAD,MAAyB,KAG1BD,CAGxBwc,KCtKI/e,I,6CACFuf,UAAoB,IAElBC,G,kDAGF,WAAYvmB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAFjBR,MAAe,IAAIuH,GACA,EAGnByf,iBAAmB,SAAC5jB,GAChB,EAAK3B,SAAS,CAAEqlB,UAAU,KAJX,EAMnBG,iBAAmB,SAAC7jB,GAChB,EAAK3B,SAAS,CAAEqlB,UAAU,KAPX,EASnBI,iBAAmB,SAACpkB,GAEhB,IADA,IAAMvD,EAAO,EAAKiB,MAAMjB,KACfuI,EAAI,EAAGA,EAAIvI,EAAKwI,OAAQD,IAAK,CAClC,IAAMjC,EAAmBtG,EAAKuI,GAC9B,GAAIjC,EAAQ/C,IAAMA,EACd,OAAO+C,IAdA,EAmBnBshB,aAAe,SAACrH,GAAsB,IAAD,EAE7BsH,EAAgB,EAAKF,iBAAiBpH,EAAQhd,IAC7CskB,KACDA,EAAgB5D,OAAOC,OAAO,IAAInE,GAAWQ,IAC/BF,MAAQ,GAEtBwH,EAAcxH,MACdwH,EAAcxH,QAEdwH,EAAcxH,MAAQ,GAEtB,UAACE,EAAQF,aAAT,QAAgB,GAAKwH,EAAcxH,MACnC,EAAKta,UAAU,0BAA0Bwa,EAAQF,MAAO,OAAOwH,EAAcxH,OAGjF,EAAKyH,iBAAiBD,IAnCP,EAsCnBE,kBAAoB,SAACxH,GACjB,IAAIsH,EAAgB,EAAKF,iBAAiBpH,EAAQhd,IAC7CskB,IAGDA,EAAcxH,OAASwH,EAAcxH,MAAQ,EAC7CwH,EAAcxH,QAEdwH,EAAcxH,MAAQ,EAE1B,EAAKyH,iBAAiBD,KAhDP,EAkDnBG,iBAAmB,SAACzH,GAChB,IAAM0H,EAAgBhE,OAAOC,OAAO,IAAInE,GAAWQ,GACnD0H,EAAc5H,MAAQ,EACtB,EAAKyH,iBAAiBG,IArDP,EAuDnBC,qBAAuB,SAACrkB,GACpB,IAAMvD,EAAG,eACT,EAAKkU,uBAAuB,wBAC3B3N,MAAK,SAASwB,GACPA,GACA/H,EAAIW,MAAMlB,WAAW,GAAIO,EAAKA,EAAIgF,eA5D3B,EAiEnB6iB,sBAAwB,WACrB,OAAOpI,GAAQa,aAAa,EAAK3f,MAAMjB,OAlEvB,EAqEnB8nB,iBAAmB,SAACvH,GAIhB,IAFA,IAAMvgB,EAAO,EAAKiB,MAAMjB,KACpBooB,GAAQ,EACH7f,EAAI,EAAGA,EAAIvI,EAAKwI,OAAQD,IAAK,CAElC,GADyBvI,EAAKuI,GAClBhF,IAAMgd,EAAQhd,GAAI,CAC1BvD,EAAKuI,GAAKgY,EACV6H,GAAQ,EACR,OAGHA,GACDpoB,EAAKyH,KAAK8Y,GAEd,EAAKtf,MAAMlB,WAAWC,EAAtB,eAAkC,EAAKsF,YApFxB,E,qDAsFT,IAAD,OACCrE,EAAQmB,KAAKnB,MACbsmB,EAAoBnlB,KAAK3B,MAAM8mB,SACrC,OACI,kBAAC,GAAD,CAAO/jB,MAAM,gBACT,yBAAKrC,UAAU,YAAYE,MAAO,CAAEgO,aAAc,QAC9C,kBAAC,GAAD,CAAcrM,QAASZ,KAAKqlB,iBAAkB5Y,KAAkB,GAAZ0Y,EAAmBpmB,UAAU,2BAA2B6N,cAAc,qBAA1H,sBACA,kBAAC,GAAD,CAAchM,QAASZ,KAAKslB,iBAAkB7Y,KAAkB,GAAZ0Y,EAAkBpmB,UAAU,2BAA2B6N,cAAc,mBAAzH,sBACA,kBAAC,GAAD,CAAchM,QAASZ,KAAK8lB,qBAAsBrZ,KAAkB,GAAZ0Y,EAAkBpmB,UAAU,wBAAwB6N,cAAc,0BAA1H,cACA,kBAAC,GAAD,CAAcH,KAAkB,GAAZ0Y,EAAkBpmB,UAAU,0BAA2BiB,KAAK+lB,0BAEpF,yBAAKhnB,UAAU,OACVF,EAAMyf,SAASrX,KAAI,SAACkX,GAAqB,IAAD,MAC/B8H,EAAU9H,EAAQpB,UAAR,UAAmBoB,EAAQpB,SAASrS,MAAM,KAAK,UAA/C,QAAqE,cAC/E+a,EAAgB,EAAKF,iBAAiBpH,EAAQhd,IACpD,OACI,yBAAKkG,IAAK,mBAAmB8W,EAAQhd,GAAIpC,UAAU,wCAC/C,yBAAKA,UAAU,oBAAoBgR,IAAKzS,EAAe2oB,IACvD,kBAAC,IAAD,CAAMze,GAAI,oBAAoB2W,EAAQ5Y,MAEpC,4BAAK4Y,EAAQpa,OACf,0BAAMhF,UAAU,aAAY,gCAASwR,GAAgB4N,EAAQN,SAC5Dhf,EAAMygB,UAAY,0BAAMrgB,MAAO,CAAEqb,WAAY,OAASvb,WAAW,UAACof,EAAQF,aAAT,QAAgB,GAAG,EAAE,gCAAgC,oBAAqBE,EAAQF,OAAgB,KACnKkH,EACG,6BAAK,yBAAKpmB,UAAU,aACZ,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,OAAK,EAAK+jB,aAAarH,IAAUvR,cAAc,cAAc7N,UAAU,2BAC9F,kBAAC,GAAD,CAAcA,UAAU,+BAA8B,iDAAS0mB,QAAT,IAASA,OAAT,EAASA,EAAexH,aAAxB,QAA+B,IACrF,kBAAC,GAAD,CAAcrd,QAAS,SAACa,GAAD,OAAK,EAAKkkB,kBAAkBxH,IAAUvR,cAAc,eAAe7N,UAAU,2BACpG,kBAAC,GAAD,CAAc6B,QAAS,SAACa,GAAD,OAAK,EAAKmkB,iBAAiBzH,IAAUvR,cAAc,kBAAkB7N,UAAU,6BAG5G,e,GAxHLiE,GAqIlBkF,eAAWC,YACtB/J,GAJuB,SAACgK,GAAD,MAAyB,CAChDzK,WAAY,SAACC,GAAD,2BAAqBC,EAArB,iCAAqBA,EAArB,yBAAqCuK,EAASzK,EAAU,WAAV,GAAWC,GAAX,OAAoBC,SAExDsK,CAGxBid,KCrIIxf,G,sCACF0Y,SAAsB,G,KACtBtS,OAAiB,CACbC,MAAO,GACPC,KAAM,EACNoN,uBAAuB,EACvBG,QAAS,OACTC,UAAW,O,KAEftN,aAAmB,CACfkT,WAAW,EACX4G,gBAAgB,G,KAEpBC,WAAyB,G,KACzB/U,UAAoB,E,KACpByT,cAAwB,GAEtBuB,G,kDAGF,WAAYvnB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjB6d,eAAiCV,GAAe5H,cAExB,EADxB/V,MAAgB,IAAIuH,GACI,EAGxBygB,iBAAmB,SAAC5kB,GAChB,EAAK3B,SAAS,CAAEsR,UAAW,EAAGkN,SAAU,GAAIuG,cAAc,KAJtC,EAMxByB,eAAiB,SAAC5hB,QACWmH,GAArBnH,EAAS+P,SAIoC,GAA7C,EAAKpW,MAAM+N,aAAX,eACA,EAAKtM,SAAS,CAAEsR,UAAW1M,EAAS0M,UAAWyT,cAAc,EAAOvG,SAAU5Z,EAAS+P,SAAU0R,WAAYzhB,EAASyW,cAEtH,EAAKrb,SAAS,CAAEsR,UAAW1M,EAAS0M,UAAWyT,cAAc,EAAOvG,SAAU5Z,EAAS+P,WANvF,EAAK4R,iBAAiB3hB,IARN,EAqCxBsH,OAAS,SAACvK,GACNA,EAAE8G,iBACF,EAAKge,aAAa,IAvCE,EAyCxBC,qBAAuB,SAAC/kB,GACpB,IAEIvE,EAFEqY,EAA0B9T,EAAEoC,OAC9BE,EAAewR,EAAMxR,KAIrB7G,EADc,YAAdqY,EAAMzX,KACmB,GAAjByX,EAAMzR,QAENyR,EAAMrY,MAElB,IAAMkP,EAAe,EAAK/N,MAAM+N,kBACnBP,GAAT3O,GAAkD,IAA5B,IAAIoK,OAAOpK,GAAOuW,OACpCrH,EAAarI,WACNqI,EAAarI,GAExBqI,EAAarI,GAAQ7G,EAEzB,EAAK4C,SAAS,CAAEsM,aAAcA,KA1DV,EA4DxBqa,cAAgB,SAACvpB,GACb,IAAMgP,EAAO0E,SAAS1T,GAChB8O,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOE,KAAOA,EACdF,EAAOsN,uBAAwB,EAC/B,EAAKxZ,SAAS,CAAEkM,OAAQA,KAjEJ,EAmExB0a,SAAW,SAACza,GACR,IAAMD,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOC,MAAQA,EACf,EAAKnM,SAAS,CAAEkM,OAAQA,KAtEJ,EAwExB2a,SAAW,SAACllB,GACR,IAAMvE,EAAQuE,EAAEoC,OAAO3G,MACjB8O,EAAS,EAAK3N,MAAM2N,OAC1B,GAAa,IAAT9O,EAAa,CACb,IAAM0pB,EAAqB,IAAItf,OAAOpK,GAAOwN,MAAM,KACnDsB,EAAOyN,QAAUmN,EAAS,GAC1B5a,EAAO0N,UAAYkN,EAAS,eAErB5a,EAAOyN,eACPzN,EAAO0N,UAElB,EAAK5Z,SAAS,CAAEkM,OAAQA,KAnFJ,E,2DAiBoB,IAA/BE,EAA8B,uDAAH,EAC9BF,EAAShM,KAAK3B,MAAM2N,YACdH,GAARK,GAAgE,GAA3ClM,KAAK3B,MAAM2N,OAAOsN,wBACvCtN,EAAOE,KAAOA,GAElBF,EAAOI,aAAepM,KAAK3B,MAAM+N,aACjC,IAAMya,EAAkD,GAApC7a,EAAOI,aAAP,UAEpBpM,KAAK8E,OACD9E,KAAK0c,eAAeN,eAAgByK,EACpC7mB,KAAKsmB,eAAgBtmB,KAAKqmB,iBAC1Bra,GAEJA,EAAOsN,uBAAwB,EAC/BtZ,KAAKF,SAAS,CAAEkM,OAAQA,M,0CAGxBhP,SAASoE,MAAQ,kBACjBpB,KAAKumB,aAAa,K,+BAmDZ,IAAD,aACCjI,EAAsBte,KAAK3B,MAAMigB,SACvC,OACI,yBAAKnd,GAAG,iBAAiBpC,UAAU,mBAC/B,+CACA,0BAAM6J,SAAU5I,KAAKgM,QAEjB,kBAAC,GAAD,CAAOgB,YAAY,EAAM5L,MAAM,SAAS8L,cACpC,2BAAOpP,KAAK,SAASiB,UAAU,qBAE/B,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAWkV,YAAY,WAAWlV,UAAU,WAAW0H,MAAM,QACzD,2BAAOkM,SAAU3S,KAAKwmB,qBAAsBhU,aAAcxS,KAAK3B,MAAM+N,aAAX,KAAiCrI,KAAK,OAAOgF,YAAY,eAAehK,UAAU,kBAEhJ,kBAAC,GAAD,CAAWkV,YAAY,WAAWlV,UAAU,WAAW0H,MAAM,YACzD,4BAAQkM,SAAU3S,KAAK2mB,SAAU5nB,UAAU,gBACvC,4BAAQ7B,MAAM,YAAd,cACA,4BAAQA,MAAM,aAAd,cACA,4BAAQA,MAAM,aAAd,iBACA,4BAAQA,MAAM,cAAd,uBAGR,kBAAC,GAAD,CAAW+W,YAAY,WAAWlV,UAAU,WAAW0H,MAAM,YACzD,4BAAQkM,SAAU3S,KAAKwmB,qBAAsBhU,aAAcxS,KAAK3B,MAAM+N,aAAa,uBAAwBrN,UAAU,eAAegF,KAAK,uBACrI,4BAAQ7G,MAAM,IAAd,OACC8C,KAAK3B,MAAM8nB,WAAWlf,KAAI,SAAA8W,GACvB,OAAO,4BAAQ1W,IAAK,gBAAgB0W,EAAS5c,GAAIjE,MAAO6gB,EAAS5c,IAAK4c,EAASha,WAK3F,kBAAC,GAAD,CAAWkQ,YAAY,WAAWlV,UAAU,WAAW0H,MAAM,cACzD,2BAAOkM,SAAU3S,KAAKwmB,qBAAsBM,eAAwD,GAAxC9mB,KAAK3B,MAAM+N,aAAX,UAA8CtO,KAAK,WAAWiG,KAAK,cAC/H,2BAAO9E,MAAO,CAAE4I,YAAa,QAAkD,GAAxC7H,KAAK3B,MAAM+N,aAAX,UAA+C,MAAQ,OAElG,kBAAC,GAAD,CAAW6H,YAAY,WAAWlV,UAAU,WAAW0H,MAAM,cACzD,2BAAO1C,KAAK,OAAO8N,IAAI,IAAI/T,KAAK,SAAS6U,SACrC,SAAClR,GAAD,OAAO,EAAKglB,cAAc7V,SAASnP,EAAEoC,OAAO3G,OAAS,IACvDsV,cAAc,UAACxS,KAAK3B,MAAM2N,OAAOE,YAAnB,QAA2B,GAAK,EAAGnN,UAAU,kBAEjE,kBAAC,GAAD,CAAWkV,YAAY,WAAWlV,UAAU,WAAW0H,MAAM,kBACzD,2BAAO1C,KAAK,QAAQ8N,IAAI,IAAI/T,KAAK,SAAS6U,SACtC,SAAClR,GAAD,OAAO,EAAKilB,SAAS9V,SAASnP,EAAEoC,OAAO3G,SACzCsV,aAAcxS,KAAK3B,MAAM2N,OAAOC,MAAOlN,UAAU,kBAEvD,kBAAC,GAAD,CAAWkV,YAAY,WAAWlV,UAAU,WAAW0H,MAAM,cACzD,+BAAQzG,KAAK3B,MAAM+S,eAKnC,kBAAC,GAAD,CAAa3E,KAAMzM,KAAK3B,MAAMwmB,cAA9B,kBACA,kBAAC,GAAD,CAAmB5Y,MAAK,UAAEjM,KAAK3B,MAAM2N,OAAOC,aAApB,QAA6B,GAAIoF,WAAU,UAAErR,KAAK3B,MAAM2N,OAAOE,YAApB,QAA4B,EAC3FkF,UAAWpR,KAAK3B,MAAM+S,UAAWxQ,QAAS,SAACsL,GAAD,OAAkB,EAAKqa,aAAara,MAClF,kBAAC,GAAD,CAAoBhO,IAAK8B,KAAKkD,UAAWob,SAAUA,EAAUgB,UAAWtf,KAAK3B,MAAM+N,aAAX,iB,GA/I3DpJ,GAoJdkF,eAAWC,YACtB/J,EADsB+J,CAExBie,KC1KIW,G,kDACF,WAAYloB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAKjBmoB,eAAiB,SAAC7I,GACd,IAAMjgB,EAAG,eACT,EAAKkU,uBAAuB,UAAU+L,EAAQpa,KAAK,wBAClDU,MAAK,SAASwB,GACPA,GACA/H,EAAI+oB,iBAAiB9I,OAXT,EAexB8I,iBAAmB,SAAC9I,GAEhB,IADA,IAAMvgB,EAAiB,EAAKiB,MAAMjB,KACzBuI,EAAI,EAAGA,EAAIvI,EAAKwI,OAAQD,IAAK,CAElC,GADyBvI,EAAKuI,GAClBhF,IAAMgd,EAAQhd,GAAI,CAC1BvD,EAAK2V,OAAOpN,EAAG,GACf,OAGR,EAAKtH,MAAMlB,WAAWC,EAAtB,eAAkC,EAAKsF,YAxBnB,E,gEAIpBlG,SAASoE,MAAQ,uB,+BAsBX,IAAD,OACC8lB,EAAsBlnB,KAAKnB,MAAMjB,KACnC0kB,EAAoB,EAAGhB,EAAqB,EAChD,OACI,yBAAKviB,UAAU,mBACX,kDACA,kBAAC,GAAD,CAAa0N,KAAyB,GAAnBya,EAAS9gB,QAA5B,oBAEA,2BAAOrH,UAAU,kCAAkCE,MAAO,CAAC6C,QAASolB,EAAS9gB,OAAO,EAAE,QAAQ,SAC1F,+BACI,4BACI,kCACA,wBAAIgd,QAAS,GAAb,WACA,mCACA,oCACA,qCACA,2CACA,wCAGR,+BACK8D,EAASjgB,KAAI,SAACkX,EAAShY,GAAO,IAAD,YAC1Bmc,GAAS,UAAKnE,EAAQF,aAAb,QAAsB,EAC/BqD,IAAe,UAACnD,EAAQF,aAAT,QAAkB,IAAlB,UAAwBE,EAAQN,aAAhC,QAAyC,GACxD,IAAIoI,EAAUtI,GAAQU,kBAAkBF,GAClCgJ,EAAS7pB,EAAe2oB,EAC9B,OACI,wBAAI5e,IAAK,QAAUlB,GACf,4BAAKA,EAAI,GACT,4BAAI,yBAAK6J,OAAO,MAAMD,IAAKoX,KAC3B,4BAAKhJ,EAAQpa,MACb,4BAAKwM,GAAgB4N,EAAQF,QAC7B,sCAAKE,EAAQL,YAAb,aAAK,EAAc/Z,MACnB,4BAAKwM,GAAgB4N,EAAQN,QAC7B,4BAAKtN,IAAgB,UAAC4N,EAAQF,aAAT,QAAkB,IAAlB,UAAwBE,EAAQN,aAAhC,QAAyC,KAC9D,4BACI,kBAAC,GAAD,CAAcjd,QAAS,SAACa,GAAD,OAAK,EAAKulB,eAAe7I,IAAUvR,cAAc,eAAe7N,UAAU,gCAKjH,4BACI,wBAAIqkB,QAAS,GAAb,SACA,4BAAK7S,GAAgB+R,IACrB,wBAAIc,QAAS,IACb,4BAAK7S,GAAgB+Q,IACrB,qC,GAzELte,GAuFRkF,eAAWC,YACtB/J,GAJuB,SAACgK,GAAD,MAAyB,CAChDzK,WAAY,SAACC,GAAD,2BAAqBC,EAArB,iCAAqBA,EAArB,yBAAqCuK,EAASzK,EAAU,WAAV,GAAWC,GAAX,OAAoBC,SAExDsK,CAGxB4e,KClGInhB,G,sCACFH,OAAiB,GAEA2hB,G,kDAIjB,WAAYvoB,GAAgB,IAAD,8BACvB,cAAMA,IAHVR,MAAgB,IAAIuH,GAEO,EAD3ByhB,YAAsB,EACK,EAK3BC,gBAAkB,WACd,OAAO,EAAKzoB,MAAM0oB,UAAU,EAAKlpB,MAAMoH,SANhB,EAQ3B+hB,KAAO,SAAC/lB,GACJ,IAAIgmB,EAAgB,EAAKppB,MAAMoH,OACV,GAAjBgiB,EACAA,EAAgB,EAAKJ,YAAY,EAEjCI,IAEJ,EAAK3nB,SAAS,CAAC2F,OAAOgiB,KAfC,EAkB3BC,KAAO,SAACjmB,GACJ,IAAIgmB,EAAgB,EAAKppB,MAAMoH,OAC3BgiB,GAAiB,EAAKJ,YAAY,EAClCI,EAAgB,EAEhBA,IAEJ,EAAK3nB,SAAS,CAAC2F,OAAOgiB,KAvBtB,EAAKJ,YAAcxoB,EAAM0oB,UAAUnhB,OAFZ,E,qDA6BvB,OACI,kBAAC,GAAD,CAAMrH,UAAU,4CACZ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAcA,UAAU,gBAAgB6N,cAAc,oBAAoBhM,QAASZ,KAAKwnB,QAE5F,yBAAKzoB,UAAU,WAAWE,MAAO,CAAC0oB,UAAU,WACxC,yBAAK3X,OAAO,MAAMD,IAAK/P,KAAKsnB,qBAEhC,yBAAKvoB,UAAU,YACX,kBAAC,GAAD,CAAcA,UAAU,gBAAgB6N,cAAc,qBAAqBhM,QAASZ,KAAK0nB,c,GA3C3EpnB,aCGhCsnB,G,kDAGF,WAAY/oB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjB6d,eAAgCV,GAAe5H,cAEvB,EADxB/V,MAAe,CAACyhB,UAAS,GACD,EAMxBhI,aAAe,SAACpT,GAA0B,IAAD,IACrC,QAAyBmH,GAArBnH,EAAS+P,UAAsD,GAA7B/P,EAAS+P,SAASrO,OACpD,MAAM,IAAIsO,MAAM,aAEpB,EAAK5U,SAAS,CACVqe,QAAQzZ,EAAS+P,SAAS,GAAIqL,UAAS,IAE3C9iB,SAASoE,MAAT,oBAAiB,EAAK/C,MAAM8f,eAA5B,aAAiB,EAAoBpa,YAArC,QAA2C,UAbvB,EAexBghB,gBAAkB,SAACtjB,GACf7B,QAAQmD,MAAMtB,GACd,EAAK3B,SAAS,CAACggB,UAAS,KAjBJ,EAmBxB+H,kBAAoB,WAChB,EAAKhT,WACD,EAAK6H,eAAeJ,iBACpB,EAAKxE,aACL,EAAKiN,gBACL,EAAKtJ,YAxBW,E,sDAIpB,OAAOzb,KAAKnB,MAAM6c,MAAMlX,OAAOe,O,0CAwB/BvF,KAAK6nB,sB,+BAEC,IAAD,IACL,OAAK7nB,KAAKyb,WAA+B,IAAlBzb,KAAKyb,UAGpB,yBAAK1c,UAAU,mBACnB,8CACCiB,KAAK3B,MAAM8f,QACZ,kBAAC,GAAD,CAAO/c,MAAOpB,KAAK3B,MAAM8f,QAAQpa,MAC7B,kBAAC,GAAD,CAAUwjB,UAAW5J,GAAQmK,gBAAgB9nB,KAAK3B,MAAM8f,QAAS7gB,KACjE,2BAAOyB,UAAU,SACb,+BACI,4BACI,oCACA,2CACA,oCACA,wCACA,+CAGR,+BACI,4BACI,4BAAKiB,KAAK3B,MAAM8f,QAAQpa,MACxB,4BAAK/D,KAAK3B,MAAM8f,QAAQP,aACxB,sCAAK5d,KAAK3B,MAAM8f,QAAQL,YAAxB,aAAK,EAAyB/Z,MAC9B,sCAAK/D,KAAK3B,MAAM8f,QAAQJ,gBAAxB,aAAK,EAA6Bha,MAClC,4BAAK/D,KAAK3B,MAAM8f,QAAQF,WAKtC,kBAAC,GAAD,kBACF,kBAAC,GAAD,CAAgBrR,cAAc,oBAAoBpF,GAAG,oBAArD,SA7BO,kBAAC,GAAD,sB,GAnCgBxE,GAqEpBkF,eAAW0f,IClFbG,GAAS,CAClB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YCGEniB,G,sCACF7C,OAAgB,GAECilB,G,kDAEjB,WAAYnpB,GAAgB,IAAD,8BACvB,cAAMA,IAFVR,MAAQ,IAAIuH,GACe,EAG3BqiB,mBAAqB,SAACxmB,GAClB,EAAK5C,MAAM8T,SAASlR,IAJG,EAM3BsU,OAAS,SAACtU,GACNA,EAAE8G,sBAC8BsD,GAA5B,EAAKhN,MAAMmN,OAAOkc,aAAiDrc,GAA1B,EAAKhN,MAAMmN,OAAOmc,OAG3D,EAAKtpB,MAAMmN,OAAOmc,KAAO,EAAKtpB,MAAMmN,OAAOkc,OAC3C,EAAKpoB,SAAS,CAACiD,OAAM,KAGzB,EAAKjD,SAAS,CAACiD,OAAM,IACrB,EAAKlE,MAAM+J,SAASnH,MAhBG,E,qDAmBvB,IAAM2mB,EAA8BpoB,KAAKnB,MAAMupB,iBAC/C,OACI,0BAAMxf,SAAU5I,KAAK+V,QACjB,kBAAC,GAAD,CAAO/I,YAAY,EAAM5L,MAAM,SAAS8L,cACpC,2BAAOpP,KAAK,SAASiB,UAAU,qBAE/B,yBAAKA,UAAU,SACX,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAW0H,MAAM,SACb,4BAAQ1H,UAAU,eAAegF,KAAK,QAAQ4O,SAAU3S,KAAKioB,mBAAoB/qB,MAAO8C,KAAKnB,MAAMmN,OAAOqc,OACrGN,GAAO9gB,KAAI,SAACqhB,EAAWniB,GACpB,OAAO,4BAAQjJ,MAAOiJ,EAAI,GAAImiB,EAAvB,KAAoCniB,EAAI,EAAxC,UAInB,kBAAC,GAAD,CAAWM,MAAM,QACb,4BAAQ1H,UAAU,eAAegF,KAAK,OAAO4O,SAAU3S,KAAKioB,mBAAoB/qB,MAAO8C,KAAKnB,MAAMmN,OAAOmc,MACpGC,EAAiBnhB,KAAI,SAAAkhB,GAClB,OAAO,4BAAQjrB,MAAOirB,GAAOA,SAK7C,yBAAKppB,UAAU,wBACX,yBAAKE,MAAO,CAAEC,MAAO,OAAQ8Q,OAAQ,OAAQlO,QAAS,QAAU/C,UAAU,0CACtE,wBAAIE,MAAO,CAAEuH,OAAQ,SAAU,uBAAGzH,UAAU,0BAGpD,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAW0H,MAAM,SACb,4BAAQ1H,UAAU,eAAegF,KAAK,UAAU4O,SAAU3S,KAAKioB,mBAAoB/qB,MAAO8C,KAAKnB,MAAMmN,OAAOuc,SACvGR,GAAO9gB,KAAI,SAACqhB,EAAWniB,GACpB,OAAO,4BAAQjJ,MAAOiJ,EAAI,GAAImiB,EAAvB,KAAoCniB,EAAI,EAAxC,UAInB,kBAAC,GAAD,CAAWM,MAAM,QACb,4BAAQ1H,UAAU,eAAegF,KAAK,SAAS4O,SAAU3S,KAAKioB,mBAAoB/qB,MAAO8C,KAAKnB,MAAMmN,OAAOkc,QACtGE,EAAiBnhB,KAAI,SAAAkhB,GAClB,OAAO,4BAAQjrB,MAAOirB,GAAOA,UAMjD,kBAAC,GAAD,CAAa1b,KAAMzM,KAAK3B,MAAM0E,OAA9B,sB,GAlEyBzC,aCjBxBkoB,GASjB,aAAe,IAAD,gCAPdC,OAAiB,EAOH,KANdxK,MAAgB,EAMF,KALdyK,OAAiB,UAKH,KAJdP,MAAe,IAAI/kB,MAAOulB,cAIZ,KAHdN,MAAgB,EAGF,KAFdO,eAEc,OADdC,cACc,EACV7oB,KAAK4oB,UAAY,WACb,OAAO,EAAKH,QAEjBzoB,KAAK6oB,SAAW,WACX,OAAO,EAAKR,MAAM,IAAI,EAAKF,OAdlBK,GAmBVM,UAAY,SAACC,GAChB,OAAOlH,OAAOC,OAAO,IAAI0G,GAAYO,IApBxBP,GAsBVQ,WAAa,SAACC,GAEjB,IADA,IAAMC,EAAsB,IAAI3a,MACvBpI,EAAI,EAAGA,EAAI8iB,EAAU7iB,OAAQD,IAAK,CACvC,IAAMjC,EAAU+kB,EAAU9iB,GAC1B+iB,EAAS7jB,KAAKmjB,GAASM,UAAU5kB,IAErC,OAAOglB,GA5BMV,GA8BVW,UAAY,SAACF,GAEhB,IADA,IAAInX,EAAM,EACD3L,EAAI,EAAGA,EAAI8iB,EAAU7iB,OAAQD,IAAK,CACvC,IAAMjC,EAAU+kB,EAAU9iB,GACtBjC,EAAQukB,OAAS3W,IACjBA,EAAM5N,EAAQukB,QAItB,OAAO3W,G,WC1BTlM,G,sCACFwjB,cAAwB,E,KACxBjmB,QAAgB,IAAIC,MAEHimB,G,kDAWjB,WAAYxqB,GAAgB,IAAD,8BACvB,cAAMA,IAVVyqB,iBAA2B,EASA,EAR3BC,iBAA2B,EAQA,EAP3BC,QAAkB,IAOS,EAN3BC,QAAkB,GAMS,EAL3BC,WAAqB,IAKM,EAJ3BC,WAAqB,IAIM,EAH3BC,UAAoB,EAGO,EAF3BC,SAAmB,EAEQ,EAD3BxrB,MAAgB,IAAIuH,GACO,EAK3BujB,UAA2C,SAACF,GAExC,IADA,IAAInX,EAAM,EACD3L,EAAI,EAAGA,EAAI8iB,EAAU7iB,OAAQD,IAAK,CACvC,IAAMjC,EAAU+kB,EAAU9iB,GAEtBjC,EAAQ0kB,YAAc9W,IACtBA,EAAM5N,EAAQ0kB,aAItB,OAAO9W,GAfgB,EAiB3BgY,YAAc,WACV,EAAKD,SAAW,EAAKV,UAAU,EAAKtqB,MAAMkrB,SAC1C,EAAKT,iBAAmBxY,KAAKkZ,MAAsB,EAAhB,EAAKH,SAAe,GACvD,EAAKN,iBAAmBzY,KAAKkZ,MAAsB,EAAhB,EAAKH,SAAe,GACvD,EAAKD,UAAa,GAAO,EAAK/qB,MAAMkrB,QAAQ3jB,OAAU,KArB/B,EA6B3B6jB,MAAQ,SAAC9Z,GACL,EAAKrQ,SAAS,CAAEspB,aAAcjZ,KA9BP,EAiC3BvP,QAAU,SAACuP,GACH,EAAKtR,MAAM+B,SACX,EAAK/B,MAAM+B,QAAQuP,IAnCA,EAsC3B+Z,QAAU,WACN,EAAKpqB,SAAS,CAAEspB,cAAe,KArC/B,EAAKU,cAFkB,E,iEAwBvB9pB,KAAK8pB,cACD9pB,KAAKnB,MAAMsE,SAAWnD,KAAK3B,MAAM8E,SACjCnD,KAAKF,SAAS,CAAEqD,QAASnD,KAAKnB,MAAMsE,Y,+BAmBlC,IAAD,OACCtE,EAAQmB,KAAKnB,MACnB,OACI,6BACI,yBAAKE,UAAU,0BAA0BE,MAAO,CAAEkrB,UAAW,QAASxC,UAAW,WAC7E,yBAAKyC,WAAYpqB,KAAKkqB,QAASnrB,UAAU,kBAAkBsrB,QAAQ,MAAMC,YAAY,OAAOprB,MAAsB,EAAfc,KAAKwpB,QAAe,GAAO3qB,EAAMkrB,QAAQ3jB,OAAS,IAAK4J,OAAQ,IAAKua,MAAM,8BAExK1rB,EAAMkrB,QAAQ9iB,KAAI,SAACoE,EAAMlF,GACtB,IAAMqkB,EAAcnf,EAAKud,YAAc,EAAKiB,SAAY,EAAKF,WACvDc,EAAS,EAAKf,WAAa,GAAIgB,EAAS,EAAKlB,QAAU,GAAM,GAAOrjB,EAEpEwkB,EAAY,6BAAmED,EAAS,IAAMD,EAAS,IACvGG,EAAUzkB,GAAK,EAAK9H,MAAM+qB,aAChC,OACI,uBAAGnqB,MAAO2rB,EAAU,CAAEC,OAAQ,WAAc,GAAI9rB,UAAU,cACzD+rB,YAAa,SAACrpB,GAAD,OAAO,EAAKwoB,MAAM9jB,IAAIvF,QAAS,SAACa,GAAD,OAAO,EAAKb,QAAQuF,IAAIikB,WAAY,EAAKF,QAAS7iB,IAAK+I,KAAa,IAAMjK,GACnH,0BAAM4kB,KAAMH,EAAU,MAAQ,QAASI,EAAG,EAAKxB,QAAW,GAAOrjB,EAAI8kB,EAAG,EAAKvB,WAAac,EAAYxa,OAAQwa,EAAYtrB,MAAO,KACjI,0BAAM6rB,KAAMH,EAAU,MAAQ,QAASM,WAAW,MAAMpjB,SAAU,GAAIkjB,EAAGN,EAAQO,EAAGR,EAAQE,UAAWA,GAAYtf,EAAKwd,YACxH,4BAAQsC,GAAI,EAAK3B,QAAW,IAAOrjB,EAAI,GAAIilB,GAAI,EAAK1B,WAAY2B,EAAE,IAAIN,KAAK,YAIvF,0BAAMhnB,KAAK,cAAcinB,EAAGhrB,KAAKwpB,QAASyB,EAAGjrB,KAAK0pB,WAAY1Z,OAAQ,EAAG9Q,MAAOc,KAAK4pB,YACrF,0BAAM7lB,KAAK,iBAAiBgnB,KAAK,mBAAmBC,EAAGhrB,KAAKwpB,QAASyB,EAAGjrB,KAAKypB,QAASzZ,OAAQ,EAAG9Q,MAAOc,KAAK4pB,YAC7G,0BAAM7lB,KAAK,oBAAoBgnB,KAAK,mBAAmBC,EAAGhrB,KAAKwpB,QAASyB,EAAGjrB,KAAKypB,QAA4B,EAAlBzpB,KAAK2pB,WAAiB,EAAG3Z,OAAQ,EAAG9Q,MAAOc,KAAK4pB,YAC1I,0BAAM7lB,KAAK,oBAAoBgnB,KAAK,mBAAmBC,EAAGhrB,KAAKwpB,QAASyB,EAAGjrB,KAAKypB,QAA4B,EAAlBzpB,KAAK2pB,WAAiB,EAAG3Z,OAAQ,EAAG9Q,MAAOc,KAAK4pB,YAC1I,0BAAM7lB,KAAK,cAAcinB,EAAGhrB,KAAKwpB,QAASyB,EAAGjrB,KAAKypB,QAASzZ,OAAQhQ,KAAK2pB,WAAYzqB,MAAO,IAE3F,0BAAMgsB,WAAW,MAAMnnB,KAAK,UAAU+D,SAAU,GAAIkjB,EAAGhrB,KAAKwpB,QAASyB,EAAGjrB,KAAKypB,SAAUlZ,GAAgBvQ,KAAK6pB,WAC5G,0BAAMqB,WAAW,MAAMnnB,KAAK,aAAa+D,SAAU,GAAIkjB,EAAGhrB,KAAKwpB,QAASyB,EAAGjrB,KAAKypB,QAA4B,EAAlBzpB,KAAK2pB,WAAiB,GAAIpZ,GAAgBvQ,KAAKspB,mBACzI,0BAAM4B,WAAW,MAAMnnB,KAAK,aAAa+D,SAAU,GAAIkjB,EAAGhrB,KAAKwpB,QAASyB,EAAGjrB,KAAKypB,QAA4B,EAAlBzpB,KAAK2pB,WAAiB,GAAIpZ,GAAgBvQ,KAAKupB,qBAGjJ,2BAAG,uBAAGxqB,UAAU,mBAAhB,IAAqC,IAAIqE,KAAKpD,KAAK3B,MAAM8E,SAASyM,iB,GAzFnCtP,aCHzCsF,G,sCACF0lB,oBAA8B,E,KAC9BC,uBAAiC,GAEhBC,G,kDAGjB,WAAY3sB,GAAgB,IAAD,8BACvB,cAAMA,IAFVR,MAAgB,IAAIuH,GACO,EAG3B6lB,gBAAkB,WACd,OAAO,EAAK5sB,MAAM6sB,cAJK,EAM3BC,gBAAkB,WAAO,IAAD,IACdD,EAAe,EAAKD,kBAC1B,IAAKC,EAAa1f,OAAQ,MAAO,GACjC,IAAIA,EAAiB0f,EAAa1f,OAClC,OAAO+b,IAAO,UAAC/b,EAAOqc,aAAR,QAAiB,GAAK,GAAK,IAAMrc,EAAOmc,KAAO,MAAQJ,IAAO,UAAC/b,EAAOuc,eAAR,QAAmB,GAAK,GAAK,IAAMvc,EAAOkc,QAV/F,EAY3B0D,eAAiB,WAA6B,IAAD,EACzC,KAAI,EAAKvtB,MAAMitB,mBAAqB,GAEpC,IADA,IAAMO,EAAgB,UAAG,EAAKhtB,MAAM6sB,aAAaI,gBAA3B,QAAuC,GACpD3lB,EAAI,EAAGA,EAAI0lB,EAAKzlB,OAAQD,IAC7B,GAAIA,GAAK,EAAK9H,MAAMitB,mBAAoB,OAAOO,EAAK1lB,IAhBjC,EAoB3B4lB,kBAAoB,WAA6B,IAAD,EAC5C,KAAI,EAAK1tB,MAAMktB,sBAAwB,GAEvC,IADA,IAAMM,EAAgB,UAAG,EAAKhtB,MAAM6sB,aAAaM,mBAA3B,QAA0C,GACvD7lB,EAAI,EAAGA,EAAI0lB,EAAKzlB,OAAQD,IAC7B,GAAIA,GAAK,EAAK9H,MAAMktB,sBAAuB,OAAOM,EAAK1lB,IAxBpC,EA4B3B8lB,qBAAuB,SAAC9lB,GACpB,EAAKrG,SAAS,CAAEwrB,mBAAoBnlB,KA7Bb,EA+B3B+lB,oBAAsB,WAClB,EAAKpsB,SAAS,CAAEwrB,oBAAqB,KAhCd,EAkC3Ba,wBAA0B,SAAChmB,GACvB,EAAKrG,SAAS,CAAEyrB,sBAAuBplB,KAnChB,EAqC3BimB,uBAAyB,WACrB,EAAKtsB,SAAS,CAAEyrB,uBAAwB,KAtCjB,E,mGA2CjB,IAAD,QACCG,EAAe1rB,KAAKyrB,kBAC1B,OACI,kBAAC,GAAD,CAAMrqB,MAAM,YACR,kBAAC,GAAD,CAAWqF,MAAM,UAAWzG,KAAK2rB,mBACjC,yBAAK5sB,UAAU,mBACX,uCACA,kBAAC,GAAD,CACI6B,QAASZ,KAAKisB,qBAAsBI,UAAWrsB,KAAKksB,oBACpD/oB,QAAO,UAAEuoB,EAAa3I,YAAf,QAAuB,IAAI3f,KAAQ2mB,QAASvB,GAASQ,WAAT,UAAoB0C,EAAaI,gBAAjC,QAA6C,MACpG,kBAAC,GAAD,CAAgB/C,SAAU/oB,KAAK4rB,mBAC/B,0CACA,kBAAC,GAAD,CACIhrB,QAASZ,KAAKmsB,wBAAyBE,UAAWrsB,KAAKosB,uBACvDjpB,QAAO,UAAEuoB,EAAa3I,YAAf,QAAuB,IAAI3f,KAAQ2mB,QAASvB,GAASQ,WAAT,UAAoB0C,EAAaM,mBAAjC,QAAgD,MACvG,kBAAC,GAAD,CAAgBjD,SAAU/oB,KAAK+rB,4B,GA7DRzrB,aAoErCgsB,GAAiB,SAACztB,GACpB,IAAMkqB,EAAiClqB,EAAMkqB,SAC7C,OAAKA,EAIG,yBAAKhqB,UAAU,MAAME,MAAO,CAAEkrB,UAAW,UAC7C,yBAAKprB,UAAU,YAAW,kBAAC,GAAD,CAAW0H,MAAM,UAAjB,IAA4BsiB,EAASL,SAC/D,yBAAK3pB,UAAU,YAAW,kBAAC,GAAD,CAAW0H,MAAM,UAAUshB,GAAOgB,EAASV,MAAQ,GAAnD,IAAwDU,EAASZ,OAC3F,yBAAKppB,UAAU,YAAf,IAA2B,kBAAC,GAAD,CAAW0H,MAAM,SAAS8J,GAAgBwY,EAAS9K,SAC9E,yBAAKlf,UAAU,YAAf,IAA2B,kBAAC,GAAD,CAAW0H,MAAM,UAAU8J,GAAgBwY,EAASN,SAA/E,MARkB,yBAAK1pB,UAAU,kBAAkBE,MAAO,CAAEkrB,UAAW,UACvE,yBAAKprB,UAAU,oBAAmB,uBAAGA,UAAU,yBAA/C,oCC/EFgkB,GAAO,IAAI3f,KACXwC,G,sCACFoG,OAAiB,CACbqc,MAAOtF,GAAKwJ,WAAa,EACzBpE,KAAOpF,GAAK4F,cACZJ,QAASxF,GAAKwJ,WAAa,EAC3BrE,OAAQnF,GAAK4F,e,KAEjB+C,kBAA6B7f,GAE3B2gB,G,kDAGF,WAAY3tB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAHjB+lB,0BAAuDT,GAA0B/P,cAE9D,EADnB/V,MAAgB,IAAIuH,GACD,EAInBoG,OAAS,SAACvK,GACNA,EAAE8G,iBACF,EAAKkkB,iBANU,EAQnBC,mBAAqB,SAAChoB,GAClB,EAAK5E,SAAS,CAAE4rB,aAAchnB,KATf,EAWnBioB,sBAAwB,SAAClrB,GACrB7B,QAAQmD,MAAMtB,IAZC,EAcnBgrB,cAAgB,WACZ,EAAK/L,uBACD,EAAKkE,0BAA0BN,kBAC/B,EAAKoI,mBACL,EAAKC,sBACL,EAAKtuB,MAAM2N,SAnBA,EAuBnBic,mBAAqB,SAACxmB,GAClB,IAAMsC,EAAOtC,EAAEoC,OAAOE,KAChBiI,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOjI,GAAQ6M,SAASnP,EAAEoC,OAAO3G,OACjC,EAAK4C,SAAS,CAAEkM,OAAQA,KA3BT,E,gEA+BfhM,KAAKqD,sBACLrD,KAAKysB,kB,+BAIL,IAAMf,EAAe1rB,KAAK3B,MAAMqtB,aAChC,OAAKA,EAOD,yBAAK3sB,UAAU,mBACX,0CACA,kBAAC,GAAD,CAAiB4T,SAAU3S,KAAKioB,mBAAoBG,iBAAkBsD,GAAgBA,EAAatD,iBAAmBsD,EAAatD,iBAAmB,GAClJxf,SAAU5I,KAAKgM,OAAQA,OAAQhM,KAAK3B,MAAM2N,SAC9C,kBAAC,GAAD,CAAe0f,aAAcA,KAV1B,yBAAK3sB,UAAU,mBAClB,0CACA,kBAAC,GAAD,W,GA3CiBiE,GAyDlBkF,eAAWC,YACtB/J,EADsB+J,CAGxBqkB,KC7EmBI,G,kDAUjB,aAAe,IAAD,8BAChB,gBAVDzO,aASiB,IARjB0O,WAQiB,IAPjBxE,WAOiB,IANjBF,UAMiB,IALjBqC,gBAKiB,IAJjBX,cAIiB,IAHjBvB,eAGiB,IAFjBM,eAEiB,IADdC,cACc,EAEV,EAAKD,UAAY,WAAO,IAAD,EAC5B,iBAAO,EAAKiE,aAAZ,QAAmB,GAEf,EAAKhE,SAAW,WAAO,IAAD,EACjB,OAAO,EAAK1K,QAAL,UAAa,EAAKA,QAAQpa,YAA1B,QAAgC,GAAG,EAAKskB,MAAM,IAAI,EAAKF,MANxD,E,UAVwB7K,IAArBsP,GAmBb9D,UAAY,SAAC1Z,GACb,OAAOyS,OAAOC,OAAO,IAAI8K,GAAgBxd,IApB5Bwd,GAsBV5D,WAAa,SAAC8D,GAEjB,IADA,IAAM5D,EAAsB,IAAI3a,MACvBpI,EAAI,EAAGA,EAAI2mB,EAAQ1mB,OAAQD,IAAK,CACrC,IAAMjC,EAAU4oB,EAAQ3mB,GACxB+iB,EAAS7jB,KAAKunB,GAAa9D,UAAU5kB,IAEzC,OAAOglB,GA5BM0D,GA8BVG,YAAc,SAACD,GAClB,OAAOA,EAAQE,MAAK,SAACC,EAAIC,GAAM,IAAD,IAC1B,OAAO,UAACD,EAAGJ,aAAJ,QAAW,IAAX,UAAiBK,EAAGL,aAApB,QAA2B,OAhCzBD,GAmCVO,gBAAkB,SAACL,GACtB,OAAOA,EAAQE,MAAK,SAACC,EAAIC,GAAM,IAAD,IAC1B,OAAO,UAACA,EAAGL,aAAJ,QAAW,IAAX,UAAiBI,EAAGJ,aAApB,QAA2B,OCrB9C,IAAM9J,GAAa,IAAI3f,KAEjBwC,G,sCACFoG,OAAiB,CACbqc,MAAOtF,GAAKwJ,WAAa,EACzBpE,KAAMpF,GAAK4F,cACXJ,QAASxF,GAAKwJ,WAAa,EAC3BrE,OAAQnF,GAAK4F,cACbzc,KAAM,EACND,MARsB,I,KAU1BmhB,SAAmB,M,KACnBC,sBAAgC,E,KAChCC,eAA0BzhB,GAExB0hB,G,kDAGF,WAAY1uB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAHjB+lB,0BAAuDT,GAA0B/P,cAE9D,EADnB/V,MAAQ,IAAIuH,GACO,EAGnBqiB,mBAAqB,SAACxmB,GAClB,IAAMsC,EAAOtC,EAAEoC,OAAOE,KAChBiI,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOjI,GAAQ6M,SAASnP,EAAEoC,OAAO3G,OACjC,EAAK4C,SAAS,CAAEkM,OAAQA,KAPT,EASnBA,OAAS,SAACvK,GACNA,EAAE8G,iBACF,IAAMyD,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOC,MA7Be,GA8BtB,EAAKnM,SAAS,CAAEkM,OAAQA,IACxB,EAAKwhB,aAdU,EAgBnBxV,OAAS,SAACvW,GACNA,EAAE8G,iBAIF,EAAKilB,aArBU,EAuBnBC,gBAAkB,SAAC/oB,GAA2B,IAAD,EACzCA,EAAS+P,SAAWmY,GAAaO,gBAAb,UAA6BzoB,EAAS+P,gBAAtC,QAAkD,IACtE,EAAK3U,SAAS,CAAEwtB,UAAW5oB,KAzBZ,EA2BnBgpB,mBAAqB,SAACjsB,GAClB7B,QAAQmD,MAAMtB,GACd,EAAK4B,uBA7BU,EA+BnBmqB,UAAY,WACR,EAAK9M,uBACD,EAAKkE,0BAA0BR,gBAC/B,EAAKqJ,gBACL,EAAKC,mBACL,EAAKrvB,MAAM2N,SApCA,EA2CnB2hB,mBAAqB,SAACxnB,GAClB,EAAKrG,SAAS,CAAEutB,qBAAsBlnB,KA5CvB,EA8CnBynB,kBAAoB,WAChB,EAAK9tB,SAAS,CAAEutB,sBAAuB,KA/CxB,EAiDnBQ,mBAAqB,WACjB,IAAMC,EAAY,EAAKzvB,MAAMivB,UAAY,EAAKjvB,MAAMivB,UAAU7Y,cAAW5I,EACzE,GAAKiiB,EAGL,IAAK,IAAI3nB,EAAI,EAAGA,EAAI2nB,EAAU1nB,OAAQD,IAAK,CACvC,IAAMjC,EAAU4pB,EAAU3nB,GAC1B,GAAI,EAAK9H,MAAMgvB,sBAAwBlnB,EAAG,OAAOjC,IAxDtC,EA4DnB8oB,KAAO,SAACvrB,GACJ,IAAM6rB,EAAY,EAAKjvB,MAAMivB,UAC7B,GAAKA,EAAL,CAGA,IAIIF,EAJEU,EAAYR,EAAYA,EAAU7Y,cAAW5I,EACnD,GAAKiiB,EAIsB,OAAvB,EAAKzvB,MAAM+uB,UACXE,EAAU7Y,SAAWmY,GAAaG,YAAYe,GAC9CV,EAAW,SAEXE,EAAU7Y,SAAWmY,GAAaO,gBAAgBW,GAClDV,EAAW,OAEf,EAAKttB,SAAS,CAAEwtB,UAAWA,EAAWF,SAAUA,EAAUC,sBAAuB,MA7ElE,E,gEAwCfrtB,KAAKqD,sBACLrD,KAAKwtB,c,+BAsCC,IAAD,gBACCF,EAAYttB,KAAK3B,MAAMivB,UAC7B,IAAKA,EACD,OAAO,yBAAKvuB,UAAU,mBAClB,6CACA,kBAAC,GAAD,OAGR,IAAMgvB,GAAkB,oBAAC/tB,KAAK3B,MAAM2N,cAAZ,aAAC,EAAmBC,aAApB,QAA6B,IAAK,oBAACjM,KAAK3B,MAAMivB,iBAAZ,aAAC,EAAsBlc,iBAAvB,QAAoC,GAAK,EAC7F4c,EAA0C,OAAvBhuB,KAAK3B,MAAM+uB,SAAoB,8BAAgC,wBACxF,OACI,yBAAKruB,UAAU,kBAAkBE,MAAO,CAAEgvB,cAAe,SACrD,6CACA,kBAAC,GAAD,CAAiBtb,SAAU3S,KAAKioB,mBAAoBG,iBAAkBkF,GAAaA,EAAUlF,iBAAmBkF,EAAUlF,iBAAmB,GACzIxf,SAAU5I,KAAKgM,OAAQA,OAAQhM,KAAK3B,MAAM2N,SAC9C,kBAAC,GAAD,CAAO5K,MAAM,WACT,yBAAKrC,UAAU,yBACX,kBAAC,GAAD,CAAcA,UAAU,4BAAxB,kBAAkE,0BAAMA,UAAU,qBAAhB,UAAqCuuB,EAAU7Y,gBAA/C,aAAqC,EAAoBrO,SAC3H,kBAAC,GAAD,CAAcrH,UAAU,4BAAxB,iBAAiE,0BAAMA,UAAU,qBAAqBuuB,EAAUlc,YAChH,kBAAC,GAAD,CAAcrS,UAAU,sBAAsB6N,cAAeohB,EAAkBptB,QAASZ,KAAKgtB,MAA7F,QACA,0BAAM/tB,MAAO,CAAEsb,UAAW,QAAUxb,UAAU,cAAc6J,SAAU5I,KAAKgY,QACvE,2BAAOjP,YAAY,gBAAgB1J,UAAQ,EAACN,UAAU,iBACtD,2BAAOgK,YAAY,eAAehF,KAAK,QAAQ4O,SAAU3S,KAAKioB,mBAAoB/qB,MAAO8C,KAAK3B,MAAM2N,OAAOC,MAAOnO,KAAK,SAAS+T,IAAK,EAAGC,IAAG,UAAE9R,KAAK3B,MAAMivB,iBAAb,aAAE,EAAsBlc,UAAWrS,UAAU,iBACvLgvB,EAAkB,4BAAQjwB,KAAK,SAASiB,UAAU,uBAAuB,uBAAGA,UAAU,oBAApE,WACb,QAIlB,kBAAC,GAAD,CACI6B,QAASZ,KAAK2tB,mBAAoBtB,UAAWrsB,KAAK4tB,kBAClDzqB,QAAO,UAAEmqB,EAAUvK,YAAZ,QAAoB,IAAI3f,KAAQ2mB,QAAS6C,GAAa5D,WAAb,iBAAwBsE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAW7Y,gBAAnC,QAA+C,MACnG,kBAAC,GAAD,CAAoByZ,aAAcluB,KAAK6tB,4B,GAjHxB7qB,GAuHzBmrB,GAAqB,SAACtvB,GACxB,IAAMqvB,EAAyCrvB,EAAMqvB,aACrD,OAAKA,GAAiBA,EAAa/P,QAK3B,yBAAKpf,UAAU,MAAME,MAAO,CAAEkrB,UAAW,UAC7C,yBAAKprB,UAAU,YACX,kBAAC,GAAD,CAAUwoB,UAAW5J,GAAQmK,gBAAgBoG,EAAa/P,QAAS7gB,MAEvE,yBAAKyB,UAAU,YACX,kBAAC,GAAD,CAAW0H,MAAM,QAAQynB,EAAa/P,QAAU+P,EAAa/P,QAAQpa,KAAO,IAC5E,kBAAC,GAAD,CAAW0C,MAAM,SAAS8J,GAAgB2d,EAAarB,QACvD,kBAAC,GAAD,CAAWpmB,MAAM,UACb,kBAAC,GAAD,CAAgBkG,WAAY,CAAC9I,OAAO,UAAW2D,GAAI,2BAA2B0mB,EAAa/P,QAAQhd,IAAnG,aAZA,yBAAKpC,UAAU,kBAAkBE,MAAO,CAAEkrB,UAAW,UACzD,yBAAKprB,UAAU,oBAAmB,uBAAGA,UAAU,yBAA/C,oCAgBGmJ,eAAWC,YACtB/J,EADsB+J,CAGxBolB,KC7JIxK,GAAa,IAAI3f,KAEjBwC,G,sCACFoG,OAAiB,CACbqc,MAAOtF,GAAKwJ,WAAa,EACzBpE,KAAMpF,GAAK4F,cACXJ,QAASxF,GAAKwJ,WAAa,EAC3BrE,OAAQnF,GAAK4F,cACbzc,KAAM,EACND,MARsB,I,KAU1BmhB,SAAmB,M,KACnBC,sBAAgC,E,KAChCC,eAA0BzhB,E,KAC1BiU,UAAmB,GAEjBsO,G,kDAGF,WAAYvvB,GAAQ,IAAD,8BACf,cAAMA,GAAO,IAHjB+lB,0BAAuDT,GAA0B/P,cAE9D,EADnB/V,MAAQ,IAAIuH,GACO,EAGnBqiB,mBAAqB,SAACxmB,GAClB,IAAMsC,EAAOtC,EAAEoC,OAAOE,KAChBiI,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOjI,GAAQ6M,SAASnP,EAAEoC,OAAO3G,OACjC,EAAK4C,SAAS,CAAEkM,OAAQA,KAPT,EASnBA,OAAS,SAACvK,GACNA,EAAE8G,iBACF,IAAMyD,EAAS,EAAK3N,MAAM2N,OAC1BA,EAAOC,MA9Be,GA+BtB,EAAKnM,SAAS,CAAEkM,OAAQA,IACxB,EAAKwhB,aAdU,EAgBnBC,gBAAkB,SAAC/oB,GACf,EAAK5E,SAAS,CAAEwtB,UAAW5oB,EAAUob,UAAU,KAjBhC,EAmBnB4N,mBAAqB,SAACjsB,GAClB7B,QAAQmD,MAAMtB,GACd,EAAK3B,SAAS,CAAEwtB,eAAUzhB,EAAWiU,UAAU,IAC/C,EAAKzc,uBAtBU,EAwBnBgrB,aAAe,WACX,OAAO,EAAKxvB,MAAM6c,MAAMlX,OAAOrD,IAzBhB,EA2BnBmtB,WAAa,WAA4B,IAAD,EACpC,GAAK,EAAKjwB,MAAMivB,WAAc,EAAKjvB,MAAMivB,UAAUvhB,OAAnD,CAGA,IAAMoS,EAAO,UAAG,EAAK9f,MAAMivB,iBAAd,aAAG,EAAsBvhB,OACtC,OAAO8V,OAAOC,OAAO,IAAInE,GAAWQ,KAhCrB,EAkCnBqP,UAAY,WACR,EAAK9M,uBACD,EAAKkE,0BAA0BP,sBAC/B,EAAKoJ,gBACL,EAAKC,mBACL,EAAKW,eACL,EAAKhwB,MAAM2N,SAxCA,EA+CnB2hB,mBAAqB,SAACxnB,GAClB,EAAKrG,SAAS,CAAEutB,qBAAsBlnB,KAhDvB,EAkDnBynB,kBAAoB,WAChB,EAAK9tB,SAAS,CAAEutB,sBAAuB,KAnDxB,EAqDnBQ,mBAAqB,WACjB,IAAMC,EAAY,EAAKzvB,MAAMivB,UAAY,EAAKjvB,MAAMivB,UAAU7Y,cAAW5I,EACzE,GAAKiiB,EAGL,IAAK,IAAI3nB,EAAI,EAAGA,EAAI2nB,EAAU1nB,OAAQD,IAAK,CACvC,IAAMjC,EAAU4pB,EAAU3nB,GAC1B,GAAI,EAAK9H,MAAMgvB,sBAAwBlnB,EAAG,OAAOjC,IA5DtC,E,gEA4CflE,KAAKqD,sBACLrD,KAAKwtB,c,+BAoBC,IAAD,IACL,GAAIxtB,KAAK3B,MAAMyhB,SACX,OAAO,kBAAC,GAAD,kBAEX,IAAMwN,EAAYttB,KAAK3B,MAAMivB,UACvBnP,EAA+Bne,KAAKsuB,aAC1C,OAAKhB,GAAcnP,EAOf,yBAAKpf,UAAU,kBAAkBE,MAAO,CAAEgvB,cAAe,SACrD,+CAAqB9P,EAAQpa,MAC7B,kBAAC,GAAD,CAAiB4O,SAAU3S,KAAKioB,mBAAoBG,iBAAkBkF,GAAaA,EAAUlF,iBAAmBkF,EAAUlF,iBAAmB,GACzIxf,SAAU5I,KAAKgM,OAAQA,OAAQhM,KAAK3B,MAAM2N,SAE9C,kBAAC,GAAD,CACIpL,QAASZ,KAAK2tB,mBAAoBtB,UAAWrsB,KAAK4tB,kBAClDzqB,QAAO,UAAEmqB,EAAUvK,YAAZ,QAAoB,IAAI3f,KAAQ2mB,QAAS6C,GAAa5D,WAAb,iBAAwBsE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAW7Y,gBAAnC,QAA+C,MACnG,kBAAC,GAAD,CAAoByZ,aAAcluB,KAAK6tB,wBAdpC,yBAAK9uB,UAAU,mBAClB,uDACA,kBAAC,GAAD,W,GA7EqBiE,GA+F/BmrB,GAAqB,SAACtvB,GACxB,IAAMqvB,EAAyCrvB,EAAMqvB,aACrD,OAAKA,EAKG,yBAAMjvB,MAAO,CAAEkrB,UAAW,UAC9B,kBAAC,GAAD,CAAW1jB,MAAM,UAAUynB,EAAa5F,UAAxC,IAAoD4F,EAAa/F,MACjE,kBAAC,GAAD,CAAW1hB,MAAM,SAAS8J,GAAgB2d,EAAarB,SAN/C,yBAAK9tB,UAAU,kBAAkBE,MAAO,CAAEkrB,UAAW,UACzD,yBAAKprB,UAAU,oBAAmB,uBAAGA,UAAU,yBAA/C,oCASGmJ,eAAWC,YACtB/J,EADsB+J,CAGxBimB,KC3IIG,G,kDAEF,WAAY1vB,GAAW,uCACbA,EAAO,YAAY,G,qDAEpB,IAAD,EACJ,OACI,yBAAKsC,GAAG,eAAepC,UAAU,mBAC7B,wCACA,yBAAKA,UAAU,oBAAf,YACa,0CAASiB,KAAK2H,uBAAd,aAAS,EAAsBM,mB,GAVjCmB,GAqBZlB,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,KAI1BD,CAGtBomB,KC9BiBC,G,4MACpBrlB,c,IACAlB,iB,IACAjD,c,IACAypB,kB,IACAC,iB,IACAhwB,e,IACAiwB,oB,cAPiCrR,ICGbsR,G,iDAUjBC,cAAgB,SAAC9pB,GAEb,IAAMoG,EAAqB,CACxBpG,KAAKA,GAGFmG,EAAW9N,IAAcC,OAAO,iCACtC,OAAO4N,GAAoBC,EAAUC,I,+DATrC,OAHqB,MAAjBnL,KAAKuM,WACLvM,KAAKuM,SAAW,IAAIqiB,GAEjB5uB,KAAKuM,a,KARCqiB,GAEFriB,c,ECLZ,IAAMuiB,GAAY,SAAC,GAAkE,IAAhEC,EAA+D,EAA/DA,KAAMhrB,EAAyD,EAAzDA,KAAMirB,EAAmD,EAAnDA,YAAa9xB,EAAsC,EAAtCA,MAAO+xB,EAA+B,EAA/BA,eAAmBpwB,EAAY,uEACvF,OAAgB,GAARkwB,EACJ,kBAAC,GAAD,CAAeE,eAAgBA,EAAgBlrB,KAAMA,EAAMirB,YAAaA,EAAa9xB,MAAOA,EAAOY,KAAMe,EAAMf,OAE/G,kBAAC,GAAD,CAAeiG,KAAMA,EAAMirB,YAAaA,EAAa9xB,MAAOA,EAAOY,KAAMe,EAAMf,QAGjFoxB,GAAgB,SAAC,GAAwD,IAAtDnrB,EAAqD,EAArDA,KAAMirB,EAA+C,EAA/CA,YAAa9xB,EAAkC,EAAlCA,MAAO+xB,EAA2B,EAA3BA,eAAgBnxB,EAAW,EAAXA,KAC/D,OAAQ,yBAAKiB,UAAU,OACnB,uBAAGA,UAAU,aAAY,2BAAOjB,KAAI,OAAEA,QAAF,IAAEA,IAAQ,OAAQiG,KAAMA,EAAM4O,SAAUsc,EAAgB/xB,MAAOA,EAAO6B,UAAU,kBACpH,yBAAKA,UAAU,YACX,kBAAC,GAAD,CAAc4N,WAAY,CACtB,YAAa5I,EAAM,eAAgB,SAEnCnD,QAASouB,EAAajwB,UAAU,4BAHpC,aAQNowB,GAAgB,SAAC,GAAwC,IAAtCprB,EAAqC,EAArCA,KAAMirB,EAA+B,EAA/BA,YAAa9xB,EAAkB,EAAlBA,MAAOY,EAAW,EAAXA,KAE/C,OAAQ,yBAAKiB,UAAU,OACnB,yBAAKA,UAAU,aACX,uBAAGE,MAAO,CAAEuB,gBAAyB,SAAR1C,EAAkBZ,EAAQ,SAAoB,SAARY,EAAkB,eAAiBZ,GAC7F,SAARY,EAAkB,2BAAIZ,GAAa,MAExC,yBAAK6B,UAAU,YACX,kBAAC,GAAD,CAAc4N,WAAY,CACtB,YAAa5I,EAAM,eAAgB,QACpCnD,QAASouB,EAAajwB,UAAU,wBAFnC,WCbN6G,G,iDACFb,UAAc8G,E,KACdujB,WAAwB,CACpBjmB,UAAU,EACVlB,aAAa,EACbjD,UAAU,EACVypB,cAAc,G,KAElBY,aAAe,WACX,OAAO,EAAKD,WAAWX,cAAgB,EAAKW,WAAWjmB,UAAY,EAAKimB,WAAWnnB,aAAe,EAAKmnB,WAAWpqB,WAGpHsqB,G,kDAIF,WAAYzwB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjB0wB,YAA2BX,GAAYxa,cAEf,EADxB/V,MAAgB,IAAIuH,GACI,EAQxB4pB,sBAAwB,SAAC/tB,GACrB,IAAMoC,EAAkCpC,EAAEoC,OAC1C,GAAI,MAAQA,EAAZ,CACA,IAAMkB,EAAyB,EAAK1G,MAAM0G,KACrCA,IAELA,EAAKlB,EAAOE,MAAQF,EAAO3G,MAC3B,EAAK4C,SAAS,CAAEiF,KAAMA,OAfF,EAiBxB0qB,kBAAoB,SAAChuB,GACjB,IAAMoC,EAAkCpC,EAAEoC,OAC1C,GAAI,MAAQA,EAAZ,CACA,IAAM3F,EAAG,eACTiE,EAAW0B,GAAQY,MAAK,SAASoO,GAC7B3U,EAAIwxB,gBAAgB7c,MACrBlO,MAAM/E,QAAQmD,SAvBG,EAyBxB2sB,gBAAkB,SAAC7c,GACf,IAAM9N,EAAsB,EAAK1G,MAAM0G,KAClCA,IACLA,EAAK0pB,aAAe5b,EACpB,EAAK/S,SAAS,CAACiF,KAAKA,MA7BA,EA+BxBiqB,YAAc,SAACvtB,GACX,IAAMoC,EAAmCpC,EAAEoC,OACrCkB,EAAyB,EAAK1G,MAAM0G,KACpC4qB,EAAqC,EAAKhoB,gBAChD,GAAI,MAAQ9D,GAAWkB,GAAS4qB,EAAhC,CAIA,IAAMC,EAA8B/rB,EAAOgsB,aAAa,aACxD,GAAI,MAAQD,EAAZ,CAGA,IAAME,EAA0D,QAAvCjsB,EAAOgsB,aAAa,gBACvCT,EAAa,EAAK/wB,MAAM+wB,WAC9BA,EAAWQ,GAAgBE,EACtBA,IACD/qB,EAAK6qB,GAAgBD,EAAiBC,IAE1C,EAAK9vB,SAAS,CAAEiF,KAAMA,EAAMqqB,WAAYA,OAjDpB,EAmDxBW,WAAa,SAACtuB,GAEV,GADAA,EAAE8G,iBAC+B,GAA7B,EAAKlK,MAAMgxB,eAAf,CAGA,IAAMnxB,EAAG,eACT,EAAK8H,iBAAiB,cACjBvB,MAAK,SAAUwB,GACRA,GAAM/H,EAAI8xB,oBA3DF,EA8DxBA,aAAe,WACX,IAAMjrB,EAAyB,EAAKkrB,oBAC/BlrB,GACL,EAAK8P,WACD,EAAK0a,YAAYV,cACjB,EAAKqB,aAAc,EAAK1sB,qBACxBuB,IApEgB,EAuExBkrB,kBAAoB,WAAyB,IAAD,EAClClrB,EAAyB,EAAK1G,MAAM0G,KACpCqqB,EAAwB,EAAK/wB,MAAM+wB,WACzC,GAAKrqB,EAAL,CACA,IAAMorB,EAAmB,IAAI3B,GAC7B,IAAK,IAAMnnB,KAAO+nB,EAAY,CACFA,EAAW/nB,IACb,gBAAPA,IACX8oB,EAAW9oB,GAAOtC,EAAKsC,IAM/B,OAHI+nB,EAAWX,eAAX,UAA2B1pB,EAAK0pB,oBAAhC,aAA2B,EAAmB1a,WAAW,iBACzDoc,EAAW1B,aAAe1pB,EAAK0pB,cAE5B0B,IArFa,EAuFxBD,aAAe,SAACxrB,GACZ,EAAKsS,SAAS,WACd,EAAKnY,MAAMuxB,cAAc1rB,EAASK,OAvFlC,EAAK1G,MAAM0G,KAAO8c,OAAOC,OAAO,IAAI0M,GAAQ,EAAK7mB,iBAF7B,E,gEAKpB3H,KAAKqD,sBACLrG,SAASoE,MAAQ,iB,+BAsFX,IAAD,EACC2D,EAAyB/E,KAAK3B,MAAM0G,KAC1C,IAAKA,EAAM,OAAO,KAClB,IAAMqqB,EAAwBpvB,KAAK3B,MAAM+wB,WACzC,OACI,yBAAKjuB,GAAG,cAAcpC,UAAU,mBAC5B,4CACA,kBAAC,GAAD,CAAMqC,MAAM,gBACR,0BAAMwH,SAAU5I,KAAK+vB,YACjB,yBAAKhxB,UAAU,8BAA8BE,MAAO,CAACgO,aAAa,SAC9D,yBAAKhO,MAAO,CAACgO,aAAa,QAAS/N,MAAM,MAAM8Q,OAAO,MAAMjR,UAAU,uCAAuCgR,KAAK,UAAAhL,EAAK0pB,oBAAL,eAAmB1a,WAAW,eAAchP,EAAK0pB,aAAanxB,EAAeyH,EAAK0pB,eACpM,kBAAC,GAAD,CAAWM,KAAMK,EAAWX,aAAcQ,eAAgBjvB,KAAKyvB,kBAAmBT,YAAahvB,KAAKgvB,eAExG,kBAAC,GAAD,CAAWvoB,MAAM,aACb,kBAAC,GAAD,CAAWsoB,KAAMK,EAAWjmB,SAAU8lB,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,WAAWirB,YAAahvB,KAAKgvB,YAAa9xB,MAAO6H,EAAKoE,YAEjJ,kBAAC,GAAD,CAAW1C,MAAM,QACb,kBAAC,GAAD,CAAWsoB,KAAMK,EAAWnnB,YAAagnB,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,cAAcirB,YAAahvB,KAAKgvB,YAAa9xB,MAAO6H,EAAKkD,eAEvJ,kBAAC,GAAD,CAAWxB,MAAM,YACb,kBAAC,GAAD,CAAWsoB,KAAMK,EAAWpqB,SAAUiqB,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,WAAWirB,YAAahvB,KAAKgvB,YAAa9xB,MAAO6H,EAAKC,YAEjJ,kBAAC,GAAD,KACIhF,KAAK3B,MAAMgxB,eAAgB,2BAAOvxB,KAAK,SAASiB,UAAU,kBAAkB7B,MAAM,SAAU,a,GAvH9F8F,GAgIpBqtB,GAAY,SAAC,GAA2C,IAAzCtB,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eACpC,OAAgB,GAARF,EAAe,oCACnB,6BACI,kBAAC,GAAD,CAAcpiB,WAAY,CACtB,YAAa,eAAgB,eAAgB,SAC9C/L,QAASouB,EAAajwB,UAAU,6BAFnC,WAIJ,2BAAO4T,SAAUsc,EAAgBlwB,UAAU,eAAe6T,OAAO,UAAU9U,KAAK,OAAOiG,KAAK,kBAG5F,6BACI,kBAAC,GAAD,CAAc4I,WAAY,CACtB,YAAa,eAAgB,eAAgB,QAC9C/L,QAASouB,EAAajwB,UAAU,wBAFnC,gBAWGmJ,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,CAChDgoB,cAAe,SAACrrB,GAAD,OAAgBqD,E1EmGN,SAACrD,GAO1B,MALc,CACVjH,KC3PuB,kBD4PvBC,QAAS,CAAEgH,KAAMA,GACjB/G,KAAM,CAAEF,KC7Pe,oByEqJasyB,CAAcrrB,QAGhCoD,CAGxBmnB,KCnLmBgB,G,4MACpBvsB,U,IACAwsB,a,IACAnT,sB,IACAoT,W,IACAnT,sB,IACA4C,a,IACAC,a,IACAuQ,a,IACAC,a,IACAC,c,IACA3T,mB,IACA4T,qB,IACA1gB,W,IACAiN,e,cAd+CG,ICc1C1X,G,iDACFtH,wBAA0CuN,E,KAC1CujB,WAAwB,CACpBrrB,MAAM,EACNsZ,kBAAkB,EAClBD,kBAAkB,EAClBJ,eAAe,EACfiD,SAAS,EACTuQ,OAAO,EACPtgB,OAAO,EACPiN,WAAW,G,KAEfkS,aAAe,WACX,IAAK,IAAMhoB,KAAO,EAAK+nB,WAAY,CAE/B,GAAe,GADC,EAAKA,WAAW/nB,GAE5B,OAAO,EAGf,OAAO,IAGTwpB,G,kDAIF,WAAYhyB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAHjBsV,kBAAuC7I,GAAkB8I,cAEjC,EADxB/V,MAAgB,IAAIuH,GACI,EAQxB4pB,sBAAwB,SAAC/tB,GACrB,IAAMoC,EAAkCpC,EAAEoC,OAC1C,GAAI,MAAQA,EAAZ,CACA,IAAMvF,EAAqD,EAAKD,MAAMC,mBACjEA,IAELA,EAAmBuF,EAAOE,MAAQF,EAAO3G,MACzC,EAAK4C,SAAS,CAAExB,mBAAoBA,OAfhB,EAiBxBmxB,kBAAoB,SAAChuB,GACjB,IAAMoC,EAAkCpC,EAAEoC,OAC1C,GAAI,MAAQA,EAAZ,CACA,IAAM3F,EAAG,eACTiE,EAAW0B,GAAQY,MAAK,SAAUoO,GAC9B3U,EAAIwxB,gBAAgB7c,MACrBlO,MAAM/E,QAAQmD,SAvBG,EAyBxB2sB,gBAAkB,SAAC7c,GACf,IAAMvU,EAAqD,EAAKD,MAAMC,mBACjEA,IACLA,EAAmB0e,cAAgBnK,EACnC,EAAK/S,SAAS,CAAExB,mBAAoBA,MA7BhB,EA+BxB0wB,YAAc,SAACvtB,GACX,IAAMoC,EAAmCpC,EAAEoC,OACrCitB,EAA6C,EAAKzyB,MAAMC,mBACxDyyB,EAAmD,EAAKrqB,wBAC9D,GAAI,MAAQ7C,GAAWitB,GAAeC,EAAtC,CAIA,IAAMnB,EAA8B/rB,EAAOgsB,aAAa,aACxD,GAAI,MAAQD,EAAZ,CAGA,IAAME,EAA0D,QAAvCjsB,EAAOgsB,aAAa,gBACvCT,EAAa,EAAK/wB,MAAM+wB,WAC9BA,EAAWQ,GAAgBE,EACtBA,IACDgB,EAAWlB,GAAgBmB,EAAiBnB,IAEhD,EAAK9vB,SAAS,CAAExB,mBAAoBwyB,EAAY1B,WAAYA,OAjDxC,EAmDxBW,WAAa,SAACtuB,GAEV,GADAA,EAAE8G,iBAC+B,GAA7B,EAAKlK,MAAMgxB,eAAf,CAGA,IAAMnxB,EAAG,eACT,EAAK8H,iBAAiB,cACjBvB,MAAK,SAAUwB,GACRA,GAAM/H,EAAI8xB,oBA3DF,EA8DxBA,aAAe,WACX,IAAM1xB,EAAqD,EAAK0yB,2BAC3D1yB,GACL,EAAKuW,WACD,EAAKV,kBAAkBzI,yBACvB,EAAKwkB,aAAc,EAAK1sB,qBACxBlF,IApEgB,EAuExB0yB,yBAA2B,WAAuC,IAAD,EACvD1yB,EAAqD,EAAKD,MAAMC,mBAChE8wB,EAAwB,EAAK/wB,MAAM+wB,WACzC,GAAK9wB,EAAL,CACA,IAAM2yB,EAAwC,IAAIX,GAClD,IAAK,IAAMjpB,KAAO+nB,EAAY,CACDA,EAAW/nB,IACd,iBAAPA,IACX4pB,EAAkB5pB,GAAO/I,EAAmB+I,IAMpD,OAHI+nB,EAAWpS,gBAAX,UAA4B1e,EAAmB0e,qBAA/C,aAA4B,EAAkCjJ,WAAW,iBACzEkd,EAAkBjU,cAAgB1e,EAAmB0e,eAElDiU,IArFa,EAuFxBf,aAAe,SAACxrB,GACZ,EAAKsS,SAAS,WACd,EAAKnY,MAAMqyB,sBAAsBxsB,EAASpG,qBAvF1C,EAAKD,MAAMC,mBAAqBujB,OAAOC,OAAO,IAAIwO,GAAsB,EAAK5pB,yBAFzD,E,gEAKpB1G,KAAKqD,sBACLrG,SAASoE,MAAQ,+B,+BAsFX,IAAD,EACC9C,EAAqD0B,KAAK3B,MAAMC,mBACtE,IAAKA,EAAoB,OAAO,KAChC,IAAM8wB,EAAwBpvB,KAAK3B,MAAM+wB,WACnC+B,EAAa,UAAG7yB,EAAmB0e,qBAAtB,QAAuC,GAC1D,OACI,yBAAK7b,GAAG,qBAAqBpC,UAAU,mBACnC,mDACA,kBAAC,GAAD,CAAMqC,MAAM,gBACR,0BAAMwH,SAAU5I,KAAK+vB,YACjB,yBAAKhxB,UAAU,8BAA8BE,MAAO,CAAEgO,aAAc,SAChE,yBAAKhO,MAAO,CAAEgO,aAAc,QAAW+C,OAAO,MAAMjR,UAAU,wBAAwBgR,IAAKohB,EAAMpd,WAAW,cAAgBod,EAAQ7zB,EAAe6zB,IACnJ,kBAAC,GAAD,CAAWpC,KAAMK,EAAWpS,cAAeiS,eAAgBjvB,KAAKyvB,kBAAmBT,YAAahvB,KAAKgvB,eAEzG,kBAAC,GAAD,CAAWvoB,MAAM,QACb,kBAAC,GAAD,CAAWsoB,KAAMK,EAAWrrB,KAAMkrB,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,OAAOirB,YAAahvB,KAAKgvB,YAAa9xB,MAAOoB,EAAmByF,QAEvJ,kBAAC,GAAD,CAAW0C,MAAM,qBACb,kBAAC,GAAD,CAAWsoB,KAAMK,EAAW/R,iBAAkB4R,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,mBAAmBirB,YAAahvB,KAAKgvB,YAAa9xB,MAAOoB,EAAmB+e,oBAE/K,kBAAC,GAAD,CAAW5W,MAAM,qBACb,kBAAC,GAAD,CAAWsoB,KAAMK,EAAWhS,iBAAkB6R,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,mBAAmBirB,YAAahvB,KAAKgvB,YAAa9xB,MAAOoB,EAAmB8e,oBAE/K,kBAAC,GAAD,CAAW3W,MAAM,WACb,kBAAC,GAAD,CAAWsoB,KAAMK,EAAWnP,QAASgP,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,UAAUirB,YAAahvB,KAAKgvB,YAAa9xB,MAAOoB,EAAmB2hB,WAE7J,kBAAC,GAAD,CAAWxZ,MAAM,SACb,kBAAC,GAAD,CAAWsoB,KAAMK,EAAWoB,MAAOvB,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,QAAQirB,YAAahvB,KAAKgvB,YAAa9xB,MAAOoB,EAAmBkyB,SAEzJ,kBAAC,GAAD,CAAW/pB,MAAM,oBACb,kBAAC,GAAD,CAAW3I,KAAK,QAAQixB,KAAMK,EAAWlf,MAAO+e,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,QAAQirB,YAAahvB,KAAKgvB,YAAa9xB,MAAOoB,EAAmB4R,SAEtK,kBAAC,GAAD,CAAWzJ,MAAM,cACb,kBAAC,GAAD,CAAW3I,KAAK,QAAQixB,KAAMK,EAAWjS,UAAW8R,eAAgBjvB,KAAKwvB,sBAAuBzrB,KAAK,YAAYirB,YAAahvB,KAAKgvB,YAAa9xB,MAAOoB,EAAmB6e,aAE9K,kBAAC,GAAD,KACKnd,KAAK3B,MAAMgxB,eAAiB,2BAAOvxB,KAAK,SAASiB,UAAU,kBAAkB7B,MAAM,SAAY,a,GApIvF8F,GA6I/BqtB,GAAY,SAAC,GAA2C,IAAzCtB,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,eAC9BlrB,EAAe,gBACrB,OAAgB,GAARgrB,EAAe,oCACnB,6BACI,kBAAC,GAAD,CAAcpiB,WAAY,CACtB,YAAa5I,EAAM,eAAgB,SACpCnD,QAASouB,EAAajwB,UAAU,6BAFnC,WAIJ,2BAAO4T,SAAUsc,EAAgBlwB,UAAU,eAAe6T,OAAO,UAAU9U,KAAK,OAAOiG,KAAMA,KAG7F,6BACI,kBAAC,GAAD,CAAc4I,WAAY,CACtB,YAAa5I,EAAM,eAAgB,QACpCnD,QAASouB,EAAajwB,UAAU,wBAFnC,gBAWGmJ,eAAWC,YACtB/J,GALuB,SAACgK,GAAD,MAAyB,CAChD8oB,sBAAuB,SAAC5yB,GAAD,OAA4C8J,E5EqFlC,SAAC9J,GAOlC,MALc,CACVR,KCpQ+B,0BDqQ/BC,QAAS,CAAEO,mBAAoBA,GAC/BN,KAAM,CAAEF,KCtQuB,4B2E4KyCozB,CAAsB5yB,QAG5E6J,CAGxB0oB,KC/KIO,G,kDAGF,WAAYvyB,GAAa,IAAD,8BACpB,cAAMA,GAAO,IAFjB6B,IAAsCa,IAAMC,YACpB,EAGxB4Z,gBAAgB,SAAC9V,GACb,EAAKzG,MAAMuc,gBAAgB9V,IAJP,E,qDAMd,IAAD,OACL,OACI,yBAAKrG,MAAO,CAAEob,WAAY,SACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOgX,KAAK,SAASC,OACjB,SAACzyB,GAAD,OACI,kBAAC,EAAD,CAAOX,IAAK,EAAKgF,eAGzB,kBAAC,IAAD,CAAOmuB,KAAK,QAAQC,OAChB,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAUX,IAAK,EAAKgF,eAG5B,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,aAAaC,OAC3B,SAACzyB,GAAD,OACI,kBAAC,EAAD,CAAgBX,IAAK,EAAKgF,eAElC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,uBAAuBC,OACrC,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAqBX,IAAK,EAAKgF,eAEvC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,0BAA0BC,OACxC,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAmBX,IAAK,EAAKgF,eAEpC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,8BAA8BC,OAC7C,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAyBX,IAAK,EAAKgF,eAG3C,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,cAAcC,OAC5B,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAgBuc,gBAAiB,EAAKA,gBAAiBld,IAAK,EAAKgF,eAEzE,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,oBAAoBC,OAClC,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAgBuc,gBAAiB,EAAKA,gBAAiBld,IAAK,EAAKgF,eAGzE,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,eAAeC,OAC7B,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAkBX,IAAK,EAAKgF,eAEpC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,0BAA0BC,OACxC,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAuBX,IAAK,EAAKgF,eAEzC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,uBAAuBC,OACrC,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAoBX,IAAK,EAAKgF,eAEtC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,sBAAsBC,OACpC,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAmBX,IAAK,EAAKgF,eAGrC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,YAAYC,OAC1B,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAcX,IAAK,EAAKgF,eAEhC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,yBAAyBC,OACvC,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAaX,IAAK,EAAKgF,eAE/B,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,wBAAwBC,OACtC,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAwBX,IAAK,EAAKgF,eAI1C,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,WAAWC,OACzB,SAACzyB,GACG,OAAO,kBAAC,GAAD,CAAcX,IAAK,EAAKgF,eAGvC,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,mBAAmBC,OACjC,SAACzyB,GACG,OAAO,kBAAC,GAAD,CAAiBX,IAAK,EAAKgF,eAG1C,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,yBAAyBC,OACvC,SAACzyB,GACG,OAAO,kBAAC,GAAD,CAAuBX,IAAK,EAAKgF,eAIhD,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,QAAQC,OACtB,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAWX,IAAK,EAAKgF,eAE7B,kBAAC,IAAD,CAAOquB,OAAK,EAACF,KAAK,iBAAiBC,OAC/B,SAACzyB,GAAD,OACI,kBAAC,GAAD,CAAWX,IAAK,EAAKgF,mB,kDAtGhBF,GAwHlBkF,eAAWC,YACtB/J,GAJuB,SAACgK,GAAD,MAAyB,KAG1BD,CAGxBipB,KCrJmBI,G,4MAGpBjsB,KAAc6K,K,EACdrM,U,IACA6Z,iB,IACApgB,S,IACAi0B,mB,IACAC,c,IACAhB,a,IACAxgB,W,IACAiN,e,IAGA1X,QAAkB,E,EAClBD,UAAoB,gB,EACpBvC,eAAyB,E,EACzByC,aAAwB,E,EACxBC,cAAmBkG,E,YAlBcyR,IAAbkU,GACbG,yBAAkC,gBADrBH,GAoBbI,iBAAmB,SAAC1qB,GAC1B,YAAI2E,GAAa3E,EAAK1B,UACdgsB,GAAKG,yBAENzqB,EAAK1B,W,WCjBRqsB,G,kDACF,WAAYhzB,GAA+C,IAAD,8BACtD,cAAMA,GAAO,IAEjBizB,gBAAkB,SAAC5qB,GACf,IAAM6qB,EAAmB,EAAKlzB,MAAMkzB,WACpC,GAAI,MAAQA,EAAc,OAAO,EACjC,IAAMC,EAAW,EAAKnzB,MAAMozB,SAASC,SACrC,OAAOH,EAAWv0B,IAAM,IAAM0J,EAAK1J,KAAOw0B,GAPY,E,gEAUtDG,OAAOC,iBAAiB,SAAUpyB,KAAKqyB,gB,6CAIvCF,OAAOG,oBAAoB,SAAUtyB,KAAKqyB,gB,mCAGjCzuB,GACT,IAAI2uB,EAAY3uB,EAAM4uB,WAAWvtB,KAAKstB,UAClBzhB,KAAKe,IAAI,EAAG0gB,EAAY,EAAI,M,+BAI1C,IAAD,OACCR,EAAmB/xB,KAAKnB,MAAMkzB,WACpC,GAAI,MAAQA,EAAc,OAAO,KACjC,IAAMzsB,EAA2C,MAA3BtF,KAAKnB,MAAMyc,aAAuB,GAAKtb,KAAKnB,MAAMyc,aAExE,OACI,wBAAIna,GAAG,UAAUpC,UAAU,wBACvB,kBAAC,GAAD,CAAO0N,KAAoB,MAAdslB,EAAoBU,MAAOV,IACvCzsB,EAAM2B,KAAI,SAAAC,GACP,IACMwrB,EADoB,EAAKZ,gBAAgB5qB,GACd,cAAgB,eACjD,OACI,wBAAKnI,UAAW,gBAAgB2zB,EAAerrB,IAAK,WAAaH,EAAK3B,MAAM,kBAAC,IAAD,CAAMiC,GAAIuqB,EAAWv0B,IAAM,IAAM0J,EAAK1J,KAC9G,0BAAMuB,UAAU,gBAAe,uBAAGA,UAAWyyB,GAAKI,iBAAiB1qB,MACnE,0BAAMnI,UAAW,cAAgBmI,EAAKnD,gB,GAtC5Cf,GAgDhB2vB,GAAQ,SAAC9zB,GACX,OAAkB,GAAdA,EAAM4N,KAAsB,KAE5B,wBAAItL,GAAG,gBAAgBpC,UAAU,gBAAgBE,MAAO,CAAEgO,aAAc,SAAU,yBAC9EhO,MAAO,CACH2zB,UAAW,SAAUvY,WAAY,OACjC4T,cAAe,SAEnB,wBAAIlvB,UAAU,aACV,uBAAGA,UAAWyyB,GAAKI,iBAAiB/yB,EAAM4zB,UAE9C,kBAAC,IAAD,CAAMjrB,GAAI3I,EAAM4zB,MAAMj1B,IAAKyB,MAAO,CAAC4zB,eAAe,SAAS,wBAAI9zB,UAAU,aAAaF,EAAM4zB,MAAM1uB,UAS/FmE,eAAWC,YACtB/J,GANuB,SAACgK,GAAD,MAAyB,CAChDnK,cAAe,SAACC,GAAD,OAAckK,EAASnK,EAAcC,QAI9BiK,CAGxB0pB,KC9DIiB,I,yDAQF,WAAYj0B,GAAa,IAAD,8BACpB,cAAMA,GAAO,IARjBR,MAAgB,CACZqH,aAAa,EACb0B,eAAgB,KAChBF,UAAM2E,EACNyP,aAAc,IAGM,EADxByX,gBAA0B,GACF,EAMxBtrB,YAAc,WACV7H,QAAQozB,KAAK,iBACb,EAAKlzB,SAAS,CAAEoH,UAAM2E,EAAWnG,aAAa,EAAO0B,eAAgB,KAAMkU,aAAc,QARrE,EAUxB/T,QAAU,SAACL,GACK,MAARA,IAGJtH,QAAQoE,MAAM,aAAckD,EAAK3B,MACjC,EAAKzF,SAAS,CAAEoH,KAAMA,EAAMoU,aAAc,KAAM5V,YAAawB,EAAKxB,YAAa0B,eAAgBF,EAAK3B,SAfhF,EAiBxB6V,gBAAkB,SAAC9V,GAEf,EAAKxF,SAAS,CAAEwb,aAAchW,KAnBV,EA2BxB2tB,eAAiB,WACb,IAAMjB,EzE9BiB,SAACA,GAC5B,IAAMkB,EAAUlB,EAAStnB,MAAM,KAC/B9K,QAAQoE,MAAM,aAAcguB,GAC5B,IAAImB,EAAYD,EAAQ,GAIxB,MAHwB,IAApBC,EAAU1f,SACV0f,EAAYD,EAAQ,IAEjBC,EyEuBcC,CAAgB,EAAKv0B,MAAMozB,SAASC,UAErD,GAAIF,GAAY,EAAKe,gBAArB,CAGA,EAAKA,gBAAkBf,EACvB,IAAM9qB,EzE3BmB,SAAC8qB,GAC9B,IACI,IAAK,IAAI7rB,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAAK,CACnC,IAAMe,EAAa5B,EAAMa,GACzB,GAAIe,EAAK1J,KAAO,IAAMw0B,EAClB,OAAO9qB,EAGf,OAAO,KACT,MAAOnE,GACL,OAAO,MyEiBMswB,CAAkBrB,GACnB,MAAR9qB,EACA,EAAKO,cAEL,EAAKF,QAAQL,KAtCG,EAyCxBosB,YAAc,WAAO,IAAD,EACiF,EAAjG,OAAI,EAAKj1B,MAAM6I,MAAoC,MAA5B,EAAK7I,MAAM6I,KAAKvB,WAAoB,YAAKtH,MAAM6I,KAAKvB,gBAAhB,eAA0BS,QAAS,EAC1F,UAAO,EAAK/H,MAAM6I,YAAlB,aAAO,EAAiBvB,SAExB,EAAKtH,MAAMid,aACJ,EAAKjd,MAAMid,aAEf,MA9CP,EAAKjd,MAAL,eACO,EAAKA,OAHQ,E,gEAsBpB2B,KAAKizB,mB,2CAGLjzB,KAAKizB,mB,+BA0BL,IAAMvtB,EAAwC,GAA1B1F,KAAK3B,MAAMqH,YAC/B,OACI,yBAAKvE,GAAG,eACJ,kBAAC,EAAD,CAAQsG,YAAazH,KAAKyH,YAAaL,eAAgBpH,KAAK3B,MAAM+I,eAAgBG,QAASvH,KAAKuH,QAASrJ,IAAK8B,KAAKkD,YACnH,yBAAK/B,GAAG,eAAepC,UAAU,kBAAkBE,MAAO,CAAEuH,OAAQ,EAAGD,QAAS,EAAG4jB,UAAW,SAG1F,yBAAKprB,UAAU,kBAAkBE,MAAO,CAACoB,OAAS,EAAIiG,SAAS,YAAanF,GAAIuE,EAAc,cAAgB,WAC1G,kBAAC,GAAD,CAAoB0V,gBAAiBpb,KAAKob,gBAAiBld,IAAK8B,KAAKnB,MAAMX,OAE/D,GAAfwH,EACO,kBAAC,GAAD,CAAS4V,aAActb,KAAKszB,cAAevB,WAAY/xB,KAAK3B,MAAM6I,KAAMhJ,IAAK8B,KAAKnB,MAAMX,MACzF,W,GAvEF8E,IAqFVkF,eAAWC,YACtB/J,GANuB,SAACgK,GAAD,MAAyB,CAChDnK,cAAe,SAACC,GAAD,OAAckK,EAASnK,EAAcC,QAI9BiK,CAGxB2qB,KCpFIS,G,kDAmBJ,WAAY10B,GAAa,IAAD,8BACtB,cAAMA,IAlBR20B,SAAmB,EAiBK,EAhBxBC,WAAqB,OAgBG,EAfxBC,UAAiB,KAeO,EAdxBC,gBAA0B,EAcF,EAbxBC,cAAwB,EAaA,EAZxBC,mBAA+B,SAAUpyB,KAYjB,EAXxBqyB,sBAAkC,SAAUryB,KAWpB,EAVxBsyB,UAAqCxyB,IAAMC,YAUnB,EARxBwyB,cAAgB,CACd5yB,MAAO,OACPsC,QAAS,OACT5C,SAAS,EACTmzB,KAAM,aACNjzB,KAAM,cAKN,EAAK3C,MAAL,2BACK,EAAKA,OADV,IAEEya,SAAS,EACTob,kBAAmB,EACnBx1B,eAAWmN,EACXsoB,eAAgB,IAAI/wB,KACpB8B,WAAW,EACXpG,UAAU,IATU,E,sDActBkB,KAAKF,SAAS,CAAEq0B,eAAgB,IAAI/wB,S,qCAIpCpD,KAAKnB,MAAMu1B,aAAap0B,Q,0CAIxBA,KAAKwzB,a,0CAILxzB,KAAKwzB,WACDxzB,KAAKwzB,SAAW,IAClBxzB,KAAKwzB,SAAW,K,mCAIP10B,GACXkB,KAAKq0B,oBACLr0B,KAAKF,SAAS,CAAEgZ,SAAS,EAAMha,SAAUA,M,mCAIzC,IACEkB,KAAKs0B,oBACgB,GAAjBt0B,KAAKwzB,UACPxzB,KAAKF,SAAS,CAAEgZ,SAAS,EAAOob,kBAAmB,IAErD,MAAMzyB,GACN7B,QAAQmD,MAAMtB,M,oCAKJgC,GAAmB,IAAD,EACxB8wB,EAAsB,UAAG9wB,EAAI+mB,kBAAP,QAAmB,EAC3CA,EAAa1Z,KAAK0jB,MAAMD,IACxBA,EAAkB,GAAKA,EAAkB,MAC3Cv0B,KAAKoE,aAEPpE,KAAKF,SAAS,CAAEo0B,kBAAmB1J,M,gCAG3BppB,EAAe6D,EAAWnE,EAAkB2zB,EAAuBC,GAC3E10B,KAAKyzB,WAAaryB,EAClBpB,KAAK0zB,UAAYzuB,EACjBjF,KAAK2zB,eAAiB7yB,EACtB,IAAM5C,EAAM8B,KACZA,KAAK6zB,mBAAqB,SAAUpyB,GAClCvD,EAAIy2B,eACJF,EAAYhzB,IAETX,IACHd,KAAK8zB,sBAAwB,SAAUryB,GACrCvD,EAAIy2B,eACc,MAAdD,GACFA,EAAWjzB,KAIjBzB,KAAKF,SAAS,CAAEoF,WAAW,M,qCAI3BlF,KAAK4zB,cAAe,EACpB5zB,KAAKF,SAAS,CAAEoF,WAAW,M,qCAEd9D,EAAe6D,EAAWnE,EAAkB2zB,EAAuBC,GAChF10B,KAAK4zB,cAAe,EACpB5zB,KAAKkF,UAAU9D,EAAO6D,EAAMnE,EAAS2zB,EAAaC,K,2CAK9C10B,KAAKnB,MAAMP,oBAgDnB,SAAuBqN,GACrB,GAAIA,EAAQglB,SAAU,CACpB,IAAIiE,EAAO53B,SAAS63B,cAAc,8BAChC73B,SAAS63B,cAAc,oBACpBD,KACHA,EAAO53B,SAAS83B,cAAc,SACzB3zB,GAAK,UACVyzB,EAAKG,aAAa,MAAO,iBACzB/3B,SAASg4B,KAAKC,YAAYL,IAE5BA,EAAKG,aAAa,OAAQv3B,EAAmB,QAAUmO,EAAQglB,WAzD7DuE,CAAcl1B,KAAKnB,MAAMP,sB,0CAK3B0B,KAAKo0B,eACLp0B,KAAKF,SAAS,CAAEo0B,kBAAmB,M,+BAG3B,IAAD,OACP,IAAKl0B,KAAKnB,MAAMH,UACd,OACE,yBAAKO,MAAO,CAACob,WAAW,QACtB,kBAAC,GAAD,OAIN,IAAM9c,EAAWC,IACjB,OACE,kBAAC,WAAD,KACE,kBAAC,GAAD,CAASsB,SAAUkB,KAAK3B,MAAMS,SAAUga,QAAS9Y,KAAK3B,MAAMya,QAASob,kBAAmBl0B,KAAK3B,MAAM61B,oBAClGl0B,KAAK3B,MAAM6G,UACV,kBAAC,EAAD,CAAO9D,MAAOpB,KAAKyzB,WACjB/xB,QAAS1B,KAAK4zB,aACdvyB,QAAS,SAACI,GAAD,OAAO,EAAK3B,SAAS,CAAEoF,WAAW,KAC3CpE,QAASd,KAAK2zB,eACd9yB,MAAOb,KAAK6zB,mBAAoB7yB,KAAMhB,KAAK8zB,uBAC3C9zB,KAAK0zB,WACP,KACF,kBAAC,GAAD,CAAYx1B,IAAK8B,OACjB,kBAAC,IAAD,CAAcxC,IAAKD,EAAW,eAAgB43B,OAAQ,CAAC,oBAAsBn1B,KAAKnB,MAAMH,WACtF02B,UAAW,SAAC3xB,GAAuB,EAAK4xB,cAAc5xB,IACtD/C,IAAK,SAAC40B,GAAa,EAAKvB,UAAYuB,U,GA7I5Bh1B,aAmJlB,SAAS8Z,GAAQvb,GACf,OAAqB,GAAjBA,EAAMia,QAEN,kBAAC,EAAD,CAAQha,SAAUD,EAAMC,SAAUK,SAAUN,EAAMq1B,kBAAmB9zB,KAAK,iBAAiBtC,KAAK,YAG7F,KAiBT,IAIeoK,eAAWC,YACxB/J,GALyB,SAACgK,GAAD,MAAyB,CAClDgsB,aAAc,SAACl2B,GAAD,OAAckK,EjF1CF,SAAClK,GAEzB,OADAA,EAAIC,eACG,CACHL,KC/IkB,SDgJlBC,QAAS,GACTC,KAAM,CACFE,IAAKA,EAAKJ,KClJI,SDmJdN,IAAKC,EAAWJ,OAAO,eiFmCIk4B,CAAqBr3B,QAGlCiK,CAGxBorB,K,SCvMWiC,GAAY,CACrB/gB,SAAU,GACV1I,OAAQ,GACRrN,UAAW,KACX+2B,SAAU,KACVC,UAAW,cAAe,IAAItyB,MAAOgH,UACrCxM,KAAM,IAIG+3B,GAAU,WAAgC,IAA/Bt3B,EAA8B,uDAAtBm3B,GAAWI,EAAW,uCAClD,OAAQA,EAAO93B,MAGX,IjFZyB,qBiFarB,OAAO,2BAAKO,GAAZ,IAAmB0N,OAAQ6pB,EAAO73B,UAMtC,IjFTqB,gBiFWrB,IjFVmB,ciFWf,OAAO,2BAAKM,GAAZ,IAAmBo3B,SAAUG,EAAO73B,QAAQ0W,WAChD,IjFXmB,ciFYf,OAAO,2BAAKpW,GAAZ,IAAmBT,KAAMg4B,EAAO73B,QAAQH,OAG5C,QACI,OAAOS,IC5BNm3B,GAAY,CACrBK,SAAU,KACVp3B,aAAa,EACbq3B,aAAa,EACbxwB,MAAOywB,EACPv3B,WAAY,KACZw3B,cAAc,EACdt3B,UAAW,KACXJ,mBAAoB,IAGXq3B,GAAU,WAAgC,IAA/Bt3B,EAA8B,uDAAtBm3B,GAAWI,EAAW,uCAE9C/yB,EAAS,GACb,OAAQ+yB,EAAO93B,MACX,IlFNkB,SkFyBd,OAlBA+E,EAAM,2BACCxE,GADD,IACQK,UAAWk3B,EAAO73B,QAAQW,UACpCJ,mBAAyD,MAArCs3B,EAAO73B,QAAQO,mBAA6B,GAAKs3B,EAAO73B,QAAQO,qBAGxFwL,GAAU,YAAajH,EAAOnE,WAC9BkB,QAAQoE,MAAM,+BAAgC4xB,EAAO73B,QAAQU,aAC3B,GAA9Bm3B,EAAO73B,QAAQU,aACfoE,EAAOrE,WAAao3B,EAAO73B,QAAQgH,KACnClC,EAAOpE,aAAc,IAErBoE,EAAOpE,aAAc,EACrBoE,EAAOrE,WAAa,MAGxBoB,QAAQoE,MAAM,iCAAkCnB,EAAOpE,aAGhDoE,EACX,IlFjCgB,WkF+CZ,OAJ0B,IAT1BA,EAAM,2BACCxE,GADD,IAEF23B,cAAc,EACdv3B,YAAam3B,EAAO73B,QAAQU,YAC5Bo3B,SAAUD,EAAO73B,QAAQ83B,SACzBC,YAA2C,GAA9BF,EAAO73B,QAAQU,YAC5BD,WAAYo3B,EAAO73B,QAAQS,cAGpBC,aACPqL,GAAU,WAAYjH,EAAOgzB,UAG1BhzB,EACX,IlF/CiB,YkFsDb,OANAA,EAAM,2BACCxE,GADD,IAEFI,aAAa,EACbD,WAAY,OAEhBsL,GAAU,WAAY,MACfjH,EACX,IlFtCqB,gBkF6CjB,OANAA,EAAM,2BACCxE,GADD,IAEFI,YAAam3B,EAAO73B,QAAQU,YAC5BD,WAAYo3B,EAAO73B,QAAQS,WAC3BE,UAAWk3B,EAAO73B,QAAQW,YAGlC,IlF7CuB,kBkFiDnB,OAHAmE,EAAM,2BACCxE,GADD,IACQG,WAAYo3B,EAAO73B,QAAQsN,OAG7C,IlFjDuB,kBkFqDnB,OAHAxI,EAAM,2BACCxE,GADD,IACQG,WAAYo3B,EAAO73B,QAAQgH,OAG7C,IlFrD+B,0BkFyD3B,OAHAlC,EAAM,2BACCxE,GADD,IACQC,mBAAoBs3B,EAAO73B,QAAQO,qBAGrD,QACI,OAAO,eAAKD,KCpFXm3B,GAAY,CACrBnU,iBAAkB,KAClB4U,aAAc,KACdC,gBAAiB,KACjBC,eAAgB,KAChBC,eAAgB,KAChBC,iBAAkB,KAClBC,oBAAqB,KACrBlO,iBAAkB,EAAC,IAAIhlB,MAAOulB,eAAe,IAAIvlB,MAAOulB,gBAG/CgN,GAAU,WAAgC,IAA/Bt3B,EAA8B,uDAAtBm3B,GAAWI,EAAW,uCAGpC,MAAVA,GAAoC,MAAlBA,EAAO73B,SAAsD,MAAnC63B,EAAO73B,QAAQqqB,mBAC3D/pB,EAAM+pB,iBAAmBwN,EAAO73B,QAAQqqB,kBAE5C,IAAIvlB,EAASxE,EACb,OAAQu3B,EAAO93B,MAGX,InFZsB,iBmFalB,OAAO,2BAAKO,GAAZ,IAAmB43B,aAAc,OAErC,InFlByB,emF4BrB,OATApzB,EAASxE,EAE2B,OAAhCu3B,EAAO73B,QAAQgO,OAAO2c,SACtB7lB,EAAOqzB,gBAAkBN,EAAO73B,QAAQgO,QAER,MAAhC6pB,EAAO73B,QAAQgO,OAAO2c,SACtB7lB,EAAOszB,eAAiBP,EAAO73B,QAAQgO,QAGpClJ,EAEX,InF7B2B,sBmF8BvB,OAAO,2BAAKxE,GAAZ,IAAmB+3B,eAAgBR,EAAO73B,UAC9C,InF9ByB,oBmF+BrB,IAAIw4B,EAA0BX,EAAO73B,QACrC,GAAuB,GAAnB63B,EAAOY,SAAkB,CACzBD,EAA0Bl4B,EAAMg4B,iBAEhC,IADA,IAAII,EAAoBb,EAAO73B,QAAQ0W,SAC9BtO,EAAI,EAAGA,EAAIswB,EAAkBrwB,OAAQD,IAC1CowB,EAAwB9hB,SAASpP,KAAKoxB,EAAkBtwB,IAMhE,OAHAvG,QAAQC,IAAI,wCAAyC02B,EAAwB9hB,SAASrO,QACtFvD,EAAM,2BAAQxE,GAAR,IAAeg4B,iBAAkBE,IACvCX,EAAOc,SAASrb,UACTxY,EACX,InFzCgC,2BmF0C5B,OAAO,2BAAKxE,GAAZ,IAAmBi4B,oBAAqBV,EAAO73B,UACnD,QACI,OAAO,eAAKM,KClDXs4B,GAAcC,aACvB,CACIj4B,UAAWk4B,GACXt4B,UAAWu4B,GACXC,iBAAkBC,KAIbC,GAAe,CACxBt4B,UAAWk4B,GACXt4B,UAAWu4B,GACXC,iBAAkBC,ICfhBjsB,GAAQC,EAAQ,IACTksB,GAAyB,SAAAC,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACnD,IAAKA,EAAO53B,MrFEQ,aqFFA43B,EAAO53B,KAAKF,KAC5B,OAAO4pB,EAAKkO,GAEhB,IAAM13B,EAAM03B,EAAO53B,KAAKE,IACxB6M,GAAMK,KAAKwqB,EAAO53B,KAAKR,IAAK,GAAI,CAC5BoM,QAAS,CAAE,eAAgB,uCAC5BnF,MAAK,SAAAC,GACJ,IAAM0yB,EAAe1yB,EAAS2G,KAC1BwqB,EAAmB,GACnBwB,GAAwB,EAEH,MAArBD,EAAa7xB,MAAqC,MAArB6xB,EAAa7xB,OAC1CswB,EAAWnxB,EAASkF,QAAQ,gBAC5BhK,QAAQC,IAAI,cAAeg2B,GAC3BwB,GAAe,GAEnB,IAAIC,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CACtC73B,QAAS,CACLU,YAAa44B,EACbxB,SAAUA,EACVr3B,WAAY44B,EAAaryB,eAG1BuyB,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,MAEd3yB,MAAM/E,QAAQC,KACdgF,SAAQ,WAAQ3G,EAAIkG,mBAIhBmzB,GAAyB,SAAAJ,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACnD,IAAKA,EAAO53B,MrFvBU,WqFuBF43B,EAAO53B,KAAKF,KAA6B,OAAO4pB,EAAKkO,GACzE7qB,GAAMK,KAAKwqB,EAAO53B,KAAKR,IAAMo4B,EAAO73B,QAAU,CAC1C6L,QAAS4tB,MACV/yB,MAAK,SAAAC,GACJ,IAAM2G,EAAO3G,EAAS2G,KACtB,GAAiB,MAAbA,EAAK9F,KAAT,CAIAiyB,GAAyB9yB,GACzB9E,QAAQoE,MAAM,mBAAoBU,EAASkF,QAAQ,iBACnD,IAAI0tB,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAAQ,aAAGU,YAAa4M,EAAKosB,UAAapsB,YAC/EisB,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,QAPX1yB,MAAM,8BASTD,MAAM/E,QAAQC,KAAKgF,SAAQ,SAAA6yB,GAAK,OAAI9B,EAAO53B,KAAKE,IAAIkG,mBAGhDuzB,GAA0B,SAAAR,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACpD,IAAKA,EAAO53B,MrF9Be,oBqF8BP43B,EAAO53B,KAAKF,KAAkC,OAAO4pB,EAAKkO,GAE9E,IAAIhsB,EAAU4tB,IAEdzsB,GAAMK,KAAKwqB,EAAO53B,KAAKR,IAAMo4B,EAAO73B,QAAU,CAC1C6L,QAASA,IACVnF,MAAK,SAAAC,GACJ,IAAM2G,EAAO3G,EAAS2G,KAEtB,GAAKA,EAAL,CAKA,IAAIisB,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAAS,CAAEsN,iBAChDisB,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,QANX1yB,MAAM,+BAQTD,MAAM/E,QAAQC,KAAKgF,SAAQ,SAAA6yB,GACxB9B,EAAO53B,KAAKE,IAAIkG,aAChBwxB,EAAO53B,KAAKE,IAAImd,gBAKfuc,GAA0B,SAAAT,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACpD,IAAKA,EAAO53B,MrF1ES,cqF0ED43B,EAAO53B,KAAKF,KAC5B,OAAO4pB,EAAKkO,GAEhB,IAAM13B,EAAM03B,EAAO53B,KAAKE,IAExB6M,GAAMK,KAAKwqB,EAAO53B,KAAKR,IAAMo4B,EAAO73B,QAAU,CAC1C6L,QAAS4tB,MAER/yB,MAAK,SAAAC,GACF,IACImzB,GAAgB,EACK,MAFJnzB,EAAS2G,KAEb9F,KACbsyB,GAAgB,EAEhBjzB,MAAM,iBAGV,IAAI0yB,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CACtC73B,QAAS,CACLU,aAAco5B,YAGfP,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,MAElB3yB,MAAM/E,QAAQC,KAAKgF,SAAQ,SAAA6yB,GAAK,OAAIx5B,EAAIkG,mBAGpC0zB,GAA0B,SAAAX,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACpD,IAAKA,EAAO53B,MrFpFe,oBqFoFP43B,EAAO53B,KAAKF,KAAkC,OAAO4pB,EAAKkO,GAC9E,IAAI0B,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAAS63B,EAAO73B,iBACrDu5B,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,MC5GNS,GAAwB,SAAAZ,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GAClD,IAAKA,EAAO53B,MtFSW,gBsFTH43B,EAAO53B,KAAKF,KAA8B,OAAO4pB,EAAKkO,GAC1EoC,MAAMpC,EAAO53B,KAAKR,IAAK,CACnB6G,OALY,OAKSY,KAAMgzB,KAAKC,UAAUtC,EAAO73B,SACjD6L,QAAS4tB,MACV/yB,MAAK,SAAAC,GAAQ,OAAIA,EAASyzB,UACxB1zB,MAAK,SAAA4G,GACFzL,QAAQoE,MAAM,sCAAuCqH,GACrD,IAAIisB,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAASsN,WAC9CisB,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,MAElB3yB,OAAM,SAAAyzB,GAAG,OAAIx4B,QAAQC,IAAIu4B,MAAMvzB,SAAQ,SAAA6yB,GAAK,OAAI9B,EAAO53B,KAAKE,IAAIkG,mBAG5Di0B,GAAoC,SAAAlB,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GAC9D,IAAKA,EAAO53B,MtFPa,kBsFOL43B,EAAO53B,KAAKF,KAAgC,OAAO4pB,EAAKkO,GAC5E,IAAI0B,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAAS63B,EAAO73B,iBACrDu5B,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,MClBNgB,GAAyB,SAAAnB,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACnD,IAAKA,EAAO53B,MvFHiB,uBuFGT43B,EAAO53B,KAAKF,KAAqC,OAAO4pB,EAAKkO,GACjF,IAAI0B,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAAS,cAC9Cu5B,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,MAGNiB,GAAuB,SAAApB,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACjD,IAAKA,EAAO53B,MvFEW,gBuFFH43B,EAAO53B,KAAKF,KAA8B,OAAO4pB,EAAKkO,GAC1E,IAAI0B,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAAS63B,EAAO73B,iBACrDu5B,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,GAEf,IADA,IAAMz5B,EAAa+3B,EAAO73B,QAAQF,KACzBsI,EAAI,EAAGA,EAAItI,EAAKuI,OAAQD,IAAK,CAClC,IAAMjI,EAAML,EAAKsI,GACbjI,EAAImd,SACJnd,EAAImd,cCsBVmd,GAAkC,SAAArB,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACrD,IAAKA,EAAO53B,MxFjCwB,6BwFiChB43B,EAAO53B,KAAKF,KAA2C,OAAO4pB,EAAKkO,GACvFoC,MAAMpC,EAAO53B,KAAKR,IAAK,CACnB6G,OAvCY,OAuCSY,KAAMgzB,KAAKC,UAAUtC,EAAO73B,SACjD6L,QAASN,MAEZ7E,MAAK,SAAAC,GAAQ,OAAIA,EAASyzB,UAC1B1zB,MAAK,SAAA4G,GAEF,GADAzL,QAAQoE,MAAM,4CAA6CqH,GAC1C,MAAbA,EAAK9F,KAAT,CAKA,IAAI+xB,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAASsN,WAC9CisB,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,QANX1yB,MAAM,mBAQbD,OAAM,SAAAyzB,GAAG,OAAIx4B,QAAQC,IAAIu4B,MAAMvzB,SAAQ,SAAA6yB,GAAK,OAAI9B,EAAO53B,KAAKE,IAAIkG,mBAG/Dq0B,GAA4B,SAAAtB,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GAC/C,IAAKA,EAAO53B,MxFxDiB,sBwFwDT43B,EAAO53B,KAAKF,KAAoC,OAAO4pB,EAAKkO,GAChFoC,MAAMpC,EAAO53B,KAAKR,IAAK,CACnB6G,OA5DY,OA4DSY,KAAMgzB,KAAKC,UAAUtC,EAAO73B,SACjD6L,QAASN,MACV7E,MAAK,SAAAC,GAAQ,OAAIA,EAASyzB,UACxB1zB,MAAK,SAAA4G,GAEF,GADAzL,QAAQoE,MAAM,sCAAuCqH,EAAM,aAAcuqB,EAAO53B,KAAKw4B,UACpE,MAAbnrB,EAAK9F,KAAT,CAKA,IAAI+xB,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAASsN,EAAMmrB,SAAUZ,EAAO53B,KAAKw4B,SAAUE,SAAUd,EAAO53B,KAAK04B,kBAC1GY,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,QANX1yB,MAAM,mBAQbD,OAAM,SAAAyzB,GAAG,OAAIx4B,QAAQC,IAAIu4B,MAAMvzB,SAAQ,SAAA6yB,GAAK,OAAI9B,EAAO53B,KAAK04B,SAAS73B,MAAMX,IAAIkG,mBAGlFs0B,GAA8B,SAAAvB,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GACjD,IAAKA,EAAO53B,MxF7EmB,wBwF6EX43B,EAAO53B,KAAKF,KAAsC,OAAO4pB,EAAKkO,GAClFoC,MAAMpC,EAAO53B,KAAKR,IAAK,CACnB6G,OAhFY,OAgFSY,KAAMgzB,KAAKC,UAAUtC,EAAO73B,SACjD6L,QAASN,MACV7E,MAAK,SAAAC,GAAQ,OAAIA,EAASyzB,UACxB1zB,MAAK,SAAA4G,GAEF,GADAzL,QAAQoE,MAAM,wCAAyCqH,GACtC,MAAbA,EAAK9F,KAAT,CAKA,IAAI+xB,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAASsN,WAC9CisB,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,QANX1yB,MAAM,mBAQbD,OAAM,SAAAyzB,GAAG,OAAIx4B,QAAQC,IAAIu4B,MAAMvzB,SAAQ,SAAA6yB,GAAK,OAAI9B,EAAO53B,KAAKE,IAAIkG,mBAGnEu0B,GAA4B,SAAAxB,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GAC/C,IAAKA,EAAO53B,MxFlGiB,iBwFkGT43B,EAAO53B,KAAKF,KAAoC,OAAO4pB,EAAKkO,GAChFoC,MAAMpC,EAAO53B,KAAKR,IAAK,CACnB6G,OApGY,OAoGSY,KAAMgzB,KAAKC,UAAUtC,EAAO73B,SACjD6L,QAASN,MAEZ7E,MAAK,SAAAC,GAAQ,OAAIA,EAASyzB,UAC1B1zB,MAAK,SAAA4G,GAEF,GADAzL,QAAQoE,MAAM,sCAAuCqH,GACpC,MAAbA,EAAK9F,KAKT,GAAmB,MAAf8F,EAAKU,OAAT,CAK0B,MAAtBV,EAAKU,OAAO0c,SACZpd,EAAKU,OAAO0c,OAAS,EACrBpd,EAAKU,OAAOkS,MAAQ,EACpBre,QAAQC,IAAI,QAASwL,IAEzB,IAAIisB,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAASsN,WAC9CisB,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,QAXX1yB,MAAM,sBAAwBgxB,EAAO73B,QAAQiO,OAAO0c,OAAS,OAASkN,EAAO73B,QAAQiO,OAAOqc,MAAQ,IAAMuN,EAAO73B,QAAQiO,OAAOmc,KAAO,2BALvIvjB,MAAM,mBAkBbD,OAAM,SAAAyzB,GAAG,OAAIx4B,QAAQC,IAAIu4B,MAAMvzB,SAAQ,SAAA6yB,GAAK,OAAI9B,EAAO53B,KAAKE,IAAIkG,mBAG/Dw0B,GAA0B,SAAAzB,GAAK,OAAI,SAAAzP,GAAI,OAAI,SAAAkO,GAC7C,IAAKA,EAAO53B,MxF9Hc,mBwF8HN43B,EAAO53B,KAAKF,KAAiC,OAAO4pB,EAAKkO,GAC7E,IAAI0B,EAAYzV,OAAOC,OAAO,GAAI8T,EAAQ,CAAE73B,QAAS,cAC9Cu5B,EAAUt5B,KACjBm5B,EAAM/uB,SAASkvB,MAGJuB,GArIe,WA6B1B,OA5BcC,aACVnC,GACAM,GACA8B,aACIC,GACAA,GAGAC,GACAA,GACAA,GACAA,GACAA,GAGAN,GACAD,GACAD,GACAG,GACAJ,GAGAU,GACAA,MCbGC,GAfF,SAACt6B,GAEV,IAAMs4B,EAAQ0B,KAEd,OACI,kBAAC,IAAD,CAAU1B,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,GAAD,SCDIiC,QACW,cAA7BjH,OAAOF,SAASoH,UAEe,UAA7BlH,OAAOF,SAASoH,UAEhBlH,OAAOF,SAASoH,SAAS3d,MACvB,2DCZN4d,IAAShI,OAAO,kBAAC,GAAD,MAAUt0B,SAASC,eAAe,SD6H5C,kBAAmBs8B,WACrBA,UAAUC,cAAcC,MAAMh1B,MAAK,SAAAi1B,GACjCA,EAAaC,iB","file":"static/js/main.72139f5f.chunk.js","sourcesContent":["\r\nconst devMode = \r\n    document.getElementById(\"rootPath\").value == \"${contextPath}\" || \r\n    document.getElementById(\"rootPath\").value == \"\";\r\nconst rootValue = devMode ?\r\n     \"/universal-good-shop/\" : document.getElementById(\"rootPath\").value+\"/\";\r\n\r\nexport const contextPath = function(){\r\n    const contextPath = devMode? \"http://localhost:8080\".concat(rootValue):rootValue;\r\n    //console.debug(\"contextPath: \",contextPath,document.getElementById(\"rootPath\").value);\r\n    return contextPath;\r\n}\r\n \r\n// export const baseImageUrl = contextPath()+\"assets/images/\"; \r\nexport const baseImageUrl = \"https://developmentmode.000webhostapp.com/uploaded_storage/\"; \r\n// export const baseImageUrl = contextPath()+\"WebAsset/Shop1/Images/\"; \r\n\r\nexport const POST = \"post\";\r\n","import * as types from './types'\r\nimport * as url from '../constant/Url'\r\nimport { contextPath } from '../constant/Url';\r\nimport Product from './../models/Product';\r\nimport User from './../models/User';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nconst usedHost = url.contextPath();\r\nconst apiBaseUrl = usedHost + \"api/public/\"\r\nconst apiEntityBaseUrl = usedHost + \"api/app/entity/\"\r\nconst apiAccount = usedHost + \"api/app/account/\"\r\nconst apiAdmin = usedHost + \"api/app/admin/\"\r\nconst apiTransaction = usedHost + \"api/app/transaction/\";\r\n\r\nexport const updateCart = (cart: Product[], ...apps) => {\r\n    // console.debug(\"UPDATE CART: \", cart);\r\n    return { type: types.UPDATE_CART, payload: { cart: cart, apps: apps }, meta: { type: types.UPDATE_CART } };\r\n}\r\n\r\nexport const resetProducts = () => {\r\n    return { type: types.RESET_PRODUCTS, payload: {}, meta: { type: types.RESET_PRODUCTS } };\r\n}\r\n\r\nexport const removeManagedEntity = () => {\r\n    return {\r\n        type: types.REMOVE_MANAGED_ENTITY,\r\n        payload: {},\r\n        meta: { type: types.REMOVE_MANAGED_ENTITY }\r\n    };\r\n}\r\n\r\nexport const updateEntity = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.UPDATE_ENTITY,\r\n        payload: {\r\n            \"entity\": request.entityName\r\n        },\r\n        meta: {\r\n            type: types.UPDATE_ENTITY,\r\n            url: request.isNewRecord ? apiEntityBaseUrl.concat(\"add\") : apiEntityBaseUrl.concat(\"update\"),\r\n            app: referer.props.app,\r\n            callback: callback,\r\n            referer: referer\r\n        }\r\n    };\r\n    requested.payload[request.entityName] = request.entity;\r\n    return requested;\r\n}\r\n\r\nexport const getEntitiesWithCallback = (request, referer, callback) => {\r\n    referer.props.app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_WITH_CALLBACK,\r\n        payload: {\r\n            \"entity\": request.entityName,\r\n            \"filter\": {\r\n                \"limit\": 10,\r\n                'fieldsFilter': {}\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_WITH_CALLBACK,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: referer.props.app,\r\n            referer: referer,\r\n            callback: callback\r\n        }\r\n    };\r\n    requested.payload.filter.fieldsFilter[request.fieldName] = request.fieldValue;\r\n    return requested;\r\n}\r\n\r\nexport const getEntityById = (name, id, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_BY_ID,\r\n        payload: {\r\n            \"entity\": name,\r\n            \"filter\": {\r\n                \"limit\": 1,\r\n                \"page\": 0,\r\n                \"exacts\": true,\r\n                \"contains\": false,\r\n                \"fieldsFilter\": { \"id\": id }\r\n            }\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_BY_ID,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const getEntityList = (request, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY,\r\n        payload: {\r\n            entity: request.entityName,\r\n            filter: {\r\n                limit: request.limit,\r\n                page: request.page,\r\n                fieldsFilter: request.fieldsFilter,\r\n                orderBy: request.orderBy,\r\n                orderType: request.orderType,\r\n            },\r\n\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY,\r\n            url: apiEntityBaseUrl.concat(\"get\"),\r\n            app: app,\r\n            entityConfig: request.entityConfig\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getEntityProperty = (entityName, app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_ENTITY_PROPERTY,\r\n        payload: {\r\n            entity: entityName\r\n        },\r\n        meta: {\r\n            type: types.GET_ENTITY_PROPERTY,\r\n            url: apiEntityBaseUrl.concat(\"config\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\n\r\nexport const getManagementMenus = (app) => {\r\n    app.startLoading();\r\n    let requested = {\r\n        type: types.GET_MANAGEMENT_MENUS,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MANAGEMENT_MENUS,\r\n            url: apiEntityBaseUrl.concat(\"managementpages\"),\r\n            app: app,\r\n        }\r\n    };\r\n    return requested;\r\n}\r\n\r\nexport const requestAppId = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.REQUEST_ID,\r\n        payload: {},\r\n        meta: {\r\n            app: app, type: types.REQUEST_ID,\r\n            url: apiBaseUrl.concat(\"requestid\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const getMessageList = (app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_MESSAGE,\r\n        payload: {},\r\n        meta: {\r\n            type: types.GET_MESSAGE, app: app,\r\n            url: apiAdmin.concat(\"getmessages\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const storeMessageLocally = (messages) => {\r\n\r\n    return {\r\n        type: types.STORE_MESSAGE,\r\n        payload: {\r\n            entities: messages\r\n        },\r\n        meta: {\r\n            type: types.STORE_MESSAGE,\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSalesDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES_DETAIL,\r\n        payload: {\r\n            filter:\r\n                { page: request.page, limit: 10, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            app: app,\r\n            type: types.GET_PRODUCT_SALES_DETAIL,\r\n            loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsalesdetail/\" + request.productId)\r\n        }\r\n    };\r\n}\r\n\r\nexport const getProductSales = (request) => {\r\n    request.referrer.props.app.startLoading(true);\r\n    return {\r\n        type: types.GET_PRODUCT_SALES,\r\n        payload: {\r\n            product: { name: request.productName },\r\n            filter:\r\n                { page: request.page, limit: request.limit, month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear }\r\n        },\r\n        meta: {\r\n            referrer: request.referrer, type: types.GET_PRODUCT_SALES, loadMore: request.loadMore == true, url: apiTransaction.concat(\"productsales\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowDetail = (request, app) => {\r\n    app.startLoading(true);\r\n    return {\r\n        type: types.GET_CASHFLOW_DETAIL,\r\n        payload: { filter: { month: request.fromMonth, year: request.fromYear, monthTo: request.toMonth, yearTo: request.toYear } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_DETAIL, url: apiTransaction.concat(\"cashflowdetail\")\r\n        }\r\n    };\r\n}\r\nexport const getCashflowInfo = (month, year, type, app) => {\r\n    app.startLoading();\r\n    return {\r\n        type: types.GET_CASHFLOW_INFO,\r\n        payload: { filter: { year: year, month: month, module: type } },\r\n        meta: {\r\n            app: app, type: types.GET_CASHFLOW_INFO, url: apiTransaction.concat(\"cashflowinfo\")\r\n        }\r\n    };\r\n}\r\n\r\nexport const performLogout = (app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGOUT,\r\n        payload: {},\r\n        meta: { app: app, type: types.DO_LOGOUT, url: apiAccount.concat(\"logout\") }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const performLogin = (username, password, app) => {\r\n    app.startLoading();\r\n    let loginRequest = {\r\n        type: types.DO_LOGIN,\r\n        payload: {},\r\n        meta: {\r\n            type: types.DO_LOGIN, url: contextPath().concat(\"login?username=\" + username + \"&password=\" +\r\n                password + \"&transport_type=rest\"), app: app\r\n        }\r\n    };\r\n    return loginRequest;\r\n}\r\n\r\nexport const getLoggedUser = (app) => {\r\n    app.startLoading();\r\n    let request = {\r\n        type: types.GET_LOGGED_USER,\r\n        payload: {},\r\n        meta: { type: types.GET_LOGGED_USER, url: apiAccount.concat(\"user\"), app: app }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setLoggedUser = (user: User) => {\r\n\r\n    let request = {\r\n        type: types.SET_LOGGED_USER,\r\n        payload: { user: user },\r\n        meta: { type: types.SET_LOGGED_USER }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const setApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n\r\n    let request = {\r\n        type: types.SET_APPLICATION_PROFILE,\r\n        payload: { applicationProfile: applicationProfile },\r\n        meta: { type: types.SET_APPLICATION_PROFILE }\r\n    };\r\n    return request;\r\n}\r\n\r\nexport const removeEntity = () => ({\r\n    type: types.REMOVE_SHOP_ENTITY,\r\n    payload: {},\r\n    meta: { type: types.REMOVE_SHOP_ENTITY }\r\n})\r\n\r\n\r\n","/**\r\n * \r\n */\r\n \r\nexport const REMOVE_SHOP_ENTITY= \"remove_shop_entity\"; \r\nexport const FETCH_PRODUCT_CATEGORIES_ALL = \"all_product_categories\";\r\nexport const DO_LOGIN = \"do_login\";\r\nexport const DO_LOGOUT = \"do_logout\";  \r\nexport const GET_CASHFLOW_INFO = \"get_cashflow\";\r\nexport const GET_CASHFLOW_DETAIL = \"get_cashflow_detail\";\r\nexport const GET_PRODUCT_SALES = \"get_product_sales\"; \r\nexport const RESET_PRODUCTS = \"reset_products\"; \r\nexport const GET_PRODUCT_SALES_DETAIL = \"get_product_Sales_detail\";\r\nexport const REQUEST_ID = \"req_ID\"; \r\nexport const STORE_MESSAGE = \"store_message\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const UPDATE_CART = \"update_cart\";\r\nexport const GET_ENTITY = \"get_entity\";\r\nexport const GET_ENTITY_PROPERTY = \"get_entity_config\";\r\nexport const GET_MANAGEMENT_MENUS = \"GET_MANAGEMENT_MENUS\";\r\nexport const GET_ENTITY_BY_ID = \"get_entity_by_id\";\r\nexport const UPDATE_ENTITY = \"update_entity\";\r\nexport const GET_ENTITY_WITH_CALLBACK = \"GET_ENTITY_WITH_CALLBACK\";\r\nexport const REMOVE_MANAGED_ENTITY = \"rm_mng_entity\";\r\nexport const REFRESH_LOGIN = \"refresh_login\";\r\nexport const GET_LOGGED_USER = \"get_logged_user\";\r\nexport const SET_LOGGED_USER = \"set_logged_user\";\r\nexport const SET_APPLICATION_PROFILE = \"SET_APPLICATION_PROFILE\";","\r\nexport const mapCommonUserStateToProps = (state) => {\r\n    return {\r\n        applicationProfile: state.userState.applicationProfile,\r\n        loggedUser: state.userState.loggedUser,\r\n        loginStatus: state.userState.loginStatus,\r\n        requestId: state.userState.requestId,\r\n        cart: state.shopState.cart\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport './Loader.css'\r\n\r\nclass Loader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            timer: 130,\r\n            intervalId: 0\r\n        }\r\n        this.update = () => {\r\n            if (this.state.timer < 0) {\r\n                clearInterval(this.state.intervalId);\r\n            }\r\n            console.log(\"tick\")\r\n            this.setState({ timer: this.state.timer - 1 })\r\n            if (this.state.timer < 0 && this.props.endMessage) {\r\n                this.props.endMessage();\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.withTimer == true) {\r\n            let intervalId = setInterval(this.update, 1, null);\r\n            this.setState({ intervalId: intervalId });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let className = \"message message-\" + this.props.type;\r\n        let messageText = this.props.text;\r\n\r\n        let msgStyle = {};\r\n        if (this.props.realtime == true) {  \r\n            className = \"message-loading progress\";\r\n            messageText = <span className=\"loader\">{this.props.progress + \"%\"}</span>   \r\n            msgStyle.zIndex = 100;\r\n        }\r\n\r\n        return (\r\n            <div style={msgStyle} className={className} >\r\n                <LoaderContent progress={this.props.progress} realtime={this.props.realtime} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction LoaderContent(props){\r\n    if(props.realtime){\r\n        return (\r\n            <div className=\"progress-bar progress-bar-striped\" role=\"progressbar\" style={{ \r\n                width: props.progress + \"%\",\r\n                transitionDuration: '300ms'\r\n                }}>\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <button className=\"btn btn-dark \" type=\"button\" disabled>\r\n            <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span className=\" \">Loading...</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react'\r\n\r\nclass Alert extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.yesButtonRef = React.createRef();\r\n        this.noButtonRef = React.createRef();\r\n\r\n        this.onYes = (e) => {\r\n             \r\n            if (this.props.onYes) {\r\n                this.props.onYes(e);\r\n            }\r\n        }\r\n        this.onNo = (e) => {\r\n            \r\n            if (this.props.onNo) {\r\n                this.props.onNo(e);\r\n            }\r\n        }\r\n        this.onClose = (e) => {\r\n            if (this.props.onClose) {\r\n                this.props.onClose(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        const isError = this.props.isError == true;\r\n        if (!isError && this.yesButtonRef.current) {\r\n            this.yesButtonRef.current.focus();\r\n        } else if (isError && this.noButtonRef.current) {\r\n            this.noButtonRef.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title = this.props.title ? this.props.title : \"Info\";\r\n        const yesOnly = this.props.yesOnly == true;\r\n        const isError = this.props.isError == true;\r\n        const headerClassName = isError ? 'bg-danger':'bg-info';\r\n        const headerFontClassName = 'text-light';\r\n        return (\r\n            <>\r\n                <Backdrop />\r\n                <div className=\"modal fade show\" style={{ display: 'block' }} id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <Header fontClassName={headerFontClassName} className={headerClassName} title={title} onClose={this.onClose} />\r\n                            <div className=\"modal-body\"> {this.props.children}</div>\r\n                            <Footer noButtonRef={this.noButtonRef} yesButtonRef={this.yesButtonRef} yesOnly={yesOnly} onYes={this.onYes} onNo={this.onNo} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props) {\r\n    return (\r\n        <div className=\"modal-backdrop\" style={{backgroundColor: 'rgba(100,100,100,0.7)'}} ></div>\r\n    );\r\n}\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className={\"modal-footer \"+props.className}>\r\n            <button ref={props.yesButtonRef} type=\"button\"\r\n                onClick={props.onYes} className=\"btn btn-outline-primary\">Yes</button>\r\n            {props.yesOnly ? null : <button ref={props.noButtonRef} type=\"button\"\r\n                onClick={props.onNo} className=\"btn btn-outline-secondary\">No</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props) {\r\n    return (<div className={\"modal-header \"+props.className}>\r\n        <h5 className={\"modal-title \"+props.fontClassName }id=\"exampleModalCenterTitle\">{props.title}</h5>\r\n        <button onClick={props.onClose} type=\"button\" className=\"close\">\r\n            <span aria-hidden=\"true\" className={props.fontClassName}><i className=\"fas fa-times\"/></span>\r\n        </button>\r\n    </div>)\r\n}\r\n\r\nexport default Alert;","export const byId = (id) => { return document.getElementById(id) }\r\n\r\n\r\n/**\r\n * \r\n * @param  {...string} ignoredIds \r\n */\r\nexport const clearFields = (...ignoredIds) => {\r\n    let inputs = document.getElementsByTagName(\"input\");\r\n\r\n    let withIgnore = ignoredIds != null;\r\n    loop: for (let i = 0; i < inputs.length; i++) {\r\n        if (withIgnore){\r\n            for (let y = 0; y < ignoredIds.length; y++) {\r\n                if (inputs[i].id == ignoredIds[y]) continue loop;\r\n            }\r\n        }\r\n        \r\n        if (inputs[i].type == \"text\") { inputs[i].value = \"\"; }\r\n        else if (inputs[i].type == \"number\") { inputs[i].value = 0; }\r\n        else { inputs[i].value = null; }\r\n    }\r\n}\r\n\r\nexport function toBase64(file, referer, callback) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file.files[0]);\r\n    reader.onload = () => callback(reader.result, referer);\r\n    reader.onerror = error => {\r\n        alert(\"Error Loading File\");\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function toBase64v2(fileInput) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(fileInput.files[0]);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport function toBase64FromFile(file) {\r\n    return new Promise(function (resolve, reject) {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = function () { resolve(reader.result); }\r\n            reader.onerror = function (error) {\r\n                reject(error);\r\n            }\r\n        } catch (e) {\r\n            reject(e);\r\n        }\r\n    });\r\n\r\n}\r\n\r\n\r\nexport const checkExistance = function (...ids) {\r\n    for (let i = 0; i < ids.length; i++) {\r\n        if (byId(ids[i]) == null) {\r\n            console.log(\"component with id:\", ids[i], \"does not exist\");\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Number} totalButton \r\n * @param {Number} currentPage \r\n */\r\nexport const createNavButtons = (totalButton, currentPage) => {\r\n    totalButton = Math.ceil(totalButton);\r\n    if (!currentPage) { currentPage = 0 }\r\n    let buttonData = new Array();\r\n    let min = currentPage - 3 < 0 ? 0 : currentPage - 3;\r\n    let max = currentPage + 3 > totalButton ? totalButton : currentPage + 3;\r\n\r\n    if (min != 0) {\r\n        buttonData.push({\r\n            text: 1,\r\n            value: 0\r\n        });\r\n    }\r\n\r\n    for (let index = min; index < max; index++) {\r\n        buttonData.push({\r\n            text: index + 1,\r\n            value: index\r\n        });\r\n    }\r\n\r\n    if (max != totalButton) {\r\n        buttonData.push({\r\n            text: totalButton,\r\n            value: totalButton - 1\r\n        });\r\n    }\r\n\r\n\r\n    return buttonData;\r\n}\r\n\r\n\r\nexport const getDropdownOptionsMonth = () => {\r\n    let options = [];\r\n    for (let i = 1; i <= 12; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}\r\nexport const getDropdownOptionsYear = (from, to) => {\r\n    let options = [];\r\n    for (let i = from; i <= to; i++) {\r\n        options.push({ value: i, text: i });\r\n    }\r\n    return options;\r\n}","import { Component } from 'react';\r\nimport { byId } from '../utils/ComponentUtil';\r\nimport WebResponse from './../models/WebResponse';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\nimport User from './../models/User';\r\n\r\nexport default class BaseComponent extends Component<any, any> {\r\n    parentApp: any;\r\n    authenticated: boolean = true;\r\n    state: any = { updated: new Date() };\r\n    constructor(props: any, authenticated = false) {\r\n        super(props);\r\n        this.parentApp = props.app;\r\n        this.authenticated = authenticated\r\n        this.state = {\r\n            ...this.state\r\n        }\r\n\r\n    }\r\n    validateLoginStatus = () => {\r\n        if (this.authenticated == false) return;\r\n        if (this.isLoggedUserNull()) {\r\n            this.backToLogin();\r\n        }\r\n    }\r\n\r\n    getApplicationProfile():ApplicationProfile\r\n    {\r\n        return this.props.applicationProfile == null ? {} : this.props.applicationProfile;\r\n    }\r\n\r\n    handleInputChange(event: any) {\r\n        const target = event.target;\r\n        const value = target.type == 'checkbox' ? target.checked : target.value;\r\n        this.setState({ [target.name]: value });\r\n        console.debug(\"input changed: \", target.name, value);\r\n    }\r\n\r\n    focusToActiveField() {\r\n        if (this.state.activeId != null && byId(this.state.activeId) != null) {\r\n            const element = byId(this.state.activeId);\r\n            if (element != null) {\r\n                element.focus();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param {boolean} withProgress \r\n     */\r\n    startLoading(withProgress: boolean) {\r\n        this.parentApp.startLoading(withProgress);\r\n    }\r\n\r\n    endLoading() {\r\n        this.parentApp.endLoading();\r\n    }\r\n    /**\r\n     * api response must be instance of WebResponse\r\n     * @param method \r\n     * @param withProgress \r\n     * @param successCallback \r\n     * @param errorCallback \r\n     * @param params \r\n     */\r\n    doAjax(method: Function, withProgress: boolean, successCallback: Function, errorCallback?: Function, ...params: any ) {\r\n        this.startLoading(withProgress);\r\n\r\n        method(...params).then(function (response:WebResponse) {\r\n            if (successCallback) {\r\n                successCallback(response);\r\n            }\r\n        }).catch(function (e) {\r\n            if (errorCallback) {\r\n                errorCallback(e);\r\n            } else {\r\n                if (typeof (e) == 'string') {\r\n                    alert(\"Operation Failed: \" + e);\r\n                }\r\n                alert(\"resource not found\");\r\n            }\r\n        }).finally((e:any) => {\r\n            this.endLoading();\r\n        })\r\n    }\r\n\r\n    commonAjax(method: Function, successCallback: Function, errorCallback: Function, ...params:any) {\r\n        this.doAjax(method, false, successCallback, errorCallback, ...params);\r\n    }\r\n    commonAjaxWithProgress(method: Function, successCallback: Function, errorCallback: Function, ...params:any) {\r\n        this.doAjax(method, true, successCallback, errorCallback, ...params);\r\n    }\r\n    getLoggedUser():User|undefined {\r\n        const user:User|undefined = this.props.loggedUser;\r\n        if (!user) return undefined;\r\n        user.password = \"^_^\";\r\n        return user;\r\n    }\r\n    isLoggedUserNull(): boolean {\r\n        return false == this.props.loginStatus || null == this.props.loggedUser;\r\n    }\r\n    isUserLoggedIn(): boolean {\r\n        return true == this.props.loginStatus && null != this.props.loggedUser;\r\n    }\r\n    showConfirmation(body:any): Promise<boolean> {\r\n        const app = this;\r\n        return new Promise(function(resolve, reject){\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlert(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n  \r\n    }\r\n    showConfirmationDanger(body: any): Promise<any> {\r\n        const app = this;\r\n        return new Promise(function(resolve, reject){\r\n            const onYes = function (e) {\r\n                resolve(true);\r\n            }\r\n            const onNo = function (e) {\r\n                resolve(false);\r\n            }\r\n            app.parentApp.showAlertError(\"Confirmation\", body, false, onYes, onNo);\r\n        });\r\n\r\n    }\r\n    showInfo(body: any) {\r\n        this.parentApp.showAlert(\"Info\", body, true, function () { });\r\n    }\r\n    showError(body: any) {\r\n        this.parentApp.showAlertError(\"Error\", body, true, function () { });\r\n    }\r\n\r\n    backToLogin() {\r\n        if (!this.authenticated || this.props.history == null) {\r\n            return;\r\n        }\r\n        this.props.history.push(\"/login\");\r\n    }\r\n    refresh() {\r\n        this.setState({ updated: new Date() });\r\n    }\r\n\r\n    showCommonErrorAlert = (e:any) => {\r\n        console.error(e);\r\n        const msg = e.message??e;\r\n        this.showError(\"Operation Failed: \"+msg);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.authenticated == true && this.isLoggedUserNull()) {\r\n            console.debug(typeof this , \"BACK TO LOGIN\");\r\n            this.validateLoginStatus();\r\n        }\r\n    }\r\n}","\r\nimport Menu from './../models/Menu';\r\n\r\nexport const HOME = \"home\";\r\nexport const CATALOG = \"catalog\";\r\nexport const ABOUT = \"about\";\r\nexport const ACCOUNT = \"account\";\r\nexport const LOGIN = \"login\";\r\nexport const LOGOUT = \"logout\";\r\nexport const DASHBOARD = \"dashboard\";\r\nexport const TRANSACTION_SELLING = \"selling\";\r\nexport const MENU_TRANSACTION = \"purchasing\";\r\nexport const MENU_SETTING = \"settings\";\r\nexport const SUPPLIERLIST = \"supplierlist\";\r\nexport const MENU_MASTER_DATA = \"management\";\r\nexport const CHATROOM = \"chatroom\";\r\nexport const CART = \"cart\";\r\n\r\nexport const getMenus = () => {\r\n    let menuSet: Menu[] = [];\r\n    for (let i = 0; i < menus.length; i++) {\r\n        const element: Menu = menus[i];\r\n        menuSet.push(element);\r\n    }\r\n    return menuSet;\r\n}\r\nexport const extractMenuPath = (pathName: string) => {\r\n    const pathRaw = pathName.split('/');\r\n    console.debug(\"pathName: \", pathName);\r\n    let firstPath = pathRaw[0];\r\n    if (firstPath.trim() == \"\") {\r\n        firstPath = pathRaw[1];\r\n    }\r\n    return firstPath;\r\n}\r\nexport const getMenuByMenuPath = (pathName: string): Menu | null => {\r\n    try {\r\n        for (let i = 0; i < menus.length; i++) {\r\n            const menu: Menu = menus[i];\r\n            if (menu.url == \"/\" + pathName) {\r\n                return menu;\r\n            }\r\n        }\r\n        return null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const menus: Menu[] = [\r\n    {\r\n        code: HOME,\r\n        name: \"Home\",\r\n        url: \"/home\",\r\n        menuClass: \"fa fa-home\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: false\r\n    },\r\n    {\r\n        code: CATALOG,\r\n        name: \"Catalog\",\r\n        url: \"/catalog\",\r\n        menuClass: \"fa fa-th-large\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: true,\r\n        subMenus: [{\r\n            code: 'catalog_product',\r\n            name: 'Product',\r\n            url: 'product',\r\n            menuClass: 'fas fa-cubes'\r\n        },\r\n        {\r\n            code: 'catalog_supplier',\r\n            name: 'Supplier',\r\n            url: 'supplier',\r\n        }]\r\n    },\r\n    {\r\n        code: CART,\r\n        name: \"Shopping Cart\",\r\n        url: \"/cart\",\r\n        menuClass: \"fa fa-shopping-cart\",\r\n        active: false,\r\n        authenticated: false,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'cart_list',\r\n                name: 'Shopping Cart List',\r\n                menuClass: 'fas fa-shopping-bag',\r\n                url: 'cartlist',\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        code: DASHBOARD,\r\n        name: \"Dashboard\",\r\n        url: \"/dashboard\",\r\n        menuClass: \"fas fa-tachometer-alt\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'dashboard_stat',\r\n                name: 'Statistic',\r\n                url: 'statistic',\r\n                menuClass: 'fas fa-chart-bar'\r\n\r\n            },\r\n            {\r\n                code: 'dashboard_productsales',\r\n                name: 'Product Sales',\r\n                url: 'productsales',\r\n                menuClass: 'fas fa-chart-line'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: MENU_TRANSACTION,\r\n        name: \"Transaction\",\r\n        url: \"/transaction\",\r\n        menuClass: \"fas fa-suitcase\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'trx_selling',\r\n                name: 'Selling',\r\n                menuClass: 'fas fa-cash-register',\r\n                url: 'selling',\r\n            },\r\n            {\r\n                code: 'trx_purchasing',\r\n                name: 'Purchasing',\r\n                menuClass: 'fas fa-shopping-basket',\r\n                url: 'purchasing',\r\n            },\r\n            {\r\n                code: 'trx_detail',\r\n                name: 'Transaction Detail',\r\n                menuClass: 'fas fa-clipboard-list',\r\n                url: 'detail',\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        code: MENU_MASTER_DATA,\r\n        name: \"Master Data\",\r\n        url: \"/management\",\r\n        menuClass: \"fa fa-database\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true\r\n    },\r\n    {\r\n        code: MENU_SETTING,\r\n        name: \"Setting\",\r\n        url: \"/settings\",\r\n        menuClass: \"fas fa-cogs\",\r\n        active: false,\r\n        authenticated: true,\r\n        showSidebar: true,\r\n        subMenus: [\r\n            {\r\n                code: 'user_profile',\r\n                name: 'Profile',\r\n                menuClass: 'fas fa-user-cog',\r\n                url: 'user-profile',\r\n            },\r\n            {\r\n                code: 'app_profile',\r\n                name: 'Application Setting',\r\n                menuClass: 'fas fa-cog',\r\n                url: 'app-profile',\r\n            },\r\n            \r\n        ]\r\n    },\r\n];\r\n","\r\nimport React, { useRef, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport { getMenus } from '../../constant/Menus';\r\nimport './Header.css';\r\nclass IState {\r\n    showNavLinks: boolean = false;\r\n}\r\nclass Header extends BaseComponent {\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    toggleNavLinks = () => {\r\n        this.setState({ showNavLinks: !this.state.showNavLinks });\r\n    }\r\n    onLogout = (e: any) => {\r\n        const app = this;\r\n        app.showConfirmation(\"Logout?\").then(\r\n            function (ok) {\r\n                if (ok) {\r\n                    app.props.performLogout(app.parentApp);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    render() {\r\n        const showNavLinks: boolean = this.state.showNavLinks;\r\n        const menus = getMenus();\r\n        return (\r\n            <div className=\"bg-dark container-fluid\" style={{ position: 'fixed', zIndex: 55, padding: 0, margin: 0 }}>\r\n                <NavBarTop label={this.getApplicationProfile().name} />\r\n                <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-dark bg-dark\" style={{ width: '100%' }}>\r\n                    {/* <div className=\"container-fluid\"></div> */}\r\n                    <a id=\"navbar-brand\" className=\"navbar-brand\" href=\"#\">{this.getApplicationProfile().name}</a>\r\n                    <button onClick={this.toggleNavLinks} className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarToggler\" aria-controls=\"navbarToggler\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <i className={showNavLinks ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </button>\r\n                    <div className={\"collapse navbar-collapse\"} id=\"navbarToggler\">\r\n                        <ul id=\"navbar-top\" className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                            {menus.map(menu => {\r\n                                if (menu == null || menu.authenticated && this.isLoggedUserNull()) return null;\r\n                                const isActive = this.props.activeMenuCode == menu.code;\r\n                                return (\r\n                                    <li key={\"header-menu-\" + new String(menu.code)} className={\"nav-item \" + (isActive ? \"active nav-active\" : \"nav-inactive\")}>\r\n                                        <Link onClick={() => this.props.setMenu(menu)} className={\"nav-link  \"}\r\n                                            to={menu.url}><span>{menu.name}</span>\r\n                                        </Link></li>\r\n                                )\r\n                            })}\r\n                        </ul >\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                            <UserIcon setMenuNull={this.props.setMenuNull} authenticated={this.isUserLoggedIn()}\r\n                                onLogout={this.onLogout} user={this.getLoggedUser()} />\r\n                        </form >\r\n                    </div >\r\n                </nav >\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst NavBarTop = (props) => {\r\n    return (\r\n        <div id=\"navbar-brand-top\" style={{ paddingLeft: '0.5rem' }} className=\"container-fluid\">\r\n            <a style={{ fontSize: '15px' }} className=\"text-white navbar-brand\" href=\"#\">\r\n                <strong>{props.label}</strong>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\nconst UserIcon = (props: any) => {\r\n    if (props.authenticated) {\r\n        return (\r\n            <Fragment>\r\n                <Link onClick={props.setMenuNull} style={{ marginRight: \"5px\" }} className=\"btn btn-light btn-sm my-2 my-sm-0\"\r\n                    to='/settings/user-profile'><i className=\"fas fa-user-circle\"></i>&nbsp;{props.user.displayName}\r\n                </Link>\r\n                <a style={{marginRight:'5px'}} className=\"btn btn-danger btn-sm  my-2 my-sm-0\"\r\n                    onClick={props.onLogout}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;Logout\r\n\t\t\t\t</a>\r\n            </Fragment>);\r\n    }\r\n    return (\r\n\r\n        <Link style={{marginRight:'5px'}} onClick={props.setMenuNull} className=\"btn btn-sm btn-info my-2 my-sm-0\"\r\n            to='/login'> <i className=\"fas fa-sign-in-alt\"></i>&nbsp;Login\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Header))","\r\n\r\nimport React, { RefObject, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport './Login.css';\r\nimport { performLogin } from '../../../redux/actionCreators';\r\nclass Login extends BaseComponent{\r\n    formRef: RefObject<HTMLFormElement> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    login(e: FormEvent) {\r\n        e.preventDefault();\r\n        const form: EventTarget = e.target;\r\n        if (null == this.formRef.current) {\r\n            return;\r\n        }\r\n        const formData: FormData = new FormData(this.formRef.current);\r\n        console.debug(\"formData: \", formData);\r\n        this.props.performLogin(formData.get('username'), formData.get('password'), this.parentApp);\r\n    }\r\n    componentDidMount(){\r\n        document.title = \"Login\";\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n    \r\n        console.debug(\"Login update\");\r\n        console.debug(\"logged in : \", this.props.loginStatus);\r\n        console.debug(\"logged user : \", this.getLoggedUser());\r\n        if (this.isUserLoggedIn()) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"Login\">\r\n                <form ref={this.formRef} name='login' onSubmit={(e) => { this.login(e) }}\r\n                    method='POST' className=\"form-signin\">\r\n                    <div className=\"text-center\">\r\n                        <h2><i className=\"fas fa-user-circle\"></i></h2>\r\n                        <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                    </div>\r\n                    <UsernameField />\r\n                    <PasswordField />\r\n                    <button className=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n                    <input name=\"transport_type\" type=\"hidden\" value=\"rest\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst PasswordField = (props) => {\r\n    return <Fragment>\r\n        <label className=\"sr-only\">Password</label>\r\n        <input name=\"password\" type=\"password\" id=\"inputPassword\" className=\"form-control\"\r\n            placeholder=\"Password\" required />\r\n    </Fragment>\r\n}\r\nconst UsernameField = (props) => {\r\n    return (<Fragment>\r\n        <label className=\"sr-only\">Username</label>\r\n        <input name=\"username\" type=\"text\" id=\"username\" className=\"form-control\"\r\n            placeholder=\"Username\" required autoFocus />\r\n    </Fragment>)\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogin: (username: string, password: string, app: any) => dispatch(performLogin(username, password, app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(Login))","\r\nimport BaseComponent from './../BaseComponent';\r\nimport Menu from './../../models/Menu';\r\nexport default class BaseMainMenus extends BaseComponent {\r\n\r\n    title:string = \"\";\r\n    constructor(props, title:string, authenticated:boolean = false) {\r\n        super(props, authenticated);\r\n        this.title = title;\r\n    }\r\n\r\n    componentDidMount(){\r\n        if (this.authenticated) {\r\n            this.validateLoginStatus();\r\n        }\r\n        document.title = this.title;\r\n        \r\n    }\r\n\r\n}","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass DashboardMain extends BaseMainMenus\r\n{\r\n    constructor(props:any){\r\n        super(props, \"Dashboard\", true);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"DashboardMain\" className=\"container-fluid\">\r\n                <h2>Dashboard</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.displayName}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(DashboardMain))","\r\nexport const commonAuthorizedHeader = () => {\r\n    return {\r\n        'Content-Type': 'application/json',\r\n        'requestId': getRequestId(),//'localStorage.getItem(\"requestId\")',\r\n        'Authorization': 'Bearer '+getLoginKey()\r\n    }\r\n};\r\n\r\nexport const getLoginKey = () => {\r\n    return getCookie('loginKey');\r\n}\r\n\r\nexport const updateAccessToken = (axiosResponse) => {\r\n    if (axiosResponse && axiosResponse.headers && axiosResponse.headers['access-token']) {\r\n        const accessToken = axiosResponse.headers['access-token'];\r\n        // console.debug(\"update access token: \", accessToken);\r\n        setCookie(\"loginKey\", accessToken);\r\n    }\r\n}\r\n\r\nexport const getRequestId = () => {\r\n    return getCookie(\"requestId\");// document.getElementById(\"requestId\").value;\r\n}\r\n\r\nexport const setCookie = function (cname, cvalue, exdays) {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\" + d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\nexport const getCookie = function (cname) {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport WebResponse from '../models/WebResponse';\r\nimport { updateAccessToken } from './../middlewares/Common';\r\n\r\nconst axios = require('axios');\r\n\r\nexport const rejectedPromise = (message: any) => {\r\n    return new Promise((res, rej) => {\r\n        rej(message);\r\n    });\r\n}\r\n\r\nexport const emptyPromise = (defaultResponse: any) => new Promise(function (res, rej) {\r\n    res(defaultResponse);\r\n});\r\n\r\nexport const commonAjaxPostCalls = (endpoint: string, payload?: any) => {\r\n    const request = payload == null ? {} : payload;\r\n    return new Promise<WebResponse>(function (resolve, reject) {\r\n        axios.post(endpoint, request, {\r\n            headers: commonAuthorizedHeader()\r\n        })\r\n            .then(axiosResponse => {\r\n                updateAccessToken(axiosResponse);\r\n                const response: WebResponse = axiosResponse.data;\r\n                if (response.code == \"00\") {\r\n\r\n                    resolve(response);\r\n                }\r\n                else { reject(response); }\r\n            })\r\n            .catch((e: any) => { console.error(e); reject(e); });\r\n    })\r\n}","\r\nimport Filter from './../models/Filter';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport BaseEntity from './../models/BaseEntity';\r\nimport ManagementProperty from '../models/ManagementProperty';\r\nimport EntityProperty from './../models/EntityProperty';\r\nimport ApplicationProfile from './../models/ApplicationProfile';\r\n\r\nexport default class MasterDataService {\r\n    managementProperties: ManagementProperty[] = [];\r\n    private entityPropertyMap: Map<string, EntityProperty> = new Map();\r\n    private static instance?: MasterDataService;\r\n\r\n    static getInstance(): MasterDataService {\r\n        if (this.instance == null) {\r\n            this.instance = new MasterDataService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    setEntityProperty(code: string, data?: EntityProperty) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n        this.entityPropertyMap.set(code, data);\r\n    }\r\n    getEntityProperty(code?: string): EntityProperty | undefined {\r\n        if (code == undefined) {\r\n            return undefined;\r\n        }\r\n        return this.entityPropertyMap.get(code);\r\n    }\r\n\r\n    loadManagementProperties(req?: any) {\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/managementpages\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n\r\n    }\r\n    loadEntityProperty(code: string) {\r\n        console.debug(\"Load entity prop: \", code);\r\n        const request: WebRequest = {\r\n            entity: code\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/configv2\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    loadEntities(request: WebRequest) {\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    loadAllEntities(code: string) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                limit: 0, page: 0\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n    getById(code: string, id: number) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                exacts: true,\r\n                limit: 1,\r\n                page: 0,\r\n                fieldsFilter: { 'id': id }\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getBy(code: string, fieldsFilter: {}, limit = 1) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                exacts: true,\r\n                limit: limit,\r\n                page: 0,\r\n                fieldsFilter: fieldsFilter\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    delete(code: string, id: number) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            filter: {\r\n                fieldsFilter: { 'id': id }\r\n            }\r\n        }\r\n        const endpoint: string = contextPath().concat(\"api/app/entity/delete\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    save(code: string, model: BaseEntity, editMode: boolean) {\r\n        const request: WebRequest = {\r\n            entity: code,\r\n            [code]: model\r\n        }\r\n        let endpoint: string;\r\n        if (editMode) {\r\n            endpoint = contextPath().concat(\"api/app/entity/update\");\r\n        } else {\r\n            endpoint = contextPath().concat(\"api/app/entity/add\");\r\n        }\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    updateApplicationProfile = (applicationProfile: ApplicationProfile) => {\r\n        const request: WebRequest = {\r\n            profile: applicationProfile\r\n        }\r\n        const endpoint = contextPath().concat(\"api/app/setting/updateprofile\");\r\n        return commonAjaxPostCalls(endpoint, request)\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\ninterface IProps {\r\n    show?:boolean;\r\n    className?:string;\r\n    style?:any;\r\n    onClick?:any;\r\n    iconClassName?:string;\r\n    attributes?:any;\r\n}\r\nexport default class AnchorButton extends Component<IProps, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <a style={this.props.style} {...this.props.attributes} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={this.props.children?{marginRight:'5px'}:{}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </a>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nclass IState {\r\n    show:boolean = true\r\n}\r\nexport default class Modal extends Component<any, IState> {\r\n    state:IState = new IState();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    hideModal = () => {\r\n        this.setState({show:false});\r\n    }\r\n    showModal = () => {\r\n        this.setState({show:true});\r\n    }\r\n    render() {\r\n       if (this.props.show == false) { return null; }\r\n        const title = this.props.title?? \"Title\"; \r\n        if (this.props.toggleable == true && this.state.show == false) {\r\n            return (\r\n                <AnchorButton style={{marginBottom:'10px'}} onClick={this.showModal} iconClassName=\"fas fa-angle-down\" >Show {title}</AnchorButton>\r\n            )\r\n        }\r\n        const props = (({ style, show, footerContent, toggleable, ...props }) => props)(this.props) // remove b and c\r\n        return (\r\n            <div {...props} className=\"modal-content \" style={{...props.style, marginBottom:'10px'}}>\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\">{title}</h5>\r\n                    {this.props.toggleable?\r\n                    <button type=\"button\" className=\"btn btn-sm\" onClick={this.hideModal} aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">\r\n                            <i className='fas fa-times'/>\r\n                        </span>\r\n                    </button>\r\n                    :\r\n                    null}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent || this.props.showFooter == true?\r\n                <div className=\"modal-footer\">\r\n                    {this.props.footerContent}\r\n                </div>\r\n                :null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport EntityElement from \"./EntityElement\";\r\nimport HeaderProps from './HeaderProps'; \r\n\r\nexport default class EntityProperty{\r\n\tgroupNames?:string;\r\n\tentityName?:string;\r\n\talias?:string;\r\n\tfieldNames?:string;\r\n\tidField?:string;\r\n\tdetailFieldName?:string;\r\n\timageElementsJson?:string;\r\n\tdateElementsJson?:string;\r\n\tmultipleSelectElementsJson?:string;\r\n\tcurrencyElementsJson?:string;\r\n\tformInputColumn?:number;\r\n\teditable?:boolean;\r\n\twithDetail?:boolean;\r\n\tdateElements?:any[];\r\n\timageElements?:any[];\r\n\tcurrencyElements?:any[];\r\n\tmultipleSelectElements?:any[];\r\n\telements:EntityElement[] = new Array();\r\n\tfieldNameList?:string[];\r\n\tignoreBaseField?:boolean;\r\n\tisQuestionare?:boolean;\r\n\r\n\tstatic getEntityElement = (prop: EntityProperty, id:string) :EntityElement|undefined => {\r\n\t\tfor (let i = 0; i < prop.elements.length; i++) {\r\n\t\t\tconst element = prop.elements[i];\r\n\t\t\tif (element.id == id) {\r\n\t\t\t\treturn element;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tstatic getHeaderLabels = (prop:EntityProperty) : HeaderProps[] => {\r\n\t\tconst result:HeaderProps[] = new Array();\r\n\t\tif (prop.elements == undefined) {\r\n\t\t\treturn result;\r\n\t\t}\r\n\t\tconst elements:EntityElement[] = prop.elements;\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\t\r\n\t\t\tconst element = elements[i];\r\n\t\t\tconst header:HeaderProps=  {\r\n\t\t\t\tlabel:element.lableName,\r\n\t\t\t\tvalue:element.id,\r\n\t\t\t\tisDate:element.type == 'date'\r\n\t\t\t};\r\n\t\t\tresult.push(header);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tstatic getRecordId(record:any, prop:EntityProperty) {\r\n\t\tconst elements = prop.elements;\r\n\t\tfor (let i = 0; i < elements.length; i++) {\r\n\t\t\tconst element = elements[i];\r\n\t\t\tif (element.idField) {\r\n\t\t\t\treturn record[element.id];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n","\nexport enum FieldType {\n\n\tFIELD_TYPE_TEXT = \"FIELD_TYPE_TEXT\",\n\tFIELD_TYPE_IMAGE =\n\t'FIELD_TYPE_IMAGE',\n\tFIELD_TYPE_CURRENCY =\n\t'FIELD_TYPE_CURRENCY',\n\tFIELD_TYPE_NUMBER =\n\t'FIELD_TYPE_NUMBER',\n\tFIELD_TYPE_HIDDEN =\n\t'FIELD_TYPE_HIDDEN',\n\tFIELD_TYPE_COLOR =\n\t'FIELD_TYPE_COLOR',\n\tFIELD_TYPE_FIXED_LIST =\n\t'FIELD_TYPE_FIXED_LIST',\n\tFIELD_TYPE_DYNAMIC_LIST =\n\t'FIELD_TYPE_DYNAMIC_LIST',\n\tFIELD_TYPE_TEXTAREA =\n\t'FIELD_TYPE_TEXTAREA',\n\tFIELD_TYPE_PLAIN_LIST =\n\t'FIELD_TYPE_PLAIN_LIST',\n\tFIELD_TYPE_DATE =\n\t'FIELD_TYPE_DATE'\n}\n\n","import React from 'react';\r\nimport EntityProperty from '../models/EntityProperty';\r\nimport EntityElement from '../models/EntityElement';\r\nimport { baseImageUrl } from '../constant/Url';\r\nimport { FieldType } from '../models/FieldType';\r\nexport default class EntityValues {\r\n\tstatic parseValues(object:any, prop:EntityProperty) : Array<any> {\r\n\t\tconst result = new Array();\r\n\t\tconst elemnents:EntityElement[] =prop.elements;\r\n\t\tfor (let i = 0; i < elemnents.length; i++) {\r\n\t\t\tconst element = elemnents[i];\r\n\t\t\tconst elementid = element.id;\r\n\t\t\tlet value:any =  object[elementid];\r\n\t\t\tif (value == null) {\r\n\t\t\t\tresult.push(value);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tswitch(element.fieldType) {\r\n\t\t\t\tcase FieldType.FIELD_TYPE_FIXED_LIST:\r\n\t\t\t\tcase FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n\t\t\t\t\tconst valueAsObj = object[elementid];\r\n\t\t\t\t\tvalue = valueAsObj[element.optionItemName??\"id\"];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_DATE:\r\n\t\t\t\t\tvalue = new Date(value).toString();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_IMAGE:\r\n\t\t\t\t\tconst imgLink = new String(value).split(\"~\")[0];\r\n\t\t\t\t\tvalue = <img src ={baseImageUrl+imgLink} width=\"50\" height=\"50\"/>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase FieldType.FIELD_TYPE_COLOR:\r\n\t\t\t\t\tvalue = <strong style={{color:value}} >{value}</strong>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tvalue = object[elementid];\r\n\t\t\t}\r\n\t\t\tresult.push(value);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}","let index = 1;\r\nexport const uniqueId = function () {\r\n\tlet string = new String(new Date().getUTCMilliseconds()).toString();\r\n\tindex++;\r\n\treturn index + \"-\" + string;\r\n}\r\n\r\nexport function beautifyNominal(val) {\r\n\tif (val == \"\" || val == null) return \"0\";\r\n\tconst isDecimal:boolean = new String(val).includes(\".\");\r\n\t\r\n\tconst rawVal = isDecimal? parseInt( new String(val).split(\".\")[0]) : parseInt(val);\r\n\tlet nominal = Math.abs(rawVal).toString();\r\n\tlet result = \"\";\r\n\tif (nominal.length > 3) { \r\n\t\tlet zeroIndex: number = 0;\r\n\t\tfor (let i = nominal.length - 1; i > 0; i--) {\r\n\t\t\tzeroIndex++; \r\n\t\t\tresult = nominal[i] + result;\r\n\t\t\tif (zeroIndex == 3 ) {\r\n\t\t\t\tresult = \".\" + result;\r\n\t\t\t\tzeroIndex = 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tresult = nominal[0] + result;\r\n\t} else {\r\n\t\tresult = val;\r\n\t}\r\n\tif (rawVal < 0) {\r\n\t\treturn rawVal;\r\n\t}\r\n\tif (isDecimal) {\r\n\t\tresult+= \",\"+ new String(val).split(\".\")[1];\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const getMaxSales = (list) => {\r\n\tlet result = 0;\r\n\tfor (let i = 0; i < list.length; i++) {\r\n\t\tconst element = list[i];\r\n\t\tif (element.sales > result)\r\n\t\t\tresult = element.sales;\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nexport const isNonNullArray = function (array) {\r\n\treturn array != null && array.length > 0;\r\n}\r\n\r\nexport const isNonNullArrayWithIndex = function (array, i) {\r\n\treturn array != null && array.length > 0 && array[i] != null;\r\n}\r\n\r\nconst months = [\r\n\t\"January\", \"Ferbuary\", \"March\", \"April\", \"May\", \"June\",\r\n\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n]\r\n\r\nexport const monthYearString = function (m, y) {\r\n\tif (m == null || y == null) {\r\n\t\treturn \"-\";\r\n\t}\r\n\treturn months[m - 1] + \" \" + y;\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { uniqueId } from './../../utils/StringUtil';\r\ninterface IProps {\r\n    limit: number,\r\n    totalData: number,\r\n    activePage: number,\r\n    onClick: any\r\n}\r\nexport default class NavigationButtons extends Component<IProps, any> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\r\n        if (buttonIndexes.length == 0) { return null }\r\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\r\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\r\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\r\n        return (<div>\r\n            <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\">\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\r\n                    {buttonIndexes.map((page, i) => {\r\n                        return <li key={\"NAV-\"+uniqueId()} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}><a className=\"page-link \" onClick={(e) => this.props.onClick(page - 1)} >{page}</a></li>\r\n                    })}\r\n                    <li className=\"page-item\"><a className=\"page-link\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\r\n                </ul>\r\n            </nav>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\r\n\r\n    /* DISPLAYED BUTTONS */\r\n    const displayed_buttons: number[] = [];\r\n    const buttonCount = Math.ceil(totalData / limit);\r\n\r\n    // console.debug(\"current page:\", currentPage);\r\n    const min = (currentPage) - 1;\r\n    const max = (currentPage) + 3;\r\n    // const min = (currentPage) - 2;\r\n    // const max = (currentPage) + 2;\r\n\r\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\r\n    if (buttonCount > 1) {\r\n        displayed_buttons.push(1);\r\n    }\r\n    for (let i = min; i <= max; i++) {\r\n        if (i > 1 && i <= buttonCount) {\r\n            (displayed_buttons.push(i));\r\n        }\r\n    }\r\n    if (max < buttonCount) {\r\n        displayed_buttons.push(buttonCount);\r\n    }\r\n    return displayed_buttons;\r\n}\r\n","\r\nimport React, { Fragment, Component } from 'react';\r\nimport { toBase64v2 } from '../../../../utils/ComponentUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport BaseComponent from '../../../BaseComponent';\r\ninterface IState {\r\n    singlePreviewData?: string,\r\n    showInputFile: boolean\r\n}\r\nexport default class FormInputImage extends BaseComponent {\r\n    state: IState = {\r\n        singlePreviewData: undefined,\r\n        showInputFile: false\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    changeSingleImageData = (e) => {\r\n        const app = this;\r\n        toBase64v2(e.target).then(function (data) {\r\n            app.setState({ singlePreviewData: data });\r\n        })\r\n    }\r\n    removeImage = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Remove image?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doRemoveImage();\r\n                }\r\n            })\r\n    }\r\n\r\n    doRemoveImage = () => {\r\n        if (this.ref.current) {\r\n            this.ref.current.value = null;\r\n        }\r\n        this.setState({ singlePreviewData: undefined, showInputFile: false });\r\n    }\r\n\r\n    getEntityElement(): EntityElement {\r\n        return this.props.element;\r\n    }\r\n    componentDidMount() {\r\n        this.prepopulateForm();\r\n    }\r\n    prepopulateForm() {\r\n        if (!this.props.recordToEdit){ \r\n            return;\r\n        }\r\n        let defaultValue = this.props.recordToEdit[this.getEntityElement().id];\r\n        if (!defaultValue){ \r\n            return;\r\n        }\r\n        const fullUrl = baseImageUrl + defaultValue;\r\n        this.setState({ singlePreviewData: fullUrl, showInputFile:true });\r\n    }\r\n    render() {\r\n        const element: EntityElement = this.getEntityElement();\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.showInputFile ?\r\n                    <input ref={this.ref}\r\n                        onChange={this.changeSingleImageData} type=\"file\" accept=\"image/*\" name={element.id} className='form-control' />\r\n\r\n                    :\r\n                    <Fragment>\r\n                        <p></p>\r\n                        <AnchorButton onClick={(e)=> this.setState({showInputFile:true})} iconClassName=\"fas fa-plus\" className=\"btn btn-info btn-sm\">Add Image</AnchorButton>\r\n                        <input type=\"hidden\" name={element.id} value=\"NULLED\" />\r\n                    </Fragment>\r\n                }\r\n                <ImagePreview imageData={this.state.singlePreviewData} />\r\n                <AnchorButton show={this.state.singlePreviewData != undefined} onClick={this.removeImage} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\">remove</AnchorButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n","\r\nimport React, { Fragment, Component } from 'react';\r\nimport { toBase64v2 } from '../../../../utils/ComponentUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport BaseComponent from './../../../BaseComponent';\r\ninterface IState {\r\n    previewData: Map<number, string>,\r\n    inputElements: number[]\r\n}\r\nexport default class FormInputImageMultiple extends BaseComponent {\r\n    state: IState = {\r\n        previewData: new Map(),\r\n        inputElements: [1]\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setImageData = (e, index) => {\r\n        const app = this;\r\n        toBase64v2(e.target).then(function (data) {\r\n            const previewData = app.state.previewData;\r\n            previewData.set(index, data);\r\n            app.setState({ previewData: previewData });\r\n        })\r\n    }\r\n\r\n    addInputElement = (e) => {\r\n        const element = this.state.inputElements;\r\n        if (element.length == 0) {\r\n            element.push(1);\r\n        } else {\r\n            element.push(element[element.length - 1] + 1);\r\n        }\r\n        this.setState({ inputElements: element });\r\n    }\r\n    removeInputElement = (removedIndex: number) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Delete image?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doRemoveInputElement(removedIndex);\r\n                }\r\n            })\r\n    }\r\n\r\n    doRemoveInputElement = (removedIndex: number) => {\r\n        const previewData = this.state.previewData;\r\n        const element = this.state.inputElements;\r\n        for (let i = 0; i < element.length; i++) {\r\n            const index = element[i];\r\n            if (index == removedIndex) {\r\n                element.splice(i, 1);\r\n                previewData.delete(removedIndex);\r\n            }\r\n        }\r\n        this.setState({ inputElements: element, previewData: previewData });\r\n    }\r\n    getEntityElement(): EntityElement {\r\n        return this.props.element;\r\n    }\r\n    componentDidMount() {\r\n        this.prepopulateForm();\r\n    }\r\n    prepopulateForm() {\r\n        if (!this.props.recordToEdit) {\r\n            return;\r\n        }\r\n        let defaultValue = this.props.recordToEdit[this.getEntityElement().id];\r\n        if (!defaultValue || new String(defaultValue).trim() == \"\") {\r\n            return;\r\n        }\r\n        const previewData: Map<number, string> = this.state.previewData;\r\n        const imageNames: string[] = new String(defaultValue).split(\"~\");\r\n        const inputElements: number[] = new Array<number>();\r\n        for (let i = 0; i < imageNames.length; i++) {\r\n            const imageName: string = imageNames[i];\r\n            previewData.set(i, imageName);\r\n            inputElements.push(i);\r\n        }\r\n        this.setState({ previewData: previewData, inputElements: inputElements });\r\n    }\r\n    render() {\r\n        const element: EntityElement = this.getEntityElement();\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.inputElements.map(index => {\r\n                    const previewData: string | undefined = this.state.previewData.get(index);\r\n                    const isNull = previewData == undefined || new String(previewData).trim() == \"\";\r\n                    const isBase64 = !isNull && isBase64Image(previewData);\r\n                    return (\r\n                        <Fragment>\r\n                            {isNull ?\r\n                                <input onChange={(e) => this.setImageData(e, index)} type=\"file\" accept=\"image/*\"\r\n                                    name={element.id} className='form-control' /> : null}\r\n                            {isBase64 ?\r\n                                <div>\r\n                                    <input value={previewData} type=\"hidden\" name={element.id} />\r\n                                    <ImagePreview imageData={previewData} />\r\n                                </div>\r\n                                :\r\n                                !isNull ?\r\n                                    <div>\r\n                                        <input value={previewData} type=\"hidden\" name={element.id} className='form-control' />\r\n                                        <ImagePreview imageData={baseImageUrl + previewData} />\r\n                                        <p className=\"badge badge-warning\">{previewData}</p>\r\n                                    </div> :\r\n                                    null\r\n                            }\r\n                            <AnchorButton show={this.state.previewData != undefined}\r\n                                onClick={(e: any) => this.removeInputElement(index)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\">\r\n                                remove {index}\r\n                            </AnchorButton>\r\n                        </Fragment>)\r\n                })}\r\n                <p></p>\r\n                <AnchorButton iconClassName=\"fas fa-plus\" onClick={this.addInputElement}>Add</AnchorButton>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\nconst isBase64Image = (string?: string) => {\r\n    return string && string.startsWith(\"data:image\");\r\n}\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nexport default class FormGroup extends Component<any, any>\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const orientation = this.props.orientation == 'vertical' ? 'vertical' : 'horizontal';\r\n        return (\r\n            <div className={\"form-group \"+ this.props.className+ \" \" + (orientation == 'vertical' ? '' : 'row')}>\r\n                <label className={(orientation == 'vertical' ? '' : 'col-sm-3')}><strong>{this.props.label ? this.props.label : null}</strong></label>\r\n                <div className={(orientation == 'vertical' ? '' : 'col-sm-9')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport { FieldType } from '../../../../models/FieldType';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport FormInputImage from './FormInputImage';\r\nimport FormInputImageMultiple from './FormInputImageMultiple';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport FormGroup from './../../../form/FormGroup';\r\ninterface IState {\r\n    inputList: any[],\r\n    singlePreviewData?: string,\r\n    inputElements: number[]\r\n}\r\nclass FormInputField extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        inputList: [],\r\n        singlePreviewData: undefined,\r\n        inputElements: [1]\r\n    }\r\n    ref: React.RefObject<any> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    getEntityElement = (): EntityElement => {\r\n        return this.props.entityElement;\r\n    }\r\n    getRequiredAttr = () => {\r\n        const requiredAttr = { required: this.getEntityElement().required == true }\r\n        return (\r\n            // null\r\n            requiredAttr\r\n        )\r\n    }\r\n    inputListLoaded = (response: WebResponse) => {\r\n        if (!response.entities || response.entities.length == 0) {\r\n            throw new Error(\"Not found\");\r\n        }\r\n        this.setState({ inputList: response.entities });\r\n        this.prepopulateForm();\r\n    }\r\n    loadInputList = () => {\r\n        const element = this.getEntityElement();\r\n        const code = element.entityReferenceClass;\r\n        this.commonAjax(\r\n            this.masterDataService.loadAllEntities,\r\n            this.inputListLoaded,\r\n            this.showCommonErrorAlert,\r\n            code\r\n        )\r\n    }\r\n    hasInputList = () => {\r\n        if (this.getEntityElement().fieldType == FieldType.FIELD_TYPE_FIXED_LIST || this.getEntityElement().fieldType == FieldType.FIELD_TYPE_DYNAMIC_LIST) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    hasInputListAndNotReady = () => {\r\n        return this.hasInputList() && this.state.inputList.length == 0;\r\n    }\r\n    validateInputType = () => {\r\n        if (this.hasInputListAndNotReady()) {\r\n            this.loadInputList();\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateInputType();\r\n    }\r\n    componentDidMount() {\r\n        this.validateInputType();\r\n        this.prepopulateForm();\r\n    }\r\n\r\n    prepopulateForm = () => {\r\n        if (!this.props.recordToEdit || !this.ref.current) {\r\n            return;\r\n\r\n        }\r\n        const fieldName = this.getEntityElement().id;\r\n        let recordValue = this.props.recordToEdit[fieldName];\r\n        if (!recordValue) return;\r\n\r\n        const fieldType: FieldType = this.getEntityElement().fieldType;\r\n        let defaultInputValue = undefined;\r\n        switch (fieldType) {\r\n            case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n            case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                if (this.state.inputList.length == 0) {\r\n                    break;\r\n                }\r\n                const optionValueName = this.getEntityElement().optionValueName;\r\n                if (!optionValueName) break;\r\n                defaultInputValue = recordValue[optionValueName];\r\n                break;\r\n\r\n            default:\r\n                defaultInputValue = recordValue;\r\n                break;\r\n        }\r\n        if (defaultInputValue) {\r\n            this.ref.current.value = defaultInputValue;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const element = this.getEntityElement();\r\n        const requiredAttr = this.getRequiredAttr();\r\n        if (this.hasInputListAndNotReady()) {\r\n            return <div className=\"form-group\">Loading...</div>\r\n        }\r\n        if (element.idField == true) {\r\n            return (\r\n                <FormGroup orientation=\"vertical\" label={element.lableName}>\r\n                    <input {...requiredAttr} value=\"Generated\" ref={this.ref} className=\"form-control\" name={element.id} disabled />\r\n                </FormGroup>\r\n            )\r\n        }\r\n        let input = <Fragment />;\r\n        switch (element.fieldType) {\r\n            case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n            case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                const options = this.state.inputList;\r\n                input = <select ref={this.ref} className=\"form-control\" name={element.id} >\r\n                    {options.map(option => {\r\n                        const optionItemValue = element.optionValueName;\r\n                        const optionItemName = element.optionItemName;\r\n                        if (!optionItemName || !optionItemValue) { return null; }\r\n                        return (\r\n                            <option value={option[optionItemValue]} >{option[optionItemName]}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                break;\r\n            case FieldType.FIELD_TYPE_IMAGE:\r\n                input = element.multiple ?\r\n                    <FormInputImageMultiple app={this.parentApp} recordToEdit={this.props.recordToEdit} element={element} />\r\n                    :\r\n                    <FormInputImage app={this.parentApp} recordToEdit={this.props.recordToEdit} element={element} />\r\n                break;\r\n            case FieldType.FIELD_TYPE_TEXTAREA:\r\n                input = <textarea {...requiredAttr} ref={this.ref} className=\"form-control\" name={element.id} />\r\n                break;\r\n            default:\r\n                input = <input type={element.type} {...requiredAttr} ref={this.ref} className=\"form-control\" name={element.id} />\r\n\r\n        }\r\n        return (\r\n            <FormGroup orientation='vertical' label={element.lableName}>\r\n                { input}\r\n            </FormGroup>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst ImagePreview = (props) => {\r\n    if (props.show == false || !props.imageData) return null;\r\n    return <img className=\"image\" style={{ margin: '3px' }} src={props.imageData} width=\"50\" height=\"50\" />\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(FormInputField))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport Modal from '../../../container/Modal';\r\nimport EntityProperty from '../../../../models/EntityProperty';\r\nimport EntityElement from '../../../../models/EntityElement';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport WebResponse from '../../../../models/WebResponse'; \r\nimport { FieldType } from '../../../../models/FieldType';\r\nimport { toBase64FromFile } from '../../../../utils/ComponentUtil';\r\nimport FormInputField from './FormInputField';\r\n\r\nclass MasterDataForm extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    editMode:boolean = false;\r\n    recordToEdit?:{} = undefined;\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        if (props.recordToEdit) {\r\n            this.editMode = true;\r\n            this.recordToEdit = props.recordToEdit;\r\n        }\r\n    }\r\n    \r\n    getEntityProperty(): EntityProperty {\r\n        return this.props.entityProperty;\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.getEntityProperty().editable == false) {\r\n            this.props.onClose();\r\n        }\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const form = e.target, app = this;\r\n        this.showConfirmation(\"Save data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.submit(form) }\r\n            });\r\n    }\r\n    getEntityElement(key:string) :EntityElement |undefined {\r\n        return EntityProperty.getEntityElement(this.getEntityProperty(), key);\r\n    }\r\n    submit = (form: HTMLFormElement) => {\r\n        const formData: FormData = new FormData(form);\r\n        const object: {} = {}, app = this;\r\n        const promises: Promise<any>[] = new Array();\r\n        const nulledFields:any[] = [];\r\n        formData.forEach((value, key) => {\r\n            console.debug(\"Form data \", key);\r\n            if (!object[key]) {\r\n                object[key] = new Array();\r\n            }\r\n            const element:EntityElement|undefined = this.getEntityElement(key);\r\n            if (!element) return false;\r\n            switch (element.fieldType) {\r\n                case FieldType.FIELD_TYPE_DYNAMIC_LIST:\r\n                case FieldType.FIELD_TYPE_FIXED_LIST:\r\n                    const valueAttr = element.optionValueName;\r\n                    if (valueAttr) {\r\n                        object[key].push({ [valueAttr]: value })\r\n                    }\r\n                    break;\r\n                case FieldType.FIELD_TYPE_IMAGE:\r\n                    console.debug(key, \" is image\");\r\n                    if (value == \"NULLED\") {\r\n                        console.debug(\"NULLED VALUE ADD: \", key);\r\n                        nulledFields.push(key);\r\n                   \r\n                    } else if(value.constructor.name == \"File\") {\r\n                        let promise = toBase64FromFile(value).then(data => {\r\n                            object[key].push(data);\r\n                        }).catch(console.error)\r\n                            .finally(function () { console.debug(\"finish\") });\r\n                        promises.push(promise);\r\n                    } else {\r\n                        object[key].push(value);\r\n                    }\r\n                    break;\r\n                default:\r\n                    object[key].push(value);\r\n                    break;\r\n            }\r\n            return true;\r\n        }); \r\n        Promise.all(promises).then(function (val) {\r\n            const objectPayload = app.generateRequestPayload(object, nulledFields);\r\n            console.debug(\"Record object to save: \", objectPayload);\r\n            app.ajaxSubmit(objectPayload);\r\n        });\r\n    }\r\n\r\n    generateRequestPayload = (rawObject: {}, nulledFields:any[]): {} => { \r\n        const result:{nulledFields:Array<any>} = this.editMode && this.recordToEdit? \r\n        {...this.recordToEdit, nulledFields:nulledFields} : \r\n        {nulledFields:new Array() };\r\n        for (const key in rawObject) {\r\n            const element: any[] = rawObject[key];\r\n            console.debug(key, \" length: \", element.length);\r\n            if (element.length == 1) {\r\n                result[key] = element[0];\r\n            } else if (element.length > 1) {\r\n                result[key] = element.join(\"~\");\r\n            }\r\n        }\r\n        result.nulledFields = nulledFields;\r\n        return result;\r\n    }\r\n\r\n    ajaxSubmit = (object: any) => {\r\n        this.commonAjax(\r\n            this.masterDataService.save, this.recordSaved, this.showCommonErrorAlert,\r\n            this.getEntityProperty().entityName, object, this.editMode\r\n        )\r\n    }\r\n    recordSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Record saved\");\r\n    }\r\n    render() {\r\n        const entityProperty: EntityProperty = this.getEntityProperty();\r\n\r\n        const editModeStr = this.editMode ?  <span className=\"badge badge-warning\">Edit Mode</span>:\"\"\r\n        return ( \r\n            <div id=\"MasterDataForm\" >\r\n                <AnchorButton style={{ marginBottom: '5px' }} onClick={this.props.onClose} iconClassName=\"fas fa-angle-left\">Back</AnchorButton>\r\n                <form onSubmit={this.onSubmit} id=\"record-form\">\r\n                <Modal title={<span>{entityProperty.alias} Record Form {editModeStr}</span>} footerContent={<SubmitReset />}>\r\n                        <InputFields recordToEdit={this.recordToEdit} app={this.parentApp} entityProperty={entityProperty} />\r\n                    </Modal>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst SubmitReset = (props) => {\r\n    return (\r\n        <div className=\"btn-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n            <input type=\"reset\" className=\"btn btn-warning\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputFields = (props: { app: any, entityProperty: EntityProperty, recordToEdit:{}|undefined }) => {\r\n    const elements: EntityElement[] = props.entityProperty.elements;\r\n    const groupedElements: Array<Array<EntityElement>> = new Array();\r\n    let counter: number = 0;\r\n    groupedElements.push(new Array());\r\n    for (let i = 0; i < elements.length; i++) {\r\n        const element = elements[i];\r\n        if (i > 0 && i % 5 == 0) {\r\n            counter++;\r\n            groupedElements.push(new Array());\r\n        }\r\n        groupedElements[counter].push(element);\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            {groupedElements.map(elements => {\r\n                return (\r\n                    <div className=\"col-lg-6\">\r\n                        {elements.map(element => {\r\n                            return <FormInputField recordToEdit={props.recordToEdit} app={props.app} entityElement={element} />\r\n                        })}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(connect(mapCommonUserStateToProps)(MasterDataForm))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport AnchorButton from './../../navigation/AnchorButton';\r\nimport EntityProperty from '../../../models/EntityProperty';\r\nimport WebResponse from './../../../models/WebResponse';\r\n\r\nclass EditDeleteAction extends BaseComponent {\r\n    masterDataService:MasterDataService = MasterDataService.getInstance();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n    }\r\n    delete = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Delete record?\")\r\n        .then(function(ok){\r\n            if (ok) {\r\n                app.doDelete();\r\n            }\r\n        });\r\n    }\r\n    doDelete = () => {\r\n        const record = this.props.record;\r\n        const entityProperty:EntityProperty = this.props.entityProperty;\r\n        const recordId = EntityProperty.getRecordId(record, entityProperty);\r\n        this.commonAjax(\r\n            this.masterDataService.delete,\r\n            this.recordDeleted,\r\n            this.showCommonErrorAlert,\r\n            entityProperty.entityName, recordId\r\n        )\r\n    }\r\n    getRecordById = () => {\r\n        const record = this.props.record;\r\n        const entityProperty:EntityProperty = this.props.entityProperty;\r\n        const recordId = EntityProperty.getRecordId(record, entityProperty);\r\n        this.commonAjax(\r\n            this.masterDataService.getById,\r\n            this.recordLoaded,\r\n            this.showCommonErrorAlert,\r\n            entityProperty.entityName,\r\n            recordId\r\n        );\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (!response.entities || response.entities.length == 0){\r\n            throw new Error(\"Record not found\");\r\n        }\r\n        if(this.props.showEditForm) {\r\n            this.props.showEditForm(response);\r\n        }\r\n    }\r\n    recordDeleted = (response:WebResponse) => {\r\n        this.showInfo(\"Record deleted\");\r\n        this.props.reload();\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div className=\"btn-group\">\r\n                <AnchorButton onClick={this.getRecordById} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\"></AnchorButton>\r\n                <AnchorButton onClick={this.delete} className=\"btn btn-danger btn-sm\" iconClassName=\"fas fa-times\"></AnchorButton>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditDeleteAction))","\r\nimport React, { Component, Fragment } from 'react';\r\nimport HeaderProps from './../../../models/HeaderProps';\r\nexport default class DataTableHeader extends Component<any, any>\r\n{\r\n    render(){\r\n        const props = this.props;\r\n        const headerProps: HeaderProps[] = props.headerProps;\r\n        return (<thead>\r\n            <tr>\r\n                <th>No</th>\r\n                {headerProps.map(headerProp => {\r\n                    const isDate = headerProp.isDate;\r\n                    return (\r\n                        <th >\r\n                            <p>{headerProp.label}</p>\r\n                            <div>\r\n                                {isDate ?\r\n                                    <Fragment>\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-day\"}\r\n                                            className=\"input-filter\" placeholder={\"day\"} />\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-month\"}\r\n                                            className=\"input-filter\" placeholder={\"month\"} />\r\n                                        <input onChange={props.filterOnChange} name={headerProp.value + \"-year\"}\r\n                                            className=\"input-filter\" placeholder={\"year\"} />\r\n                                    </Fragment>\r\n                                    :\r\n                                    <input onChange={props.filterOnChange} placeholder={headerProp.label}\r\n                                        className=\"input-filter\" name={headerProp.value} />\r\n                                }</div>\r\n                            <div className=\"btn-group\">\r\n                                <button data-orderType=\"asc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"btn btn-outline-secondary btn-sm\">\r\n                                    <i data-orderType=\"asc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"fas fa-angle-up\" /></button>\r\n                                <button data-orderType=\"desc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"btn btn-outline-secondary btn-sm\">\r\n                                    <i data-orderType=\"desc\" onClick={props.orderButtonOnClick} data-orderby={headerProp.value} className=\"fas fa-angle-down\" /></button>\r\n                            </div>\r\n                        </th>\r\n                    )\r\n                })}\r\n                <th>Action</th>\r\n            </tr>\r\n        </thead>)\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nexport default class SimpleError extends Component<any, any>\r\n{\r\n\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        return (\r\n            <div className=\"alert alert-danger\">\r\n                {this.props.children??\"Error Occured\"}\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './Spinner.css';\r\nexport default class Spinner extends Component<any, any>{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const innerDivs:JSX.Element[] = new Array<JSX.Element>();\r\n        for (let i = 0; i <= 11; i++) {\r\n            innerDivs.push(<div></div>);\r\n        }\r\n        return (\r\n            <div style={{width:'85px', height:'85px', display:'block'}} className=\"container-fluid text-center\" >\r\n                 <div style={{visibility:this.props.show == false?'hidden':'visible'}} className=\"lds-spinner\">\r\n                  {innerDivs}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Modal from '../../container/Modal';\r\nimport Filter from './../../../models/Filter';\r\nimport EntityProperty from './../../../models/EntityProperty';\r\nimport WebRequest from './../../../models/WebRequest';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport HeaderProps from './../../../models/HeaderProps';\r\nimport './DataTable.css'\r\nimport EntityValues from './../../../utils/EntityValues';\r\nimport NavigationButtons from './../../navigation/NavigationButtons';\r\nimport MasterDataForm from './form/MasterDataForm';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport EditDeleteAction from './EditDeleteAction';\r\nimport DataTableHeader from './DataTableHeader';\r\nimport SimpleError from './../../alert/SimpleError';\r\nimport Spinner from './../../loader/Spinner';\r\ninterface IState { recordData?: WebResponse, showForm: boolean, filter: Filter, loading: boolean }\r\nclass MasterDataList extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        showForm: false, loading: false,\r\n        filter: { limit: 5, page: 0, fieldsFilter: {} }\r\n    }\r\n    recordToEdit?: {} = undefined;\r\n    entityProperty: EntityProperty;\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.entityProperty = this.props.entityProperty;\r\n    }\r\n    /**\r\n     * remove fieldsfilter empty values\";\r\n     */\r\n    adjustFilter = (filter: Filter): Filter => {\r\n        const fieldsFilter = filter.fieldsFilter;\r\n        for (const key in fieldsFilter) {\r\n            const element = fieldsFilter[key];\r\n            if (element == undefined || element == null || new String(element).length == 0) {\r\n                if (filter.fieldsFilter != undefined) {\r\n                    delete filter.fieldsFilter[key];\r\n                }\r\n            }\r\n        }\r\n        return filter;\r\n    }\r\n    loadEntities = (page: number | undefined) => {\r\n        const filter = this.state.filter;\r\n        const entityName = this.entityProperty.entityName;\r\n        filter.page = page ?? filter.page;\r\n        const request: WebRequest = {\r\n            entity: entityName,\r\n            filter: this.adjustFilter(filter)\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.loadEntities,\r\n            this.entitiesLoaded,\r\n            this.showCommonErrorAlert,\r\n            request\r\n        );\r\n\r\n    }\r\n    entitiesLoaded = (response: WebResponse) => {\r\n        this.setState({ recordData: response, filter: response.filter });\r\n    }\r\n    checkDefaultData = () => {\r\n        if (this.state.loading) {\r\n            return;\r\n        }\r\n        if (this.entityProperty.entityName == this.props.entityProperty.entityName && this.state.recordData != undefined) {\r\n            return;\r\n        }\r\n        this.entityProperty = this.props.entityProperty;\r\n        this.loadEntities(0);\r\n    }\r\n    startLoading() { this.setState({ loading: true }) }\r\n    endLoading() { this.setState({ loading: false }) }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n        this.checkDefaultData();\r\n    }\r\n    componentDidMount() {\r\n        this.checkDefaultData();\r\n    }\r\n    getRecordNumber = (i: number): number => {\r\n        let res = (this.state.filter.page ?? 0) * (this.state.filter.limit ?? 5) + i + 1;\r\n        return res;\r\n    }\r\n    filterFormSubmit = (e) => {\r\n        let page = this.state.filter.useExistingFilterPage ? this.state.filter.page : 0;\r\n        this.loadEntities(page);\r\n    }\r\n    filterOnChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const filter = this.state.filter;\r\n        if (filter.fieldsFilter == undefined) {\r\n            filter.fieldsFilter = {};\r\n        }\r\n        filter.fieldsFilter[name] = value;\r\n        this.setState({ filter: filter });\r\n    }\r\n    filterReset = (e) => {\r\n        const filter = this.state.filter;\r\n        filter.fieldsFilter = {};\r\n        filter.limit = 5;\r\n        this.setState({ filter: filter });\r\n    }\r\n    orderButtonOnClick = (e) => {\r\n        const dataset: DOMStringMap = e.target.dataset;\r\n        const filter = this.state.filter;\r\n        filter.orderBy = dataset['orderby'];\r\n        filter.orderType = dataset['ordertype'];\r\n        this.setState({ filter: filter });\r\n        this.loadEntities(0);\r\n    }\r\n    showEditForm = (response: WebResponse) => {\r\n        if (!response.entities) {\r\n            return;\r\n        }\r\n        this.recordToEdit = response.entities[0];\r\n        this.setState({ showForm: true });\r\n    }\r\n    showCreateForm = (e) => {\r\n        this.recordToEdit = undefined;\r\n        this.setState({ showForm: true });\r\n    }\r\n    updateFilterPage = (page: any) => {\r\n        const filter = this.state.filter;\r\n        filter.useExistingFilterPage = true;\r\n        filter.page = parseInt(page) - 1;\r\n        this.setState({ filter: filter });\r\n    }\r\n    updateFilterLimit = (limit: any) => {\r\n        const filter = this.state.filter;\r\n        filter.limit = parseInt(limit);\r\n        this.setState({ filter: filter });\r\n    }\r\n    render() {\r\n        if (undefined == this.state.recordData) {\r\n            return <h2>Please Wait..</h2>\r\n        }\r\n        const headerProps: HeaderProps[] = EntityProperty.getHeaderLabels(this.props.entityProperty);\r\n        const resultList: any[] = this.state.recordData.entities ? this.state.recordData.entities : [];\r\n        if (headerProps == undefined || resultList == undefined) {\r\n            return <SimpleError />\r\n        }\r\n\r\n        if (this.state.showForm == true) {\r\n            return <MasterDataForm recordToEdit={this.recordToEdit} entityProperty={this.entityProperty} onClose={(e) => { this.setState({ showForm: false }) }} app={this.parentApp} />\r\n        }\r\n\r\n        return (\r\n            <div id=\"MasterDataList\">\r\n                <AnchorButton show={this.entityProperty.editable == true} style={{ marginBottom: '5px' }} onClick={this.showCreateForm} iconClassName=\"fas fa-plus\">Add Record</AnchorButton>\r\n                <form id=\"filter-form\" onSubmit={(e) => { e.preventDefault() }}>\r\n                    <Modal title=\"Filter\" toggleable={true}>\r\n                        <div>\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-6\">\r\n                                    <input value={(this.state.filter.page ?? 0) + 1} onChange={(e) => { this.updateFilterPage(e.target.value) }} min=\"1\" className=\"form-control\" type=\"number\" placeholder=\"go to page\" />\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <input value={this.state.filter.limit} onChange={(e) => this.updateFilterLimit(e.target.value)} min=\"1\" className=\"form-control\" type=\"number\" placeholder=\"record per page\" />\r\n                                </div>\r\n                            </div>\r\n                            <SubmitResetButton onSubmit={this.filterFormSubmit} onReset={this.filterReset} />\r\n                        </div>\r\n                    </Modal>\r\n                    <NavigationButtons limit={this.state.filter.limit ?? 5} totalData={this.state.recordData.totalData ?? 0}\r\n                        activePage={this.state.filter.page ?? 0} onClick={this.loadEntities} />\r\n                    <Modal title=\"Data List\" >\r\n                        {this.state.loading ?\r\n                            <Loading loading={this.state.loading} /> : null}\r\n                        <div className=\"container-fluid\" style={{ overflow: 'scroll' }}>\r\n                            <table className=\"table\" >\r\n                                <DataTableHeader orderButtonOnClick={this.orderButtonOnClick} filterOnChange={this.filterOnChange} headerProps={headerProps} />\r\n                                <tbody>\r\n                                    {\r\n                                        resultList.map((result, i) => {\r\n                                            const number = this.getRecordNumber(i);\r\n                                            const values: Array<any> = EntityValues.parseValues(result, this.props.entityProperty);\r\n                                            return (<tr>\r\n                                                <td>{number}</td>\r\n                                                {values.map(value => {\r\n                                                    try {\r\n                                                        return (<td>{value}</td>)\r\n                                                    } catch (error) {\r\n                                                        return (<td>-</td>)\r\n                                                    }\r\n                                                })}\r\n                                                <td><EditDeleteAction show={this.entityProperty.editable == true} showEditForm={this.showEditForm} record={result} entityProperty={this.entityProperty} reload={() => this.loadEntities(undefined)} app={this.parentApp} /></td>\r\n                                            </tr>)\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n\r\n                        </div>\r\n                    </Modal>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst Loading = ({loading}) => {\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', paddingTop: '2rem', backgroundColor: 'rgb(240,240,240,0.5)', marginLeft: '-1rem', marginTop: '-1rem', position: 'absolute' }}>\r\n            <Spinner show={loading} />\r\n        </div>\r\n    )\r\n}\r\nconst SubmitResetButton = (props: any) => {\r\n    return (<div className=\"btn-group\">\r\n        <button onClick={props.onSubmit} className=\"btn btn-secondary btn-sm\"><span className=\"icon\"><i className=\"fas fa-play\" /></span>Apply Filter</button>\r\n        <button onClick={props.onReset} type=\"reset\" className=\"btn btn-warning btn-sm\"><span className=\"icon\"><i className=\"fas fa-sync-alt\" /></span>Reset</button>\r\n    </div>)\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(MasterDataList))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport EntityProperty from '../../../models/EntityProperty';\r\nimport MasterDataList from './MasterDataList';\r\ninterface IState {\r\n    entityProperty?: EntityProperty\r\n}\r\nclass MasterDataManagement extends BaseComponent {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    code: string = \"\";\r\n    loadingEntityProperty: boolean = false;\r\n    entityProperty: undefined\r\n    constructor(props: any) {\r\n        super(props, true);\r\n\r\n    }\r\n    entityPropertyLoaded = (response: WebResponse) => {\r\n        this.loadingEntityProperty = false;\r\n        if (response.entityProperty == undefined) {\r\n            return;\r\n        }\r\n        this.masterDataService.setEntityProperty(this.props.code, response.entityProperty);\r\n        this.setState({ entityProperty: response.entityProperty });\r\n        this.setTitle(response.entityProperty);\r\n    }\r\n    componentDidUpdate() {\r\n        if (this.props.code != undefined && this.code != this.props.code) {\r\n            this.code = this.props.code;\r\n            this.loadEntityProperty();\r\n        }\r\n        console.debug(\"updated this.props.code: \", this.props.code);\r\n    }\r\n    setTitle = (entityProp: EntityProperty) => {\r\n        document.title = new String(entityProp?.alias).toString();\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.code != undefined && this.code != this.props.code) {\r\n            this.code = this.props.code;\r\n            this.loadEntityProperty();\r\n        }\r\n    }\r\n    startLoading() {\r\n        //\r\n    }\r\n    endLoading() {\r\n        //\r\n    }\r\n    loadEntityProperty() {\r\n\r\n        if (undefined == this.code && this.loadingEntityProperty == true) {\r\n            return;\r\n        }\r\n        const existingEntityProperty = this.masterDataService.getEntityProperty(this.code);\r\n        if (existingEntityProperty != undefined) {\r\n            this.loadingEntityProperty = false;\r\n            this.setState({ entityProperty: existingEntityProperty });\r\n            this.setTitle(existingEntityProperty);\r\n\r\n            return;\r\n        }\r\n        this.loadingEntityProperty = true;\r\n        this.setState({ entityProperty: undefined });\r\n        this.commonAjax(\r\n            this.masterDataService.loadEntityProperty,\r\n            this.entityPropertyLoaded,\r\n            (e: any) => { this.loadingEntityProperty = false; this.showCommonErrorAlert(e) },\r\n            this.code\r\n        )\r\n\r\n    }\r\n    render() {\r\n        if (this.state.entityProperty == undefined) {\r\n            return <div className=\"row\">\r\n                <div className=\"col-1\"><div className=\"spinner-border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                </div>\r\n                </div>\r\n                <div className=\"col-10\"><h4>Loading configuration</h4></div>\r\n            </div>\r\n        }\r\n        return (\r\n            <div id=\"MasterDataManagement\" className=\"container-fluid\">\r\n                <h2>{this.state.entityProperty.alias}</h2>\r\n                <MasterDataList app={this.parentApp} entityProperty={this.state.entityProperty} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MasterDataManagement))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport Menu from './../../../models/Menu';\r\nimport ManagementProperty from '../../../models/ManagementProperty';\r\nimport MasterDataManagement from './MasterDataManagement';\r\n\r\ninterface IState {\r\n    code?: string\r\n    // managementProperties:ManagementProperty[]\r\n}\r\nclass MasterDataMain extends BaseMainMenus {\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        code: undefined\r\n    };\r\n    constructor(props: any) {\r\n        super(props, \"Master Data\", true);\r\n    }\r\n\r\n    managementPropertiesLoaded = (response: WebResponse) => {\r\n        this.masterDataService.managementProperties = response.generalList ? response.generalList : [];\r\n        this.setSidebarMenus();\r\n        this.refresh();\r\n    }\r\n    setSidebarMenus = () => {\r\n        const sidebarMenus: Menu[] = [];\r\n        const managementProperties: ManagementProperty[] = this.masterDataService.managementProperties;\r\n        for (let i = 0; i < managementProperties.length; i++) {\r\n            const element = managementProperties[i];\r\n            sidebarMenus.push({\r\n                name: element.label,\r\n                url: element.entityName,\r\n                code: element.entityName,\r\n                menuClass: element.iconClassName\r\n            });\r\n        }\r\n        if (this.props.setSidebarMenus) {\r\n            this.props.setSidebarMenus(sidebarMenus);\r\n        }\r\n    }\r\n    loadManagamenetPages = () => {\r\n        if (this.masterDataService.managementProperties.length > 0) {\r\n            this.setSidebarMenus();\r\n            this.refresh();\r\n            return;\r\n        }\r\n        this.commonAjax(\r\n            this.masterDataService.loadManagementProperties,\r\n            this.managementPropertiesLoaded,\r\n            this.showCommonErrorAlert\r\n        );\r\n    }\r\n    getCode = (): string => {\r\n        return this.props.match.params.code;\r\n    }\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        this.loadManagamenetPages();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setSidebarMenus();\r\n        // console.debug(\"this.getCode(): \", this.getCode());\r\n        if (this.state.code != this.getCode()) {\r\n            this.setState({ code: this.getCode() });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.getCode() != undefined && this.getCode() != null && this.getCode() != \"\") {\r\n            return <MasterDataManagement app={this.parentApp} code={this.getCode()} />\r\n        }\r\n        if (this.masterDataService.managementProperties.length == 0) {\r\n            return <div className=\"container-fluid\"><h3>Loading</h3></div>\r\n        }\r\n        const properties: ManagementProperty[] = this.masterDataService.managementProperties;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Master Data Page</h2>\r\n                <div className=\"row\">\r\n                    {properties.map(property => {\r\n\r\n                        return (\r\n                            <div className=\"col-md-2 text-center\" style={{ marginBottom: '10px' }}>\r\n                                <h2 ><Link className=\"btn btn-warning btn-lg\" to={\"/management/\" + property.entityName} ><i className={property.iconClassName} /></Link></h2>\r\n                                <p>{property.label}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(MasterDataMain))","\r\n\r\nimport React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass TransactionMain extends BaseMainMenus {\r\n    constructor(props: any) {\r\n        super(props, \"Transaction\", true);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"TransactionMain\" className=\"container-fluid\">\r\n                <h2>Transaction Page</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 text-center\">\r\n                        <h1> <Link className=\"btn btn-info btn-lg\" to=\"/transaction/selling\"><i className=\"fas fa-cash-register\" /></Link></h1>\r\n                        <p>Selling</p>\r\n                    </div>\r\n                    <div className=\"col-md-2 text-center\">\r\n                        <h1><Link className=\"btn btn-info btn-lg\" to=\"/transaction/purchasing\"><i className=\"fas fa-shopping-basket\" /></Link></h1>\r\n                        <p>Purchasing</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionMain))","\r\nimport React, { Component } from 'react';\r\nexport default class Card extends Component<any, any> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div {...this.props.attributes} className={\"card \" + this.props.className}>\r\n                {this.props.title ? <div className=\"card-header\">\r\n                    {this.props.title}\r\n                </div> : null}\r\n                <div className=\"card-body\">\r\n                    {this.props.children}\r\n                </div>\r\n                {this.props.footerContent != undefined ?\r\n                    <div className=\"card-footer\">\r\n                        {this.props.footerContent}\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport default class AnchorWithIcon extends Component<any, any>\r\n{\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        if (this.props.show == false) return null;\r\n        const btnClassName = this.props.className??\"btn btn-outline-secondary\";\r\n        return (\r\n            <Link {...this.props.attributes} to={this.props.to} style={this.props.style} onClick={this.props.onClick} className={btnClassName} >\r\n                {this.props.iconClassName?\r\n                <span style={{marginRight:'5px'}}><i className={this.props.iconClassName}/></span>\r\n                :\r\n                null}\r\n                {this.props.children}\r\n            </Link>\r\n        )\r\n    }\r\n}","import * as url from '../constant/Url'\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport WebRequest from './../models/WebRequest';\r\nimport Filter from './../models/Filter';\r\nexport default class CatalogService {\r\n    private static instance?:CatalogService;\r\n    totalProduct:number = 0;\r\n\r\n    static getInstance(): CatalogService {\r\n        if (this.instance == null) {\r\n            this.instance = new CatalogService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    setTotalProduct = (value:number) => {\r\n        this.totalProduct = value;\r\n    }\r\n    getTotalProduct = () => {\r\n        const endpoint = url.contextPath().concat(\"api/public/totalproduct\");\r\n        return commonAjaxPostCalls(endpoint, {});\r\n    }\r\n    /**\r\n     * \r\n     * @param {JSON} raw \r\n     */\r\n    getProductList = (raw:Filter) => {\r\n         \r\n        const fieldsFilter = {\r\n            // withStock: raw.withStock == true,\r\n            // withSupplier: raw.withSupplier == true,\r\n            // withCategories: raw.withCategories == true,\r\n            ... raw.fieldsFilter\r\n        }\r\n        \r\n        const request:WebRequest = {\r\n            entity: \"product\",\r\n            filter: {\r\n                exacts: raw.exacts == true,\r\n                limit: raw.limit ? raw.limit : 10,\r\n                page: raw.page ? raw.page : 0,\r\n                fieldsFilter: fieldsFilter,\r\n                orderBy: raw.orderBy,\r\n                orderType: raw.orderType\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/get\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n      \r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {String} code \r\n     */\r\n    getProductDetail = (code:string) => this.getProductList({\r\n        limit: 1,\r\n        exacts: true,\r\n        fieldsFilter: {\r\n            'code' : code,\r\n            'withStock': true,\r\n            'withSupplier': true,\r\n        }\r\n    })\r\n\r\n  /**\r\n   * \r\n   * @param req \r\n   */\r\n    getMoreSupplier = (req:any) => { \r\n\r\n        const request:WebRequest = {\r\n            filter: {\r\n                page: req.page,\r\n                fieldsFilter: { productId: req.productId }\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/moresupplier\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n\r\n}","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Menu from './../../../models/Menu';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport Card from './../../container/Card';\r\nimport AnchorWithIcon from '../../navigation/AnchorWithIcon';\r\nimport CatalogService from './../../../services/CatalogService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\ninterface IState { totalProduct: number }\r\nclass CatalogMain extends BaseMainMenus {\r\n    catalogService: CatalogService = CatalogService.getInstance();\r\n    state: IState = { totalProduct: 0 }\r\n    constructor(props: any) {\r\n        super(props, \"Catalog\");\r\n    }\r\n    totalProductLoaded = (response: WebResponse) => {\r\n        this.catalogService.setTotalProduct(response.totalData ?? 0);\r\n        this.setState({ totalProduct: response.totalData });\r\n    }\r\n    totalProductNotLoaded = (e: any) => {\r\n        console.error(e);\r\n    }\r\n    loadTotalProduct = () => {\r\n        this.commonAjax(\r\n            this.catalogService.getTotalProduct,\r\n            this.totalProductLoaded,\r\n            this.totalProductNotLoaded\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        if (this.catalogService.totalProduct <= 0) {\r\n            this.loadTotalProduct();\r\n        } else {\r\n            this.setState({ totalProduct: this.catalogService.totalProduct });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"CatalogMain\" className=\"container-fluid\">\r\n                <h2>Shop Catalog</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <Card title=\"Product Catalog\" className=\"bg-light\">\r\n                            <h4>Total Product: {this.state.totalProduct}</h4>\r\n                            <div className=\"btn-group\">\r\n                                <AnchorWithIcon className=\"btn btn-info\" to=\"/catalog/product\">View Catalog</AnchorWithIcon>\r\n                                <AnchorButton iconClassName=\"fas fa-sync-alt\" onClick={this.loadTotalProduct} />\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <Card title=\"Supplier Catalog\" className=\"bg-light\">\r\n                            <h4>Supplier catalog</h4>\r\n                            <AnchorWithIcon className=\"btn btn-info\" to=\"/catalog/supplier\">View Catalog</AnchorWithIcon>\r\n\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(CatalogMain))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\n\r\nclass HomeMain extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Home\";\r\n    }\r\n    render() {\r\n        const applicationProfile: ApplicationProfile = this.getApplicationProfile();\r\n        const imageUrl: string = baseImageUrl + applicationProfile.backgroundUrl;\r\n        return (\r\n            <div className=\"container-fluid\" style={{padding:0}}>\r\n                <div className=\"jumbotron\"\r\n                    style={{\r\n                        margin:'opx',\r\n                        marginTop: '20px',\r\n                        backgroundImage: 'url(\"' + imageUrl + '\")',\r\n                        backgroundSize: 'cover',\r\n                        color: applicationProfile.fontColor\r\n                    }}\r\n                >\r\n                    <h1 className=\"display-4\">{applicationProfile.name}</h1>\r\n                    <p className=\"lead\">{applicationProfile.shortDescription}</p>\r\n                    <hr className=\"my-4\" />\r\n                    <p>{applicationProfile.welcomingMessage}</p>\r\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">Learn more</a>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(HomeMain))","\nexport default class BaseEntity{\n\tid?:number;\n\tcreatedDate?:Date;\n\tmodifiedDate?:Date;\n\tdeletedDate?:Date;\n\tdeleted?:boolean;\n\n}\n","import BaseEntity from './BaseEntity';\nimport Unit from './Unit';\nimport Category from './Category';\nimport Supplier from './Supplier';\n\nexport default class Product extends BaseEntity{\n\tcode?:string;\n\tname?:string;\n\tdescription?:string;\n\tprice?:number;\n\ttype?:string;\n\timageUrl?:string;\n\tunit?:Unit;\n\tcategory?:Category;\n\tnewProduct?:boolean;\n\tcount?:number;\n\tsuppliers?:Supplier[];\n\n\tstatic getDefaultPicture(product:Product, baseImageUrl?:string) :string{\n\n\t\tif (product.imageUrl && product.imageUrl?.length >0) {\n\t\t\treturn (baseImageUrl?baseImageUrl:\"\") + product.imageUrl.split(\"~\")[0];\n\t\t}\n\t\treturn (baseImageUrl?baseImageUrl:\"\") + \"default.bmp\";\n\t}\n\tstatic getPictureNames(product:Product, baseImageUrl?:string): string[] {\n\t\tif (product.imageUrl && product.imageUrl?.length >0) {\n\t\t\tlet names:string[] = product.imageUrl.split(\"~\");\n\t\t\tif (baseImageUrl) {\n\t\t\t\treturn names.map(name=>{\n\t\t\t\t\treturn baseImageUrl+name;\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn names;\n\t\t}\n\t\treturn [Product.getDefaultPicture(product, baseImageUrl)]\n\t}\n\n\tstatic countSummary(products:Product[]) : number\n\t{\n\t\tlet count = 0;\n\t\tfor (let i = 0; i < products.length; i++) {\n\t\t\tconst element = products[i];\n\t\t\tcount += element.count??0;\n\t\t}\n\t\treturn count;\n\t}\n\n}\n","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\nimport Product from './../../../models/Product';\r\n\r\nclass CartMain extends BaseMainMenus\r\n{\r\n    constructor(props:any){\r\n        super(props, \"Shopping Cart\");\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"CartMain\" className=\"container-fluid\">\r\n                <h2>Shopping Cart</h2>\r\n                <div className=\"alert alert-info\">\r\n                   <p>Plan your shopping list</p>\r\n                   <p>Current items: <strong>{Product.countSummary(this.props.cart)}</strong></p>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(CartMain))","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport { emptyPromise, commonAjaxPostCalls } from './Promises'; \r\nimport Transaction from './../models/Transaction';\r\nimport WebRequest from './../models/WebRequest';\r\nimport WebResponse from './../models/WebResponse';\r\nconst axios = require('axios');\r\nexport default class BaseTransactionService {\r\n\r\n    getProductList = (raw) => {\r\n        if( raw.value == null || raw.value.toString().trim() == \"\"){\r\n            return emptyPromise({entities:[]});\r\n        }\r\n        const fieldsFilter = {};\r\n        fieldsFilter[raw.key] = raw.value;\r\n        const request = {\r\n            entity: \"product\", \r\n            filter: { \r\n                page: 0, \r\n                exacts: (raw.exacts == true), \r\n                limit: 15, \r\n                fieldsFilter: fieldsFilter \r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/entity/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n    submitTransactionSelling = (transaction:Transaction) => this.submitTransaction({...transaction, type:'SELLING' })\r\n    submitTransactionPurchasing = (transaction:Transaction) => this.submitTransaction({...transaction, type:'PURCHASING' })\r\n\r\n    submitTransaction = (raw:Transaction) => {\r\n        console.debug(\"submitTransaction \", raw.type);\r\n        const type = raw.type;\r\n        const request:WebRequest = {\r\n            productFlows: raw.productFlows\r\n        }\r\n        return new Promise<WebResponse>(function (resolve, reject) {\r\n            let endpoint:string = \"\";\r\n            switch (type) {\r\n                case \"SELLING\":\r\n                    if(null == raw.customer){\r\n                        reject(\"Invalid Customer\");\r\n                        break;\r\n                    }\r\n                    request.customer = raw.customer;\r\n                    endpoint = url.contextPath().concat(\"api/app/transaction/selling\")\r\n                    break;\r\n                case \"PURCHASING\": \r\n                default:\r\n                    if(null == raw.supplier){\r\n                        reject(\"Invalid Supplier\");\r\n                        break;\r\n                    }\r\n                    request.supplier = raw.supplier;\r\n                    endpoint = url.contextPath().concat(\"api/app/transaction/purchasing\")\r\n                    break;\r\n            } \r\n            axios.post(endpoint, request,{\r\n                headers: commonAuthorizedHeader(),\r\n            })\r\n                .then(response => response.data).then(function (response:WebResponse) {\r\n                    if (response.code == \"00\") \r\n                    { resolve(response) } \r\n                    else \r\n                    { reject(response) }\r\n                }).\r\n                catch((e:any) =>{ console.error(e); reject(e)});\r\n        })\r\n    }\r\n\r\n    getStockInfo = (productCode:string) => {\r\n        const request:WebRequest = {\r\n            entity: \"product\",\r\n            filter: {\r\n                limit: 1,\r\n                exacts: true,\r\n                fieldsFilter: { \"code\": productCode, withStock: true }\r\n            }\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/public/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","import * as url from '../constant/Url'\r\nimport { commonAuthorizedHeader } from '../middlewares/Common';\r\nimport BaseTransactionService from './BaseTransactionService';\r\nimport Supplier from './../models/Supplier';\r\nimport ProductFlow from './../models/ProductFlow';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport { contextPath } from './../constant/Url';\r\nexport default class TransactionPurchasingService extends BaseTransactionService {\r\n    private static instance?:TransactionPurchasingService;\r\n\r\n    static getInstance(): TransactionPurchasingService {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionPurchasingService();\r\n        }\r\n        return this.instance;\r\n    } \r\n\r\n    // submit = (productFlows:ProductFlow[], supplier: Supplier) => {\r\n    //     const request:WebRequest = {\r\n    //         supplier:supplier,\r\n    //         productFlows:productFlows\r\n    //     };\r\n    //     const endpoint = contextPath()+\"api/app/transaction/purchasing\";\r\n    //     return commonAjaxPostCalls(endpoint, request);\r\n    // }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport TransactionPurchasingService from './../../../../services/TransactionPurchasingService';\r\nimport Supplier from './../../../../models/Supplier';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from './../../../../services/MasterDataService';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\r\ninterface IState {\r\n    supplier?: Supplier; \r\n    supplierNotFound: boolean;\r\n}\r\nclass SupplierForm extends BaseComponent { \r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = { \r\n        supplierNotFound: false,\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n    searchSupplier = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('id');\r\n        if (!id) return;\r\n        this.loadSupplier(parseInt(id.toString()));\r\n    }\r\n    supplierLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Supplier not found\");\r\n        }\r\n        this.props.setSupplier(response.entities[0]);\r\n        this.setState({ supplier: response.entities[0], supplierNotFound: false });\r\n    }\r\n    supplierNotFound = (e: any) => {\r\n        this.setState({ supplierNotFound: true });\r\n    }\r\n    loadSupplier = (id: number) => {\r\n        this.commonAjax(this.masterDataService.getById,\r\n            this.supplierLoaded, this.supplierNotFound, 'supplier', id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchSupplier} >\r\n                <Modal toggleable={true} title=\"Supplier form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/supplier\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Supplier code\" required type=\"number\" className=\"form-control\" name=\"id\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <SupplierDetail supplier={this.state.supplier} notFound={this.state.supplierNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst SupplierDetail = (props: { supplier?: Supplier, notFound: boolean }) => {\r\n    const h = '120px';\r\n    if (true == props.notFound) {\r\n        return <div style={{ height: h }}><div className=\"alert alert-warning\">Supplier not found</div></div>\r\n    }\r\n    if (!props.supplier) {\r\n        return <div style={{ height: h }}><div className=\"alert alert-secondary\">Please select supplier</div></div>\r\n    }\r\n    const supplier: Supplier = props.supplier;\r\n    return (\r\n        <div style={{ height: h }}>\r\n            <h2>{supplier.name}</h2>\r\n            <address>\r\n                {supplier.address}<br />\r\n                <abbr title=\"Contact\">Contact: </abbr>{supplier.contact}\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SupplierForm))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport TransactionPurchasingService from '../../../services/TransactionPurchasingService';\r\nimport Product from '../../../models/Product';\r\nimport ProductFlow from '../../../models/ProductFlow';\r\nimport Modal from '../../container/Modal';\r\nimport MasterDataService from '../../../services/MasterDataService';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport FormGroup from './../../form/FormGroup';\r\nimport AnchorWithIcon from './../../navigation/AnchorWithIcon';\r\ninterface IState {\r\n    product?: Product;\r\n    productFlows: ProductFlow[];\r\n    selectedProductFlow?: ProductFlow;\r\n    productNotFound: boolean;\r\n}\r\nexport default class ProductForm extends BaseComponent {\r\n\r\n    transactionService = TransactionPurchasingService.getInstance();\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        productFlows: [],\r\n        productNotFound: false,\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { ...this.state };\r\n\r\n    }\r\n    searchProduct = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('code');\r\n        if (!id) return;\r\n        this.loadProduct((id.toString()));\r\n    }\r\n    productLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Product not found\");\r\n        }\r\n        this.props.setProduct(response.entities[0]);\r\n        this.setState({ product: response.entities[0], productNotFound: false });\r\n    }\r\n    setProduct = (product: Product) => {\r\n        this.setState({ product: product, productNotFound: false });\r\n    }\r\n    productNotFound = (e: any) => {\r\n        this.setState({ productNotFound: true });\r\n    }\r\n    loadProduct = (code: string) => {\r\n        // this.commonAjax(this.masterDataService.getBy,\r\n        //     this.productLoaded, this.productNotFound, 'product', { code: code });\r\n\r\n        this.commonAjaxWithProgress(this.transactionService.getStockInfo,\r\n            this.productLoaded, this.productNotFound, code);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchProduct} >\r\n                <Modal toggleable={true}  title=\"Product form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/product\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Product code\" required type=\"text\" className=\"form-control\" name=\"code\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <ProductDetail product={this.state.product} notFound={this.state.productNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst ProductDetail = (props: { product?: Product, notFound: boolean }) => {\r\n    const h = '120px';\r\n    if (true == props.notFound) {\r\n        return <div style={{ height: h }}><div className=\"alert alert-warning\">Product not found</div></div>\r\n    }\r\n    if (!props.product) {\r\n        return <div style={{ height: h }}><div className=\"alert alert-secondary\">Please select product</div></div>\r\n    }\r\n    const product: Product = props.product;\r\n    return (\r\n        <div style={{ height: h }}>\r\n            <h4>{product.name}</h4>\r\n            <table className=\"table\">\r\n                <thead><tr>\r\n                    <th>Unit</th>\r\n                    <th>Category</th>\r\n                    <th>Price@Unit</th>\r\n                    <th>Current Amount</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{product.unit ? product.unit.name : '-'}</td>\r\n                        <td>{product.category ? product.category.name : '-'}</td>\r\n                        <td style={{ fontFamily: 'monospace' }}>{product.price}</td>\r\n                        <td>{product.count}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n","import BaseEntity from './BaseEntity';\nimport Customer from './Customer';\nimport ProductFlow from './ProductFlow';\nimport Supplier from './Supplier';\nimport User from './User';\n\nexport default class Transaction extends BaseEntity{\n\tcustomer?:Customer;\n\tsupplier?:Supplier;\n\tcode?:string;\n\ttype?:string;\n\tmode?:string;\n\ttransactionDate?:Date;\n\tuser?:User;\n\tproductFlows?:ProductFlow[];\n\tproductFlow?:any;\n\n}\n","import BaseEntity from './BaseEntity';\nimport Transaction from './Transaction';\nimport Product from './Product';\nimport ProductFlowStock from './ProductFlowStock';\n\nexport default class ProductFlow extends BaseEntity{\n\n\ttransaction?:Transaction;\n\texpiryDate?:Date;\n\tprice?:number;\n\tcount?:number;\n\tflowReferenceId?:number;\n\tproduct?:Product;\n\ttransactionId?:number;\n\tproductFlowStock?:ProductFlowStock;\n\ttotalPrice?:number; \n\tstatic create(product:Product) :Product{\n\t\tconst obj = new ProductFlow();\n\t\tobj.product = product;\n\t\treturn obj;\n\n\t}\n}\n","\r\nimport BaseComponent from './../../BaseComponent';\r\nimport ProductFlow from './../../../models/ProductFlow';\r\nimport Supplier from './../../../models/Supplier';\r\nimport Product from '../../../models/Product';\r\nimport React from 'react';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\nimport Customer from './../../../models/Customer';\r\ninterface IState {\r\n    supplier?: Supplier;\r\n    productFlows: ProductFlow[];\r\n    selectedProductFlow?: ProductFlow;\r\n    customer?:Customer\r\n}\r\nexport default class BaseTransactionComponent extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        productFlows: []\r\n    }\r\n    productFormRef: React.RefObject<any> = React.createRef();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n    }\r\n    setProduct = (product: Product) => {\r\n        const productFlow = ProductFlow.create(product);\r\n        this.setState({ selectedProductFlow: productFlow });\r\n    }\r\n    addToCart = (e) => {\r\n        e.preventDefault();\r\n        if (!this.state.selectedProductFlow) {\r\n            this.showError(\"Please select product!\");\r\n            return;\r\n        }\r\n        const productFlow: ProductFlow = Object.assign(new ProductFlow(), this.state.selectedProductFlow);\r\n        const existInCart: boolean = this.existInCart(productFlow);\r\n\r\n        if (existInCart) {\r\n            const app = this;\r\n            this.showConfirmation(\"Override \" + productFlow.product?.name + \" data?\")\r\n                .then(function (ok) {\r\n                    if (ok) {\r\n                        app.addProductFlowState(productFlow);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            this.addProductFlowState(productFlow);\r\n        }\r\n        e.target.reset();\r\n\r\n    }\r\n    addProductFlowState = (productFlow: ProductFlow) => {\r\n        const productFlows: ProductFlow[] = this.state.productFlows;\r\n        const existInCart: boolean = this.existInCart(productFlow);\r\n        if (existInCart) {\r\n            for (let i = 0; i < productFlows.length; i++) {\r\n                const element = productFlows[i];\r\n                if (element.product?.code == productFlow.product?.code) {\r\n                    productFlows[i] = productFlow;\r\n                }\r\n            }\r\n        } else {\r\n            productFlows.push(productFlow);\r\n        }\r\n\r\n        this.setState({ productFlows: productFlows });\r\n        this.clearSelectedProductFlow();\r\n    }\r\n\r\n    existInCart = (productFlow: ProductFlow) => {\r\n        for (let i = 0; i < this.state.productFlows.length; i++) {\r\n            const element = this.state.productFlows[i];\r\n            if (element.product?.code == productFlow.product?.code) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearSelectedProductFlow = () => {\r\n        if (!this.state.selectedProductFlow) {\r\n            return;\r\n        }\r\n        this.setState({ selectedProductFlow: undefined });\r\n        if (this.productFormRef.current)\r\n            this.productFormRef.current.setProduct(undefined);\r\n    }\r\n    editProduct = (code:any) => {\r\n        const productFlows =  this.state.productFlows;\r\n        const app= this;\r\n        \r\n        this.showConfirmation(\"Edit data \"+code+\"?\")\r\n        .then(function(ok){\r\n            let productFlow:ProductFlow|undefined = undefined;\r\n            for (let i = 0; i < productFlows.length; i++) {\r\n                const element = productFlows[i];\r\n                if (element.product?.code ==  code) {\r\n                    productFlow = Object.assign(new ProductFlow(), element);\r\n                }\r\n            }\r\n           \r\n            if (productFlow && ok && app.productFormRef.current) {\r\n                app.setState({selectedProductFlow:productFlow});\r\n                app.productFormRef.current.setProduct(productFlow.product);\r\n            }\r\n        })\r\n    }\r\n    removeProduct = (code:any) => {\r\n        const productFlows =  this.state.productFlows;\r\n        const app= this;\r\n        for (let i = 0; i < productFlows.length; i++) {\r\n            const element = productFlows[i];\r\n            if (element.product?.code ==  code) {\r\n                productFlows.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n        this.showConfirmationDanger(\"Remove data?\")\r\n        .then(function(ok){\r\n            if (ok) {\r\n                if (app.state.selectedProductFlow && code == app.state.selectedProductFlow.product?.code) {\r\n                    app.clearSelectedProductFlow();\r\n                }\r\n                app.setState({productFlows:productFlows});\r\n            }\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const totalUnitAndPrice = (productFlows:ProductFlow[]):{unit:number, productFlowPrice:number, productPrice:number} => {\r\n    let totalUnit:number = 0, totalPrice:number = 0, totalProductPrice:number = 0;\r\n    for (let i = 0; i < productFlows.length; i++) {\r\n        const element = productFlows[i];\r\n        totalUnit+=(element.count?element.count:0);\r\n        totalPrice+=((element.count??0)*(element.price??0));\r\n        totalProductPrice+=((element.count??0)*(element.product?.price??0));\r\n    }\r\n    return {\r\n        unit:totalUnit,\r\n        productFlowPrice:totalPrice,\r\n        productPrice:totalProductPrice    \r\n    }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport TransactionPurchasingService from './../../../../services/TransactionPurchasingService';\r\nimport Supplier from './../../../../models/Supplier';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from './../../../../services/MasterDataService';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport SupplierForm from './SupplierForm';\r\nimport ProductForm from '../ProductForm';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Product from '../../../../models/Product';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Transaction from './../../../../models/Transaction';\r\nimport BaseTransactionComponent, { totalUnitAndPrice } from './../BaseTransactionComponent';\r\n \r\nclass TransactionPurchasing extends BaseTransactionComponent {\r\n    transactionPurchasingService = TransactionPurchasingService.getInstance();\r\n    constructor(props: any) {\r\n        super(props); \r\n    }\r\n    setSupplier = (supplier: Supplier) => {\r\n        this.setState({ supplier: supplier });\r\n    } \r\n    \r\n    \r\n    updateSelectedProductFlowProp = (e) => {\r\n        const productFlow: ProductFlow | undefined = this.state.selectedProductFlow;\r\n        if (!productFlow) {\r\n            this.showError(\"Please select product!\");\r\n            e.target.value = null;\r\n            return;\r\n        }\r\n        const propName = e.target.name;\r\n        const value = e.target.type=='number'?parseInt(e.target.value) : e.target.value;\r\n        productFlow[propName] = value;\r\n        this.setState({ selectedProductFlow: productFlow });\r\n\r\n    }\r\n   \r\n    \r\n    submitTransaction = (e) => {\r\n        e.preventDefault();\r\n        const app = this;\r\n        const formData = new FormData(e.target);\r\n        this.showConfirmation(\"Submit Transactio?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.doSubmit(formData);\r\n            }\r\n        });\r\n    }\r\n\r\n    doSubmit = (formData:FormData) => {\r\n        const transaction:Transaction = new Transaction();\r\n        transaction.productFlows = this.state.productFlows;\r\n        transaction.supplier = this.state.supplier;\r\n        const date = formData.get('date');\r\n        transaction.transactionDate =date ? new Date(date.toString()) : new Date();\r\n        this.commonAjaxWithProgress(\r\n            this.transactionPurchasingService.submitTransactionPurchasing,\r\n            this.transactionSucess,\r\n            this.showCommonErrorAlert,\r\n            transaction\r\n        )\r\n    }\r\n\r\n    transactionSucess = (response:WebResponse) => {\r\n        const code = response.transaction?.code;\r\n        this.showInfo(\"Transaction success: \"+code);\r\n    }\r\n    \r\n    render() {\r\n        const productFlowsPopulated = this.state.productFlows.length > 0;\r\n        const supplierExist = this.state.supplier != undefined;\r\n        const showSubmitTrxButton = productFlowsPopulated == true && supplierExist == true;\r\n        return (\r\n            <div id=\"TransactionPurchasing\" className=\"container-fluid\">\r\n                <h2>Purchasing</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\" >\r\n                        <ProductForm ref={this.productFormRef} setProduct={this.setProduct} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <SupplierForm setSupplier={this.setSupplier} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.addToCart} >\r\n                            <Modal title={\"Product Data\"} footerContent={<Fragment>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Add\" />\r\n                                <input type=\"reset\" className=\"btn btn-warning\" value=\"Reset\" />\r\n                            </Fragment>}>\r\n                                <FormGroup label=\"Quantity\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.count} type=\"number\" onChange={this.updateSelectedProductFlowProp} name=\"count\" required min=\"1\" className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Price @Unit\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.price} type=\"number\" onChange={this.updateSelectedProductFlowProp} name=\"price\" min=\"0\" required className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Expired Date\">\r\n                                    <input defaultValue={new String(this.state.selectedProductFlow?.expiryDate).toString()} type=\"date\" onChange={this.updateSelectedProductFlowProp} name=\"expiryDate\" required className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        {showSubmitTrxButton?\r\n                        <form onSubmit={this.submitTransaction}>\r\n                            <Modal title=\"Action\">\r\n                                <FormGroup label=\"Date\">\r\n                                    <input required type=\"date\" name=\"date\" className=\"form-control\" />\r\n                                </FormGroup>\r\n                                <FormGroup label=\"Action\">\r\n                                    <div>\r\n                                        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Transaction\"/>\r\n                                    </div>\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>:null}\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <Modal title=\"Products\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit</th>\r\n                                        <th>Exp Date</th>\r\n                                        <th>Price</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productFlows.map((productFlow, i) => {\r\n                                        return (\r\n                                            <tr key={\"pf_\"+i}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{productFlow.product?.name}</td>\r\n                                                <td>{productFlow.count}</td>\r\n                                                <td>{productFlow.product?.unit?.name}</td>\r\n                                                <td>{productFlow.expiryDate}</td>\r\n                                                <td>{productFlow.price}</td>\r\n                                                <td>{(productFlow.count ?? 0) * (productFlow.price ?? 0)}</td>\r\n                                                <td>\r\n                                                    <AnchorButton onClick={(e)=>this.editProduct(productFlow.product?.code)} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" >edit</AnchorButton>\r\n                                                    <AnchorButton onClick={(e)=>this.removeProduct(productFlow.product?.code)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" >remove</AnchorButton>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <td colSpan={2}><strong>Total</strong></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).unit}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).productFlowPrice}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    } \r\n} \r\n\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps, \r\n)(TransactionPurchasing))","import * as url from '../constant/Url'\r\nimport BaseTransactionService from './BaseTransactionService';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport WebRequest from './../models/WebRequest';\r\nexport default class TransactionSellingService extends BaseTransactionService{\r\n    private static instance?:TransactionSellingService;\r\n\r\n    static getInstance(): TransactionSellingService {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionSellingService();\r\n        }\r\n        return this.instance;\r\n    }\r\n\r\n    getCustomerList = (raw:any) => {\r\n        const fieldsFilter = {};\r\n        fieldsFilter[raw.key] = raw.value;\r\n        const request:WebRequest = {\r\n            entity: \"customer\",\r\n            filter: {\r\n                page: (raw.page > 0 ? raw.page : 0),\r\n                limit: (raw.limit > 0 ? raw.limit : 10),\r\n                exacts: (raw.exacts == true),\r\n                fieldsFilter: fieldsFilter\r\n            }\r\n        }\r\n\r\n        const endpoint = url.contextPath().concat(\"api/app/entity/get\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport Customer from '../../../../models/Customer';\r\nimport Modal from '../../../container/Modal';\r\nimport MasterDataService from '../../../../services/MasterDataService';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport AnchorWithIcon from './../../../navigation/AnchorWithIcon';\r\ninterface IState {\r\n    customer?: Customer;\r\n    customerNotFound: boolean;\r\n}\r\nclass CustomerForm extends BaseComponent {\r\n    masterDataService = MasterDataService.getInstance();\r\n    state: IState = {\r\n        customerNotFound: false,\r\n    }\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n    }\r\n    searchCustomer = (e) => {\r\n        e.preventDefault();\r\n        const formData: FormData = new FormData(e.target);\r\n        const id = formData.get('id');\r\n        if (!id) return;\r\n        this.loadCustomer(parseInt(id.toString()));\r\n    }\r\n    customerLoaded = (response: WebResponse) => {\r\n        if (!response.entities || !response.entities[0]) {\r\n            throw new Error(\"Customer not found\");\r\n        }\r\n        this.props.setCustomer(response.entities[0]);\r\n        this.setState({ customer: response.entities[0], customerNotFound: false });\r\n    }\r\n    customerNotFound = (e: any) => {\r\n        this.setState({ customerNotFound: true });\r\n    }\r\n    loadCustomer = (id: number) => {\r\n        this.commonAjax(this.masterDataService.getById,\r\n            this.customerLoaded, this.customerNotFound, 'customer', id);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <form onSubmit={this.searchCustomer} >\r\n                <Modal toggleable={true}  title=\"Customer form\" footerContent={\r\n                    <Fragment>\r\n                        <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/customer\" className=\"btn btn-outline-secondary\" />\r\n                        <input type=\"submit\" className=\"btn btn-secondary\" value=\"Search\" />\r\n                        <input type=\"reset\" className=\"btn btn-outline-secondary\" />\r\n                    </Fragment>\r\n                } >\r\n                    <div className=\"form-group\">\r\n                        <FormGroup label=\"Code\">\r\n                            <input placeholder=\"Customer code\" required type=\"number\" className=\"form-control\" name=\"id\" />\r\n                        </FormGroup>\r\n                    </div>\r\n                    <CustomerDetail customer={this.state.customer} notFound={this.state.customerNotFound} />\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\nconst CustomerDetail = (props: { customer?: Customer, notFound: boolean }) => {\r\n    const h = '120px';\r\n    if (true == props.notFound) {\r\n        return <div style={{ height: h }}><div className=\"alert alert-warning\">Customer not found</div></div>\r\n    }\r\n    if (!props.customer) {\r\n        return <div style={{ height: h }}><div className=\"alert alert-secondary\">Please select customer</div></div>\r\n    }\r\n    const customer: Customer = props.customer;\r\n    return (\r\n        <div style={{ height: h }}>\r\n            <h2>{customer.name}</h2>\r\n            <address>\r\n                {customer.address}<br />\r\n                <abbr title=\"Contact\">Contact: </abbr>{customer.phone}\r\n            </address>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(CustomerForm))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionSellingService from '../../../../services/TransactionSellingService';\r\nimport Customer from '../../../../models/Customer';\r\nimport ProductFlow from '../../../../models/ProductFlow';\r\nimport Modal from '../../../container/Modal';\r\nimport WebResponse from '../../../../models/WebResponse'; \r\nimport ProductForm from '../ProductForm';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Transaction from '../../../../models/Transaction';\r\nimport BaseTransactionComponent, { totalUnitAndPrice } from '../BaseTransactionComponent';\r\nimport CustomerForm from './CustomerForm';\r\n\r\nclass TransactionSelling extends BaseTransactionComponent {\r\n    transactionSellingService = TransactionSellingService.getInstance();\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n    setCustomer = (customer: Customer) => {\r\n        this.setState({ customer: customer });\r\n    }\r\n\r\n    updateSaleQty = (e) => {\r\n        const productFlow: ProductFlow | undefined = this.state.selectedProductFlow;\r\n        if (!productFlow) {\r\n            this.showError(\"Please select product!\");\r\n            e.target.value = null;\r\n            return;\r\n        }\r\n        const value = parseInt(e.target.value);\r\n        productFlow.count = value;\r\n        this.setState({ selectedProductFlow: productFlow });\r\n    }\r\n\r\n    submitTransaction = (e) => {\r\n        e.preventDefault();\r\n        const app = this;\r\n        const formData = new FormData(e.target);\r\n        this.showConfirmation(\"Submit Transactio?\")\r\n            .then(function (ok) {\r\n                if (ok) {\r\n                    app.doSubmit(formData);\r\n                }\r\n            });\r\n    }\r\n\r\n    doSubmit = (formData: FormData) => {\r\n        const transaction: Transaction = new Transaction();\r\n        transaction.productFlows = this.state.productFlows;\r\n        transaction.customer = this.state.customer;\r\n        const date = formData.get('date');\r\n        transaction.transactionDate = date ? new Date(date.toString()) : new Date();\r\n        this.commonAjaxWithProgress(\r\n            this.transactionSellingService.submitTransactionSelling,\r\n            this.transactionSucess,\r\n            this.showCommonErrorAlert,\r\n            transaction\r\n        )\r\n    }\r\n\r\n    transactionSucess = (response: WebResponse) => {\r\n        const code = response.transaction?.code;\r\n        this.showInfo(\"Transaction success: \" + code);\r\n    }\r\n\r\n    render() {\r\n        const productFlowsPopulated = this.state.productFlows.length > 0;\r\n        const customerExist = this.state.customer != undefined;\r\n        const showSubmitTrxButton = productFlowsPopulated == true && customerExist == true;\r\n        const selectedProductFlow = this.state.selectedProductFlow;\r\n        return (\r\n            <div id=\"TransactionSelling\"  className=\"container-fluid\">\r\n                <h2>Selling</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\" >\r\n                        <ProductForm ref={this.productFormRef} setProduct={this.setProduct} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <CustomerForm setCustomer={this.setCustomer} app={this.parentApp} />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <form onSubmit={this.addToCart} >\r\n                            <Modal title={\"Product Data\"} footerContent={<Fragment>\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Add\" />\r\n                                <input type=\"reset\" className=\"btn btn-warning\" value=\"Reset\" />\r\n                            </Fragment>}>\r\n                                <FormGroup label=\"Quantity\">\r\n                                    <input defaultValue={this.state.selectedProductFlow?.count}\r\n                                         type=\"number\" onChange={this.updateSaleQty} name=\"count\" required \r\n                                         min={1} max={\r\n                                            selectedProductFlow?selectedProductFlow.product?.count:0\r\n                                         } className=\"form-control\" />\r\n                                </FormGroup>\r\n                            </Modal>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        {showSubmitTrxButton ?\r\n                            <form onSubmit={this.submitTransaction}>\r\n                                <Modal title=\"Action\">\r\n                                    <FormGroup label=\"Date\">\r\n                                        <input required type=\"date\" name=\"date\" className=\"form-control\" />\r\n                                    </FormGroup>\r\n                                    <FormGroup label=\"Action\">\r\n                                        <div>\r\n                                            <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit Transaction\" />\r\n                                        </div>\r\n                                    </FormGroup>\r\n                                </Modal>\r\n                            </form> : null}\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <Modal title=\"Products\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>No</th>\r\n                                        <th>Name</th>\r\n                                        <th>Quantity</th>\r\n                                        <th>Unit</th>\r\n                                        {/* <th>Exp Date</th> */}\r\n                                        <th>Price</th>\r\n                                        <th>Total Price</th>\r\n                                        <th>Action</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productFlows.map((productFlow, i) => {\r\n                                        return (\r\n                                            <tr key={\"pf_\" + i}>\r\n                                                <td>{i + 1}</td>\r\n                                                <td>{productFlow.product?.name}</td>\r\n                                                <td>{productFlow.count}</td>\r\n                                                <td>{productFlow.product?.unit?.name}</td>\r\n                                                {/* <td>{productFlow.expiryDate}</td> */}\r\n                                                <td>{productFlow.product?.price}</td>\r\n                                                <td>{(productFlow.count ?? 0) * (productFlow.product?.price ?? 0)}</td>\r\n                                                <td>\r\n                                                    <AnchorButton onClick={(e) => this.editProduct(productFlow.product?.code)} iconClassName=\"fas fa-edit\" className=\"btn btn-warning btn-sm\" >edit</AnchorButton>\r\n                                                    <AnchorButton onClick={(e) => this.removeProduct(productFlow.product?.code)} iconClassName=\"fas fa-times\" className=\"btn btn-danger btn-sm\" >remove</AnchorButton>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                    <tr>\r\n                                        <td colSpan={2}><strong>Total</strong></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).unit}</td>\r\n                                        {/* <td></td> */}\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td>{totalUnitAndPrice(this.state.productFlows).productPrice}</td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n)(TransactionSelling))","import * as url from '../constant/Url'\r\nimport { commonAjaxPostCalls } from './Promises';\r\nimport Filter from './../models/Filter';\r\nimport WebRequest from './../models/WebRequest';\r\nexport default class TransactionHistoryService {\r\n    private static instance?:TransactionHistoryService;\r\n    \r\n    static getInstance() :TransactionHistoryService\r\n    {\r\n        if (this.instance == null) {\r\n            this.instance = new TransactionHistoryService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    getProductSales = (filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/productsales\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getProductSalesDetail = (id:number, filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/productsalesdetail/\"+id);\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getCashflowDetail = (filter:Filter) => {\r\n        const request:WebRequest = {\r\n            filter:filter\r\n        }\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/cashflowdetail\");\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n    getTransactionData = function (transactionCode:string) {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/transactiondata/\" + transactionCode)\r\n        return commonAjaxPostCalls(endpoint, {});\r\n\r\n    }\r\n\r\n    getInventoriesQuantity = function (request = {}) {\r\n        const endpoint = url.contextPath().concat(\"api/app/transaction/inventoriesquantity\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n\r\n    }\r\n\r\n    getBalanceInfo = (request:any) => {\r\n        const endpoint = url.contextPath().concat(\"api/app/admin/balance\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n}","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from './../../../../services/TransactionHistoryService';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport Transaction from './../../../../models/Transaction';\r\nimport Modal from './../../../container/Modal';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nimport ProductFlow from './../../../../models/ProductFlow';\r\nimport Product from '../../../../models/Product';\r\nimport { totalUnitAndPrice } from '../BaseTransactionComponent';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\ninterface IState {\r\n    transactionData?: Transaction;\r\n    transactionCode?: string;\r\n    dataNotFound: boolean\r\n}\r\nclass TransactionDetail extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state: IState = { dataNotFound: false };\r\n    constructor(props: any) {\r\n        super(props, true);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"Transaction Detail\";\r\n    }\r\n    componentDidUpdate() {\r\n        this.validateLoginStatus();\r\n    }\r\n\r\n    recordLoaded = (response: WebResponse) => {\r\n        if (!response.transaction) {\r\n            throw new Error(\"Not found\");\r\n        }\r\n        response.transaction.productFlows = response.entities;\r\n        this.setState({ transactionData: response.transaction, dataNotFound: false });\r\n    }\r\n\r\n    recordNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.setState({ dataNotFound: true, transactionData: undefined });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.commonAjax(\r\n            this.transactionHistoryService.getTransactionData,\r\n            this.recordLoaded,\r\n            this.recordNotLoaded,\r\n            this.state.transactionCode\r\n        )\r\n    }\r\n    setTransactionCode = (e) => {\r\n        this.setState({ transactionCode: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"TransactionDetail\" className=\"container-fluid\">\r\n                <h2>Transaction Detail Page</h2>\r\n                <div className=\"row\">\r\n                    <form className=\"col-md-6\" onSubmit={this.onSubmit}>\r\n                        <Modal title=\"Transaction Info\"\r\n                            footerContent={\r\n                                <Fragment>\r\n                                    <AnchorWithIcon iconClassName=\"fas fa-list\" attributes={{ target: '_blank' }} to=\"/management/transaction\" className=\"btn btn-secondary\" >Transactions Record</AnchorWithIcon>\r\n                                    <input type=\"submit\" className=\"btn btn-primary\" value=\"Search\" />\r\n                                </Fragment>\r\n                            }\r\n                        >\r\n                            <FormGroup label=\"Code\">\r\n                                <input required onChange={this.setTransactionCode} type=\"text\" placeholder=\"Transaction code\" className=\"form-control\" />\r\n                            </FormGroup>\r\n                        </Modal>\r\n                    </form>\r\n                    <div className=\"col-md-6\"></div>\r\n                    <div className=\"col-md-12\">\r\n                        <SimpleError show={this.state.dataNotFound == true} >Data not found</SimpleError>\r\n                        <TransactionData show={this.state.transactionData != undefined} transaction={this.state.transactionData} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst TransactionData = (props) => {\r\n    if (props.show == false) return null;\r\n    const transaction: Transaction = props.transaction;\r\n    const productFlows: ProductFlow[] = transaction.productFlows ? transaction.productFlows: [];\r\n    const isSelling = transaction.type == 'SELLING';\r\n    \r\n    return (\r\n        <Modal title=\"Transaction Data\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <FormGroup label=\"Code\" orientation='horizontal'>\r\n                        {transaction.code}\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Type\" orientation='horizontal'>\r\n                        {transaction.type}-{transaction.mode}\r\n                    </FormGroup>\r\n                    <FormGroup label=\"Date\" orientation='horizontal'>\r\n                        {new Date(transaction.transactionDate ?? new Date()).toString()}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {isSelling ?\r\n                        <FormGroup label=\"Customer\" orientation='horizontal'>\r\n                            {transaction.customer?.name}\r\n                        </FormGroup> :\r\n                        <FormGroup label=\"Supplier\" orientation='horizontal'>\r\n                            {transaction.supplier?.name}\r\n                        </FormGroup>\r\n                    }\r\n\r\n                    <FormGroup label=\"User\" orientation='horizontal'>\r\n                        {transaction.user?.displayName}\r\n                    </FormGroup>\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <h3>Products</h3>\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>No</th>\r\n                                <th>Name</th>\r\n                                <th>Quantity</th>\r\n                                <th>Unit</th>\r\n                                <th>@Price</th>\r\n                                <th>Total Price</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {productFlows.map((productFlow, i)=>{\r\n                                const product:Product = productFlow.product?? new Product();\r\n                                const price = productFlow.price;\r\n                                return (\r\n                                    <tr key={\"pf-tr-\"+i}>\r\n                                        <td>{i+1}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{beautifyNominal(productFlow.count)}</td>\r\n                                        <td>{product.unit?.name}</td>\r\n                                        <td>{beautifyNominal(price)}</td>\r\n                                        <td>{beautifyNominal((price??0) * (productFlow.count??0))}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"alert alert-info text-left\">\r\n                        <FormGroup label=\"Total unit\">\r\n                        <p>{beautifyNominal(totalUnitAndPrice(productFlows).unit)}</p>\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Total price\">\r\n                        <p>{beautifyNominal(totalUnitAndPrice(productFlows).productFlowPrice)}</p>\r\n                        </FormGroup>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n} \r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(TransactionDetail))","\r\nimport React, { Component, Fragment } from 'react';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport Product from './../../../../models/Product';\r\nimport Modal from './../../../container/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport { updateCart } from './../../../../redux/actionCreators';\r\nimport { withRouter, Link } from 'react-router-dom'; \r\nimport AnchorButton from './../../../navigation/AnchorButton'; \r\nimport BaseComponent from './../../../BaseComponent'; \r\nclass IState {\r\n    showCart: boolean = false\r\n}\r\nclass ProductCatalogList extends BaseComponent\r\n{\r\n    state:IState = new IState();\r\n    constructor(props) {\r\n        super(props, false);\r\n    }\r\n    showShoppingCart = (e) => {\r\n        this.setState({ showCart: true });\r\n    }\r\n    hideShoppingCart = (e) => {\r\n        this.setState({ showCart: false });\r\n    }\r\n    getProductInCart = (id: any): Product | undefined => {\r\n        const cart = this.props.cart;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == id) {\r\n                return element;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    addOneToCart = (product: Product) => {\r\n\r\n        let productInCart = this.getProductInCart(product.id);\r\n        if (!productInCart) {\r\n            productInCart = Object.assign(new Product(), product);\r\n            productInCart.count = 0;\r\n        }\r\n        if (productInCart.count) {\r\n            productInCart.count++;\r\n        } else {\r\n            productInCart.count = 1;\r\n        }\r\n        if ((product.count??0) < productInCart.count) {\r\n            this.showError(\"Quantity insufficient! \"+product.count+ \" vs \"+productInCart.count);\r\n            return;\r\n        }\r\n        this.setProductToCart(productInCart);\r\n       \r\n    }\r\n    reduceOneFromCart = (product: Product) => {\r\n        let productInCart = this.getProductInCart(product.id);\r\n        if (!productInCart) {\r\n           return;\r\n        }\r\n        if (productInCart.count && productInCart.count > 0) {\r\n            productInCart.count--;\r\n        } else {\r\n            productInCart.count = 0;\r\n        }\r\n        this.setProductToCart(productInCart);\r\n    }\r\n    resetProductCart = (product:Product) => {\r\n        const productCloned = Object.assign(new Product(), product);\r\n        productCloned.count = 0;\r\n        this.setProductToCart(productCloned);\r\n    }\r\n    resetAllShoppingCart = (e) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Reset Shopping Cart?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.props.updateCart([], app, app.parentApp ); \r\n            }\r\n        })\r\n        \r\n    }\r\n    getShoppingCartCounts = () => {\r\n       return Product.countSummary(this.props.cart);\r\n\r\n    }\r\n    setProductToCart = (product: Product) => {\r\n        // console.debug(\"SET PRODUCT TO CART: \", product);\r\n        const cart = this.props.cart\r\n        let found = false;\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == product.id) {\r\n                cart[i] = product;\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            cart.push(product);\r\n        }\r\n        this.props.updateCart(cart, this, this.parentApp ); \r\n    } \r\n    render() {\r\n        const props = this.props;\r\n        const showCart: boolean = this.state.showCart;\r\n        return (\r\n            <Modal title=\"Product List\">\r\n                <div className=\"btn-group\" style={{ marginBottom: '5px' }}>\r\n                    <AnchorButton onClick={this.showShoppingCart} show={showCart == false} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-angle-down\">Show Shopping Cart</AnchorButton>\r\n                    <AnchorButton onClick={this.hideShoppingCart} show={showCart == true} className=\"btn btn-secondary btn-sm\" iconClassName=\"fas fa-angle-up\">Hide Shopping Cart</AnchorButton>\r\n                    <AnchorButton onClick={this.resetAllShoppingCart} show={showCart == true} className=\"btn btn-danger btn-sm\" iconClassName=\"fas fa-cart-arrow-down\">Reset Cart</AnchorButton>\r\n                    <AnchorButton show={showCart == true} className=\"btn btn-warning btn-sm\" >{this.getShoppingCartCounts()}</AnchorButton>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {props.products.map((product:Product) => {\r\n                        const imgName = product.imageUrl ? product.imageUrl.split(\"~\")[0] ?? 'Default.bmp' : 'Default.bmp';\r\n                        const productInCart = this.getProductInCart(product.id);\r\n                        return (\r\n                            <div key={\"product_catalog_\"+product.id} className=\"col-md-2 catalog-item rounded border\">\r\n                                <img className=\"rounded img-fluid\" src={baseImageUrl + imgName} /> \r\n                                <Link to={\"/catalog/product/\"+product.code}\r\n                                //  target=\"_blank\" \r\n                                 ><h6>{product.name}</h6></Link>\r\n                                <span className=\"text-info\"><strong>{beautifyNominal(product.price)}</strong></span>\r\n                                {props.withStock ? <span style={{ marginLeft: '5px' }} className={(product.count??0)>0?'badge badge-warning text-dark':'badge badge-dark'}>{product.count}</span> : null}\r\n                                {showCart ?\r\n                                    <div><div className=\"btn-group\">\r\n                                            <AnchorButton onClick={(e)=>this.addOneToCart(product)} iconClassName=\"fas fa-plus\" className=\"btn btn-primary btn-sm\" />\r\n                                            <AnchorButton className=\"btn btn-outline-info btn-sm\"><strong>{productInCart?.count??0}</strong></AnchorButton>\r\n                                            <AnchorButton onClick={(e)=>this.reduceOneFromCart(product)} iconClassName=\"fas fa-minus\" className=\"btn btn-primary btn-sm\" />\r\n                                            <AnchorButton onClick={(e)=>this.resetProductCart(product)} iconClassName=\"fas fa-sync-alt\" className=\"btn btn-warning btn-sm\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    : null}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    updateCart: (cart: Product[], ...apps:any[] ) => dispatch(updateCart(cart, ...apps)),\r\n})\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ProductCatalogList))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport '../Catalog.css';\r\nimport CatalogService from './../../../../services/CatalogService';\r\nimport Product from './../../../../models/Product';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Modal from '../../../container/Modal';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Category from './../../../../models/Category';\r\nimport NavigationButtons from '../../../navigation/NavigationButtons';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport ProductCatalogList from './ProductCatalogList';\r\nclass IState {\r\n    products: Product[] = []; \r\n    filter: Filter = {\r\n        limit: 20,\r\n        page: 0,\r\n        useExistingFilterPage: false,\r\n        orderBy: 'name',\r\n        orderType: 'asc'\r\n    };\r\n    fieldsFilter: {} = {\r\n        withStock: true,\r\n        withCategories: true,\r\n    };\r\n    categories: Category[] = [];\r\n    totalData: number = 0;\r\n    dataNotFound: boolean = false;\r\n}\r\nclass ProductCatalog extends BaseComponent {\r\n    catalogService: CatalogService = CatalogService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    productNotLoaded = (e: any) => {\r\n        this.setState({ totalData: 0, products: [], dataNotFound: true });\r\n    }\r\n    productsLoaded = (response: WebResponse) => {\r\n        if (response.entities == undefined) {\r\n            this.productNotLoaded(response);\r\n            return;\r\n        }\r\n        if (this.state.fieldsFilter['withCategories'] == true) {\r\n            this.setState({ totalData: response.totalData, dataNotFound: false, products: response.entities, categories: response.generalList });\r\n        } else {\r\n            this.setState({ totalData: response.totalData, dataNotFound: false, products: response.entities });\r\n        }\r\n    }\r\n    loadProducts(page: number | undefined = 0) {\r\n        const filter = this.state.filter;\r\n        if (page != undefined && this.state.filter.useExistingFilterPage == false) {\r\n            filter.page = page;\r\n        }\r\n        filter.fieldsFilter = this.state.fieldsFilter;\r\n        const withProgess = filter.fieldsFilter['withStock'] == true;\r\n\r\n        this.doAjax(\r\n            this.catalogService.getProductList, withProgess,\r\n            this.productsLoaded, this.productNotLoaded,\r\n            filter,\r\n        )\r\n        filter.useExistingFilterPage = false;\r\n        this.setState({ filter: filter });\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Product Catalog\";\r\n        this.loadProducts(0);\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        this.loadProducts(0);\r\n    }\r\n    setFieldsFilterValue = (e) => {\r\n        const input: HTMLInputElement = e.target;\r\n        let name: string = input.name;\r\n        let value: any;\r\n\r\n        if (input.type == 'checkbox') {\r\n            value = input.checked == true;\r\n        } else {\r\n            value = input.value;\r\n        }\r\n        const fieldsFilter = this.state.fieldsFilter;\r\n        if (value == undefined || new String(value).trim() == \"\") {\r\n            if (fieldsFilter[name])\r\n                delete fieldsFilter[name];\r\n        } else {\r\n            fieldsFilter[name] = value;\r\n        }\r\n        this.setState({ fieldsFilter: fieldsFilter });\r\n    }\r\n    setFilterPage = (value: any) => {\r\n        const page = parseInt(value);\r\n        const filter = this.state.filter;\r\n        filter.page = page;\r\n        filter.useExistingFilterPage = true;\r\n        this.setState({ filter: filter });\r\n    }\r\n    setLimit = (limit: number) => {\r\n        const filter = this.state.filter;\r\n        filter.limit = limit;\r\n        this.setState({ filter: filter });\r\n    }\r\n    setOrder = (e) => {\r\n        const value = e.target.value;\r\n        const filter = this.state.filter;\r\n        if (value != '') {\r\n            const rawOrder: string[] = new String(value).split(\"-\");\r\n            filter.orderBy = rawOrder[0];\r\n            filter.orderType = rawOrder[1];\r\n        } else {\r\n            delete filter.orderBy;\r\n            delete filter.orderType;\r\n        }\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    render() {\r\n        const products: Product[] = this.state.products;\r\n        return (\r\n            <div id=\"ProductCatalog\" className=\"container-fluid\">\r\n                <h2>Product Catalog</h2>\r\n                <form onSubmit={this.filter} >\r\n                    \r\n                    <Modal toggleable={true} title=\"Filter\" footerContent={\r\n                        <input type=\"submit\" className=\"btn btn-primary\" />\r\n                    }  >\r\n                        <div className=\"row\">\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-6\" label=\"Name\">\r\n                                <input onChange={this.setFieldsFilterValue} defaultValue={this.state.fieldsFilter['name']} name=\"name\" placeholder=\"Product Name\" className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Order By\">\r\n                                <select onChange={this.setOrder} className=\"form-control\">\r\n                                    <option value=\"name-asc\">Name [A-Z]</option>\r\n                                    <option value=\"name-desc\">Name [Z-A]</option>\r\n                                    <option value=\"price-asc\">Price [Cheap]</option>\r\n                                    <option value=\"price-desc\">Price [Expensive]</option>\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Category\">\r\n                                <select onChange={this.setFieldsFilterValue} defaultValue={this.state.fieldsFilter['category,id[EXACTS]']} className=\"form-control\" name=\"category,id[EXACTS]\">\r\n                                    <option value=\"\">All</option>\r\n                                    {this.state.categories.map(category => {\r\n                                        return <option key={\"category-opt-\"+category.id} value={category.id}>{category.name}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"With Stock\">\r\n                                <input onChange={this.setFieldsFilterValue} defaultChecked={this.state.fieldsFilter['withStock'] == true} type=\"checkbox\" name=\"withStock\" />\r\n                                <label style={{ paddingLeft: '5px' }}>{this.state.fieldsFilter['withStock'] == true ? \"Yes\" : \"No\"}</label>\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Go To Page\">\r\n                                <input name=\"page\" min=\"1\" type=\"number\" onChange={\r\n                                    (e) => this.setFilterPage(parseInt(e.target.value) - 1)\r\n                                } defaultValue={(this.state.filter.page ?? 0) + 1} className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Displayed Item\">\r\n                                <input name=\"limit\" min=\"1\" type=\"number\" onChange={\r\n                                    (e) => this.setLimit(parseInt(e.target.value))\r\n                                } defaultValue={this.state.filter.limit} className=\"form-control\" />\r\n                            </FormGroup>\r\n                            <FormGroup orientation=\"vertical\" className=\"col-md-3\" label=\"Total Data\">\r\n                                <label>{this.state.totalData}</label>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </Modal>\r\n                </form>\r\n                <SimpleError show={this.state.dataNotFound}>Data not found</SimpleError>\r\n                <NavigationButtons limit={this.state.filter.limit ?? 20} activePage={this.state.filter.page ?? 0}\r\n                    totalData={this.state.totalData} onClick={(page: number) => this.loadProducts(page)} />\r\n                <ProductCatalogList app={this.parentApp} products={products} withStock={this.state.fieldsFilter['withStock']} />\r\n            </div>\r\n        )\r\n    }\r\n} \r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps\r\n)(ProductCatalog))","\r\n\r\nimport React, { Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../../constant/stores';\r\nimport Product from './../../../models/Product';\r\nimport SimpleError from '../../alert/SimpleError';\r\nimport Modal from '../../container/Modal';\r\nimport { beautifyNominal } from '../../../utils/StringUtil';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport { updateCart } from './../../../redux/actionCreators';\r\n\r\nclass CartList extends BaseComponent {\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    componentDidMount() {\r\n        document.title = \"Shopping Cart List\";\r\n    }\r\n    removeFromCart = (product:Product) => {\r\n        const app = this;\r\n        this.showConfirmationDanger(\"Remove \"+product.name+\" from shopping list?\")\r\n        .then(function(ok) {\r\n            if (ok) {\r\n                app.doRemoveFromCart(product);\r\n            }\r\n        })\r\n    }\r\n    doRemoveFromCart = (product:Product) => {\r\n        const cart:Product[] = this.props.cart\r\n        for (let i = 0; i < cart.length; i++) {\r\n            const element: Product = cart[i];\r\n            if (element.id == product.id) {\r\n                cart.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        this.props.updateCart(cart, this, this.parentApp );\r\n    }\r\n    render() {\r\n        const cartList: Product[] = this.props.cart;\r\n        let totalUnit: number = 0, totalPrice: number = 0;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Shopping Cart List</h2>\r\n                <SimpleError show={cartList.length == 0}>No shopping item</SimpleError>\r\n\r\n                <table className=\"table table-fluid table-striped\" style={{display: cartList.length>0?'block':'none'}}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th colSpan={2}>Product</th>\r\n                            <th>Qty</th>\r\n                            <th>Unit</th>\r\n                            <th>Price</th>\r\n                            <th>Total Price</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {cartList.map((product, i) => {\r\n                            totalUnit += (product.count ?? 0);\r\n                            totalPrice += ((product.count ?? 0) * (product.price ?? 0));\r\n                            let imgName = Product.getDefaultPicture(product);\r\n                            const imgUrl = baseImageUrl + imgName;\r\n                            return (\r\n                                <tr key={\"cart-\" + i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td><img height=\"150\" src={imgUrl} /></td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{beautifyNominal(product.count)}</td>\r\n                                    <td>{product.unit?.name}</td>\r\n                                    <td>{beautifyNominal(product.price)}</td>\r\n                                    <td>{beautifyNominal((product.count ?? 0) * (product.price ?? 0))}</td>\r\n                                    <td>\r\n                                        <AnchorButton onClick={(e)=>this.removeFromCart(product)} iconClassName=\"fas fa-times\" className=\"btn btn-outline-danger\"/>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        <tr>\r\n                            <td colSpan={3}>Total</td>\r\n                            <td>{beautifyNominal(totalUnit)}</td>\r\n                            <td colSpan={2}></td>\r\n                            <td>{beautifyNominal(totalPrice)}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    updateCart: (cart: Product[], ...apps:any[] ) => dispatch(updateCart(cart, ...apps)),\r\n})\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(CartList))","\r\nimport React, { Component } from 'react';\r\nimport AnchorButton from '../navigation/AnchorButton';\r\nimport Card from './Card';\r\nclass IProps {\r\n    imageUrls: string[] = [];\r\n}\r\nclass IState {\r\n    active: number = 0\r\n}\r\nexport default class Carousel extends Component<IProps, IState>\r\n{\r\n    state: IState = new IState();\r\n    imageLength: number = 0;\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.imageLength = props.imageUrls.length;\r\n    }\r\n\r\n    getCurrentImage = (): string => {\r\n        return this.props.imageUrls[this.state.active];\r\n    }\r\n    prev = (e) => {\r\n        let currentActive = this.state.active;\r\n        if (currentActive == 0){\r\n            currentActive = this.imageLength-1;\r\n        } else {\r\n            currentActive--;\r\n        }\r\n        this.setState({active:currentActive});\r\n\r\n    }\r\n    next = (e) => {\r\n        let currentActive = this.state.active;\r\n        if (currentActive == this.imageLength-1){\r\n            currentActive = 0;\r\n        } else {\r\n            currentActive++;\r\n        }\r\n        this.setState({active:currentActive});\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <Card className=\"container-fluid bg-secondary text-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2\">\r\n                        <AnchorButton className=\"btn btn-light\" iconClassName=\"fas fa-arrow-left\" onClick={this.prev} />\r\n                    </div>\r\n                    <div className=\"col-md-8\" style={{overflowX:'scroll'}}>\r\n                        <img height=\"200\" src={this.getCurrentImage()} />\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <AnchorButton className=\"btn btn-light\" iconClassName=\"fas fa-arrow-right\" onClick={this.next} />\r\n                    </div>\r\n                </div>\r\n\r\n            </Card>\r\n        )\r\n    }\r\n}","\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport CatalogService from './../../../../services/CatalogService';\r\nimport SimpleError from './../../../alert/SimpleError';\r\nimport Product from './../../../../models/Product';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Modal from './../../../container/Modal';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nimport Carousel from './../../../container/Carousel';\r\ninterface IState { product?:Product, notFound:boolean }\r\nclass ProductCatalogDetail extends BaseComponent {\r\n    catalogService:CatalogService = CatalogService.getInstance();\r\n    state:IState = {notFound:false}\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    getCode():string {\r\n        return this.props.match.params.code;\r\n    }\r\n    recordLoaded = (response:WebResponse) => {\r\n        if (response.entities == undefined || response.entities.length  == 0){\r\n            throw new Error(\"not found\");\r\n        }\r\n        this.setState({\r\n            product:response.entities[0], notFound:true\r\n        })\r\n        document.title = this.state.product?.name??\"Detail\";\r\n    }\r\n    recordNotLoaded = (e:any) => {\r\n        console.error(e);\r\n        this.setState({notFound:true});\r\n    }\r\n    loadProductDetail = () => {\r\n        this.commonAjax(\r\n            this.catalogService.getProductDetail,\r\n            this.recordLoaded,\r\n            this.recordNotLoaded,\r\n            this.getCode()\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.loadProductDetail();\r\n    }\r\n    render() {\r\n        if (!this.getCode() || this.getCode() == \"\") {\r\n            return <SimpleError>Not Found</SimpleError>\r\n        }\r\n        return (<div className=\"container-fluid\">\r\n            <h2>Product Detail</h2>\r\n            {this.state.product?\r\n            <Modal title={this.state.product.name}>\r\n                <Carousel imageUrls={Product.getPictureNames(this.state.product, baseImageUrl)} />\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Unit</th>\r\n                            <th>Category</th>\r\n                            <th>Current Stock</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{this.state.product.name}</td>\r\n                            <td>{this.state.product.description}</td>\r\n                            <td>{this.state.product.unit?.name}</td>\r\n                            <td>{this.state.product.category?.name}</td>\r\n                            <td>{this.state.product.count}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </Modal>\r\n            : <SimpleError  >Not Found</SimpleError>}\r\n            <AnchorWithIcon iconClassName=\"fas fa-angle-left\" to=\"/catalog/product\">Back</AnchorWithIcon>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default withRouter(ProductCatalogDetail);","export const MONTHS = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n]\r\n\r\nconst kabisatMonths = [ 31, (  29  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\nconst regularMonths = [ 31, (  28  ), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ];\r\n/**\r\n * \r\n * @param {Number} month \r\n */\r\nexport const getMonthDays = (month) => {\r\n    if(new Date().getFullYear() % 4 == 0){\r\n        return kabisatMonths[month];\r\n    }\r\n    return regularMonths[month];\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport const getCurrentMMYY = () => {\r\n    return [new Date().getMonth() + 1, new Date().getFullYear()];\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport Filter from '../../../models/Filter';\r\nimport Modal from '../../container/Modal';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport Loader from '../../loader/Loader';\r\nimport SimpleError from '../../alert/SimpleError';\r\ninterface IProps {\r\n    filter: Filter,\r\n    onChange: Function,\r\n    onSubmit: (event: React.FormEvent<HTMLFormElement>) => void,\r\n    transactionYears:number[]\r\n}\r\nclass IState {\r\n    error:boolean = false;\r\n}\r\nexport default class DashboardFilter extends Component<IProps, IState> {\r\n    state = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        this.props.onChange(e);\r\n    }\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (this.props.filter.yearTo == undefined || this.props.filter.year == undefined) {\r\n            return;\r\n        }\r\n        if (this.props.filter.year > this.props.filter.yearTo) {\r\n            this.setState({error:true});\r\n            return;\r\n        }\r\n        this.setState({error:false});\r\n        this.props.onSubmit(e);\r\n    }\r\n    render() {\r\n        const transactionYears: number[]  = this.props.transactionYears;\r\n        return (\r\n            <form onSubmit={this.submit}>\r\n                <Modal toggleable={true} title=\"Filter\" footerContent={\r\n                    <input type=\"submit\" className=\"btn btn-primary\" />\r\n                }>\r\n                    <div className=\"row  \">\r\n                        <div className=\"col-md-5\">\r\n                            <FormGroup label=\"Month\">\r\n                                <select className=\"form-control\" name=\"month\" onChange={this.updatePeriodFilter} value={this.props.filter.month} >\r\n                                    {MONTHS.map((monthName, i) => {\r\n                                        return <option value={i + 1}>{monthName} ({i + 1})</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Year\">\r\n                                <select className=\"form-control\" name=\"year\" onChange={this.updatePeriodFilter} value={this.props.filter.year} >\r\n                                    {transactionYears.map(year => {\r\n                                        return <option value={year}>{year}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                        <div className=\"col-md-2 text-center\">\r\n                            <div style={{ width: '75px', height: '75px', display: 'flex' }} className=\"bg-secondary text-light rounded-circle\">\r\n                                <h1 style={{ margin: 'auto' }}><i className=\"fas fa-angle-right\"></i></h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-5\">\r\n                            <FormGroup label=\"Month\">\r\n                                <select className=\"form-control\" name=\"monthTo\" onChange={this.updatePeriodFilter} value={this.props.filter.monthTo} >\r\n                                    {MONTHS.map((monthName, i) => {\r\n                                        return <option value={i + 1}>{monthName} ({i + 1})</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                            <FormGroup label=\"Year\">\r\n                                <select className=\"form-control\" name=\"yearTo\" onChange={this.updatePeriodFilter} value={this.props.filter.yearTo}>\r\n                                    {transactionYears.map(year => {\r\n                                        return <option value={year}>{year}</option>\r\n                                    })}\r\n                                </select>\r\n                            </FormGroup>\r\n                        </div>\r\n                    </div>\r\n                    <SimpleError show={this.state.error} >Invalid Year</SimpleError>\r\n                </Modal>\r\n            </form>\r\n        )\r\n    }\r\n}","import DataSet from './DataSet';\r\nexport default class Cashflow implements DataSet {\r\n\r\n    amount: number = 0;\r\n    count: number = 0;\r\n    module: string = 'SELLING';\r\n    year: number = new Date().getFullYear();\r\n    month: number = 1;\r\n    getAmount: () => number;\r\n    getLabel: () => string;\r\n    constructor() {\r\n        this.getAmount = () => {\r\n            return this.amount;\r\n        }\r\n       this.getLabel = () => {\r\n            return this.month+\"-\"+this.year;\r\n        }\r\n    }\r\n    \r\n   \r\n    static toDataSet = (cashflow:Cashflow) : DataSet => {\r\n        return Object.assign(new Cashflow(), cashflow);\r\n    }\r\n    static toDataSets = (cashflows:Cashflow[]) : DataSet[] => {\r\n        const dataSets:DataSet[]  = new Array<DataSet>();\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            dataSets.push(Cashflow.toDataSet(element));\r\n        }\r\n        return dataSets;\r\n    }\r\n    static maxAmount = (cashflows: Cashflow[]): number => {\r\n        let max = 0;\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            if (element.amount > max) {\r\n                max = element.amount;\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n}","\r\nimport React, { Component } from 'react';\r\nimport Cashflow from '../../../models/Cashflow';\r\nimport { beautifyNominal, uniqueId } from '../../../utils/StringUtil';\r\nimport { MONTHS } from '../../../utils/DateUtil';\r\nimport './ChartSvg.css';\r\nimport FormGroup from '../../form/FormGroup'; \r\nimport DataSet from '../../../models/DataSet';\r\ninterface IProps {\r\n    dataSet: DataSet[],\r\n    updated: Date,\r\n    onClick?:(index:number)=>void\r\n    onUnHover?:()=>void\r\n}\r\nclass IState {\r\n    hoveredIndex: number = -1;\r\n    updated: Date = new Date();\r\n}\r\nexport default class DashboardBarChart extends Component<IProps, IState>\r\n{\r\n    middleYAxisValue: number = 0;\r\n    bottomYAxisValue: number = 0;\r\n    offsetX: number = 100;\r\n    offsetY: number = 50;\r\n    baseYIndex: number = 200;\r\n    baseHeight: number = 150;\r\n    lineWidth: number = 0;\r\n    maxValue: number = 0;\r\n    state: IState = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.updateSizes();\r\n\r\n    }\r\n    maxAmount:(cashflows: DataSet[])=>number = (cashflows: DataSet[]): number => {\r\n        let max = 0;\r\n        for (let i = 0; i < cashflows.length; i++) {\r\n            const element = cashflows[i];\r\n            \r\n            if (element.getAmount() > max) {\r\n                max = element.getAmount();\r\n            }\r\n        }\r\n\r\n        return max;\r\n    }\r\n    updateSizes = () => {\r\n        this.maxValue = this.maxAmount(this.props.dataSet);\r\n        this.middleYAxisValue = Math.round(this.maxValue * 2 / 3);\r\n        this.bottomYAxisValue = Math.round(this.maxValue * 1 / 3);\r\n        this.lineWidth = (23) * (this.props.dataSet.length) + 100;\r\n    }\r\n    componentDidUpdate() {\r\n        this.updateSizes();\r\n        if (this.props.updated != this.state.updated) {\r\n            this.setState({ updated: this.props.updated });\r\n        }\r\n    }\r\n    hover = (index: number) => {\r\n        this.setState({ hoveredIndex: index });\r\n        \r\n    }\r\n    onClick = (index:number) => {\r\n        if (this.props.onClick) {\r\n            this.props.onClick(index);\r\n        }\r\n    }\r\n    unHover = () => {\r\n        this.setState({ hoveredIndex: -1 });\r\n        // if (this.props.onUnHover) {\r\n        //     this.props.onUnHover();\r\n        // }\r\n    }\r\n  \r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"border border-secondary\" style={{ minHeight: '300px', overflowX: 'scroll' }}>\r\n                    <svg onMouseOut={this.unHover} className=\"bg-light border\" version=\"1.1\" baseProfile=\"full\" width={this.offsetX * 2 + (23) * (props.dataSet.length)+ 100} height={300} xmlns=\"http://www.w3.org/2000/svg\">\r\n\r\n                        {props.dataSet.map((data, i) => {\r\n                            const percentage = (data.getAmount() / this.maxValue) * this.baseHeight;\r\n                            const labelY = this.baseYIndex + 15, labelX = this.offsetX + 10 + (23) * (i);\r\n                            const xTranslated = 0, yTranslated = 0;\r\n                            const transform = \"translate(\" + xTranslated + \",\" + yTranslated + \") rotate(-30,\" + labelX + \",\" + labelY + \")\";\r\n                            const hovered = i == this.state.hoveredIndex;\r\n                            return (\r\n                                <g style={hovered ? { cursor: 'pointer' } : {}} className=\"chart-group\"\r\n                                 onMouseOver={(e) => this.hover(i)} onClick={(e) => this.onClick(i)} onMouseOut={this.unHover} key={uniqueId() + \"-\" + i}>\r\n                                    <rect fill={hovered ? \"red\" : \"green\"} x={this.offsetX + (23) * (i)} y={this.baseYIndex - percentage} height={percentage} width={20} ></rect>\r\n                                    <text fill={hovered ? \"red\" : \"black\"} textAnchor=\"end\" fontSize={10} x={labelX} y={labelY} transform={transform}>{data.getLabel()}</text>\r\n                                    <circle cx={this.offsetX + (23) * (i + 1)} cy={this.baseYIndex} r=\"3\" fill=\"red\" />\r\n                                </g>\r\n                            )\r\n                        })}\r\n                        <rect name=\"base_axis_x\" x={this.offsetX} y={this.baseYIndex} height={2} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_top\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY} height={1} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_middle\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY + this.baseHeight * 1 / 3} height={1} width={this.lineWidth} />\r\n                        <rect name=\"ruler_line_bottom\" fill=\"rgb(100,100,100)\" x={this.offsetX} y={this.offsetY + this.baseHeight * 2 / 3} height={1} width={this.lineWidth} />\r\n                        <rect name=\"base_axis_y\" x={this.offsetX} y={this.offsetY} height={this.baseHeight} width={2} />\r\n\r\n                        <text textAnchor=\"end\" name=\"top_val\" fontSize={10} x={this.offsetX} y={this.offsetY}>{beautifyNominal(this.maxValue)}</text>\r\n                        <text textAnchor=\"end\" name=\"middle_val\" fontSize={10} x={this.offsetX} y={this.offsetY + this.baseHeight * 1 / 3}>{beautifyNominal(this.middleYAxisValue)}</text>\r\n                        <text textAnchor=\"end\" name=\"bottom_val\" fontSize={10} x={this.offsetX} y={this.offsetY + this.baseHeight * 2 / 3}>{beautifyNominal(this.bottomYAxisValue)}</text>\r\n                    </svg>\r\n                </div>\r\n                <p><i className=\"fas fa-history\" /> {new Date(this.state.updated).toString()}</p> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, { Component, Fragment, RefObject } from 'react';\r\nimport Card from '../../../container/Card';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport Filter from './../../../../models/Filter';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport Cashflow from './../../../../models/Cashflow';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport { uniqueId } from './../../../../utils/StringUtil';\r\nimport { transform } from 'typescript';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport { MONTHS } from './../../../../utils/DateUtil';\r\ninterface IProps {\r\n    cashflowData: WebResponse\r\n}\r\nclass IState {\r\n    activeSellingIndex: number = -1;\r\n    activePurchasingIndex: number = -1;\r\n}\r\nexport default class CashflowChart extends Component<IProps, IState>\r\n{\r\n    state: IState = new IState();\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    getCashflowData = (): WebResponse => {\r\n        return this.props.cashflowData;\r\n    }\r\n    getPeriodString = () => {\r\n        const cashflowData = this.getCashflowData();\r\n        if (!cashflowData.filter) return \"\";\r\n        let filter: Filter = cashflowData.filter;\r\n        return MONTHS[(filter.month ?? 1) - 1] + \" \" + filter.year + \" - \" + MONTHS[(filter.monthTo ?? 1) - 1] + \" \" + filter.yearTo;\r\n    }\r\n    getSellingData = (): Cashflow | undefined => {\r\n        if (this.state.activeSellingIndex < 0) return undefined;\r\n        const list: Cashflow[] = this.props.cashflowData.sellings ?? [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (i == this.state.activeSellingIndex) return list[i];\r\n        }\r\n        return undefined;\r\n    }\r\n    getPurchasingData = (): Cashflow | undefined => {\r\n        if (this.state.activePurchasingIndex < 0) return undefined;\r\n        const list: Cashflow[] = this.props.cashflowData.purchasings ?? [];\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (i == this.state.activePurchasingIndex) return list[i];\r\n        }\r\n        return undefined;\r\n    }\r\n    setActiveSellingData = (i: number) => {\r\n        this.setState({ activeSellingIndex: i });\r\n    }\r\n    unSelectSellingData = () => {\r\n        this.setState({ activeSellingIndex: -1 });\r\n    }\r\n    setActivePurchasingData = (i: number) => {\r\n        this.setState({ activePurchasingIndex: i });\r\n    }\r\n    unSelectPurchasingData = () => {\r\n        this.setState({ activePurchasingIndex: -1 });\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n        const cashflowData = this.getCashflowData()\r\n        return (\r\n            <Card title=\"Cashflow\">\r\n                <FormGroup label=\"Period\" >{this.getPeriodString()}</FormGroup>\r\n                <div className=\"container-fluid\" >\r\n                    <h4>Selling</h4>\r\n                    <DashboardBarChart\r\n                        onClick={this.setActiveSellingData} onUnHover={this.unSelectSellingData}\r\n                        updated={cashflowData.date ?? new Date()} dataSet={Cashflow.toDataSets(cashflowData.sellings ?? [])} />\r\n                    <CashflowDetail cashflow={this.getSellingData()} />\r\n                    <h4>Purchasing</h4>\r\n                    <DashboardBarChart\r\n                        onClick={this.setActivePurchasingData} onUnHover={this.unSelectPurchasingData}\r\n                        updated={cashflowData.date ?? new Date()} dataSet={Cashflow.toDataSets(cashflowData.purchasings ?? [])} />\r\n                    <CashflowDetail cashflow={this.getPurchasingData()} />\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst CashflowDetail = (props: { cashflow?: Cashflow }) => {\r\n    const cashflow: Cashflow | undefined = props.cashflow;\r\n    if (!cashflow) return <div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n        <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\"/> Click the chart to see detail</div>\r\n    </div>;\r\n\r\n    return (<div className=\"row\" style={{ minHeight: '120px' }}>\r\n        <div className=\"col-md-6\"><FormGroup label=\"Module\"> {cashflow.module}</FormGroup></div>\r\n        <div className=\"col-md-6\"><FormGroup label=\"Period\">{MONTHS[cashflow.month - 1]} {cashflow.year}</FormGroup></div>\r\n        <div className=\"col-md-6\"> <FormGroup label=\"Count\">{beautifyNominal(cashflow.count)}</FormGroup></div>\r\n        <div className=\"col-md-6\"> <FormGroup label=\"Amount\">{beautifyNominal(cashflow.amount)}</FormGroup> </div>\r\n    </div >)\r\n}\r\n","import React from 'react'\r\nimport BaseComponent from './../../../BaseComponent';\r\nimport TransactionHistoryService from './../../../../services/TransactionHistoryService';\r\nimport { mapCommonUserStateToProps } from './../../../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport DashboardFilter from '../DashboardFilter';\r\nimport CashflowChart from './CashflowChart'; \r\nimport Spinner from '../../../loader/Spinner';\r\nconst date = new Date();\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year:  date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear()\r\n    };\r\n    cashflowData?: WebResponse = undefined\r\n}\r\nclass DashboardStatistic extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        this.loadStatistic();\r\n    }\r\n    cashflowDataLoaded = (response: WebResponse) => {\r\n        this.setState({ cashflowData: response });\r\n    }\r\n    cashflowDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n    }\r\n    loadStatistic = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getCashflowDetail,\r\n            this.cashflowDataLoaded,\r\n            this.cashflowDataNotLoaded,\r\n            this.state.filter\r\n        )\r\n    }\r\n\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadStatistic();\r\n    }\r\n\r\n    render() {\r\n        const cashflowData = this.state.cashflowData;\r\n        if (!cashflowData) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Statistics</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <h2>Statistics</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={cashflowData && cashflowData.transactionYears ? cashflowData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n                <CashflowChart cashflowData={cashflowData} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(DashboardStatistic))","import BaseEntity from './BaseEntity';\nimport Product from './Product';\nimport DataSet from './DataSet';\n\nexport default class ProductSales extends BaseEntity implements DataSet{\n\tproduct?:Product;\n\tsales?:number;\n\tmonth?:number;\n\tyear?:number;\n\tpercentage?:number;\n\tmaxValue?:number;\n\tmonthName?:string;\n\tgetAmount: () => number;\n    getLabel: () => string;\n    constructor() {\n\t\tsuper();\n        this.getAmount = () => {\n\t\t\treturn this.sales??0;\n        }\n       this.getLabel = () => {\n            return this.product?this.product.name??\"\":this.month+\"-\"+this.year;\n        }\n    }\n\tstatic toDataSet = (object:ProductSales) : DataSet => {\n        return Object.assign(new ProductSales(), object);\n    }\n    static toDataSets = (objects:ProductSales[]) : DataSet[] => {\n        const dataSets:DataSet[]  = new Array<DataSet>();\n        for (let i = 0; i < objects.length; i++) {\n            const element = objects[i];\n            dataSets.push(ProductSales.toDataSet(element));\n        }\n        return dataSets;\n    }\n    static sortBySales = (objects:ProductSales[]) : ProductSales[] => {\n        return objects.sort((p1, p2)=>{\n            return (p1.sales??0) - (p2.sales??0);\n        })\n    }\n    static sortBySalesDesc = (objects:ProductSales[]) : ProductSales[] => {\n        return objects.sort((p1, p2)=>{\n            return (p2.sales??0) - (p1.sales??0);\n        })\n    }\n}\n","import React, { Fragment } from 'react';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from '../../../../services/TransactionHistoryService';\r\nimport Filter from './../../../../models/Filter';\r\nimport WebResponse from './../../../../models/WebResponse';\r\nimport DashboardFilter from './../DashboardFilter';\r\nimport ProductSales from './../../../../models/ProductSales';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport FormGroup from './../../../form/FormGroup';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Modal from './../../../container/Modal';\r\nimport Carousel from '../../../container/Carousel';\r\nimport Product from '../../../../models/Product';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport Spinner from './../../../loader/Spinner';\r\nimport AnchorWithIcon from '../../../navigation/AnchorWithIcon';\r\nconst date: Date = new Date();\r\nconst DEFAULT_LIMIT: number = 50;\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year: date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear(),\r\n        page: 0,\r\n        limit: DEFAULT_LIMIT\r\n    };\r\n    sortType: string = \"asc\";\r\n    activeSalesDataIndex: number = -1;\r\n    salesData?: WebResponse = undefined\r\n}\r\nclass ProductSalesPage extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        const filter = this.state.filter;\r\n        filter.limit = DEFAULT_LIMIT;\r\n        this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    reload = (e) => {\r\n        e.preventDefault();\r\n        // const filter = this.state.filter;\r\n        // filter.limit = (filter.limit ?? 0) + 50;\r\n        // this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    salesDataLoaded = (response: WebResponse) => {\r\n        response.entities = ProductSales.sortBySalesDesc(response.entities ?? []);\r\n        this.setState({ salesData: response });\r\n    }\r\n    salesDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.validateLoginStatus();\r\n    }\r\n    loadSales = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getProductSales,\r\n            this.salesDataLoaded,\r\n            this.salesDataNotLoaded,\r\n            this.state.filter\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadSales();\r\n    }\r\n    setActiveSalesData = (i: number) => {\r\n        this.setState({ activeSalesDataIndex: i });\r\n    }\r\n    unSelectSalesData = () => {\r\n        this.setState({ activeSalesDataIndex: -1 });\r\n    }\r\n    getActiveSalesData = () => {\r\n        const salesList = this.state.salesData ? this.state.salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < salesList.length; i++) {\r\n            const element = salesList[i];\r\n            if (this.state.activeSalesDataIndex == i) return element;\r\n        }\r\n        return undefined;\r\n    }\r\n    sort = (e) => {\r\n        const salesData = this.state.salesData;\r\n        if (!salesData) {\r\n            return;\r\n        }\r\n        const salesList = salesData ? salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return;\r\n        }\r\n        let sortType: string;\r\n        if (this.state.sortType == \"asc\") {\r\n            salesData.entities = ProductSales.sortBySales(salesList);\r\n            sortType = \"desc\";\r\n        } else {\r\n            salesData.entities = ProductSales.sortBySalesDesc(salesList);\r\n            sortType = \"asc\";\r\n        }\r\n        this.setState({ salesData: salesData, sortType: sortType, activeSalesDataIndex: -1 });\r\n    }\r\n    render() {\r\n        const salesData = this.state.salesData;\r\n        if (!salesData) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Product Sales</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        const showBtnLoadMore = (this.state.filter?.limit ?? 0) < (this.state.salesData?.totalData ?? 0) + 1;\r\n        const btnSortIconClass = this.state.sortType == \"asc\" ? \"fas fa-sort-amount-down-alt\" : \"fas fa-sort-amount-up\";\r\n        return (\r\n            <div className=\"container-fluid\" style={{ paddingBottom: '10px' }}>\r\n                <h2>Product Sales</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={salesData && salesData.transactionYears ? salesData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n                <Modal title=\"Options\">\r\n                    <div className=\"inline-buttons-parent\">\r\n                        <AnchorButton className=\"btn btn-secondary btn-sm\">Loaded Product <span className=\"badge badge-light\">{salesData.entities?.length}</span></AnchorButton>\r\n                        <AnchorButton className=\"btn btn-secondary btn-sm\">Total Product <span className=\"badge badge-light\">{salesData.totalData}</span></AnchorButton>\r\n                        <AnchorButton className=\"btn btn-dark btn-sm\" iconClassName={btnSortIconClass} onClick={this.sort} >Sort</AnchorButton>\r\n                        <form style={{ marginTop: '10px' }} className=\"input-group\" onSubmit={this.reload} >\r\n                            <input placeholder=\"Product Count\" disabled className=\"form-control\" />\r\n                            <input placeholder=\"record count\" name=\"limit\" onChange={this.updatePeriodFilter} value={this.state.filter.limit} type=\"number\" min={1} max={this.state.salesData?.totalData} className=\"form-control\" />\r\n                            {showBtnLoadMore ? <button type=\"submit\" className=\"btn btn-dark btn-sm\" ><i className=\"fas fa-sync-alt\" /> Reload</button>\r\n                                : null}\r\n                        </form>\r\n                    </div>\r\n                </Modal>\r\n                <DashboardBarChart\r\n                    onClick={this.setActiveSalesData} onUnHover={this.unSelectSalesData}\r\n                    updated={salesData.date ?? new Date()} dataSet={ProductSales.toDataSets(salesData?.entities ?? [])} />\r\n                <ProductSalesDetail productSales={this.getActiveSalesData()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductSalesDetail = (props: { productSales?: ProductSales }) => {\r\n    const productSales: ProductSales | undefined = props.productSales;\r\n    if (!productSales || !productSales.product)\r\n        return (<div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n            <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\" /> Click the chart to see detail</div>\r\n        </div>);\r\n\r\n    return (<div className=\"row\" style={{ minHeight: '120px' }}>\r\n        <div className=\"col-md-6\">\r\n            <Carousel imageUrls={Product.getPictureNames(productSales.product, baseImageUrl)} />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n            <FormGroup label=\"Name\">{productSales.product ? productSales.product.name : \"\"}</FormGroup>\r\n            <FormGroup label=\"Sales\">{beautifyNominal(productSales.sales)}</FormGroup>\r\n            <FormGroup label=\"Option\">\r\n                <AnchorWithIcon attributes={{target:\"_blank\"}} to={\"/dashboard/productsales/\"+productSales.product.id} >Detail</AnchorWithIcon>\r\n            </FormGroup>\r\n        </div>\r\n    </div >);\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(ProductSalesPage))","import React, { Fragment } from 'react';\r\nimport BaseComponent from '../../../BaseComponent';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../../constant/stores';\r\nimport TransactionHistoryService from '../../../../services/TransactionHistoryService';\r\nimport Filter from '../../../../models/Filter';\r\nimport WebResponse from '../../../../models/WebResponse';\r\nimport DashboardFilter from '../DashboardFilter';\r\nimport ProductSales from '../../../../models/ProductSales';\r\nimport DashboardBarChart from '../DashboardBarChart';\r\nimport FormGroup from '../../../form/FormGroup';\r\nimport { beautifyNominal } from '../../../../utils/StringUtil';\r\nimport AnchorButton from '../../../navigation/AnchorButton';\r\nimport Modal from '../../../container/Modal';\r\nimport Carousel from '../../../container/Carousel';\r\nimport Product from '../../../../models/Product';\r\nimport { baseImageUrl } from '../../../../constant/Url';\r\nimport Spinner from '../../../loader/Spinner';\r\nimport SimpleError from '../../../alert/SimpleError';\r\nconst date: Date = new Date();\r\nconst DEFAULT_LIMIT: number = 50;\r\nclass IState {\r\n    filter: Filter = {\r\n        month: date.getMonth() + 1,\r\n        year: date.getFullYear(),\r\n        monthTo: date.getMonth() + 1,\r\n        yearTo: date.getFullYear(),\r\n        page: 0,\r\n        limit: DEFAULT_LIMIT\r\n    };\r\n    sortType: string = \"asc\";\r\n    activeSalesDataIndex: number = -1;\r\n    salesData?: WebResponse = undefined;\r\n    notFound:boolean = false;\r\n}\r\nclass ProductSalesDetailPage extends BaseComponent {\r\n    transactionHistoryService: TransactionHistoryService = TransactionHistoryService.getInstance();\r\n    state = new IState();\r\n    constructor(props) {\r\n        super(props, true);\r\n    }\r\n    updatePeriodFilter = (e) => {\r\n        const name = e.target.name;\r\n        const filter = this.state.filter;\r\n        filter[name] = parseInt(e.target.value);\r\n        this.setState({ filter: filter });\r\n    }\r\n    filter = (e) => {\r\n        e.preventDefault();\r\n        const filter = this.state.filter;\r\n        filter.limit = DEFAULT_LIMIT;\r\n        this.setState({ filter: filter });\r\n        this.loadSales();\r\n    }\r\n    salesDataLoaded = (response: WebResponse) => {\r\n        this.setState({ salesData: response, notFound: false });\r\n    }\r\n    salesDataNotLoaded = (e: any) => {\r\n        console.error(e);\r\n        this.setState({ salesData:undefined, notFound: true});\r\n        this.validateLoginStatus();\r\n    }\r\n    getProductId = (): number => {\r\n        return this.props.match.params.id;\r\n    }\r\n    getProduct = (): Product | undefined => {\r\n        if (!this.state.salesData || !this.state.salesData.entity) {\r\n            return undefined;\r\n        }\r\n        const product = this.state.salesData?.entity;\r\n        return Object.assign(new Product(), product);\r\n    }\r\n    loadSales = () => {\r\n        this.commonAjaxWithProgress(\r\n            this.transactionHistoryService.getProductSalesDetail,\r\n            this.salesDataLoaded,\r\n            this.salesDataNotLoaded,\r\n            this.getProductId(),\r\n            this.state.filter\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        this.loadSales();\r\n    }\r\n    setActiveSalesData = (i: number) => {\r\n        this.setState({ activeSalesDataIndex: i });\r\n    }\r\n    unSelectSalesData = () => {\r\n        this.setState({ activeSalesDataIndex: -1 });\r\n    }\r\n    getActiveSalesData = () => {\r\n        const salesList = this.state.salesData ? this.state.salesData.entities : undefined;\r\n        if (!salesList) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < salesList.length; i++) {\r\n            const element = salesList[i];\r\n            if (this.state.activeSalesDataIndex == i) return element;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.notFound) {\r\n            return <SimpleError>Not Found</SimpleError>\r\n        }\r\n        const salesData = this.state.salesData;\r\n        const product: Product | undefined = this.getProduct();\r\n        if (!salesData || !product) {\r\n            return <div className=\"container-fluid\" >\r\n                <h2>Product Sales : Loading</h2>\r\n                <Spinner />\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"container-fluid\" style={{ paddingBottom: '10px' }}>\r\n                <h2>Product Sales : {product.name}</h2>\r\n                <DashboardFilter onChange={this.updatePeriodFilter} transactionYears={salesData && salesData.transactionYears ? salesData.transactionYears : []}\r\n                    onSubmit={this.filter} filter={this.state.filter} />\r\n\r\n                <DashboardBarChart\r\n                    onClick={this.setActiveSalesData} onUnHover={this.unSelectSalesData}\r\n                    updated={salesData.date ?? new Date()} dataSet={ProductSales.toDataSets(salesData?.entities ?? [])} />\r\n                <ProductSalesDetail productSales={this.getActiveSalesData()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductSalesDetail = (props: { productSales?: ProductSales }) => {\r\n    const productSales: ProductSales | undefined = props.productSales;\r\n    if (!productSales)\r\n        return (<div className=\"container-fluid\" style={{ minHeight: '120px' }}>\r\n            <div className=\"alert alert-info\"><i className=\"fas fa-hand-point-up\" /> Click the chart to see detail</div>\r\n        </div>);\r\n\r\n    return (<div  style={{ minHeight: '120px' }}>\r\n        <FormGroup label=\"Period\">{productSales.monthName} {productSales.year}</FormGroup>\r\n        <FormGroup label=\"Sales\">{beautifyNominal(productSales.sales)}</FormGroup>\r\n\r\n    </div>)\r\n}\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    // mapDispatchToProps\r\n)(ProductSalesDetailPage))","\r\n\r\nimport  React, { Component, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'; \r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseMainMenus from './../../layout/BaseMainMenus';\r\n\r\nclass SettingsMain extends BaseMainMenus \r\n{\r\n    constructor(props:any){\r\n        super(props, \"Settings\", true);\r\n    }\r\n    render(){\r\n        return (\r\n            <div id=\"SettingsMain\" className=\"container-fluid\">\r\n                <h2>Settings</h2>\r\n                <div className=\"alert alert-info\">\r\n                    Welcome, <strong>{this.getLoggedUser()?.displayName}</strong>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n  })\r\n  \r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n  )(SettingsMain))","import BaseEntity from './BaseEntity';\n\nexport default class User extends BaseEntity{\n\tusername?:string;\n\tdisplayName?:string;\n\tpassword?:string;\n\tprofileImage?:string;\n\tauthorities?:any[];\n\trequestId?:string;\n\tprocessingDate?:Date;\n\n}\n","\r\nimport User from './../models/User';\r\nimport WebRequest from './../models/WebRequest';\r\nimport { contextPath } from './../constant/Url';\r\nimport { commonAjaxPostCalls } from './Promises';\r\nexport default class UserService\r\n{\r\n    private static instance?:UserService;\r\n\r\n    static getInstance(): UserService {\r\n        if (this.instance == null) {\r\n            this.instance = new UserService();\r\n        }\r\n        return this.instance;\r\n    }\r\n    updateProfile = (user:User) => {\r\n        \r\n        const request:WebRequest = {\r\n           user:user\r\n        }\r\n\r\n        const endpoint = contextPath().concat(\"api/app/account/updateprofile\")\r\n        return commonAjaxPostCalls(endpoint, request);\r\n    }\r\n\r\n}","import React from 'react'\r\nimport AnchorButton from './../../navigation/AnchorButton';\r\nexport const EditField = ({ edit, name, toggleInput, value, updateProperty, ...props }) => {\r\n    return (edit == true ?\r\n        <PropertyInput updateProperty={updateProperty} name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n        :\r\n        <PropertyLabel name={name} toggleInput={toggleInput} value={value} type={props.type} />\r\n    )\r\n}\r\nconst PropertyInput = ({ name, toggleInput, value, updateProperty, type }) => {\r\n    return (<div className=\"row\">\r\n        <p className=\"col-md-10\"><input type={type ?? 'text'} name={name} onChange={updateProperty} value={value} className=\"form-control\" /></p>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }}\r\n                onClick={toggleInput} className=\"btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nconst PropertyLabel = ({ name, toggleInput, value, type }) => {\r\n\r\n    return (<div className=\"row\" >\r\n        <div className=\"col-md-10\">\r\n            <p style={{ backgroundColor: type == 'color' ? value : '#fff' }} >{type == 'color' ? 'Sample Color' : value}</p>\r\n            {type == 'color' ? <p>{value}</p> : null}\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit</AnchorButton>\r\n        </div>\r\n    </div>)\r\n}","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from './../../BaseComponent';\r\nimport User from './../../../models/User';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setLoggedUser } from './../../../redux/actionCreators';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport UserService from './../../../services/UserService';\r\nimport WebResponse from './../../../models/WebResponse';\r\nimport { toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField } from './helper';\r\ninterface EditField { username: boolean, displayName: boolean, password: boolean, profileImage: boolean }\r\nclass IState {\r\n    user?: User = undefined;\r\n    editFields: EditField = {\r\n        username: false,\r\n        displayName: false,\r\n        password: false,\r\n        profileImage: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        return this.editFields.profileImage || this.editFields.username || this.editFields.displayName || this.editFields.password;\r\n    }\r\n}\r\nclass UserProfile extends BaseComponent {\r\n\r\n    userService: UserService = UserService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.state.user = Object.assign(new User(), this.getLoggedUser());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"User Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return;\r\n\r\n        user[target.name] = target.value;\r\n        this.setState({ user: user });\r\n    }\r\n    updateProfleImage = (e:ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        toBase64v2(target).then(function(imageData) {\r\n            app.setProfileImage(imageData);\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData:string) => {\r\n        const user:User|undefined = this.state.user;\r\n        if (!user) return;\r\n        user.profileImage = imageData;\r\n        this.setState({user:user});\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const user: User | undefined = this.state.user;\r\n        const actualLoggedUser: User | undefined = this.getLoggedUser();\r\n        if (null == target || !user || !actualLoggedUser) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            user[propertyName] = actualLoggedUser[propertyName];\r\n        }\r\n        this.setState({ user: user, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const user: User | undefined = this.getUserEditedData();\r\n        if (!user) return;\r\n        this.commonAjax(\r\n            this.userService.updateProfile,\r\n            this.profileSaved, this.showCommonErrorAlert,\r\n            user\r\n        )\r\n    }\r\n    getUserEditedData = (): User | undefined => {\r\n        const user: User | undefined = this.state.user;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!user) return undefined;\r\n        const editedUser: User = new User();\r\n        for (const key in editFields) {\r\n            const element:boolean = editFields[key];\r\n            if (element && key != 'profileImage') {\r\n                editedUser[key] = user[key];\r\n            }\r\n        }\r\n        if (editFields.profileImage && user.profileImage?.startsWith(\"data:image\")) {\r\n            editedUser.profileImage = user.profileImage;\r\n        }\r\n        return editedUser;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setLoggedUser(response.user);\r\n    }\r\n\r\n    render() {\r\n        const user: User | undefined = this.state.user;\r\n        if (!user) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        return (\r\n            <div id=\"UserProfile\" className=\"container-fluid\">\r\n                <h2>User Profile</h2>\r\n                <Card title=\"Profile Data\">\r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{marginBottom:'10px'}}>\r\n                            <img style={{marginBottom:'10px'}} width=\"100\" height=\"100\" className=\"rounded-circle border border-primary\" src={user.profileImage?.startsWith(\"data:image\")?user.profileImage:baseImageUrl + user.profileImage} />\r\n                            <EditImage edit={editFields.profileImage} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"User Name\">\r\n                            <EditField edit={editFields.username} updateProperty={this.updateProfileProperty} name=\"username\" toggleInput={this.toggleInput} value={user.username} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.displayName} updateProperty={this.updateProfileProperty} name=\"displayName\" toggleInput={this.toggleInput} value={user.displayName} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Password\">\r\n                            <EditField edit={editFields.password} updateProperty={this.updateProfileProperty} name=\"password\" toggleInput={this.toggleInput} value={user.password} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                           {this.state.fieldChanged()? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" />:null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EditImage = ({ edit, toggleInput, updateProperty }) => {\r\n    return (edit == true ? <>\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': 'profileImage', 'data-enabled': 'false'\r\n            }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n        <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name=\"profileImage\" />\r\n    </>\r\n        :\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': 'profileImage', 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image</AnchorButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setLoggedUser: (user: User) => dispatch(setLoggedUser(user)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(UserProfile))","import BaseEntity from './BaseEntity';\n\nexport default class ApplicationProfile extends BaseEntity{\n\tname?:string;\n\tappCode?:string;\n\tshortDescription?:string;\n\tabout?:string;\n\twelcomingMessage?:string;\n\taddress?:string;\n\tcontact?:string;\n\twebsite?:string;\n\ticonUrl?:string;\n\tpageIcon?:string;\n\tbackgroundUrl?:string;\n\tfooterIconClass?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\n}\n","import React, { ChangeEvent, Component, FormEvent, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { mapCommonUserStateToProps } from '../../../constant/stores';\r\nimport BaseComponent from '../../BaseComponent';\r\nimport ApplicationProfile from '../../../models/ApplicationProfile';\r\nimport Card from '../../container/Card';\r\nimport FormGroup from '../../form/FormGroup';\r\nimport { baseImageUrl } from '../../../constant/Url';\r\nimport { setApplicationProfile } from '../../../redux/actionCreators';\r\nimport AnchorButton from '../../navigation/AnchorButton';\r\nimport WebResponse from '../../../models/WebResponse';\r\nimport { toBase64v2 } from '../../../utils/ComponentUtil';\r\nimport { EditField } from './helper';\r\nimport MasterDataService from './../../../services/MasterDataService';\r\ninterface EditField { name: boolean, welcomingMessage: boolean, shortDescription: boolean, backgroundUrl: boolean, address: boolean, about: boolean, color: boolean, fontColor: boolean }\r\nclass IState {\r\n    applicationProfile?: ApplicationProfile = undefined;\r\n    editFields: EditField = {\r\n        name: false,\r\n        welcomingMessage: false,\r\n        shortDescription: false,\r\n        backgroundUrl: false,\r\n        address: false,\r\n        about: false,\r\n        color: false,\r\n        fontColor: false\r\n    };\r\n    fieldChanged = (): boolean => {\r\n        for (const key in this.editFields) {\r\n            const element = this.editFields[key];\r\n            if (element == true) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nclass EditApplicationProfile extends BaseComponent {\r\n\r\n    masterDataService: MasterDataService = MasterDataService.getInstance();\r\n    state: IState = new IState();\r\n    constructor(props: any) {\r\n        super(props, true);\r\n        this.state.applicationProfile = Object.assign(new ApplicationProfile(), this.getApplicationProfile());\r\n    }\r\n    componentDidMount() {\r\n        this.validateLoginStatus();\r\n        document.title = \"ApplicationProfile Profile\";\r\n    }\r\n    updateProfileProperty = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n\r\n        applicationProfile[target.name] = target.value;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    updateProfleImage = (e: ChangeEvent) => {\r\n        const target: HTMLInputElement | null = e.target as HTMLInputElement;\r\n        if (null == target) return;\r\n        const app = this;\r\n        toBase64v2(target).then(function (imageData) {\r\n            app.setProfileImage(imageData);\r\n        }).catch(console.error);\r\n    }\r\n    setProfileImage = (imageData: string) => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return;\r\n        applicationProfile.backgroundUrl = imageData;\r\n        this.setState({ applicationProfile: applicationProfile });\r\n    }\r\n    toggleInput = (e: MouseEvent) => {\r\n        const target: HTMLAnchorElement | null = e.target as HTMLAnchorElement;\r\n        const appProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const actualAppProfile: ApplicationProfile | undefined = this.getApplicationProfile();\r\n        if (null == target || !appProfile || !actualAppProfile) {\r\n            return;\r\n        }\r\n\r\n        const propertyName: string | null = target.getAttribute(\"data-name\");\r\n        if (null == propertyName) {\r\n            return;\r\n        }\r\n        const enabled: boolean = target.getAttribute('data-enabled') == 'true';\r\n        const editFields = this.state.editFields;\r\n        editFields[propertyName] = enabled;\r\n        if (!enabled) {\r\n            appProfile[propertyName] = actualAppProfile[propertyName];\r\n        }\r\n        this.setState({ applicationProfile: appProfile, editFields: editFields });\r\n    }\r\n    saveRecord = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        if (this.state.fieldChanged() == false) {\r\n            return;\r\n        }\r\n        const app = this;\r\n        this.showConfirmation(\"Save Data?\")\r\n            .then(function (ok) {\r\n                if (ok) { app.doSaveRecord(); }\r\n            })\r\n    }\r\n    doSaveRecord = () => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.getApplicationEditedData();\r\n        if (!applicationProfile) return;\r\n        this.commonAjax(\r\n            this.masterDataService.updateApplicationProfile,\r\n            this.profileSaved, this.showCommonErrorAlert,\r\n            applicationProfile\r\n        )\r\n    }\r\n    getApplicationEditedData = (): ApplicationProfile | undefined => {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        const editFields: EditField = this.state.editFields;\r\n        if (!applicationProfile) return undefined;\r\n        const editedApplication: ApplicationProfile = new ApplicationProfile();\r\n        for (const key in editFields) {\r\n            const element: boolean = editFields[key];\r\n            if (element && key != 'backgroundUrl') {\r\n                editedApplication[key] = applicationProfile[key];\r\n            }\r\n        }\r\n        if (editFields.backgroundUrl && applicationProfile.backgroundUrl?.startsWith(\"data:image\")) {\r\n            editedApplication.backgroundUrl = applicationProfile.backgroundUrl;\r\n        }\r\n        return editedApplication;\r\n    }\r\n    profileSaved = (response: WebResponse) => {\r\n        this.showInfo(\"Success\");\r\n        this.props.setApplicationProfile(response.applicationProfile);\r\n    }\r\n\r\n    render() {\r\n        const applicationProfile: ApplicationProfile | undefined = this.state.applicationProfile;\r\n        if (!applicationProfile) return null;\r\n        const editFields: EditField = this.state.editFields;\r\n        const bgUrl: string = applicationProfile.backgroundUrl ?? \"\";\r\n        return (\r\n            <div id=\"ApplicationProfile\" className=\"container-fluid\">\r\n                <h2>Application Profile</h2>\r\n                <Card title=\"Profile Data\"> \r\n                    <form onSubmit={this.saveRecord}>\r\n                        <div className=\"container-fluid text-center\" style={{ marginBottom: '10px' }}>\r\n                            <img style={{ marginBottom: '10px' }}  height=\"100\" className=\"border border-primary\" src={bgUrl.startsWith(\"data:image\") ? bgUrl : baseImageUrl + bgUrl} />\r\n                            <EditImage edit={editFields.backgroundUrl} updateProperty={this.updateProfleImage} toggleInput={this.toggleInput} />\r\n                        </div>\r\n                        <FormGroup label=\"Name\">\r\n                            <EditField edit={editFields.name} updateProperty={this.updateProfileProperty} name=\"name\" toggleInput={this.toggleInput} value={applicationProfile.name} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Welcoming Message\">\r\n                            <EditField edit={editFields.welcomingMessage} updateProperty={this.updateProfileProperty} name=\"welcomingMessage\" toggleInput={this.toggleInput} value={applicationProfile.welcomingMessage} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Short Description\">\r\n                            <EditField edit={editFields.shortDescription} updateProperty={this.updateProfileProperty} name=\"shortDescription\" toggleInput={this.toggleInput} value={applicationProfile.shortDescription} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Address\">\r\n                            <EditField edit={editFields.address} updateProperty={this.updateProfileProperty} name=\"address\" toggleInput={this.toggleInput} value={applicationProfile.address} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"About\">\r\n                            <EditField edit={editFields.about} updateProperty={this.updateProfileProperty} name=\"about\" toggleInput={this.toggleInput} value={applicationProfile.about} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Background Color\">\r\n                            <EditField type=\"color\" edit={editFields.color} updateProperty={this.updateProfileProperty} name=\"color\" toggleInput={this.toggleInput} value={applicationProfile.color} />\r\n                        </FormGroup>\r\n                        <FormGroup label=\"Font Color\">\r\n                            <EditField type=\"color\" edit={editFields.fontColor} updateProperty={this.updateProfileProperty} name=\"fontColor\" toggleInput={this.toggleInput} value={applicationProfile.fontColor} />\r\n                        </FormGroup>\r\n                        <FormGroup  >\r\n                            {this.state.fieldChanged() ? <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\" /> : null}\r\n                        </FormGroup>\r\n                    </form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst EditImage = ({ edit, toggleInput, updateProperty }) => {\r\n    const name: string = \"backgroundUrl\";\r\n    return (edit == true ? <>\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'false'\r\n            }} onClick={toggleInput} className=\" btn btn-secondary btn-sm\">cancel</AnchorButton>\r\n        </div>\r\n        <input onChange={updateProperty} className=\"form control\" accept=\"image/*\" type=\"file\" name={name} />\r\n    </>\r\n        :\r\n        <div>\r\n            <AnchorButton attributes={{\r\n                'data-name': name, 'data-enabled': 'true'\r\n            }} onClick={toggleInput} className=\" btn btn-info btn-sm\">edit image</AnchorButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setApplicationProfile: (applicationProfile: ApplicationProfile) => dispatch(setApplicationProfile(applicationProfile)),\r\n})\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(EditApplicationProfile))","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Login from '../pages/login/Login';\r\nimport DashboardMain from '../pages/dashboard/DashboardMain';\r\nimport MasterDataMain from '../pages/masterdata/MasterDataMain';\r\nimport TransactionMain from '../pages/transaction/TransactionMain';\r\nimport CatalogMain from '../pages/catalog/CatalogMain';\r\nimport HomeMain from '../pages/home/HomeMain';\r\nimport CartMain from '../pages/cart/CartMain';\r\nimport BaseMainMenus from './BaseMainMenus';\r\nimport Menu from './../../models/Menu';\r\nimport TransactionPurchasing from '../pages/transaction/purchasing/TransactionPurchasing';\r\nimport TransactionSelling from '../pages/transaction/selling/TransactionSelling';\r\nimport TransactionDetail from '../pages/transaction/detail/TransactionDetail';\r\nimport ProductCatalog from '../pages/catalog/product/ProductCatalog';\r\nimport CartList from '../pages/cart/CartList';\r\nimport ProductCatalogDetail from '../pages/catalog/productdetail/ProductCatalogDetail';\r\nimport DashboardStatistic from '../pages/dashboard/statistic/DashboardStatistic';\r\nimport ProductSales from './../../models/ProductSales';\r\nimport ProductSalesPage from '../pages/dashboard/sales/ProductSalesPage';\r\nimport ProductSalesDetailPage from '../pages/dashboard/sales/ProductSalesDetailPage';\r\nimport SettingsMain from '../pages/settings/SettingsMain';\r\nimport UserProfile from '../pages/settings/UserProfile';\r\nimport EditApplicationProfile from '../pages/settings/EditApplicationProfile';\r\n\r\nclass ApplicationContent extends BaseComponent {\r\n\r\n    ref: React.RefObject<BaseMainMenus> = React.createRef();\r\n    constructor(props: any) {\r\n        super(props, false);\r\n    }\r\n    setSidebarMenus=(menus:Menu[])=>{\r\n        this.props.setSidebarMenus(menus);\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{ paddingTop: '65px' }}>\r\n                <Switch>\r\n                    <Route path=\"/login\" render={\r\n                        (props: any) =>\r\n                            <Login app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- home -------- */}\r\n                    <Route path=\"/home\" render={\r\n                        (props: any) =>\r\n                            <HomeMain app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- dashboard -------- */}\r\n                    <Route exact path=\"/dashboard\" render={\r\n                        (props: any) =>\r\n                            <DashboardMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/dashboard/statistic\" render={\r\n                        (props: any) =>\r\n                            <DashboardStatistic  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/dashboard/productsales\" render={\r\n                        (props: any) =>\r\n                            <ProductSalesPage  app={this.parentApp} />\r\n                    } />\r\n                     <Route exact path=\"/dashboard/productsales/:id\" render={\r\n                        (props: any) =>\r\n                            <ProductSalesDetailPage  app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- masterdata -------- */}\r\n                    <Route exact path=\"/management\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/management/:code\" render={\r\n                        (props: any) =>\r\n                            <MasterDataMain setSidebarMenus={this.setSidebarMenus} app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- transaction -------- */}\r\n                    <Route exact path=\"/transaction\" render={\r\n                        (props: any) =>\r\n                            <TransactionMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/purchasing\" render={\r\n                        (props: any) =>\r\n                            <TransactionPurchasing app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/selling\" render={\r\n                        (props: any) =>\r\n                            <TransactionSelling app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/transaction/detail\" render={\r\n                        (props: any) =>\r\n                            <TransactionDetail app={this.parentApp} />\r\n                    } />\r\n                    {/* -------- settings --------- */}\r\n                    <Route exact path=\"/settings\" render={\r\n                        (props: any) =>\r\n                            <SettingsMain app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/settings/user-profile\" render={\r\n                        (props: any) =>\r\n                            <UserProfile app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/settings/app-profile\" render={\r\n                        (props: any) =>\r\n                            <EditApplicationProfile app={this.parentApp} />\r\n                    } />\r\n                    {/* ///////// PUBLIC ///////// */}\r\n                    {/* -------- catalog -------- */}\r\n                    <Route exact path=\"/catalog\" render={\r\n                        (props: any) => { \r\n                            return <CatalogMain  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/catalog/product\" render={\r\n                        (props: any) => { \r\n                            return <ProductCatalog  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    <Route exact path=\"/catalog/product/:code\" render={\r\n                        (props: any) => { \r\n                            return <ProductCatalogDetail  app={this.parentApp} />\r\n                        }\r\n                    } />\r\n                    {/* -------- home -------- */}\r\n                    <Route exact path=\"/cart\" render={\r\n                        (props: any) =>\r\n                            <CartMain  app={this.parentApp} />\r\n                    } />\r\n                    <Route exact path=\"/cart/cartlist\" render={\r\n                        (props: any) =>\r\n                            <CartList  app={this.parentApp} />\r\n                    } />\r\n                </Switch>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        // document.title = \"Login\";\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(ApplicationContent))","import BaseEntity from './BaseEntity';\nimport Page from './Page';\nimport { uniqueId } from './../utils/StringUtil';\n\nexport default class Menu extends BaseEntity{\n\tstatic defaultMenuIconClassName:string = \"fas fa-folder\";\n\n\tcode:String = uniqueId();\n\tname?:string;\n\tdescription?:string;\n\turl?:string;\n\tpathVariables?:string;\n\tmenuPage?:Page;\n\ticonUrl?:string;\n\tcolor?:string;\n\tfontColor?:string;\n\n\t//\n\tactive?:boolean = false;\n\tmenuClass?:string = \"fas fa-folder\";\n\tauthenticated?:boolean = false;\n\tshowSidebar?:boolean  = false;\n\tsubMenus?:Menu[] = undefined;\n\n\tstatic getIconClassName = (menu:Menu) => {\n\t\tif (undefined == menu.menuClass) {\n\t\t\treturn Menu.defaultMenuIconClassName;\n\t\t}\n\t\treturn menu.menuClass;\n\t}\n}\n","\r\n\r\nimport React, { Component, Fragment } from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Menu from './../../models/Menu';\r\nimport './SideBar.css'\r\n\r\nclass SideBar extends BaseComponent {\r\n    constructor(props: { brand: any, sidebarMenus?: Menu[] }) {\r\n        super(props, false);\r\n    }\r\n    isSidebarActive = (menu: Menu) => {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return false; }\r\n        const pathName = this.props.location.pathname;\r\n        return parentMenu.url + \"/\" + menu.url == pathName;\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    handleScroll(event) {\r\n        let scrollTop = event.srcElement.body.scrollTop,\r\n            itemTranslate = Math.min(0, scrollTop / 3 - 60);\r\n        // console.debug(\"scrollTop: \", scrollTop);\r\n      \r\n    }\r\n    render() {\r\n        const parentMenu: Menu = this.props.parentMenu;\r\n        if (null == parentMenu) { return null }\r\n        const menus: Menu[] = this.props.sidebarMenus == null ? [] : this.props.sidebarMenus;\r\n\r\n        return (\r\n            <ul id=\"sidebar\" className=\"sidebar-nav bg-light\">\r\n                <Brand show={parentMenu != null} brand={parentMenu} />\r\n                {menus.map(menu => {\r\n                    const isActive: boolean = this.isSidebarActive(menu);\r\n                    const menuClassName = isActive ? 'menu-active' : 'regular-menu';\r\n                    return (\r\n                        <li  className={\"sidebar-item \"+menuClassName} key={\"SIDEBAR_\" + menu.code}><Link to={parentMenu.url + \"/\" + menu.url}>\r\n                            <span className=\"sidebar-icon\"><i className={Menu.getIconClassName(menu)}></i></span>\r\n                            <span className={'menu-label'} >{menu.name}</span>\r\n                        </Link></li>\r\n                    )\r\n                })\r\n                }\r\n            </ul >\r\n        )\r\n    }\r\n\r\n}\r\nconst Brand = (props) => {\r\n    if (props.show == false) return null;\r\n    return (\r\n        <li id=\"sidebar-brand\" className=\"sidebar-brand\" style={{ marginBottom: '20px' }}><div\r\n            style={{\r\n                textAlign: 'center', paddingTop: '10px',\r\n                paddingBottom: '10px'\r\n            }}>\r\n            <h3 className=\"text-dark\">\r\n                <i className={Menu.getIconClassName(props.brand)}></i>\r\n            </h3>\r\n            <Link to={props.brand.url} style={{textDecoration:'none'}}><h4 className=\"text-dark\">{props.brand.name}</h4></Link>\r\n        </div></li>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(SideBar))","\r\n\r\nimport React from 'react';\r\nimport BaseComponent from './../BaseComponent';\r\nimport { mapCommonUserStateToProps } from './../../constant/stores';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { performLogout } from './../../redux/actionCreators';\r\nimport Header from '../navigation/Header';\r\nimport ApplicationContent from './ApplicationContent';\r\nimport SideBar from '../navigation/SideBar';\r\nimport './Layout.css';\r\nimport Menu from './../../models/Menu';\r\nimport { getMenuByMenuPath, extractMenuPath } from './../../constant/Menus';\r\ninterface IState {\r\n    showSidebar: boolean;\r\n    activeMenuCode: any;\r\n    menu?: Menu;\r\n    sidebarMenus?: Menu[]\r\n};\r\nclass MainLayout extends BaseComponent {\r\n    state: IState = {\r\n        showSidebar: false,\r\n        activeMenuCode: null,\r\n        menu: undefined,\r\n        sidebarMenus: []\r\n    };\r\n    currentPathName: string = \"\";\r\n    constructor(props: any) {\r\n        super(props, false);\r\n        this.state = {\r\n            ...this.state,\r\n        }\r\n    }\r\n    setMenuNull = () => {\r\n        console.warn(\"SET MENU NULL\");\r\n        this.setState({ menu: undefined, showSidebar: false, activeMenuCode: null, sidebarMenus: null });\r\n    }\r\n    setMenu = (menu: Menu) => {\r\n        if (menu == null) {\r\n            return;\r\n        }\r\n        console.debug(\"SET MENU: \", menu.code);\r\n        this.setState({ menu: menu, sidebarMenus: null, showSidebar: menu.showSidebar, activeMenuCode: menu.code });\r\n    }\r\n    setSidebarMenus = (menus: Menu[]) => {\r\n        // console.debug(\"Set sidebar menus: \", menus);\r\n        this.setState({ sidebarMenus: menus });\r\n    }\r\n    componentDidMount() {\r\n        this.setCurrentMenu();\r\n    }\r\n    componentDidUpdate() {\r\n        this.setCurrentMenu();\r\n    }\r\n    setCurrentMenu = () => {\r\n        const pathName = extractMenuPath(this.props.location.pathname);\r\n       \r\n        if (pathName == this.currentPathName) {\r\n            return;\r\n        }\r\n        this.currentPathName = pathName;\r\n        const menu = getMenuByMenuPath(pathName);\r\n        if (menu == null) {\r\n            this.setMenuNull();\r\n        } else {\r\n            this.setMenu(menu);\r\n        }\r\n    }\r\n    getSubMenus = () => {\r\n        if (this.state.menu && this.state.menu.subMenus != null && this.state.menu.subMenus?.length > 0) {\r\n            return this.state.menu?.subMenus;\r\n        }\r\n        if (this.state.sidebarMenus) {\r\n            return this.state.sidebarMenus;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const showSidebar = this.state.showSidebar == true;\r\n        return (\r\n            <div id=\"main-layout\">\r\n                <Header setMenuNull={this.setMenuNull} activeMenuCode={this.state.activeMenuCode} setMenu={this.setMenu} app={this.parentApp} />\r\n                <div id=\"page-content\" className=\"container-fluid\" style={{ margin: 0, padding: 0, minHeight: '80vh' }}>\r\n                    {/* <div className=\"?\"> */}\r\n                    \r\n                    <div className=\"container-fluid\" style={{zIndex:  1 , position:'absolute'}} id={showSidebar ? \"app-content\" : \"content\"}>\r\n                        <ApplicationContent setSidebarMenus={this.setSidebarMenus} app={this.props.app} />\r\n                    </div>\r\n                    {showSidebar == true ?  \r\n                            <SideBar sidebarMenus={this.getSubMenus()} parentMenu={this.state.menu} app={this.props.app} />\r\n                         : null}\r\n                    {/* </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    performLogout: (app: any) => dispatch(performLogout(app))\r\n})\r\n\r\n\r\nexport default withRouter(connect(\r\n    mapCommonUserStateToProps,\r\n    mapDispatchToProps\r\n)(MainLayout))","\nimport React, { Component, Fragment, RefObject } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport * as actions from './redux/actionCreators'\nimport { connect } from 'react-redux'\nimport * as menus from './constant/Menus'\nimport SockJsClient from 'react-stomp';\nimport * as url from './constant/Url';\nimport { mapCommonUserStateToProps } from './constant/stores';\nimport Loader from './component/loader/Loader';\nimport Alert from './component/alert/Alert';\nimport MainLayout from './component/layout/MainLayout';\nimport WebResponse from './models/WebResponse';\nimport Spinner from './component/loader/Spinner';\n\ninterface IState {\n  loading: boolean;\n  loadingPercentage: number;\n  requestId?: undefined;\n  mainAppUpdated: Date;\n  showAlert: boolean;\n  realtime: boolean;\n}\nclass App extends Component<any, IState> {\n\n  loadings: number = 0;\n  alertTitle: String = \"Info\";\n  alertBody: any = null;\n  alertIsYesOnly: boolean = true;\n  alertIsError: boolean = false;\n  alertOnYesCallback: Function = function (e) { };\n  alertOnCancelCallback: Function = function (e) { };\n  clientRef: RefObject<SockJsClient> = React.createRef();\n  // alertRef: RefObject<Alert> = React.createRef();\n  alertCallback = {\n    title: \"Info\",\n    message: \"Info\",\n    yesOnly: false,\n    onOk: () => { },\n    onNo: () => { }\n  }\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      ...this.state,\n      loading: false,\n      loadingPercentage: 0,\n      requestId: undefined,\n      mainAppUpdated: new Date(),\n      showAlert: false,\n      realtime: false,\n    };\n\n  }\n  refresh() {\n    this.setState({ mainAppUpdated: new Date() });\n  }\n\n  requestAppId() {\n    this.props.requestAppId(this);\n  }\n\n  incrementLoadings() {\n    this.loadings++;\n  }\n\n  decrementLoadings() {\n    this.loadings--;\n    if (this.loadings < 0) {\n      this.loadings = 0;\n    }\n  }\n\n  startLoading(realtime) {\n    this.incrementLoadings();\n    this.setState({ loading: true, realtime: realtime });\n  }\n\n  endLoading() {\n    try{\n      this.decrementLoadings();\n      if (this.loadings == 0) {\n        this.setState({ loading: false, loadingPercentage: 0 });\n      }\n    } catch(e) {\n      console.error(e);\n    }\n\n  }\n\n  handleMessage(msg: WebResponse) {\n    const percentageFloat:number = msg.percentage??0; \n    let percentage = Math.floor(percentageFloat);\n    if (percentageFloat < 0 || percentageFloat > 100) {\n      this.endLoading();\n    }\n    this.setState({ loadingPercentage: percentage });\n  }\n\n  showAlert(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertTitle = title;\n    this.alertBody = body;\n    this.alertIsYesOnly = yesOnly;\n    const app = this;\n    this.alertOnYesCallback = function (e) {\n      app.dismissAlert();\n      yesCallback(e);\n    }\n    if (!yesOnly) {\n      this.alertOnCancelCallback = function (e) {\n        app.dismissAlert();\n        if (noCallback != null) {\n          noCallback(e);\n        }\n      };\n    }\n    this.setState({ showAlert: true });\n  }\n\n  dismissAlert() {\n    this.alertIsError = false;\n    this.setState({ showAlert: false })\n  }\n  showAlertError(title: string, body: any, yesOnly: boolean, yesCallback: Function, noCallback?: Function) {\n    this.alertIsError = true;\n    this.showAlert(title, body, yesOnly, yesCallback, noCallback)\n  }\n\n  componentDidUpdate() {\n    // console.debug(\"APP UPDATED\");\n    if (this.props.applicationProfile) {\n      updateFavicon(this.props.applicationProfile);\n    }\n  }\n\n  componentDidMount() {\n    this.requestAppId();\n    this.setState({ loadingPercentage: 0 });\n  }\n\n  render() {\n    if (!this.props.requestId) {\n      return (\n        <div style={{paddingTop:'10%'}}>\n          <Spinner/>\n        </div>\n      )\n    }\n    const usedHost = url.contextPath();\n    return (\n      <Fragment>\n        <Loading realtime={this.state.realtime} loading={this.state.loading} loadingPercentage={this.state.loadingPercentage} />\n        {this.state.showAlert ?\n          <Alert title={this.alertTitle}\n            isError={this.alertIsError}\n            onClose={(e) => this.setState({ showAlert: false })}\n            yesOnly={this.alertIsYesOnly}\n            onYes={this.alertOnYesCallback} onNo={this.alertOnCancelCallback}\n          >{this.alertBody}</Alert> :\n          null}\n        <MainLayout app={this} />\n        <SockJsClient url={usedHost + 'realtime-app'} topics={['/wsResp/progress/' + this.props.requestId]}\n          onMessage={(msg: WebResponse) => { this.handleMessage(msg) }}\n          ref={(client) => { this.clientRef = client }} />\n      </Fragment>\n    )\n  }\n}\n\nfunction Loading(props) {\n  if (props.loading == true) {\n    return (\n      <Loader realtime={props.realtime} progress={props.loadingPercentage} text=\"Please wait...\" type=\"loading\" />\n    );\n  }\n  return null;\n}\n\nfunction updateFavicon(profile: any) {\n  if (profile.pageIcon) {\n    let link = document.querySelector('link[rel=\"shortcut icon\"]') ||\n      document.querySelector('link[rel=\"icon\"]');\n    if (!link) {\n      link = document.createElement('link');\n      link.id = 'favicon';\n      link.setAttribute(\"rel\", 'shortcut icon');\n      document.head.appendChild(link);\n    }\n    link.setAttribute(\"href\", url.baseImageUrl + 'ICON/' + profile.pageIcon);\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Function) => ({\n  requestAppId: (app: App) => dispatch(actions.requestAppId(app)),\n})\n\nexport default withRouter(connect(\n  mapCommonUserStateToProps,\n  mapDispatchToProps\n)(App))\n","import * as types from './types'\r\n\r\nexport const initState = { \r\n    entities: [],\r\n    entity: {},  \r\n    requestId: null,\r\n    messages: null,\r\n    userAlias: \"anonymous_\" + new Date().getTime(),\r\n    cart: [], \r\n\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n         \r\n      \r\n        case types.REMOVE_SHOP_ENTITY:\r\n            return { ...state, entity: action.payload  /*null*/ }; \r\n        // case types.REQUEST_ID:\r\n\r\n        //     return { ...state, requestId: action.payload.message };\r\n        // case types.SEND_MESSAGE:\r\n        //     return { ...state, messages: action.payload.entities, userAlias: action.payload.username };\r\n        case types.STORE_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.GET_MESSAGE:\r\n            return { ...state, messages: action.payload.entities };\r\n        case types.UPDATE_CART:\r\n            return { ...state, cart: action.payload.cart };\r\n\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\nimport * as menuData from '../constant/Menus'\r\nimport { setCookie } from '../middlewares/Common';\r\n\r\nexport const initState = {\r\n    loginKey: null,\r\n    loginStatus: false,\r\n    loginFailed: false,\r\n    menus: menuData.menus,\r\n    loggedUser: null,\r\n    loginAttempt: false,\r\n    requestId: null,\r\n    applicationProfile: {},\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n    \r\n    let result = {};\r\n    switch (action.type) {\r\n        case types.REQUEST_ID:\r\n            result = {\r\n                ...state, requestId: action.payload.requestId,\r\n                applicationProfile: action.payload.applicationProfile == null ? {} : action.payload.applicationProfile\r\n            };\r\n\r\n            setCookie(\"requestId\", result.requestId);\r\n            console.debug(\"action.payload.loginStatus: \", action.payload.loginStatus);\r\n            if (action.payload.loginStatus == true) {\r\n                result.loggedUser = action.payload.user;\r\n                result.loginStatus = true;\r\n            } else {\r\n                result.loginStatus = false;\r\n                result.loggedUser = null;\r\n            }\r\n\r\n            console.debug(\"REQUEST_ID result.loginStatus:\", result.loginStatus)\r\n            //  action.payload.referer.refresh();\r\n\r\n            return result;\r\n        case types.DO_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginAttempt: true,\r\n                loginStatus: action.payload.loginStatus,\r\n                loginKey: action.payload.loginKey,\r\n                loginFailed: action.payload.loginStatus == false,\r\n                loggedUser: action.payload.loggedUser\r\n            };\r\n\r\n            if (result.loginStatus == true) {\r\n                setCookie(\"loginKey\", result.loginKey);\r\n            }\r\n\r\n            return result;\r\n        case types.DO_LOGOUT:\r\n            result = {\r\n                ...state,\r\n                loginStatus: false,\r\n                loggedUser: null\r\n            };\r\n            setCookie(\"loginKey\", null);\r\n            return result;\r\n        case types.REFRESH_LOGIN:\r\n            result = {\r\n                ...state,\r\n                loginStatus: action.payload.loginStatus,\r\n                loggedUser: action.payload.loggedUser,\r\n                requestId: action.payload.requestId,\r\n            };\r\n            return result;\r\n        case types.GET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.data\r\n            };\r\n            return result;\r\n        case types.SET_LOGGED_USER:\r\n            result = {\r\n                ...state, loggedUser: action.payload.user\r\n            };\r\n            return result;\r\n        case types.SET_APPLICATION_PROFILE:\r\n            result = {\r\n                ...state, applicationProfile: action.payload.applicationProfile\r\n            };\r\n            return result;\r\n        default:\r\n            return { ...state };\r\n\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types' \r\n\r\nexport const initState = {\r\n    productFlowStock: null, \r\n    productsData: null,\r\n    cashflowInfoOut: null,\r\n    cashflowInfoIn: null,\r\n    cashflowDetail: null,\r\n    productSalesData: null,\r\n    productSalesDetails: null,\r\n    transactionYears: [new Date().getFullYear(), new Date().getFullYear()]\r\n};\r\n\r\nexport const reducer = (state = initState, action) => {\r\n\r\n    //update trx year\r\n    if (action != null && action.payload != null && action.payload.transactionYears != null) {\r\n        state.transactionYears = action.payload.transactionYears;\r\n    }\r\n    let result = state;\r\n    switch (action.type) {\r\n       \r\n \r\n        case types.RESET_PRODUCTS:\r\n            return { ...state, productsData: null };\r\n\r\n        case types.GET_CASHFLOW_INFO:\r\n            result = state;\r\n\r\n            if (action.payload.entity.module == \"OUT\") {\r\n                result.cashflowInfoOut = action.payload.entity;\r\n            }\r\n            if (action.payload.entity.module == \"IN\") {\r\n                result.cashflowInfoIn = action.payload.entity;\r\n            }\r\n\r\n            return result;\r\n\r\n        case types.GET_CASHFLOW_DETAIL:\r\n            return { ...state, cashflowDetail: action.payload };\r\n        case types.GET_PRODUCT_SALES:\r\n            let currentProductSalesData = action.payload;\r\n            if (action.loadMore == true) {\r\n                currentProductSalesData = state.productSalesData;\r\n                let loadedProductList = action.payload.entities;\r\n                for (let i = 0; i < loadedProductList.length; i++) {\r\n                    currentProductSalesData.entities.push(loadedProductList[i]);\r\n                }\r\n            }\r\n            console.log(\"will update currentProductSalesData: \", currentProductSalesData.entities.length);\r\n            result = { ...state, productSalesData: currentProductSalesData };\r\n            action.referrer.refresh();\r\n            return result; \r\n        case types.GET_PRODUCT_SALES_DETAIL:\r\n            return { ...state, productSalesDetails: action.payload };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as shopReducer from \"./shopReducer\"\r\nimport * as userReducer from \"./userReducer\"\r\nimport * as transactionReducer from \"./transactionReducer\" \r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers(\r\n    {\r\n        shopState: shopReducer.reducer,\r\n        userState: userReducer.reducer,\r\n        transactionState: transactionReducer.reducer, \r\n    }\r\n);\r\n\r\nexport const initialState = {\r\n    shopState: shopReducer.initState,\r\n    userState: userReducer.initState,\r\n    transactionState: transactionReducer.initState, \r\n}\r\n\r\nexport default rootReducer;","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\nconst axios = require('axios');\r\nexport const performLoginMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGIN) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n    axios.post(action.meta.url, {}, {\r\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n    }).then(response => {\r\n        const responseJson = response.data;\r\n        let loginKey: string = \"\";\r\n        let loginSuccess: boolean = false;\r\n\r\n        if (responseJson.code != null && responseJson.code == \"00\") {\r\n            loginKey = response.headers['access-token'];\r\n            console.log(\"api_token: \", loginKey);\r\n            loginSuccess = true;\r\n        }\r\n        let newAction = Object.assign({}, action, {\r\n            payload: {\r\n                loginStatus: loginSuccess,\r\n                loginKey: loginKey,\r\n                loggedUser: responseJson.user\r\n            }\r\n        });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log)\r\n        .finally(() => { app.endLoading(); });\r\n\r\n}\r\n\r\nexport const requestAppIdMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REQUEST_ID) { return next(action); }\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => {\r\n        const data = response.data;\r\n        if (data.code != \"00\") {\r\n            alert(\"Error requesting app ID\");\r\n            return;\r\n        }\r\n        common.updateAccessToken(response);\r\n        console.debug(\"response header:\", response.headers['access-token']);\r\n        let newAction = Object.assign({}, action, { payload: { loginStatus: data.loggedIn, ...data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nexport const getLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_LOGGED_USER) { return next(action); }\r\n\r\n    let headers = common.commonAuthorizedHeader();\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: headers\r\n    }).then(response => {\r\n        const data = response.data;\r\n\r\n        if (!data) {\r\n            alert(\"Error performing request\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: { data } });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n        .catch(console.log).finally(param => {\r\n            action.meta.app.endLoading();\r\n            action.meta.app.refresh();\r\n        });\r\n}\r\n\r\n\r\nexport const performLogoutMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.DO_LOGOUT) {\r\n        return next(action);\r\n    }\r\n    const app = action.meta.app;\r\n\r\n    axios.post(action.meta.url, (action.payload), {\r\n        headers: common.commonAuthorizedHeader()\r\n    })\r\n        .then(response => {\r\n            const responseJson = response.data;\r\n            let logoutSuccess = false;\r\n            if (responseJson.code == \"00\") {\r\n                logoutSuccess = true;\r\n            } else {\r\n                alert(\"Logout Failed\");\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, {\r\n                payload: {\r\n                    loginStatus: !logoutSuccess\r\n                }\r\n            });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(console.log).finally(param => app.endLoading());\r\n}\r\n\r\nexport const setLoggedUserMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.SET_LOGGED_USER) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\"; \r\n\r\nexport const getMessagesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_MESSAGE) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: common.commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"sendChatMessageMiddleware Response:\", data);\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n \r\nexport const storeChatMessageLocallyMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.STORE_MESSAGE) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n} \r\n\r\n","import * as common from './Common'\r\nimport * as types from '../redux/types'\r\n\r\nconst POST_METHOD = \"post\";\r\n   \r\n\r\nexport const removeEntityMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.REMOVE_SHOP_ENTITY) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction); \r\n}\r\n  \r\nexport const updateCartMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.UPDATE_CART) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: action.payload });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n    const apps:any[] = action.payload.apps;\r\n    for (let i = 0; i < apps.length; i++) {\r\n        const app = apps[i];\r\n        if (app.refresh){ \r\n            app.refresh();\r\n        }\r\n    }\r\n}\r\n\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { initialState, rootReducer } from './reducers'\r\nimport * as types from './types';\r\nimport * as userMiddleware from '../middlewares/UserMiddleware' \r\nimport * as realtimeChatMiddleware from '../middlewares/RealtimeChatMiddleware'\r\nimport * as catalogMiddleware from '../middlewares/CatalogMiddleware' \r\nimport { commonAuthorizedHeader } from './../middlewares/Common';\r\n\r\nconst POST_METHOD = \"POST\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        applyMiddleware(  \r\n            catalogMiddleware.removeEntityMiddleware,   \r\n            catalogMiddleware.updateCartMiddleware, \r\n\r\n            //user related\r\n            userMiddleware.performLoginMiddleware,\r\n            userMiddleware.performLogoutMiddleware, \r\n            userMiddleware.requestAppIdMiddleware, \r\n            userMiddleware.getLoggedUserMiddleware, \r\n            userMiddleware.setLoggedUserMiddleware,\r\n\r\n            //transaction   \r\n            getCashflowInfoMiddleware,\r\n            getCashflowDetailMiddleware,\r\n            getProductSalesMiddleware,\r\n            resetProductsMiddleware,   \r\n            getProductSalesDetailMiddleware,\r\n\r\n            /*realtime chat*/\r\n            realtimeChatMiddleware.storeChatMessageLocallyMiddleware,\r\n            realtimeChatMiddleware.getMessagesMiddleware,\r\n\r\n        )\r\n    );\r\n\r\n    return store;\r\n}\r\n  \r\n  \r\n\r\nconst getProductSalesDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.debug(\"getProductSalesDetailMiddleware Response:\", data);\r\n        if (data.code != \"00\") {\r\n            alert(\"Server error\");\r\n            return;\r\n        }\r\n\r\n        let newAction = Object.assign({}, action, { payload: data });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n    .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getProductSalesMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_PRODUCT_SALES) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getProductSalesMiddleware Response:\", data, \"load more:\", action.meta.loadMore);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data, loadMore: action.meta.loadMore, referrer: action.meta.referrer });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.referrer.props.app.endLoading());\r\n}\r\n\r\nconst getCashflowDetailMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_DETAIL) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    }).then(response => response.json())\r\n        .then(data => {\r\n            console.debug(\"getCashflowDetailMiddleware Response:\", data);\r\n            if (data.code != \"00\") {\r\n                alert(\"Server error\");\r\n                return;\r\n            }\r\n\r\n            let newAction = Object.assign({}, action, { payload: data });\r\n            delete newAction.meta;\r\n            store.dispatch(newAction);\r\n        })\r\n        .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n\r\nconst getCashflowInfoMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.GET_CASHFLOW_INFO) { return next(action); }\r\n    fetch(action.meta.url, {\r\n        method: POST_METHOD, body: JSON.stringify(action.payload),\r\n        headers: commonAuthorizedHeader()\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        console.debug(\"getCashflowInfoMiddleware Response:\", data);\r\n        if (data.code != \"00\") {\r\n            alert(\"Server error\");\r\n            return;\r\n        }\r\n\r\n        if (data.entity == null) {\r\n            alert(\"Data for cashflow: \" + action.payload.filter.module + \" in \" + action.payload.filter.month + \"/\" + action.payload.filter.year + \" period not found!\");\r\n            return;\r\n        }\r\n\r\n        if (data.entity.amount == null) {\r\n            data.entity.amount = 0;\r\n            data.entity.count = 0;\r\n            console.log(\"DATA:\", data);\r\n        }\r\n        let newAction = Object.assign({}, action, { payload: data });\r\n        delete newAction.meta;\r\n        store.dispatch(newAction);\r\n    })\r\n    .catch(err => console.log(err)).finally(param => action.meta.app.endLoading());\r\n}\r\n   \r\nconst resetProductsMiddleware = store => next => action => {\r\n    if (!action.meta || action.meta.type !== types.RESET_PRODUCTS) { return next(action); }\r\n    let newAction = Object.assign({}, action, { payload: null });\r\n    delete newAction.meta;\r\n    store.dispatch(newAction);\r\n}\r\n\r\nexport default configureStore;","import React from 'react'\r\nimport App from './App'\r\nimport configureStore from './redux/configureStore'\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n \r\nconst Root = (props:any)  => {\r\n\r\n    const store = configureStore();\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>  \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './Root.tsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}